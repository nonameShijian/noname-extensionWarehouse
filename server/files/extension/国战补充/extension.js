game.import("extension",function(lib,game,ui,get,ai,_status){return {name:"国战补充",editable:false,content:function(config,pack){
		lib.group.add('key');
		lib.translate.guozhan_key='键杀';

//更新说明
	lib.extensionPack['国战补充'].version='Finished';
    var str="<br><li>";
　　str+="2021.8.24完结篇更新内容：<br>1.修复部分已知BUG；<br>2.武将调整：重做张温、陈登、全琮、关羽、典韦、孙坚，调整吕布、曹真、神华佗；<br>3.卡牌调整：【斩】的抵消方式改为打出一张【杀】；<br>4.武将图片缺失解决办法、具体规则与说明等详见“选项——扩展——国战补充”。";
	game.showExtensionChangeLog(str,'国战补充');
	'use strict';

//多人局（改自扩展ol）
   var style1=document.createElement('style');
	style1.innerHTML+="[data-number='9']>.player[data-position='1']{top:45px;left:calc(97% - 75px);}";
	style1.innerHTML+="[data-number='9']>.player[data-position='2']{top:30px;left:calc(84% - 75px);}";
	style1.innerHTML+="[data-number='9']>.player[data-position='3']{top:15px;left:calc(71% - 75px);}";
	style1.innerHTML+="[data-number='9']>.player[data-position='4']{top:0px;left:calc(58% - 75px);}";
	style1.innerHTML+="[data-number='9']>.player[data-position='5']{top:0px;left:calc(45% - 75px);}";
	style1.innerHTML+="[data-number='9']>.player[data-position='6']{top:15px;left:calc(32% - 75px);}";
	style1.innerHTML+="[data-number='9']>.player[data-position='7']{top:30px;left:calc(19% - 75px);}";
	style1.innerHTML+="[data-number='9']>.player[data-position='8']{top:45px;left:calc(6% - 75px);}";	

	style1.innerHTML+="[data-number='10']>.player[data-position='1']{top:calc(200% / 3 - 190px);left:calc(97% - 75px);}";
	style1.innerHTML+="[data-number='10']>.player[data-position='2']{top:calc(100% / 3 - 190px);left:calc(97% - 75px);}";
	style1.innerHTML+="[data-number='10']>.player[data-position='3']{top:0px;left:calc(82% - 75px);}";
	style1.innerHTML+="[data-number='10']>.player[data-position='4']{top:0px;left:calc(67% - 75px);}";
	style1.innerHTML+="[data-number='10']>.player[data-position='5']{top:0px;left:calc(52% - 75px);}";
	style1.innerHTML+="[data-number='10']>.player[data-position='6']{top:0px;left:calc(37% - 75px);}";
	style1.innerHTML+="[data-number='10']>.player[data-position='7']{top:0px;left:calc(22% - 75px);}";
	style1.innerHTML+="[data-number='10']>.player[data-position='8']{top:calc(100% / 3 - 190px);left:calc(7% - 75px);}";
	style1.innerHTML+="[data-number='10']>.player[data-position='9']{top:calc(200% / 3 - 190px);left:calc(7% - 75px);}";	

	style1.innerHTML+="[data-number='11']>.player[data-position='1']{top:calc(200% / 3 - 190px);left:calc(82% - 80px);}";
	style1.innerHTML+="[data-number='11']>.player[data-position='2']{top:calc(200% / 3 - 190px);left:calc(97% - 80px);}";
	style1.innerHTML+="[data-number='11']>.player[data-position='3']{top:calc(100% / 3 - 190px);left:calc(97% - 80px);}";
	style1.innerHTML+="[data-number='11']>.player[data-position='4']{top:0px;left:calc(82% - 75px);}";
	style1.innerHTML+="[data-number='11']>.player[data-position='5']{top:0px;left:calc(67% - 75px);}";
	style1.innerHTML+="[data-number='11']>.player[data-position='6']{top:0px;left:calc(52% - 75px);}";
	style1.innerHTML+="[data-number='11']>.player[data-position='7']{top:0px;left:calc(37% - 75px);}";
	style1.innerHTML+="[data-number='11']>.player[data-position='8']{top:0px;left:calc(22% - 75px);}";
	style1.innerHTML+="[data-number='11']>.player[data-position='9']{top:calc(100% / 3 - 190px);left:calc(6% - 65px);}";
	style1.innerHTML+="[data-number='11']>.player[data-position='10']{top:calc(200% / 3 - 190px);left:calc(6% - 65px);}";	

	style1.innerHTML+="[data-number='12']>.player[data-position='1']{top:calc(200% / 3 - 190px);left:calc(82% - 80px);}";
	style1.innerHTML+="[data-number='12']>.player[data-position='2']{top:calc(200% / 3 - 190px);left:calc(97% - 80px);}";
	style1.innerHTML+="[data-number='12']>.player[data-position='3']{top:calc(100% / 3 - 190px);left:calc(97% - 80px);}";
	style1.innerHTML+="[data-number='12']>.player[data-position='4']{top:0px;left:calc(82% - 75px);}";
	style1.innerHTML+="[data-number='12']>.player[data-position='5']{top:0px;left:calc(67% - 75px);}";
	style1.innerHTML+="[data-number='12']>.player[data-position='6']{top:0px;left:calc(52% - 75px);}";
	style1.innerHTML+="[data-number='12']>.player[data-position='7']{top:0px;left:calc(37% - 75px);}";
	style1.innerHTML+="[data-number='12']>.player[data-position='8']{top:0px;left:calc(22% - 75px);}";
	style1.innerHTML+="[data-number='12']>.player[data-position='9']{top:calc(100% / 3 - 190px);left:calc(6% - 65px);}";
	style1.innerHTML+="[data-number='12']>.player[data-position='10']{top:calc(200% / 3 - 190px);left:calc(6% - 65px);}";	
	style1.innerHTML+="[data-number='12']>.player[data-position='11']{top:calc(200% / 3 - 190px);left:calc(22% - 65px);}";

	style1.innerHTML+="[data-number='13']>.player[data-position='1']{top:calc(200% / 3 - 190px);left:calc(84% - 80px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='2']{top:calc(200% / 3 - 190px);left:calc(97% - 80px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='3']{top:calc(100% / 3 - 190px);left:calc(97% - 80px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='4']{top:0px;left:calc(84% - 75px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='5']{top:0px;left:calc(71% - 75px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='6']{top:0px;left:calc(58% - 75px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='7']{top:0px;left:calc(45% - 75px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='8']{top:0px;left:calc(32% - 75px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='9']{top:0px;left:calc(19% - 75px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='10']{top:calc(100% / 3 - 190px);left:calc(6% - 65px);}";
	style1.innerHTML+="[data-number='13']>.player[data-position='11']{top:calc(200% / 3 - 190px);left:calc(6% - 65px);}";	
	style1.innerHTML+="[data-number='13']>.player[data-position='12']{top:calc(200% / 3 - 190px);left:calc(6% - 65px);}";	
	style1.innerHTML+="[data-number='13']>.player[data-position='11']{top:calc(200% / 3 - 190px);left:calc(19% - 65px);}";

	document.head.appendChild(style1);
/*Window.alert = function(){
　　//创建一个大盒子
    var box = document.createElement("div");
　　//创建一个关闭按钮
    var button = document.createElement("button");
　　//定义一个对象保存样式
    var boxName = {
        width:"500px",
        height:"180px",
        backgroundColor:"#f8f8f8",
        border:"1px solid #ccc",
        position:"absolute",
        top:"50%",
        left:"50%",
        margin:"-90px 0 0 -250px",
        zIndex:"999",
        textAlign:"center",
        lineHeight:"180px"
    }
　　//给元素添加元素
    for(var k in boxName){
        box.style[k] = boxName[k];
    }
　　//把创建的元素添加到body中
    document.body.appendChild(box);
　　//把alert传入的内容添加到box中
    if(arguments[0]){
        box.innerHTML = arguments[0];
    }
    button.innerHTML = "关闭";
 　　//定义按钮样式
    var btnName = {
        border:"1px solid #ccc",
        backgroundColor:"#fff",
        width:"70px",
        height:"30px",
        textAlign:"center",
        lineHeight:"30px",
        outline:"none",
        position:"absolute",
        bottom:"10px",
        right:"20px",
    }
    for(var j in btnName){
        button.style[j] = btnName[j];
    }
　　//把按钮添加到box中
    box.appendChild(button);
　　//给按钮添加单击事件
    button.addEventListener("click",function(){
        box.style.display = "none";
    })
}*/
	lib.translate.unknown8='九号位';
	lib.translate.unknown9='十号位';
	lib.translate.unknown10='十一号位';
	lib.translate.unknown11='十二号位';
	lib.translate.unknown12='十三号位';
	lib.mode.identity.config.player_number.item={
		'2':'两人',
		'3':'三人',
		'4':'四人',
		'5':'五人',
		'6':'六人',
		'7':'七人',
		'8':'八人',
		'9':'九人',
		'10':'十人',
		'11':'十一人',
		'12':'十二人',
		'13':'十三人',
	}
	lib.mode.guozhan.config.player_number.item={
		'2':'两人',
		'3':'三人',
		'4':'四人',
		'5':'五人',
		'6':'六人',
		'7':'七人',
		'8':'八人',
		'9':'九人',
		'10':'十人',
		'11':'十一人',
		'12':'十二人',
		'13':'十三人',
	};

	var identity=['zhu','zhong','zhong','zhong','nei','fan','fan','fan','fan'];
	if(lib.config.mode_config.identity.identity[7]==undefined&&get.mode() != 'connect') lib.config.mode_config.identity.identity.push(identity);
	identity=['zhu','zhong','zhong','zhong','nei','fan','fan','fan','fan','fan'];
	if(lib.config.mode_config.identity.identity[8]==undefined&&get.mode() != 'connect') lib.config.mode_config.identity.identity.push(identity);
	identity=['zhu','zhong','zhong','zhong','zhong','nei','fan','fan','fan','fan','fan'];
	if(lib.config.mode_config.identity.identity[9]==undefined&&get.mode() != 'connect') lib.config.mode_config.identity.identity.push(identity);
	identity=['zhu','zhong','zhong','zhong','zhong','nei','fan','fan','fan','fan','fan','fan'];
	if(lib.config.mode_config.identity.identity[10]==undefined&&get.mode() != 'connect') lib.config.mode_config.identity.identity.push(identity);
	identity=['zhu','zhong','zhong','zhong','zhong','nei','fan','fan','fan','fan','fan','fan','fan'];
	if(lib.config.mode_config.identity.identity[11]==undefined&&get.mode() != 'connect') lib.config.mode_config.identity.identity.push(identity);
	identity=['zhu','zhong','zhong','zhong','zhong','zhong','zhong','nei','fan','fan','fan','fan','fan','fan'];

        lib.extensionMenu.extension_国战补充.jiners={
            name: "晋国野心家",
            intro: "开启此功能后重启生效。开启后，晋势力武将在明置武将时，会明置另一武将牌成为野心家，获得一个“野心家”标记。",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.strengthen={
            name: "官方武将加强",
            intro: "开启此功能后重启生效。开启后官方武将的技能将会被修改",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.heroes={
            name: "开启额外武将",
            intro: "开启此功能后重启生效。开启后将池将增加212个国战专属武将",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.monarch={
            name: "开启额外君主",
            intro: "开启此功能后重启生效。开启后君主武将会新增曹丕、刘禅、孙策、袁绍、刘协、董卓、晋司马懿",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.recycle={
            name: "回收站",
            intro: "开启此功能后重启生效。开启后将增加部分国战补充旧版本的武将：曹髦、国渊、文钦、夏侯霸、宗预、费诗、张温、卫温&诸葛直、烈图周瑜、南华老仙、张绣、化身左慈、黄祖、公孙渊等12个旧武将。",
            init: false,
        }

	lib.extensionMenu.extension_国战补充['new_inpile_title']={
		"name":"<b><p align=center><span style=\"font-size:18px\">-----牌堆调整-----</span></b>",
		"clear":true,
		"nopointer":true,
	};

        lib.extensionMenu.extension_国战补充.addcard={
            name: "专属卡牌",
            intro: "开启此功能后重启生效。牌堆中将加入专属的装备牌、锦囊牌",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.maps={
            name: "地图牌",
            intro: "开启此功能后重启生效。牌堆中将加入万智牌的地图牌",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.martingale={
            name: "阵法牌",
            intro: "开启此功能后重启生效。牌堆中将加入阵法牌（强度大，不建议开启）",
            init: false,
        }

	lib.extensionMenu.extension_国战补充['new_model_title']={
		"name":"<b><p align=center><span style=\"font-size:18px\">-----新模式-----</span></b>",
		"clear":true,
		"nopointer":true,
	};

        lib.extensionMenu.extension_国战补充.Deadback={
            name: "亡者归来",
            intro: "开启此功能后重启生效。每当一名非野心家角色阵亡后，若场上没有“孙策”，则已阵亡角色均将武将牌替换为“孙策”并复活（5上限1体力），摸3张牌，身份变更为“野心家”，且于当前角色的回合结束后立即开始回合。胜利条件：场上仅剩一个野心家。",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.single={
            name: "单将模式",
            intro: "开启此功能后重启生效。当明置武将牌时，须选择移除一张武将移除，并清除“珠联璧合”、“先驱”标记，获得一个完整的阴阳鱼。该模式下“变更副将”效果改为“选择弃置一名角色区域内一张牌”。胜利条件：与国战模式相同。",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.brawl={
            name: "吃鸡模式",
            intro: "开启此功能后重启生效。游戏开始时，所有玩家明置武将，将身份变更为“野心家”。当游戏轮数为2的倍数时，每个玩家的准备阶段，会将X张【毒】洗入牌堆中（X为其已损失的体力值，且至少为1）。胜利条件：活到最后。",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.survive={
            name: "成长计划",
            intro: "开启此功能后重启生效。游戏开始时，所有玩家明置武将，将身份变更为“野心家”，清除所有技能和“先驱”标记。若玩家体力上限为3，获得一个完整的阴阳鱼。游戏开始时或当场上有一名角色死亡时，所有玩家可以发现一个技能。胜利条件：活到最后。",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.devour={
            name: "噬魂模式",
            intro: "开启此功能后重启生效。游戏开始时，所有玩家明置武将，将身份变更为“野心家”，获得技能〖噬魂〗。胜利条件：活到最后。",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.mirror={
            name: "镜像模式",
            intro: "开启此功能后重启生效。玩家选择一个武将组合，所有角色均使用此武将组合。",
            init: false,
        }

        lib.extensionMenu.extension_国战补充.teamfight={
            name: "团战模式",
            intro: "开启此功能后重启生效。游戏开始时，所有玩家明置武将，分成两队，存活到最后的一队胜出。",
            init: false,
        }

if(lib.characterPack.mode_guozhan){
　　if(config.heroes){
//专属武将
lib.characterPack.mode_guozhan.gz_jikang=['male','wei',3,['gzqingxianx','gzhexianx']]

lib.characterPack.mode_guozhan.gz_sp_luoxian=['male','shu',4,['gzlieshoux']]

lib.characterPack.mode_guozhan.gz_shenpei=['male','qun',3,['gzluanjianx','gzshouyex']]

lib.characterPack.mode_guozhan.gz_sp_yanglan=['female','shu',3,['gzlianpianx','gzyichix']]

lib.characterPack.mode_guozhan.gz_sp_baifuren=['female','wei',3,['gzlingyinx','gzyixiaox']]

lib.characterPack.mode_guozhan.gz_sp_fengfangnv=['female','qun',3,['gzchongaix','gzchuilianx']]

lib.characterPack.mode_guozhan.gz_caochun=['male','wei',4,['gzshanjiax']]

lib.characterPack.mode_guozhan.gz_sp_puyangxing=['male','wu',3,['gzsilix','gzxintux']]

lib.characterPack.mode_guozhan.gz_yl_luzhi=['male','qun',3,['gzmingrenx','gzzhenliangx']]

lib.characterPack.mode_guozhan.gz_sp_zhangbu=['male','wu',3,['gzchaochenx','gzquanzhengx']]

lib.characterPack.mode_guozhan.gz_sp_ganshen=['female','wu',3,['gzchongxix','gzxuanliex']]

lib.characterPack.mode_guozhan.gz_fanchou=['male','qun',4,['xinfu_xingluan','gzsijunx']]

lib.characterPack.mode_guozhan.gz_liuyan=['male','qun',4,['gztushex','gzlimux','gzzongshiy']]

lib.characterPack.mode_guozhan.gz_sp_chenzhi=['male','shu',3,['gzfabianx','gzliweix']]

lib.characterPack.mode_guozhan.gz_sp_goufu=['male','shu',4,['gzyongmoux']]

lib.characterPack.mode_guozhan.gz_sp_huzong=['male','wu',3,['gzshanghuanx','gzjiyiy']]

lib.characterPack.mode_guozhan.gz_sp_sunben=['male','wu',4,['gzhujiux','gzyangjingx']]

lib.characterPack.mode_guozhan.gz_manchong=['male','wei',3,['gzyanfax','gzgushoux']]

lib.characterPack.mode_guozhan.gz_sp_chentai=['male','wei',4,['gzjieyex']]

lib.characterPack.mode_guozhan.gz_sp_zhangliang=['male','qun',3,['gzfangtongy','gzgudaox']]

lib.characterPack.mode_guozhan.gz_sp_wuban=['male','shu',4,['gzyouzhenx','gzhaogongx']]

lib.characterPack.mode_guozhan.gz_luotongx=['male','wu',3,['gzshuzhengx','gzsanliangx']]

lib.characterPack.mode_guozhan.gz_sunjingx=['male','wu',4,['gzlongyux','gzzhenxiangx']]

lib.characterPack.mode_guozhan.gz_caochong=['male','wei',3,['gzchengxiangx','oldrenxin']]

lib.characterPack.mode_guozhan.gz_zhangyix=['male','shu',4,['gzkangruix']]

lib.characterPack.mode_guozhan.gz_yuanfurenx=['female','wu',3,['gzqingliux','gzanqingx']]

lib.characterPack.mode_guozhan.gz_dengzhi=['male','shu',3,['jimeng','shuaiyan']]

lib.characterPack.mode_guozhan.gz_heyanx=['male','wei',3,['gzfuhuax','gzchongdaox']]

lib.characterPack.mode_guozhan.gz_zhaoangx=['male','wei',3,['gzjianchix','gzqianzhix']]

lib.characterPack.mode_guozhan.gz_liuyu=['male','qun',3,['gzzhigex','gzzongzuox','gzchishenx']]

lib.characterPack.mode_guozhan.gz_zhangweix=['female','qun',4,['gzqiyuex','gzxuezhux']]

lib.characterPack.mode_guozhan.gz_guozhao=['female','wei',3,['gzzhixingx','gzdengfengx']]

lib.characterPack.mode_guozhan.gz_sp_guanqiujian=['male','wei',4,['gzzhengrongx','gzqingcex']]

lib.characterPack.mode_guozhan.gz_huoyix=['male','shu',3,['gzkongyix','gznanwangx']]

lib.characterPack.mode_guozhan.gz_huanghao=['male','shu',3,['gznongweix','gzluanzhengx']]

lib.characterPack.mode_guozhan.gz_qiaoguolaox=['male','wu',3,['gzguolix','gzlongdex']]

lib.characterPack.mode_guozhan.gz_sunhuanx=['male','wu',4,['gzporuix','gzjiejix']]

lib.characterPack.mode_guozhan.gz_jiuqi=['male','shen',3,['gzganhuaiy','gzyirany','gzlingquany'],['doublegroup:key:wei:shu:wu:qun:jin'],['des:染柒，官方扩展交流群扩展作者，代表作《染柒的世界》。本扩展技能改自其自己设计的同名角色。']]

lib.characterPack.mode_guozhan.gz_zhuxiaoer=['male','ye',3,['author_in','author_copy','author_out'],['des:竹小二，萌新扩展作者，代表作《国战补充》。']]

lib.characterPack.mode_guozhan.gz_spmaliao=['male','ye',3,['supo_zhengzhuang','supo_chengzhi','supo_sizhi'],['des: 苏婆马里奥，一位热爱键社的中生代扩展大神。村长水乎短暂回坑时，将无名杀的代更任务交给了他，其对无名杀的后续新发展作出了巨大的贡献，圈内声望颇高。']]

lib.characterPack.mode_guozhan.gz_aurora=['female','shen',3,['aurora_kazhan','aurora_jizhi','aurora_suyin'],['doublegroup:key:wei:shu:wu:qun:jin'],['des: 极光，原ID：Aurora，一位元老级的超级大神，掌握着非常专业、精湛的编程技术，极光写过非常多的扩展，包括多种多样的模式、武将、功能，同时开发出全新联机框架等，主要作品有《无双杀》、《雷金阴洪石乐》、《阴雷》、《阴阳杀》、《奥拉星S》、《奈何花落》、《万世神兽》、《乱世佳人》等，其大部分的作品已收录在《扩展ol》一个扩展里，其中最具创意的是卡战模式，全新的玩法，完全可成为独立的游戏']]

lib.characterPack.mode_guozhan.gz_fanxing=['male','ye',3,['poison_in','poison_make','poison_quenching'],['des:繁星，帮忙扩展试bug和提修改意见的小伙伴之一，也是一名萌新扩展作者，代表作《花好月圆》。']]

lib.characterPack.mode_guozhan.gz_zhugexiaojun=['male','shen',3,['gzwyqinggeng','gzwyyudu','gzwyjutian'],['doublegroup:key:wei:shu:wu:qun:jin'],['des:文彧，别名“吾名影觞伤”、“诸葛均”，无名杀官方群Ⅲ的群主，无名杀资深玩家，还会热心分享其他三国类游戏的武将图。本扩展技能改自其自己设计的同名角色。']]

lib.characterPack.mode_guozhan.gz_fangxu=['male','shen',3,['gzsancaix','gzlunduany'],['doublegroup:key:wei:shu:wu:qun:jin'],['des:方须，热心水友，帮忙反馈扩展bug，以及提供部分武将的图片与语音。本扩展技能改自其自己设计的同名角色。']]

lib.characterPack.mode_guozhan.gz_canghai=['male','shen',3,['gzchashiy','gzshuzhiy'],['doublegroup:key:wei:shu:wu:qun:jin'],['des:藏海，未来的扩展大佬，官方扩展交流群群水友，目前在帮咸鱼大佬更新《高速决斗》，帮忙反馈扩展bug。本扩展技能改自其自己设计的同名角色。']]

lib.characterPack.mode_guozhan.gz_esperanto=['male','shen',3,['gzzhenlvey','gzzhenjuey','gzshunshiy','gzjimouy'],['doublegroup:key:wei:shu:wu:qun:jin'],['des:Esperanto，官方扩展交流群扩展作者，还原了不少3D吧吧赛的作品，代表作《阵面对决》、《真三国无双》、《虚实》。']]

lib.characterPack.mode_guozhan.gz_xuande=['male','ye',3,['gzheizheny','gzbairuy','gzshenshouy'],['des:玄德，官方扩展交流群扩展作者，代表作《玄德鸽子包》、《趣味三国》。本扩展技能改自其自己设计的角色：弈巫。']]

lib.characterPack.mode_guozhan.gz_huijin=['male','ye',4,['gzdaorany'],['des:辉烬贺流年，官方扩展交流群扩展作者，代表作《辉烬贺流年》。本扩展技能改自其自己设计的同名角色。']]

lib.characterPack.mode_guozhan.gz_yitiaoxianyu=['male','ye',3,['dalao_turnover','dalao_dying','dalao_compare'],['des:咸鱼大佬，也曾名为“永远的萌新”、“→_→”。一位自称萌新的巨佬，写了一堆教程，代表作《新耀世》、《耀世三国②》、《技能搜索器》、《西沉的胡思乱想》、《灵枢包》、《特效测试》、《高速决斗》等。本扩展的几个主函数、还有若干武将就是在经过大佬同意下搬运的。']]

lib.characterPack.mode_guozhan.gz_limuzi=['male','shen',3,['gzyuanzix','gzzhenshix','gzdinglanx'],['doublegroup:key:wei:shu:wu:qun:jin'],['des: 李木子，皮肤吧大佬，常常贡献第一手武将原画/皮肤，经常积极在内测群向苏婆玛丽奥反馈其发现的无名杀的bug，本扩展中的武将源于其自己的设计。']]

lib.characterPack.mode_guozhan.gz_yenaisumibang=['male','ye',4,['gzhuanwu','gzhoufax'],['des:椰奶粟米棒，热心贴吧水友，从扩展初期开始就奋斗在bug一线，帮瓜皮作者寻找问题。']]

lib.characterPack.mode_guozhan.gz_liuye=['male','wei',3,['gzchoulvex','gzpolux']]

lib.characterPack.mode_guozhan.gz_huangwudiex=['female','shu',3,['gzxiwux','gzhongzhuangx']]

lib.characterPack.mode_guozhan.gz_panhuanghoux=['female','wu',3,['gzdujuanx','gzyuanchouy']]

lib.characterPack.mode_guozhan.gz_jipingx=['male','qun',3,['gzlieyix','gzgudux']]

lib.characterPack.mode_guozhan.gz_huanjiex=['male','wei',3,['gzqingjiux','gzduanlix']]

lib.characterPack.mode_guozhan.gz_huojunx=['male','shu',4,['gzgushouy']]

lib.characterPack.mode_guozhan.gz_wuyanx=['male','wu',3,['gzzhenmux','gzguhuanx']]

lib.characterPack.mode_guozhan.gz_wangrong=['female','qun',3,['gzfengzix','gzmengrix']]

lib.characterPack.mode_guozhan.gz_caoshuang=['male','wei',4,['gzyingzunx']]

lib.characterPack.mode_guozhan.gz_wangji=['male','wei',3,['qizhi','jinqu']]

lib.characterPack.mode_guozhan.gz_sp_huangchengyan=['male','shu',3,['gzlongyuex','gzzhenyinx']]

lib.characterPack.mode_guozhan.gz_sp_xiangchong=['male','shu',3,['gzxiaojunx','gzdujunx']]

lib.characterPack.mode_guozhan.gz_caobuxing=['male','wu',3,['gzmoyingx','gzjuanhuix']]

lib.characterPack.mode_guozhan.gz_xurong=['male','qun',4,['gzxionghuox','gzshajuex']]

lib.characterPack.mode_guozhan.gz_sp_shanqun=['male','wu',4,['gzshanquanx','gzxiongyix']]

lib.characterPack.mode_guozhan.gz_sp_chenggongying=['male','qun',3,['gzpingxix','gzwangzhix']]

lib.characterPack.mode_guozhan.gz_zhoufang=['male','wu',3,['gzduanfax','gzjincex']]

lib.characterPack.mode_guozhan.gz_puyuan=['male','shu',4,['gzpytianjiang','gzpyzhuren']]

lib.characterPack.mode_guozhan.gz_niujin=['male','wei',4,['gzlieweix','gzcuoruix']]

lib.characterPack.mode_guozhan.gz_chendeng=['male','qun',3,['gzhaowux','gznijianx']]

lib.characterPack.mode_guozhan.gz_re_zhonghui=['male','wei',4,['gzquanjix','gzmouzuo'],['unseen']]

lib.characterPack.mode_guozhan.gz_puppet1=['male','jin',2,[],['unseen']]
lib.characterPack.mode_guozhan.gz_puppet2=['male','jin',2,[],['unseen']]

lib.characterPack.mode_guozhan.gz_sp_yanbaihu=['male','qun',4,['gzxinhuox','gzjiliy'],['unseen']]

lib.characterPack.mode_guozhan.gz_diy_spliushan=['male','shu',3,['gzxiangle','gzsishu'],['unseen']]

lib.characterPack.mode_guozhan.gz_sp_wenqin=['male','wu',4,['gzyongxianx'],['unseen']]

lib.characterPack.mode_guozhan.gz_sp_diy_yuri=['female','key',3,['yuri_qixingx','yuri_xingdongx'],['unseen']]

lib.characterPack.mode_guozhan.gz_diy_spdongzhuo=['male','qun',4,['gzhengzhengy','gzbaolingy'],['unseen']]

lib.characterPack.mode_guozhan.gz_diy_spsimazhao=['male','wei',3,['gzzhaoxinx','gzlanggux'],['unseen']]

lib.characterPack.mode_guozhan.gz_xushux=['male','qun',3,['zhuhai','wuyan'],['unseen']]

lib.characterPack.mode_guozhan.gz_sp_gaoxiang=['male','shu',4,['gzyanjunx']]

lib.characterPack.mode_guozhan.gz_yuantanyuanshang=['male','qun',4,['gzdikaix','gzzhengsix']]

lib.characterPack.mode_guozhan.gz_wanglang=['male','wei',3,['gzgushex','gzjicix']]

lib.characterPack.mode_guozhan.gz_sp_hanlong=['male','wei',4,['gzsijiy','gzciqiux']]

lib.characterPack.mode_guozhan.gz_haozhao=['male','wei',4,['gzzhengux']]

lib.characterPack.mode_guozhan.gz_guanzhang=['male','shu',4,['gzhuweix','gzfuhunx']]

lib.characterPack.mode_guozhan.gz_huaman=['female','shu',3,['gzxinfux','gzxiangyux']]

lib.characterPack.mode_guozhan.gz_sp_wucan=['male','wu',3,['gzzhaoyix','gzlianbiaox']]

lib.characterPack.mode_guozhan.gz_gexuan=['male','wu',3,['gzlianhuax','gzzhafux']]

lib.characterPack.mode_guozhan.gz_zhangji=['male','qun',4,['gzlvemingx','gztunjunx']]

lib.characterPack.mode_guozhan.gz_sp_tangji=['female','qun',3,['gzaiwux','gzjuebiex']]

lib.characterPack.mode_guozhan.gz_chengyu=['male','wei',3,['gzshefux','gzbenyux']]

lib.characterPack.mode_guozhan.gz_shen_zhaoyun=['male','shu',3,['gzchongzhenx','gzlonghunx','gzbolvex']]

lib.characterPack.mode_guozhan.gz_shen_zhangliao=['male','wei',4,['gzduoruiy','mashu','gzbolvex']]

lib.characterPack.mode_guozhan.gz_zhugezhan=['male','shu',3,['gzzuilunx','gzfuyinx']]

lib.characterPack.mode_guozhan.gz_yanjun=['male','wu',3,['gzguanchaox','xinfu_xunxian']]

lib.characterPack.mode_guozhan.gz_xugong=['male','wu',3,['gzbiaozhaoy','gzyechoux','gzliuwangx']]

lib.characterPack.mode_guozhan.gz_zhangrang=['male','qun',3,['gztaoluanx','gzqiechong','gzhuanshoux']]

lib.characterPack.mode_guozhan.gz_sp_jianshuo=['male','qun',4,['gzshishix']]

lib.characterPack.mode_guozhan.gz_wangshuang=['male','wei',4,['gzshenlix','gzzhuiliex']]

lib.characterPack.mode_guozhan.gz_sp_caiwenji=['female','wei',3,['gzchenqingx','gzmozhix']]

lib.characterPack.mode_guozhan.gz_shen_guanyu=['male','shu',4,['wushen','gzwuhunx','gzsuohunx','gzbolvex']]

lib.characterPack.mode_guozhan.gz_xf_yiji=['male','shu',3,['xinfu_jijie','gzchongdianx']]

lib.characterPack.mode_guozhan.gz_xuezong=['male','wu',3,['funan','gzjiexunx']]

lib.characterPack.mode_guozhan.gz_sunliang=['male','wu',3,['gzdiedangx','gzanliux']]

lib.characterPack.mode_guozhan.gz_huaxiong=['male','qun',4,['reyaowu','gzshiyongx']]

lib.characterPack.mode_guozhan.gz_hucheer=['male','qun',4,['daoji','gzqiangqix']]

lib.characterPack.mode_guozhan.gz_shen_simayi=['male','wei',4,['gzrenjiex','gzbaiyinx','gzbolvex']]

lib.characterPack.mode_guozhan.gz_shen_zhenji=['female','wei',3,['gzliufengx','gzshenfux','gzqixianx','gzbolvex']]

lib.characterPack.mode_guozhan.gz_shen_zhugeliang=['male','shu',3,['gzqixingx','gzdawux','gzbolvex']]

lib.characterPack.mode_guozhan.gz_yangyi=['male','shu',3,['gzduoduanx','gzyuanchoux']]

lib.characterPack.mode_guozhan.gz_shen_luxun=['male','wu',3,['gzzhanhuox','gzjunlvex','gzcuikex','gzbolvex']]

lib.characterPack.mode_guozhan.gz_sp_sunyi=['male','wu',4,['gzcefengx','gzhanliex']]

lib.characterPack.mode_guozhan.gz_dongcheng=['male','qun',3,['gzxiaomoux','gzchengzhaox']]

lib.characterPack.mode_guozhan.gz_shen_lvbu=['male','qun',4,['gzkuangbaox','gzjiwux','gzshenfenx','gzbolvex']]

lib.characterPack.mode_guozhan.gz_shen_diaochan=['female','qun',3,['gzmeihuny','gzhuoxinx','gzbolvex']]

lib.characterPack.mode_guozhan.gz_shen_huatuo=['male','qun',3,['gzjishix','gzwuqinx','gzbolvex']]

lib.characterPack.mode_guozhan.gz_zhangbao=['male','qun',3,['gzzhoufux','gzyingbinx']]

lib.characterPack.mode_guozhan.gz_hanhaoshihuan=['male','wei',4,['gzshenduan','gzyonglvex']]

lib.characterPack.mode_guozhan.gz_zhongyao=['male','wei',3,['gzhuomox','zuoding']]

lib.characterPack.mode_guozhan.gz_shen_zhouyu=['male','wu',4,['gzchoulue','gzyeyan','gzbolvex']]

lib.characterPack.mode_guozhan.gz_sp_tenghuanghou=['female','wu',3,['gzfengtangx','gzmutux']]

lib.characterPack.mode_guozhan.gz_baosanniang=['female','shu',3,['gzwuniangx','gzxushenx']]

lib.characterPack.mode_guozhan.gz_guansuo=['male','shu',4,['gzxiefangx','gzhuawu']]

lib.characterPack.mode_guozhan.gz_dongguirenx=['female','qun',3,['gzchenghuox','gzqingnanx']]

lib.characterPack.mode_guozhan.gz_pangdegong=['male','qun',3,['gzwolongx','gzfengchux','gzshuijing','gzyuanzhi']]

lib.characterPack.mode_guozhan.gz_sunhao=['male','wu',3,['gzjiuyanx','gzlanxingx']]

lib.characterPack.mode_guozhan.gz_mizhu=['male','shu',3,['gzziyuan','gzjugu','gzshangdao']]

lib.characterPack.mode_guozhan.gz_zhugedan=['male','wei',3,['gzfuweix','gzweizhongx','gzjuyix']]

lib.characterPack.mode_guozhan.gz_xunchen=['male','qun',3,['gzfenglvex','gzyanyoux']]

lib.characterPack.mode_guozhan.gz_gaolan=['male','qun',4,['gzxiyingx','fengshi']]

lib.characterPack.mode_guozhan.gz_sunshao=['male','wu',3,['gzbizhengx','gzyidianx']]

lib.characterPack.mode_guozhan.gz_cenhun=['male','wu',3,['jishe','lianhuo']]

lib.characterPack.mode_guozhan.gz_zhangsong=['male','shu',3,['xiantu','gzqiangzhi']]

lib.characterPack.mode_guozhan.gz_zhoucang=['male','shu',4,['gzzhongyongx','gzyanjux']]

lib.characterPack.mode_guozhan.gz_wenyang=['male','wei',4,['gzchoujuex','gzlvlix']]

lib.characterPack.mode_guozhan.gz_duji=['male','wei',3,['xinfu_andong','gzfuningx']]

lib.characterPack.mode_guozhan.gz_zhaoxiang=['female','shu',3,['gzfanghunx','gzfuhanx']]

lib.characterPack.mode_guozhan.gz_xizhicai=['male','wei',3,['gzchoucex','gzxianfux','gzzaoshang']]

lib.characterPack.mode_guozhan.gz_zhangyi=['male','shu',4,['gzwurongx','gzjiaozhux']]

lib.characterPack.mode_guozhan.gz_re_sunluyu=['female','wu',3,['gzmeibux','gzmumux']]

lib.characterPack.mode_guozhan.gz_sp_liuhong=['male','qun',4,['gzyujuex','gzdanggux']] 

lib.characterPack.mode_guozhan.gz_yangxiu=['male','wei',3,['gzjilei','danlao']] 

lib.characterPack.mode_guozhan.gz_lvqian=['male','wei',4,['gzzengdaox','xinfu_weilu']] 

lib.characterPack.mode_guozhan.gz_maliang=['male','shu',3,['gzrangyi','gzzishux']] 

lib.characterPack.mode_guozhan.gz_jianyong=['male','shu',3,['qiaoshui','gzzongshi']] 

lib.characterPack.mode_guozhan.gz_shen_lvmeng=['male','wu',3,['gzsheliex','gongxin','gzbolvex']] 

lib.characterPack.mode_guozhan.gz_kanze=['male','wu',3,['gzxiashu','gzkuanshi']] 

lib.characterPack.mode_guozhan.gz_gongsunzan=['male','qun',4,['reyicong','gzqiaomeng']] 

lib.characterPack.mode_guozhan.gz_lingju=['female','qun',3,['jieyuan','gzfenxin']] 

lib.characterPack.mode_guozhan.gz_jsp_guanyu=['male','wei',4,['gznuzhanx','gzguijix']] 

lib.characterPack.mode_guozhan.gz_sp_guanping=['male','shu',4,['gzsuishengx','gztuojianx'],['unseen']] 

lib.characterPack.mode_guozhan.gz_xinxianying=['female','wei',3,['gzzhongjianx','gzcaishi']] 

lib.characterPack.mode_guozhan.gz_zhangchangpu=['female','wei',3,['gzxingshenx','gzyanjiaox']] 

lib.characterPack.mode_guozhan.gz_zhaotongzhaoguang=['male','shu',4,['gzyizanx','gzlongyuanx']]

lib.characterPack.mode_guozhan.gz_yangwanx=['female','shu',3,['gzyanyix','gzsijix']] 

lib.characterPack.mode_guozhan.gz_zhuran=['male','wu',4,['gzdanshou']]

lib.characterPack.mode_guozhan.gz_zhoufei=['female','wu',3,['gzliangyin','gzkongsheng']]

lib.characterPack.mode_guozhan.gz_hansui=['male','qun',4,['gzniluan','gzxiaoxi']]

lib.characterPack.mode_guozhan.gz_guotufengji=['male','qun',3,['jigong','gzshifei']]

lib.characterPack.mode_guozhan.gz_zhangxingcai=['female','shu',3,['gzshenxian','qiangwu']]

lib.characterPack.mode_guozhan.gz_liuzan=['male','wu',4,['gzkangyin']]

lib.characterPack.mode_guozhan.gz_quancong=['male','wu',4,['gzzhenshanx','gzzhaofux']]

lib.characterPack.mode_guozhan.gz_liubiao=['male','qun',3,['gzzongshix','gzzishoux']]

lib.characterPack.mode_guozhan.gz_sp_liubian=['male','qun',3,['gzqingyix','gzgongbianx']]

lib.characterPack.mode_guozhan.gz_sp_sunli=['male','wei',4,['gzleilix','gzfengxingx']]

lib.characterPack.mode_guozhan.gz_caoying=['female','wei',3,["gzlingren","gzfujian"]]

lib.characterPack.mode_guozhan.gz_guanping=['male','shu',4,["gzhusix","gzlongyin"]]

lib.characterPack.mode_guozhan.gz_yanyan=['male','shu',4,['nzry_juzhan','gzhaoliex']]

lib.characterPack.mode_guozhan.gz_zhuzhi=['male','wu',4,['gzanguox','gzjiandex']]

lib.characterPack.mode_guozhan.gz_sunru=['female','wu',3,['gzyingjian','shixin']]

lib.characterPack.mode_guozhan.gz_caohuax=['female','qun',3,['gzdoukoux','gzyihuix']]

lib.characterPack.mode_guozhan.gz_caiyong=['male','qun',3,['gzbizhuanx','gztongbox']]

lib.characterPack.mode_guozhan.gz_sunxiu=['male','wu',3,['yanzhu','xingxue']]

lib.characterPack.mode_guozhan.gz_lvdai=['male','wu',4,['gzshenmoux','gzqinguox']]

lib.characterPack.mode_guozhan.gz_caorui=['male','wei',3,['gzmingjian','gzhuituox']]

lib.characterPack.mode_guozhan.gz_mazhong=['male','shu',4,['gzweinanx','gzfumanx']]

lib.characterPack.mode_guozhan.gz_dongyun=['male','shu',3,['bingzheng','gzsheyan']]

lib.characterPack.mode_guozhan.gz_caozhang=['male','wei',4,['new_jiangchi','gzaoshix']]

lib.characterPack.mode_guozhan.gz_caifuren=['female','qun',3,['gzgetingx','gzhuiyux']]

lib.characterPack.mode_guozhan.gz_hejin=['male','qun',4,['gzmouzhu','gzhuoyingx']]

lib.characterPack.mode_guozhan.gz_sp_zaozhirenjun=['male','wei',4,['tuntian','gzliangcex','gzjianbix']]

lib.characterPack.mode_guozhan.gz_liuchen=['male','shu',4,['gzzhanjue','gzqinwang']]

lib.characterPack.mode_guozhan.gz_handang=['male','wu',4,['gzgongjix','gzjiefan']]

lib.characterPack.mode_guozhan.gz_guohuanghou=['female','wei',3,['gzdanxinx','gzbangjun','gzjiaozhao']]

lib.characterPack.mode_guozhan.gz_simalang=['male','wei',3,['gzquji','gzjunbing']]

lib.characterPack.mode_guozhan.gz_qinmi=['male','shu',3,['zhuandui','gzjianzheng','gztianbian']]

lib.characterPack.mode_guozhan.gz_chendao=['male','shu',4,['gzwanglie','gzbaier']]

lib.characterPack.mode_guozhan.gz_zhuhuan=['male','wu',4,['youdi','gzpingkoux']]

lib.characterPack.mode_guozhan.gz_sundeng=['male','wu',4,['gzkuangbi','gzlixianx']]

lib.characterPack.mode_guozhan.gz_yj_jushou=['male','qun',3,['gzjianying','gzshibei']]

lib.characterPack.mode_guozhan.gz_dongbai=['female','qun',3,['gzlianzhu','gzxiehui']]

lib.characterPack.mode_guozhan.gz_diy_sppanjun=['male','shu',3,['gzgongqing','gzhuace']]

lib.characterPack.mode_guozhan.gz_xushi=['female','wu',3,['gzwengua','gzfuzhu','gzjishoux']]

lib.characterPack.mode_guozhan.gz_liuzhangx=['male','qun',3,['gztucunx','gzcunxux']]

lib.characterPack.mode_guozhan.gz_sp_jiangwei=['male','wei',3,['tiaoxin','gzkunfen','gzfengliang']]

lib.characterPack.mode_guozhan.gz_kuailiangkuaiyue=['male','wei',3,['gzjianxiang','gzshenshi']]

lib.characterPack.mode_guozhan.gz_sp_jiaxu=['male','wei',3,['gzzhenlue','jianshu','gzyongdi']]

lib.characterPack.mode_guozhan.gz_xiahoushi=['female','shu',3,['gzyanyu','xinfu_xiaode']]

lib.characterPack.mode_guozhan.gz_wuxian=['female','shu',3,['gzfumian','gzdaiyan']]

lib.characterPack.mode_guozhan.gz_zumao=['male','wu',4,['gztijinx','gzjuedi']]

lib.characterPack.mode_guozhan.gz_re_jsp_pangtong=['male','wu',3,['gzguolun','gztiansuo','gzrushi']]

lib.characterPack.mode_guozhan.gz_sp_xuyou=['male','qun',3,['gzzezhu','gzchenggong','gzyexi']]

lib.characterPack.mode_guozhan.gz_zhangchux=['female','qun',3,['gzshenyingx','gzshoudaox']]

lib.characterPack.mode_guozhan.gz_chengpu=['male','wu',4,['gzchunyinx','gzlihuox']]

lib.characterPack.mode_guozhan.gz_mayunlu=['female','shu',4,['gzfengpox','gzyinqiangx']]

lib.characterPack.mode_guozhan.gz_caoxiu=['male','wei',4,['gzqingxi','gzqianju']]

lib.characterPack.mode_guozhan.gz_wangyun=['male','qun',3,['gzlianji','gzmoucheng']]

lib.characterPack.mode_guozhan.gz_caozhi=['male','wei',3,['gzzuifu','gzluoying']]

lib.characterPack.mode_guozhan.gz_liyan=['male','shu',4,['gzduliang','gzfulin']]

lib.characterPack.mode_guozhan.gz_luji=['male','wu',3,['gzhuaiju','gzzhenglun']]

lib.characterPack.mode_guozhan.gz_fuhuanghou=['female','qun',3,['gzzhuikong','gzqiuyuan']]

lib.characterPack.mode_guozhan.gz_chenlin=['male','wei',3,['gzbifa','gzwuyix']]

lib.characterPack.mode_guozhan.gz_wuyi=['male','shu',4,['gzbenxi']]

lib.characterPack.mode_guozhan.gz_liuxie=['male','qun',3,['gztianming','gzshangao']]

lib.characterPack.mode_guozhan.gz_buzhi=['male','wu',3,['gzhongde','gzdingpan']]

lib.characterPack.mode_guozhan.gz_heqi=['male','wu',4,['gzshanxi','gzqizhou']]

lib.characterPack.mode_guozhan.gz_liaohua=['male','shu',4,['gzdangxian','xinfuli']]

lib.characterPack.mode_guozhan.gz_chenqun=['male','wei',3,["dingpin","gzfaenx"]]

lib.characterPack.mode_guozhan.gz_sp_zhangning=['female','qun',3,['gzcanmengx','gzhunwux']]

lib.characterPack.mode_guozhan.gz_sunluban=['female','wu',3,['chanhui','jiaojin']]

lib.characterPack.mode_guozhan.gz_sp_xinpi=['male','wei',3,['gzjiezhix','gzzhengjianx']]

lib.characterPack.mode_guozhan.gz_caoang=['male','wei',4,['gzkaikang','gztuwei']]

lib.characterPack.mode_guozhan.gz_caojie=['female','qun',3,['gzmozuo','gzzhixix'],[]]
    lib.characterPack.mode_guozhan.gz_guanyinping=['female','shu',4,['gzxueji','gzhuxiao'],[]]

lib.characterPack.mode_guozhan.gz_xianglangx=['male','shu',3,['gzcangshux','gzkanwux'],[]]

lib.characterPack.mode_guozhan.gz_sunqian=['male','shu',3,['qianya','shuimeng'],[]]

lib.characterPack.mode_guozhan.gz_panzhangmazhong=['male','wu',4,['gzanjian','gzduodao'],[]]

lib.characterPack.mode_guozhan.gz_fuwan=['male','qun',4,['moukui','gzchizhongx']]
 
lib.characterPack.mode_guozhan.gz_wangyi=['female','wei',3,['gzzhenlie','miji'],[]]
    
lib.characterPack.mode_guozhan.gz_chengong=['male','qun',3,['mingce','gztuishoux']]

lib.characterPack.mode_guozhan.gz_guohuai=['male','wei',3,['gzjingcex']]

lib.characterPack.mode_guozhan.gz_sp_cuifuren=['female','shu',3,['gzxiansix','gzyitongx','gzjuenianx']]

lib.characterPack.mode_guozhan.gz_bulianshi=['female','wu',3,['gzanxu','zhuiyi']]

lib.characterPack.mode_guozhan.gz_caozhen=['male','wei',4,['gzsidi','gzrangyinx']]

lib.characterPack.mode_guozhan.gz_liufeng=['male','shu',4,['xiansi','gztaonix']]

lib.characterPack.mode_guozhan.gz_sp_zhaofuren=['female','wu',3,['gzmanxianx','gzjinxiux']]

lib.characterPack.mode_guozhan.gz_liuyao=['male','qun',4,['gzkannanx','gzchuhuaix']]
    lib.characterPack.mode_guozhan.gz_zhangchunhua=['female','wei',3,['gzjueqingx','gzshangshix']]

lib.characterPack.mode_guozhan.gz_zhugeguo=['female','shu',3,['yuhua','gzqirang']]

lib.characterPack.mode_guozhan.gz_guyong=['male','wu',3,['shenxing','bingyi']]  

lib.characterPack.mode_guozhan.gz_zhugejin=['male','wu',3,['gzhuanshi','gzmingzhe']]  

lib.characterPack.mode_guozhan.gz_gaoshun=['male','qun',4,['gzkuiyingx','gzjinjiu']]

lib.characterPack.mode_guozhan.gz_xin_liru=['male','qun',3,['xinjuece','gzfencheng','xinmieji']]

}

    if(config.monarch){
//额外君主
lib.characterPack.mode_guozhan.gz_jun_liuxie=['male','qun',4,['gzhantongx','gzchengyunx','gztianshoux','hantianzichiling'],[]];
	lib.junList.push('liuxie');
	lib.characterSort.mode_guozhan.guozhan_jun.add('gz_jun_liuxie');

lib.characterPack.mode_guozhan.gz_jun_caopi=['male','wei',4,['gzjiyex','gztianweix','gzhuazaox','jiuwuzhizunzhao'],[]];
	lib.junList.push('caopi');
	lib.characterSort.mode_guozhan.guozhan_jun.add('gz_jun_caopi');

lib.characterPack.mode_guozhan.gz_jun_sunce=['male','wu',4,['gzhunji','gzangwu','gzzhiba','tuoyehujiangpo'],[]];
	lib.junList.push('sunce');
	lib.characterSort.mode_guozhan.guozhan_jun.add('gz_jun_sunce');

lib.characterPack.mode_guozhan.gz_jun_re_yuanshao=['male','qun',4,['gzjiewang','gzquanshi','gzjuebi','qunxionggongtaoxie'],[]];
	lib.junList.push('re_yuanshao');
	lib.characterSort.mode_guozhan.guozhan_jun.add('gz_jun_re_yuanshao');

lib.characterPack.mode_guozhan.gz_jun_jin_simayi=['male','jin',4,['gzyingshix','gzlingbianx','gzniyongx','gzyinbianx','zhonghufulangyin'],[]];
	lib.junList.push('jin_simayi');
	lib.characterSort.mode_guozhan.guozhan_jun.add('gz_jun_jin_simayi');

lib.characterPack.mode_guozhan.gz_jun_liushan=['male','shu',4,['gzyanxi','gzguixiang','gzjingyao','chengenxueqishu'],[]];
	lib.junList.push('liushan');
	lib.characterSort.mode_guozhan.guozhan_jun.add('gz_jun_liushan');

lib.characterPack.mode_guozhan.gz_jun_sp_dongzhuo=['male','qun',4,['gzeweix','gzmodang','gzmoxing','duopoxiuluofan'],[]];
	lib.junList.push('sp_dongzhuo');
	lib.characterSort.mode_guozhan.guozhan_jun.add('gz_jun_sp_dongzhuo');

}

    if(config.strengthen){
//官方武将修改
lib.characterPack.mode_guozhan.gz_zhonghui=['male','ye',4,['gzquanji','gzpaiyiy']]

lib.characterPack.mode_guozhan.gz_caoren=['male','wei',4,['new_jushou','yanzheng']]

lib.characterPack.mode_guozhan.gz_guojia=['male','wei',3,['tiandu','yiji'],['gzskin']]


lib.characterPack.mode_guozhan.gz_zhanghe=['male','wei',4,['qiaobian','gzzhengjunx']]

lib.characterPack.mode_guozhan.gz_caocao=['male','wei',4,['gzjianxiong','gzduoshix_wei']]

lib.characterPack.mode_guozhan.gz_xiahouyuan=['male','wei',4,['xinshensu','gzpozhenx']]

lib.characterPack.mode_guozhan.gz_xiahoudun=['male','wei',4,['gzdanmux','reganglie']]

lib.characterPack.mode_guozhan.gz_xuzhu=['male','wei',4,['luoyi','gzxiechan']]

lib.characterPack.mode_guozhan.gz_simayi=['male','wei',3,['gzguicaix','gzfankuix','gzzhabingx']]

lib.characterPack.mode_guozhan.gz_dianwei=['male','wei',5,['xinqiangxi']]

lib.characterPack.mode_guozhan.gz_zhangliao=['male','wei',4,['gztuxix']]

lib.characterPack.mode_guozhan.gz_zangba=['male','wei',4,['rehengjiang','gzjuyux']]

lib.characterPack.mode_guozhan.gz_yuejin=['male','wei',4,['gzxiaoguo','gzxiandengx'],['gzskin']]

lib.characterPack.mode_guozhan.gz_caohong=['male','wei',4,['gzyuanhux','heyi'],['gzskin']]

lib.characterPack.mode_guozhan.gz_bianfuren=['female','wei',3,['gzwanwei','gzyuejianx']]

lib.characterPack.mode_guozhan.gz_pangtong=['male','shu',3,['xinlianhuan','oldniepan']]

lib.characterPack.mode_guozhan.gz_guanyu=['male','shu',5,['gzwushengy']]

lib.characterPack.mode_guozhan.gz_zhangfei=['male','shu',4,['new_paoxiao','gzdahex']]

lib.characterPack.mode_guozhan.gz_weiyan=['male','shu',4,['xinkuanggu','qimou','gzgoufanx']]

lib.characterPack.mode_guozhan.gz_huangzhong=['male','shu',4,['gzliegongx','gzjimux']]

lib.characterPack.mode_guozhan.gz_liubei=['male','shu',4,['rerende','gzduoshix_shu']]

lib.characterPack.mode_guozhan.gz_sp_zhugeliang=['male','shu',3,['bazhen','rehuoji','rekanpo'],['gzskin']]

lib.characterPack.mode_guozhan.gz_masu=['male','shu',3,['sanyao','gzzhiman'],['gzskin']]

lib.characterPack.mode_guozhan.gz_jiangwei=['male','shu',4,['tiaoxin','yizhi','tianfu','gzyizhix'],['gzskin']]

lib.characterPack.mode_guozhan.gz_machao=['male','shu',4,['new_tieji','zhuiji']]

lib.characterPack.mode_guozhan.gz_madai=['male','shu',4,['qianxi','gzmashux'],['gzskin']]

lib.characterPack.mode_guozhan.gz_huangyueying=['female','shu',3,['gzjizhix','qicai'],['gzskin']]

lib.characterPack.mode_guozhan.gz_ganfuren=['female','shu',3,['gzshushenx','shenzhi'],['gzskin']]

lib.characterPack.mode_guozhan.gz_zhurong=['female','shu',4,['juxiang','gzlieren']]

lib.characterPack.mode_guozhan.gz_chendong=['male','wu',4,['gzduanxie','fenming']]

lib.characterPack.mode_guozhan.gz_jiangqing=['male','wu',4,['gzshangyix','niaoxiang']]

lib.characterPack.mode_guozhan.gz_sunquan=['male','wu',4,['gzzhiheng','gzduoshix_wu']]

lib.characterPack.mode_guozhan.gz_sunce=['male','wu',4,['jiang','yingyang','gzhunshangx'],['gzskin']]

lib.characterPack.mode_guozhan.gz_sunjian=['male','wu',5,['gzyinghuny']]

lib.characterPack.mode_guozhan.gz_xusheng=['male','wu',4,['gzyicheng','gzpojunx'],['gzskin']]

lib.characterPack.mode_guozhan.gz_zhouyu=['male','wu',3,['gzyingzix','refanjian'],['gzskin']]

lib.characterPack.mode_guozhan.gz_huanggai=['male','wu',4,['new_kurou','gzzhouyanx']]

lib.characterPack.mode_guozhan.gz_taishici=['male','wu',4,['tianyi','gzhanzhanx']]

lib.characterPack.mode_guozhan.gz_lingtong=['male','wu',4,['gzxuanlve','yongjin'],['gzskin']]

lib.characterPack.mode_guozhan.gz_lingcao=['male','wu',4,['dujin','gzlvfengx']]

lib.characterPack.mode_guozhan.gz_ganning=['male','wu',4,['gzqixix','gzfenweix']]

lib.characterPack.mode_guozhan.gz_zhangren=['male','qun',4,['chuanxin','gzluofengx']]

lib.characterPack.mode_guozhan.gz_pangde=['male','qun',4,['mashu','jianchu']]

lib.characterPack.mode_guozhan.gz_jiling=['male','qun',4,['gzxianzhenx','shuangren']]

lib.characterPack.mode_guozhan.gz_panfeng=['male','qun',4,['gzxuefux','gzyangweix'],['gzskin']]

lib.characterPack.mode_guozhan.gz_yanwen=['male','qun',4,['gzshuangxiong']]

lib.characterPack.mode_guozhan.gz_diaochan=['female','qun',3,['lijian','rebiyue'],['gzskin']]

lib.characterPack.mode_guozhan.gz_caiwenji=['female','qun',3,['beige','gzduanchang']]

lib.characterPack.mode_guozhan.gz_zoushi=['female','qun',3,['huoshui','gzqingchengy']]

lib.characterPack.mode_guozhan.gz_zhangjiao=['male','qun',3,['releiji','guidao','gzduoshix_qun']]

lib.characterPack.mode_guozhan.gz_kongrong=['male','qun',3,['gzmingshix','lirang']]

lib.characterPack.mode_guozhan.gz_tianfeng=['male','qun',3,['gzsijian','gzsuishi']]

lib.characterPack.mode_guozhan.gz_yuji=['male','qun',3,['qianhuan','gzyaowangx'],['gzskin']]

lib.characterPack.mode_guozhan.gz_sp_dongzhuo=['male','qun',4,['hengzheng','gzbaolingx','gzroulinx']]

//五虎将大旗调整：
			lib.skill.wuhujiangdaqi={
				unique:true,
				forceunique:true,
				nopop:true,
				mark:true,
				intro:{
					content:"@<div style=\"margin-top:-5px\"><div class=\"skill\">【武圣】</div><div class=\"skillinfo\">将“红色牌”改为“任意牌”</div><div class=\"skill\">【咆哮】</div><div class=\"skillinfo\">增加描述“你使用的【杀】无视其他角色的防具”</div><div class=\"skill\">【龙胆】</div><div class=\"skillinfo\">增加描述“你每发动一次‘龙胆’便摸一张牌”</div><div class=\"skill\">【烈弓】</div><div class=\"skillinfo\">增加描述“你使用【杀】无距离限制”</div><div class=\"skill\">【铁骑】</div><div class=\"skillinfo\">将“一张明置的武将牌”改为“所有明置的武将牌”</div></div>",
				}
			};
			lib.translate.wuhujiangdaqi='五虎将大旗';
			lib.translate.wuhujiangdaqi_ab='将旗';
			lib.translate.wuhujiangdaqi_bg='旗'
			lib.translate.wuhujiangdaqi_info='存活的蜀势力角色的技能按以下规则改动：<br><strong>武圣</strong>：将“红色牌”改为“任意牌”<br><strong>咆哮</strong>：增加描述“你使用的【杀】无视其他角色的防具”<br><strong>龙胆</strong>：增加描述“你发动〖龙胆〗使用或打出牌时摸一张牌”<br><strong>烈弓</strong>：增加描述“你使用的【杀】无距离限制”<br><strong>铁骑</strong>：将“一张明置的武将牌”改为“所有明置的武将牌”';
}

    if(config.recycle){
//回收站
lib.characterPack.mode_guozhan.gz_sp_huangzu=['male','qun',4,['gztunshoux']]
lib.characterPack.mode_guozhan.gz_sp_caomao=['male','wei',3,['gzyanghuix','gzzhulix']]
lib.characterPack.mode_guozhan.gz_sp_guoyuan=['male','wei',3,['gzfengtianx','gzgongqinx']]
lib.characterPack.mode_guozhan.gz_weiwenzhugezhi=['male','wu',4,['gzmengzhix','gzyuanhangx']]
lib.characterPack.mode_guozhan.gz_sp_zongyu=['male','shu',3,['gzgulianx','gzzuoanx']]
lib.characterPack.mode_guozhan.gz_sp_xiahouba=['male','shu',4,['gzbaobianx','gzbeilix']]
lib.characterPack.mode_guozhan.gz_wenqinx=['male','wei',4,['gzyongxian','gzxishax']]
lib.characterPack.mode_guozhan.gz_sp_feishi=['male','shu',3,['gzshuaiyanx','gzmoshou']]
lib.characterPack.mode_guozhan.gz_sp_zhouyu=['male','wu',3,['gzlietux','gzmoshou']]
lib.characterPack.mode_guozhan.gz_sp_zhanghe=['male','qun',3,['yuanlve','gzjixianx']]
lib.characterPack.mode_guozhan.gz_sp_gongsunyuan=['male','qun',4,['gzzilix','huaiyi']]
lib.characterPack.mode_guozhan.gz_sp_zuoci=['male','qun',3,['gzxinsheng','gzhuashen']]
lib.characterPack.mode_guozhan.gz_sp_zhangxiu=['male','qun',4,['gzbaiyoux','gzfandix']]
lib.characterPack.mode_guozhan.gz_sp_zhangwen=['male','wu',3,['gztianwenx','gztianlunx','gztianbian']]
lib.characterPack.mode_guozhan.gz_nanhualaoxian=['male','qun',3,['gzxiuzhenx','gzhuanxianx']]

lib.translate.gz_sp_huangzu="sp黄祖";
lib.translate.gz_sp_caomao="曹髦";
lib.translate.gz_sp_zhangxiu="sp张绣";
lib.translate.gz_sp_gongsunyuan="sp公孙渊";
lib.translate.gz_sp_zhouyu="sp周瑜";
lib.translate.gz_sp_feishi="sp费诗";
lib.translate.gz_sp_zongyu="sp宗预";
lib.translate.gz_sp_xiahouba="sp夏侯霸";
lib.translate.gz_wenqinx="sp文钦";
lib.translate.gz_sp_guoyuan="国渊";
lib.translate.gz_sp_zuoci="sp左慈";
lib.translate.gz_sp_zhangwen="张温";

lib.perfectPair.sp_huangzu=['liubiao']
lib.perfectPair.sp_zhangxiu=['jiaxu','zhangji','hucheer']
lib.perfectPair.sp_huangzu=['re_yuanshao']
lib.perfectPair.sp_zuoci=['yuji']
lib.perfectPair.sp_zhanghe=['gaolan','yanwen','re_yuanshao']
lib.perfectPair.sp_xiahouba=['xiahouyuan']
lib.perfectPair.wenqinx=['wenyang']
lib.perfectPair.sp_zhouyu=['sunce','xiaoqiao','huanggai']

}

    if(config.addcard){
  //卡牌加入牌堆
//势备篇新增卡牌
//斩
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('zhan');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',13,'zhan']);
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',11,'zhan']);
if(lib.guozhanPile) lib.guozhanPile.push(['heart',2,'zhan']);
if(lib.guozhanPile) lib.guozhanPile.push(['club',1,'zhan']);
if(lib.guozhanPile) lib.guozhanPile.push(['spade',12,'zhan']);
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',10,'zhan']);
if(lib.guozhanPile) lib.guozhanPile.push(['heart',7,'zhan']);
if(lib.guozhanPile) lib.guozhanPile.push(['club',6,'zhan']);
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',4,'zhan']);
if(lib.guozhanPile) lib.guozhanPile.push(['club',3,'zhan']);
//酥
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('su');
if(lib.guozhanPile) lib.guozhanPile.push(['club',11,'su']);
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',8,'su']);
if(lib.guozhanPile) lib.guozhanPile.push(['spade',5,'su']);
if(lib.guozhanPile) lib.guozhanPile.push(['heart',2,'su']);
//粮
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('liang');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',13,'liang']);
if(lib.guozhanPile) lib.guozhanPile.push(['heart',9,'liang']);
if(lib.guozhanPile) lib.guozhanPile.push(['club',5,'liang']);
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',1,'liang']);
//故技重施
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('gujichongshix');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',1,'gujichongshix']);
if(lib.guozhanPile) lib.guozhanPile.push(['heart',2,'gujichongshix']);
//择木而栖
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('zemuerqi');
if(lib.guozhanPile) lib.guozhanPile.push(['heart',1,'zemuerqi',null,['lianheng']]);
//妙手回春
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('miaoshouhuichun');
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',13,'miaoshouhuichun',null,['lianheng']]);
//养精蓄锐
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('yangjingxurui');
if(lib.guozhanPile) lib.guozhanPile.push(['heart',11,'yangjingxurui']);
//雪中送炭
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('xuezhongsongtan');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',7,'xuezhongsongtan']);
if(lib.guozhanPile) lib.guozhanPile.push(['heart',9,'xuezhongsongtan']);
//洞察先机
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('dongchaxianji');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',9,'dongchaxianji']);
if(lib.guozhanPile) lib.guozhanPile.push(['club',7,'dongchaxianji']);
//安营扎寨
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('anyingzhazhai');
if(lib.guozhanPile) lib.guozhanPile.push(['heart',2,'anyingzhazhai']);
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',12,'anyingzhazhai']);
//决胜千里
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('jueshengqianli');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',4,'jueshengqianli']);
if(lib.guozhanPile) lib.guozhanPile.push(['spade',8,'jueshengqianli']);
//鸳鸯剑
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('yuanyang');
if(lib.guozhanPile) lib.guozhanPile.push(['heart',2,'yuanyang']);
//无华剑
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('wuhuajian');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',7,'wuhuajian']);
//猛虎擒龙
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('menghuqinlong');
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',3,'menghuqinlong']);
//留龙玉令
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('liulongyuling');
if(lib.guozhanPile) lib.guozhanPile.push(['club',1,'liulongyuling']);
//将军令
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('jiangjunling');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',8,'jiangjunling']);
//幻梦
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('huanmeng');
if(lib.guozhanPile) lib.guozhanPile.push(['heart',6,'huanmeng']);
//南蛮战象
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('nanmanzhanxiang');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',10,'nanmanzhanxiang']);
//虚妄之冕
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('xuwangzhimian');
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',4,'xuwangzhimian']);
//玉面逍遥
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('yumianxiaoyao');
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',8,'yumianxiaoyao',null,['lianheng']]);
if(lib.guozhanPile) lib.guozhanPile.push(
			['spade',5,'sha'],
			['spade',6,'sha','thunder'],
			['spade',7,'sha'],
			['spade',7,'sha','thunder'],
			['spade',8,'sha'],
			['spade',8,'sha'],
			['spade',9,'sha'],
			['spade',10,'sha'],
			['spade',11,'sha'],

			['club',2,'sha'],
			['club',3,'sha'],
			['club',4,'sha'],
			['club',5,'sha'],
			['club',6,'sha','thunder'],
			['club',7,'sha','thunder'],
			['club',8,'sha'],
			['club',8,'sha','thunder'],
			['club',9,'sha'],
			['club',10,'sha'],
			['club',11,'sha'],
			['club',11,'sha'],

			['diamond',2,'shan'],
			['diamond',3,'shan'],
			['diamond',4,'sha','fire'],
			['diamond',5,'sha','fire'],
			['diamond',6,'shan'],
			['diamond',6,'wuliu'],
			['diamond',7,'shan'],
			['diamond',7,'shan'],
			['diamond',8,'shan'],
			['diamond',8,'shan'],
			['diamond',9,'shan'],
			['diamond',10,'shan'],
			['diamond',10,'sha'],
			['diamond',11,'shan'],
			['diamond',11,'sha'],
			['diamond',12,'sha'],
			['diamond',12,'wuxie',null,['guo']],
			['diamond',13,'shan'],

			['heart',2,'shan'],
			['heart',4,'sha','fire'],
			['heart',10,'sha'],
			['heart',11,'shan'],
			['heart',12,'sha'],
			['heart',13,'shan'],

			['spade',4,'sha'],
			['spade',7,'sha'],
			['spade',8,'sha'],
			['spade',9,'sha','thunder'],
			['spade',10,'sha','thunder'],
			['spade',11,'sha','thunder',['lianheng']],
			['spade',13,'wuxie'],

			['heart',4,'shan'],
			['heart',5,'shan'],
			['heart',6,'shan'],
			['heart',7,'shan'],
			['heart',10,'sha'],
			['heart',11,'sha'],

			['club',4,'sha'],
			['club',5,'sha','thunder',['lianheng']],
			['club',6,'sha'],
			['club',7,'sha'],
			['club',8,'sha'],
			['diamond',6,'shan'],
			['diamond',7,'shan'],
			['diamond',8,'sha','fire'],
			['diamond',9,'sha','fire'],
			['diamond',11,'wuxie',null,['guo']],
			['diamond',13,'shan']);

//应变篇新增卡牌
//酥
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('su');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['club',11,'su']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',8,'su']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',5,'su']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',2,'su']);
//粮
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('liang');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',13,'liang']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',9,'liang']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['club',5,'liang']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',1,'liang']);
//斩
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('zhan');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',13,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',11,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['club',1,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',2,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',4,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',12,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',7,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['club',3,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['club',6,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',4,'zhan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',10,'zhan']);
//妙手回春
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('miaoshouhuichun');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',13,'miaoshouhuichun']);
//择木而栖
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('zemuerqi');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',1,'zemuerqi']);
//养精蓄锐
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('yangjingxurui');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',11,'yangjingxurui']);
//故技重施
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('gujichongshix');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',1,'gujichongshix']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',2,'gujichongshix']);
//雪中送炭
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('xuezhongsongtan');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',1,'xuezhongsongtan']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',2,'xuezhongsongtan']);
//安营扎寨
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('anyingzhazhai');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',2,'anyingzhazhai']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',12,'anyingzhazhai']);
//决胜千里
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('jueshengqianli');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',4,'jueshengqianli']);
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',8,'jueshengqianli']);
//鸳鸯剑
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('yuanyang');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',2,'yuanyang']);
//幻梦
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('huanmeng');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',6,'huanmeng']);
//南蛮战象
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('nanmanzhanxiang');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',10,'nanmanzhanxiang']);
//玉面逍遥
if(lib.cardPack.guozhan_yingbian) lib.cardPack.guozhan_yingbian.push('yumianxiaoyao');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',8,'yumianxiaoyao']);

if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(
			['spade',5,'sha'],
			['spade',6,'sha','ice'],
			['spade',7,'sha'],
			['spade',7,'sha','ice'],
			['spade',8,'sha','ice'],
			['spade',8,'sha','ice'],
			['spade',9,'sha'],
			['spade',10,'sha',null,['yingbian_canqu']],
			['spade',11,'sha',null,['yingbian_canqu']],
			['spade',11,'wuxie',null,['yingbian_kongchao']],

			['heart',2,'shan'],
			['heart',4,'sha','fire',['yingbian_canqu']],
			['heart',10,'sha'],
			['heart',11,'shan'],
			['heart',12,'sha'],
			['heart',13,'shan'],

			['diamond',2,'shan'],
			['diamond',3,'shan'],
			['diamond',4,'sha','fire',['yingbian_canqu']],
			['diamond',5,'sha','fire'],
			['diamond',6,'shan'],
			['diamond',7,'shan',null,['yingbian_kongchao']],
			['diamond',7,'shan',null,['yingbian_kongchao']],
			['diamond',8,'shan',null,['yingbian_kongchao']],
			['diamond',8,'shan',null,['yingbian_kongchao']],
			['diamond',9,'shan'],
			['diamond',10,'shan'],
			['diamond',10,'sha'],
			['diamond',11,'shan'],
			['diamond',11,'sha'],
			['diamond',12,'sha'],
			['diamond',12,'wuxie',null,['guo']],
			['diamond',13,'shan'],

			['club',2,'sha'],
			['club',4,'sha',null,['yingbian_kongchao']],
			['club',5,'sha',null,['yingbian_kongchao']],
			['club',6,'sha','thunder'],
			['club',7,'sha','thunder'],
			['club',8,'sha'],
			['club',8,'sha','thunder'],
			['club',9,'sha'],
			['club',10,'sha'],
			['club',11,'sha'],
			['club',11,'sha']);
}

       if(config.jiners){
           lib.skill._jiners={
                audio:"baiyin",
				unique:true,
				mark:true,
 				forced:true,
                priority:1224,
				skillAnimation:true,
				limited:true,
				animationColor:'orange',
	            trigger:{player:'showCharacterAfter'},
　　			content:function(){
                   if(get.mode()=='guozhan'){
                      if(player.group=='jin'&&player.name!='gz_jun_jin_simayi'){
　　　　　　　           player.showCharacter(2);
						 player.modifyGroup('ye');                           						     player.removeMark('yexinjia_mark'); 
                         player.addMark('yexinjia_mark'); 
　　　　　　         }
　　　　　　　　　}
                  else event.finish();
                },
             };
　　}

    if(config.martingale){
  //阵法牌加入势备牌堆
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('changshezhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('pozhenjuex');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('tianfuzhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('qixingzhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('dizaizhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('fengyangzhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('yunchuizhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('fengshizhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('shepanzhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('longfeizhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('huyizhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('niaoxiangzhenx');
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('zhonghuangzhenx');
if(lib.guozhanPile) lib.guozhanPile.push(
			 ["spade",1,'changshezhenx'],
			 ["heart",1,'changshezhenx'],
			 ["diamond",2,'tianfuzhenx'],
			 ["club",2,'tianfuzhenx'],
			 ["club",3,'dizaizhenx'],
			 ["spade",3,'dizaizhenx'],
			 ["heart",3,'dizaizhenx'],
			 ["diamond",4,'fengyangzhenx'],
			 ["club",4,'fengyangzhenx'],
			 ["club",5,'zhonghuangzhenx'],
			 ["heart",5,'zhonghuangzhenx'],
			 ["diamond",6,'huyizhenx'],
			 ["spade",6,'huyizhenx'],
			 ["diamond",7,'fengshizhenx'],
			 ["club",7,'fengshizhenx'],
			 ["spade",8,'shepanzhenx'],
			 ["heart",8,'shepanzhenx'],
			 ["diamond",9,'longfeizhenx'],
			 ["club",9,'longfeizhenx'],
			 ["club",10,'qixingzhenx'],
			 ["spade",11,'niaoxiangzhenx'],
			 ["heart",11,'niaoxiangzhenx'],
			 ["diamond",12,'yunchuizhenx'],
			 ["club",12,'yunchuizhenx'],
			 ["spade",13,'qixingzhenx'],
			 ["heart",13,'pozhenjuex']);

//阵法牌加入应变牌堆
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('changshezhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('pozhenjuex');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('tianfuzhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('qixingzhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('dizaizhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('fengyangzhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('yunchuizhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('fengshizhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('shepanzhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('longfeizhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('huyizhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('niaoxiangzhenx');
if(lib.cardPack.guozhan_yingbian_yingbian)  lib.cardPack.guozhan_yingbian.push('zhonghuangzhenx');
if(lib.guozhanPile_yingbian)  lib.guozhanPile_yingbian.push(
			 ["spade",1,'changshezhenx'],
			 ["heart",1,'changshezhenx'],
			 ["diamond",2,'tianfuzhenx'],
			 ["club",2,'tianfuzhenx'],
			 ["club",3,'dizaizhenx'],
			 ["spade",3,'dizaizhenx'],
			 ["heart",3,'dizaizhenx'],
			 ["diamond",4,'fengyangzhenx'],
			 ["club",4,'fengyangzhenx'],
			 ["club",5,'zhonghuangzhenx'],
			 ["heart",5,'zhonghuangzhenx'],
			 ["diamond",6,'huyizhenx'],
			 ["spade",6,'huyizhenx'],
			 ["diamond",7,'fengshizhenx'],
			 ["club",7,'fengshizhenx'],
			 ["spade",8,'shepanzhenx'],
			 ["heart",8,'shepanzhenx'],
			 ["diamond",9,'longfeizhenx'],
			 ["club",9,'longfeizhenx'],
			 ["club",10,'qixingzhenx'],
			 ["spade",11,'niaoxiangzhenx'],
			 ["heart",11,'niaoxiangzhenx'],
			 ["diamond",12,'yunchuizhenx'],
			 ["club",12,'yunchuizhenx'],
			 ["spade",13,'qixingzhenx'],
			 ["heart",13,'pozhenjuex']);
}

    if(config.maps){
//地图牌加入势备牌堆
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_yixialan');
if(lib.guozhanPile) lib.guozhanPile.push(['club',12,'mtg_yixialan']);
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_shuimomuxue');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',11,'mtg_shuimomuxue']);
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_haidao');
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',5,'mtg_haidao']);
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_youlin');
if(lib.guozhanPile) lib.guozhanPile.push(['club',10,'mtg_youlin']);
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_feixu');
if(lib.guozhanPile) lib.guozhanPile.push(['club',8,'mtg_feixu']);
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_shamolvzhou');
if(lib.guozhanPile) lib.guozhanPile.push(['heart',6,'mtg_shamolvzhou']);
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_lindixiliu');
if(lib.guozhanPile) lib.guozhanPile.push(['spade',11,'mtg_lindixiliu']);
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_bingheyaosai');
if(lib.guozhanPile) lib.guozhanPile.push(['diamond',5,'mtg_bingheyaosai']);
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_longlushanfeng');
if(lib.guozhanPile) lib.guozhanPile.push(['club',10,'mtg_longlushanfeng']);
if(lib.cardPack.guozhan) lib.cardPack.guozhan.push('mtg_linzhongjianta');
if(lib.guozhanPile) lib.guozhanPile.push(['heart',6,'mtg_linzhongjianta']);

//地图牌加入应变牌堆
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_yixialan');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['club',12,'mtg_yixialan']);
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_shuimomuxue');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',11,'mtg_shuimomuxue']);
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_haidao');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',5,'mtg_haidao']);
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_youlin');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['club',10,'mtg_youlin']);
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_feixu');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['club',8,'mtg_feixu']);
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_shamolvzhou');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',6,'mtg_shamolvzhou']);
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_lindixiliu');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['spade',11,'mtg_lindixiliu']);
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_bingheyaosai');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['diamond',5,'mtg_bingheyaosai']);
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_longlushanfeng');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['club',10,'mtg_longlushanfeng']);
if(lib.cardPack.guozhan_yingbian_yingbian) lib.cardPack.guozhan_yingbian.push('mtg_linzhongjianta');
if(lib.guozhanPile_yingbian) lib.guozhanPile_yingbian.push(['heart',6,'mtg_linzhongjianta']);
}

　if(config.single){
//变更副将效果变更主函数
   lib.element.content.mayChangeVice=function(){
                "step 0" 
                player.chooseTarget('选择一名角色弃置其区域内一张牌',function(card,player,target){ 
                    return target.countCards('hej'); 
                }).ai=function(target){ 
                    var player=_status.event.player; 
                    var att=get.attitude(player,target); 
                    if(att>0){ 
                        if(target.countCards('j')>0) return att+6; 
                        return -1; 
                    } 
                    else{ 
                        if(target.countCards('e')>0) return -att+3; 
                        return -att; 
                    } 
                } 
                "step 1" 
                if(result.bool) { 
                    target1=result.targets[0]; 
                    player.discardPlayerCard(target1,'hej',true); 
                } 
　　};
			lib.skill.sole={
                audio:"jiang",
				unique:true,
				mark:true,
 				forced:true,
                priority:0.1,
				skillAnimation:true,
				limited:true,
				animationColor:'orange',
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.sole;
				},
　　			content:function(){
					'step 0'
                   player.awakenSkill('sole');
                   player.storage.sole=true;
 					'step 1'
　　　　　　　      player.showCharacter(2);
					player.chooseControl('主将','副将',function(){
							return _status.event.choice;
					}).set('prompt','令'+get.translation(target)+'失去一张武将牌').set('choice',function(){
						var rank=get.guozhanRank(player.name1,player)-get.guozhanRank(player.name2,player);
						if(rank==0) rank=Math.random()>0.5?1:-1;
						return rank>0?'副将':'主将';
						}());
					'step 2'
					if(result.control=='主将'){
                       player.removeCharacter(0);
					}
					else{
                       player.removeCharacter(1);
					};
					'step 3'
					player.gainMaxHp(true);
					player.recover();
			        player.removeMark('zhulianbihe_mark',1);
                    player.removeMark('xianqu_mark',1);
				  },
			};

				lib.translate.sole='单将模式';
			    lib.translate.sole_bg='单';
				lib.translate.sole_info='锁定技，当你明置武将后，你须移除一张武将牌，清除“先驱”和“珠联璧合”标记，获得一个完整的阴阳鱼。';

     lib.skill._single={
        trigger:{
          global:"gameStart",      
        },
        forced:true,
        priority:2,
        content:function (){
           var players=game.players.slice(0).sortBySeat();
           for(var i=0;i<players.length;i++){
              players[i].addSkill('sole'); 
         };
       },
     }
   }


　　if(config.brawl){
			lib.skill.Ring={
                audio:"luanwu",
				frequent:true,
				trigger:{player:"phaseZhunbeiBegin"},
				filter:function(){
					return game.roundNumber%2==0;
				},
				content:function(){
                    'step 0'      
        var suitlist=['diamond','heart','spade','club']; 
        var numlist=[1,2,3,4,5,6,7,8,9,10,11,12,13]; 
        event.num1=Math.max(1,player.getDamagedHp());
        if(event.num1<=0) event.finish(); 
        for(var i=0;i<event.num1;i++) { 
            var card=game.createCard('du',suitlist.randomGet(),numlist.randomGet()); 
            ui.cardPile.insertBefore(card,ui.cardPile.firstChild); 
        } 
                    'step 1'
        var cards=[]; 
        for(i=0;i<ui.cardPile.childNodes.length;i++){ 
            var currentcard=ui.cardPile.childNodes[i]; 
            cards.push(currentcard); 
        } 
        cards.randomSort(); 
        for(var i=0;i<cards.length;i++){ 
            ui.cardPile.appendChild(cards[i]); 
        } 
        game.log(player,'将',event.num1,'张【毒】置入了牌堆中'); 
				}
			};

　　			lib.translate.Ring='毒圈';
				lib.translate.Ring_info='准备阶段，若当前游戏轮数为2的倍数时，你将X张【毒】洗入牌堆中（X为你已损失的体力值，且至少为1）。';

     lib.skill._brawl={
        trigger:{
          global:"gameStart",      
        },
        forced:true,
        priority:1224,
        content:function(){
           var players=game.players.slice(0).sortBySeat();
           for(var i=0;i<players.length;i++){
　　　　　　　　players[i].showCharacter(2);
                players[i].setIdentity('ye');
                players[i].identity='ye';
                players[i].addSkill('Ring'); 
           };
        },
      }
   }

	if(config.Deadback){		
		 lib.skill._wangzheguilai={
			audio:'hunzi',
            trigger:{global:'dieAfter'},
            filter:function(event,player){  
               return event.player.identity!="ye";
            },
			derivation:'zuici',
            forced:true,
            content:function(){
				'step 0'
　　　　　　　　var corpse=game.dead[0];        
				corpse.revive();
                corpse.setIdentity('ye');
                corpse.identity='ye';
				corpse.clearSkills();
                event.player=corpse; 
				'step 1'
　　　　　　　　event.player.init(event.player.name,'gz_sunce');
　　　　　　　　event.player.removeCharacter(0);
　　　　　　　　event.player.maxHp=5;
　　　　　　　　event.player.hp=1;
　　　　　　　　event.player.draw(3)._triggered=null;
　　　　　　　　event.player.update();
　　　　　　　　event.player.insertPhase();
             },  
          }
       }

    if(config.survive){
     lib.skill._survive={
        trigger:{
          global:"gameStart",      
        },
        forced:true,
        priority:1224,
        content:function (){
           var players=game.players.slice(0).sortBySeat();
           for(var i=0;i<players.length;i++){
　　　　　　　　players[i].showCharacter(2);
                players[i].setIdentity('ye');
                players[i].identity='ye';
                players[i].clearSkills();
                players[i].removeMark('xianqu_mark',1);
                players[i].addSkill('gzshihuny'); 
                if(players[i].maxHp==3){
                   players[i].gainMaxHp(4-players[i].maxHp);
                   players[i].recover();
                };
            };
        },
     }
   }

    if(config.devour){
     lib.skill._devour={
        trigger:{
          global:"gameStart",      
        },
        forced:true,
        priority:1224,
        content:function (){
                 var players=game.players.slice(0).sortBySeat();
                 for(var i=0;i<players.length;i++){
　　　　　　　　　　players[i].showCharacter(2);
                    players[i].setIdentity('ye');
                    players[i].identity='ye';
                    players[i].addSkill('gzshihunx'); 
             };
         },
      }
   }

    if(config.mirror){
     lib.skill._mirror={
        trigger:{
          global:"gameStart",      
        },
        forced:true,
        priority:-2,
        content:function(){
           if(get.mode()=='guozhan'){
　　　　　     var players=game.players.slice(0).sortBySeat();
               for(var i=0;i<players.length;i++){
　　　　　　　   players[i].showCharacter(2);
				 var hp=player.hp;
				 var maxhp=player.maxHp;
				 var group=players[i].group;
				 var identity=players[i].identity;
		         players[i].init(player.name1,player.name2); 
				 players[i].hp=hp;
			     players[i].maxHp=maxhp;
			     players[i].group=group;
			     players[i].identity=identity;
				 players[i].update();
             };
　　　　　}
          else event.finish();
       },
     }
   }

   if(config.teamfight){
lib.characterPack.mode_guozhan.gz_shibing1shen=['male','shen',0,[],['unseen']]
lib.characterPack.mode_guozhan.gz_shibing2shen=['female','shen',0,[],['unseen']]
	lib.translate.gz_shibing1shen="神祇";
	lib.translate.gz_shibing2shen="神祇";
	lib.skill._teamfight={
        trigger:{
          global:"gameStart",      
        },
        forced:true,
        priority:0.1,
        content:function (){
			"step 0"
            var players=game.players.slice(0).sortBySeat();
			for(var i=0;i<game.players.length;i+=2){
　　　　　　　　players[i].showCharacter(2);
				players[i].modifyGroup('shen');
　　　　　　　　players[i].next.showCharacter(2);
				players[i].next.modifyGroup('key');
			};
			"step 1"
            player.removeMark('xianqu_mark',1);
        },
     }
   }

//国战变更势力主函数（自写，勿转）
    lib.element.player.modifyGroup=function(group,log,broadcast){
		var player=this;
		player.group=group;
		player.identity=group;
		player._group=group;
player.node.identity.firstChild.innerHTML=get.translation(group);
		player.node.identity.dataset.color=player.identity;        
		if(player.name) lib.character[player.name][1]=group;
		if(player.name1) lib.character[player.name1][1]=group;
		if(player.name2) lib.character[player.name2][1]=group;
		game.log(this,'将势力变为了','#y'+get.translation(group+2));                
    };

//交换的主函数（搬自耀世三国②，已经过大佬同意，勿转）
    lib.element.player.swapJudge=function(target){
    	var next=game.createEvent('swapJudge');
		next.player=this;
		next.target=target;
		next.setContent('swapJudge');
		return next;
    };
   lib.element.content.swapJudge=function(){
        "step 0"
        game.log(player,'和',target,'交换了判定区中的牌')
        var j1=player.getCards('j');
        if(target.storage._disableJudge){
            if(j1)player.discard(j1);
        }
        var j2=target.getCards('j');
        if(player.storage._disableJudge){
            if(j2)target.discard(j2);
        }
        "step 1"
        event.cards=[player.getCards('j'),target.getCards('j')];
        player.lose(event.cards[0],ui.ordering,'visible');
		target.lose(event.cards[1],ui.ordering,'visible');
        if(event.cards[0].length) player.$give(event.cards[0],target);
		if(event.cards[1].length) target.$give(event.cards[1],player);
        "step 2"
        for(var i=0;i<event.cards[1].length;i++){
        	if(event.cards[1][i].viewAs)player.addJudge({name:event.cards[1][i].viewAs},[event.cards[1][i]]);
            else player.addJudge(event.cards[1][i]);
		}
		for(var i=0;i<event.cards[0].length;i++){
			if(event.cards[0][i].viewAs)target.addJudge({name:event.cards[0][i].viewAs},[event.cards[0][i]]);
            else target.addJudge(event.cards[0][i]);
		}
　　};

//武将分类
lib.translate.guozhan_shen='鸾姿凤态';
lib.translate.recyclep='回收站';
lib.translate.authorp='彩蛋篇';
lib.translate.tuguop='图国篇';
lib.translate.dixip='抵巇篇';
lib.translate.lunwaip='论外篇';
lib.translate.wuhep='忤合篇';
lib.translate.huaijiup='补全篇';
lib.translate.shijip='始计篇';
lib.translate.zuozhanp='作战篇';
lib.translate.dixingp='地形篇';
lib.translate.mougongp='谋攻篇';
lib.translate.junxingp='军形篇';
lib.translate.bingship='兵势篇';
lib.translate.xuship='虚实篇';
lib.translate.xingjunp='行军篇';
lib.translate.junzhengp='军争篇';
lib.translate.jiubianp='九变篇';
lib.translate.jiudip='九地篇';
lib.translate.huogongp='火攻篇';
lib.translate.yongjianp='用间篇';
lib.translate.qizhengp='奇正篇';
lib.translate.zhuanship='转势篇';
lib.translate.famoup='伐谋篇';
lib.translate.poship='破势篇';
lib.translate.bingguip='兵诡篇';
lib.translate.wushenp='五慎篇';
lib.translate.taolvep='韬略篇';
lib.translate.liship='励士篇';
lib.translate.lunjiangp='论将篇';
lib.translate.gz_zhangweix='张葳'
lib.translate.gz_zhangyix='张翼'
lib.translate.gz_luotongx='骆统'
lib.translate.gz_yuanfurenx='袁夫人'
lib.translate.gz_zhaoangx='赵昂'
lib.translate.gz_heyanx='何晏'
lib.translate.gz_huoyix="霍弋";
lib.translate.gz_qiaoguolaox="乔国老";
lib.translate.gz_shen_huatuo="神华佗";
lib.translate.gz_sunhuanx="孙桓";
lib.translate.gz_wangyi="王异";
lib.translate.gz_guanzhang="关兴张苞";
lib.translate.gz_xinxianying="辛宪英";
lib.translate.jun_caopi="君曹丕";
lib.translate.jun_sunce="君孙策";
lib.translate.jun_liushan="君刘禅";
lib.translate.jun_re_yuanshao="君袁绍";
lib.translate.jun_jin_simayi="君司马懿";
lib.translate.jun_sp_dongzhuo="君董卓";
lib.translate.jun_liuxie="君刘协";
lib.translate.gz_jipingx="吉平";
lib.translate.gz_sp_tangji="唐姬";
lib.translate.gz_sp_sunyi="孙翊";
lib.translate.gz_sp_huangchengyan="黄承彦";
lib.translate.gz_sp_xiangchong="向宠";
lib.translate.gz_sp_gaoxiang="高翔";
lib.translate.gz_sp_shanqun="孙峻";
lib.translate.gz_sp_chenggongying="成公英";
lib.translate.gz_sp_jianshuo="蹇硕";
lib.translate.gz_sp_liuhong="刘宏";
lib.translate.gz_sp_liubian="刘辩";
lib.translate.gz_sp_tenghuanghou="滕皇后";
lib.translate.gz_xushux="徐庶";
lib.translate.gz_diy_sppanjun="sp潘濬";
lib.translate.gz_re_zhonghui="钟会";
lib.translate.gz_diy_spsimazhao="司马昭";
lib.translate.gz_diy_spdongzhuo="董卓";
lib.translate.gz_sp_wenqin="文钦";
lib.translate.gz_yangwanx="杨婉";
lib.translate.gz_huangwudiex="黄舞蝶";
lib.translate.gz_dongguirenx="董贵人";
lib.translate.gz_jin_yanghuiyu="羊徽瑜";
lib.translate.gz_caohuax="曹华";
lib.translate.gz_zhangchux="张楚";
lib.translate.gz_sp_zhangning="张宁";
lib.translate.gz_panhuanghoux="潘淑";
lib.translate.gz_sp_diy_yuri="仲村由理";
lib.translate.gz_sp_wuban="吴班";
lib.translate.gz_sp_zhaofuren="赵夫人";
lib.translate.gz_sp_baifuren="柏夫人";
lib.translate.gz_sp_guanqiujian="毌丘俭";
lib.translate.gz_sp_yanglan="杨兰";
lib.translate.gz_sp_cuifuren="崔夫人";
lib.translate.gz_sp_ganshen="甘莘";
lib.translate.gz_sp_fengfangnv="冯方女";
lib.translate.gz_sp_zhangbu="张布";
lib.translate.gz_sp_puyangxing="濮阳兴";
lib.translate.gz_sp_luoxian="罗宪";
lib.translate.gz_sp_zaozhirenjun="枣祗任峻";
lib.translate.gz_sp_chenzhi="陈祗";
lib.translate.gz_sp_goufu="句扶";
lib.translate.gz_sp_hanlong="韩龙";
lib.translate.gz_sp_huzong="胡综";
lib.translate.gz_sp_sunben="孙贲";
lib.translate.gz_sp_chentai="陈泰";
lib.translate.gz_sp_sunli="孙礼";
lib.translate.gz_sp_zhangliang="张梁";
lib.translate.gz_sunjingx="孙静";
lib.translate.gz_diy_spliushan="刘禅";
lib.translate.gz_sp_yanbaihu="严白虎";
lib.translate.gz_sp_guanping="关平";
lib.translate.gz_zhuxiaoer="竹小二";
lib.translate.gz_spmaliao="苏婆马里奥";
lib.translate.gz_aurora="极光";
lib.translate.gz_yitiaoxianyu="一条咸鱼";
lib.translate.gz_fanxing="繁星";
lib.translate.gz_limuzi="李木子";
lib.translate.gz_liuzhangx="刘璋";
lib.translate.gz_huojunx="霍峻";
lib.translate.gz_xianglangx="向朗";
lib.translate.gz_yenaisumibang="椰奶粟米棒";
lib.translate.gz_huijin="辉烬贺流年";
lib.translate.gz_xuande="弈巫";
lib.translate.gz_zhugexiaojun="文彧";
lib.translate.gz_jiuqi="染柒";
lib.translate.gz_fangxu="方须";
lib.translate.gz_canghai="藏海";
lib.translate.gz_esperanto="策师";
lib.translate.gz_wuyanx="吾彦";
lib.translate.gz_sp_wucan="吾粲";
lib.translate.gz_huanjiex="桓阶";
lib.translate.gz_weiguanx="卫瓘";
lib.translate.gz_puppet1="傀儡";
lib.translate.gz_puppet2="傀儡";

//武将包
lib.characterSort.mode_guozhan.guozhan_shen=['gz_shen_simayi','gz_shen_zhenji','gz_shen_zhangliao','gz_shen_zhugeliang','gz_shen_guanyu','gz_shen_zhaoyun','gz_shen_lvmeng',"gz_shen_luxun","gz_shen_zhouyu",'gz_shen_huatuo','gz_shen_diaochan','gz_shen_lvbu']

lib.characterSort.mode_guozhan.authorp=["gz_zhuxiaoer","gz_fanxing","gz_limuzi","gz_yenaisumibang","gz_yitiaoxianyu","gz_zhugexiaojun","gz_spmaliao","gz_aurora","gz_fangxu","gz_canghai","gz_huijin","gz_jiuqi","gz_xuande","gz_esperanto"]

lib.characterSort.mode_guozhan.tuguop=['gz_sp_ganshen','gz_sp_baifuren','gz_sp_yanglan','gz_sp_fengfangnv','gz_sp_tenghuanghou','gz_sp_luoxian','gz_jikang','gz_shenpei']

lib.characterSort.mode_guozhan.dixip=["gz_caozhi","gz_zhaotongzhaoguang","gz_sunjingx","gz_sp_zhangliang","gz_huaxin","gz_niujin","gz_puyuan","gz_zhoufang","gz_chendeng"]

lib.characterSort.mode_guozhan.shijip=["gz_sp_sunli","gz_caoying","gz_guanping","gz_yanyan","gz_sunru","gz_zhuzhi","gz_caiyong","gz_caohuax"]

lib.characterSort.mode_guozhan.zuozhanp=["gz_caochun","gz_jsp_guanyu","gz_zhangxingcai","gz_mizhu","gz_liuzan","gz_quancong","gz_liubiao","gz_sp_liubian"]

lib.characterSort.mode_guozhan.mougongp=["gz_chenqun","gz_sp_xinpi","gz_sunqian","gz_xianglangx","gz_guyong","gz_zhugejin","gz_chengong","gz_xin_liru"]

lib.characterSort.mode_guozhan.junxingp=["gz_caoang","gz_caozhen","gz_liufeng","gz_liaohua","gz_heqi","gz_panzhangmazhong","gz_gaoshun","gz_liuyao"]

lib.characterSort.mode_guozhan.bingship=["gz_caochong","gz_liyan","gz_luji","gz_fuhuanghou","gz_liuxie","gz_chenlin","gz_sp_wuban","gz_chengpu"]

lib.characterSort.mode_guozhan.xuship=["gz_wangyi","gz_zhangchunhua","gz_zhugeguo","gz_sp_cuifuren","gz_bulianshi","gz_sunluban","gz_caojie","gz_sp_zhangning"]

lib.characterSort.mode_guozhan.junzhengp=["gz_guohuai","gz_caoxiu","gz_guanyinping","gz_mayunlu","gz_sp_zhaofuren","gz_buzhi","gz_wangyun","gz_fuwan"]

lib.characterSort.mode_guozhan.xingjunp=["gz_lvqian","gz_yangxiu","gz_jianyong","gz_maliang","gz_kanze","gz_qiaoguolaox","gz_gongsunzan","gz_lingju"]

lib.characterSort.mode_guozhan.dixingp=["gz_xinxianying","gz_zhangchangpu","gz_wuyi","gz_yangwanx","gz_zhoufei","gz_zhuran","gz_guotufengji","gz_hansui"]

lib.characterSort.mode_guozhan.jiubianp=["gz_kuailiangkuaiyue","gz_sp_jiaxu","gz_xiahoushi","gz_wuxian","gz_zumao","gz_xushi","gz_sp_liuhong","gz_zhangchux"]

lib.characterSort.mode_guozhan.jiudip=["gz_xizhicai","gz_zhangyi","gz_re_sunluyu","gz_zhangbao","gz_xunchen","gz_liuchen","gz_guohuanghou","gz_handang"]

lib.characterSort.mode_guozhan.huogongp=["gz_caozhang","gz_caorui","gz_hejin","gz_caifuren","gz_chendao","gz_mazhong","gz_sunxiu","gz_lvdai"]

lib.characterSort.mode_guozhan.yongjianp=["gz_sp_zaozhirenjun","gz_simalang","gz_qinmi","gz_dongyun","gz_sundeng","gz_zhuhuan","gz_yj_jushou","gz_dongbai"]

lib.characterSort.mode_guozhan.qizhengp=["gz_wenyang","gz_duji","gz_zhoucang","gz_zhangsong","gz_cenhun","gz_sunshao","gz_gaolan","gz_yl_luzhi"]

lib.characterSort.mode_guozhan.zhuanship=["gz_re_jsp_pangtong","gz_sp_jiangwei","gz_sp_xuyou","gz_diy_sppanjun","gz_liuzhangx","gz_zhugedan","gz_zhaoxiang","gz_sunhao"]

lib.characterSort.mode_guozhan.famoup=["gz_pangdegong","gz_dongguirenx","gz_guansuo","gz_baosanniang","gz_sp_zhangbu","gz_sp_puyangxing","gz_zhongyao","gz_hanhaoshihuan"]

lib.characterSort.mode_guozhan.bingguip=["gz_wangshuang","gz_sp_caiwenji","gz_sp_gaoxiang","gz_xf_yiji","gz_xuezong","gz_sunliang","gz_hucheer","gz_huaxiong"]

lib.characterSort.mode_guozhan.wushenp=["gz_wanglang","gz_chengyu","gz_huanghao","gz_zhugezhan","gz_yanjun","gz_xugong","gz_zhangrang","gz_sp_jianshuo"]

lib.characterSort.mode_guozhan.taolvep=["gz_sp_hanlong","gz_haozhao","gz_guanzhang","gz_huaman","gz_sp_wucan","gz_gexuan","gz_zhangji","gz_sp_tangji"]

lib.characterSort.mode_guozhan.poship=["gz_sp_guanqiujian","gz_guozhao","gz_huoyix","gz_yangyi","gz_sunhuanx","gz_sp_sunyi","gz_dongcheng","gz_yuantanyuanshang"]

lib.characterSort.mode_guozhan.wuhep=["gz_liuye","gz_wangji","gz_huangwudiex","gz_huojunx","gz_caobuxing","gz_panhuanghoux","gz_sp_chenggongying","gz_wangrong"]

lib.characterSort.mode_guozhan.lunwaip=["gz_caoshuang","gz_huanjiex","gz_sp_huangchengyan","gz_sp_xiangchong","gz_wuyanx","gz_sp_shanqun","gz_xurong","gz_jipingx"]

lib.characterSort.mode_guozhan.liship=["gz_heyanx","gz_zhaoangx","gz_zhangyix","gz_dengzhi","gz_yuanfurenx","gz_luotongx","gz_liuyu","gz_zhangweix"]

lib.characterSort.mode_guozhan.lunjiangp=["gz_manchong","gz_sp_chentai","gz_sp_goufu","gz_sp_chenzhi","gz_sp_sunben","gz_sp_huzong","gz_fanchou","gz_liuyan"]

lib.characterSort.mode_guozhan.recyclep=["gz_weiwenzhugezhi","gz_sp_zhangwen","gz_sp_guoyuan","gz_sp_xiahouba","gz_sp_zhanghe","gz_wenqinx","gz_sp_caomao","gz_sp_zongyu","gz_sp_zhouyu","gz_sp_huangzu","gz_sp_gongsunyuan","gz_sp_zhangxiu","gz_sp_zuoci","gz_nanhualaoxian","gz_sp_feishi"]

//国战正常强度评级
		var guozhanRank={
		 '8':['gz_jun_zhangjiao','gz_jun_caopi','gz_jun_liushan','gz_jun_sunce','gz_jun_re_yuanshao','gz_jun_jin_simayi','gz_jun_caocao','gz_jun_sunquan','gz_jun_liubei',"gz_shen_zhugeliang",'gz_jun_dongzhuo','gz_jun_liuxie','gz_zhuxiaoer','gz_fanxing',"gz_yenaisumibang",'gz_limuzi','gz_fazheng','gz_yitiaoxianyu',"gz_zhugexiaojun","gz_spmaliao","gz_aurora","sp_diy_yuri","gz_fangxu","gz_canghai","gz_huijin","gz_jiuqi","gz_xuande","gz_esperanto",'gz_guohuanghou'],
		 '7':['gz_liuchen','gz_liuxie','gz_shen_lvmeng','gz_zhugedan',"gz_shen_simayi","gz_shen_zhenji","gz_zhugezhan",'gz_caoren','gz_beimihu',"gz_shen_zhouyu","gz_shen_lvbu",'gz_lingju',"gz_shen_zhaoyun",'gz_shen_diaochan','gz_shen_zhangliao','gz_zhaoxiang','gz_yangxiu','gz_zhoutai','gz_guohuai','gz_caobuxing','gz_liuyu','gz_shen_huatuo','gz_sp_xinpi','gz_manchong','gz_sp_zhangbu','gz_zhangchunhua',"gz_nanhualaoxian"],
		 '6':["gz_chengyu",'gz_gaoshun','gz_zhonghui','gz_caopi','gz_wangping',"gz_xugong",'gz_xurong','gz_guotufengji','gz_lvfan','gz_xunyou','gz_caoying','gz_huangyueying','gz_pangdegong','gz_sp_jiangwei','gz_sunshangxiang','gz_wangyun','gz_buzhi','gz_liaohua','gz_wuxian','gz_sp_xuyou','gz_diy_sppanjun','gz_sp_jiaxu','gz_zhaotongzhaoguang','gz_guanyinping','gz_dongbai','gz_sp_liubian','gz_sp_zhangning','gz_xinxianying','gz_re_jsp_pangtong','gz_re_sunluyu',"gz_shen_luxun","gz_xuezong","gz_guanzhang",'gz_dingfeng','gz_jianggan','gz_zuoci','gz_sp_baifuren','gz_sp_yanglan','gz_sp_fengfangnv','gz_heqi',"gz_shen_guanyu",'gz_re_zhonghui','gz_diy_spsimazhao','gz_zhangren','gz_diy_spdongzhuo','gz_zhangjiao','gz_liubei','gz_sunquan','gz_caocao','gz_sp_yanbaihu','gz_sp_guanping','gz_sunce','gz_duyu','gz_lingcao','gz_weiyan','gz_zhangyix','gz_shamoke','gz_sp_huangchengyan','gz_wangrong',"gz_huaman",'gz_wuyanx','gz_xiaoqiao','gz_puyuan','gz_qiaoguolaox',"gz_sunliang",'gz_sp_chenggongying','gz_panhuanghoux','gz_sp_gaoxiang','gz_sunhao',"gz_sp_wucan",'gz_liuyan','gz_sp_chenzhi','gz_sp_chentai','gz_sp_puyangxing','gz_sp_luoxian',"gz_haozhao","gz_sp_hanlong",'gz_mazhong','gz_sp_guanqiujian'],
		 '5':['gz_wangyi','gz_xiahoushi',"gz_sp_tenghuanghou",'gz_guansuo','gz_sp_ganshen','gz_yujin','gz_lifeng','gz_lvdai','gz_zhangxiu','gz_jiaxu','gz_huangwudiex','gz_mateng','gz_simalang','gz_sunshao','gz_hansui','gz_zhuran','gz_huanjiex','gz_zhanghe','gz_niujin','gz_sp_shanqun','gz_gongsunzan','gz_huangzhong',"gz_yanjun",'gz_xushux',"gz_gexuan",'gz_caoxiu','gz_zhoucang','gz_xizhicai','gz_zhangbao','gz_guojia','gz_sunluban','gz_zhugejin','gz_sp_liuhong','gz_liru','gz_caochun','gz_caohong','gz_yuanfurenx','gz_simayi','gz_sp_cuifuren','gz_yuanshu',"gz_sp_tangji",'gz_daqiao','gz_yuji','gz_xuhuang','gz_zhaoyun','gz_liqueguosi','gz_wuguotai','gz_machao','gz_masu','gz_re_lidian','gz_chendong','gz_lukang','gz_luxun','gz_cenhun','gz_jiangfei','gz_liubiao','gz_zhangchux','gz_mifuren','gz_xianglangx','gz_handang','gz_maliang','gz_ganfuren','gz_sp_wenqin','gz_sp_xiangchong','gz_huojunx','gz_jipingx','gz_huoyix','gz_huaxin','gz_duji','gz_sundeng','gz_wanglang',"gz_guozhao",'gz_luyusheng','gz_xushi','gz_lvqian',"gz_zhangrang",'gz_baosanniang','gz_fanchou','gz_sp_goufu','gz_caiwenji','gz_jikang','gz_caochun','gz_caoshuang','gz_sp_huangzu','gz_shenpei',"gz_sp_zhangwen","gz_sp_zhanghe","gz_wenqinx","gz_sp_caomao","gz_sp_zongyu","gz_sp_zhouyu","gz_sp_gongsunyuan","gz_sp_zhangxiu","gz_sp_zuoci","gz_sp_feishi"],

'4':['gz_liuye',"gz_sp_xiahouba","gz_sp_guoyuan","gz_weiwenzhugezhi",'gz_chendeng','gz_yl_luzhi','gz_sp_huzong','gz_yuantanyuanshang','gz_chenlin','gz_sp_sunli','gz_hanhaoshihuan','gz_liyan','gz_diaochan','gz_liuzan','gz_caorui','gz_jin_yanghuiyu','gz_zhoufei','gz_kuailiangkuaiyue',"gz_wangshuang",'gz_dongyun',"gz_huanghao",'gz_sp_zhaofuren','gz_zumao','gz_jushou','gz_zhuhuan','gz_fuhuanghou','gz_jsp_guanyu','gz_zhugeguo','gz_xiahouyuan',"gz_sp_sunyi",'gz_zhenji','gz_dengai','gz_xunyu','gz_liushan','gz_re_lusu','gz_kanze','gz_luji',"gz_zhangji",'gz_caifuren','gz_wuyi','gz_pangde','gz_yanwen','gz_caiyong','gz_diy_spliushan',"gz_sunhuanx",'gz_caochong','gz_heyanx',"gz_sp_caiwenji",'gz_kongrong','gz_luotongx','gz_zhoufang','gz_zhouyu','gz_yanyan','gz_gaolan','gz_zhongyao','gz_sp_zhangliang','gz_quancong'],

'3':['gz_fuwan','gz_lvbu','gz_dianwei','gz_sp_zaozhirenjun',"gz_wangji",'gz_caohuax','gz_jiling',"gz_hucheer",'gz_caojie','gz_liuzhangx','gz_wenyang','gz_yuejin','gz_mayunlu','gz_dongguirenx','gz_zhangchangpu','gz_chendao',"gz_jiangqing",'gz_mizhu','gz_ganning','gz_sunjingx','gz_sp_wuban','gz_guanyu','gz_hejin','gz_sunxiu','gz_zhanghuyuechen','gz_caozhang','gz_zhangsong','gz_caozhi','gz_zhangyi','gz_jianyong','gz_zhangxingcai','gz_xuzhu','gz_zhangfei','gz_chengpu','gz_chengong','gz_chenqun','gz_panzhangmazhong','gz_pangtong',"gz_huaxiong",'gz_madai','gz_sunjian','gz_menghuo','gz_zhuzhi','gz_guanping','gz_bianfuren','gz_zoushi','gz_zangba','gz_dengzhi','gz_sunru','gz_liuyao','gz_zhangweix',"gz_yangyi",'gz_xunchen','gz_sp_sunben'],
		 '2':['gz_sunqian','gz_yangwanx','gz_caoang','gz_huanggai',"gz_sp_jianshuo",'gz_pangtong','gz_caozhen','gz_qinmi','gz_liufeng','gz_bulianshi','gz_pangtong','gz_sp_zhugeliang',"gz_dongcheng",'gz_panfeng','gz_zhugeliang','gz_zhangliao','gz_huatuo','gz_taishici','gz_xiahoudun','gz_zhangzhang','gz_lvmeng','gz_cuimao','gz_zhurong','gz_menghuo','gz_jiangwei','gz_re_yuanshao','gz_guyong','gz_xf_yiji','gz_tianfeng'],

		};
		for(var i in guozhanRank){
			lib.guozhanRank[i].addArray(guozhanRank[i])
		}

//国战鏖战强度评级
		var aozhanRank={
'8':[],
'7':['gz_zhuxiaoer','gz_fanxing',"gz_yenaisumibang","gz_zhugexiaojun","sp_diy_yuri","gz_aurora","gz_canghai","gz_huijin"],
'6':['gz_wuxian','gz_liaohua','gz_diy_sppanjun','gz_jun_sunqun','gz_jun_liubei','gz_zhaotongzhaoguang','gz_zhugedan',"gz_shen_zhaoyun",'gz_jun_sunce','gz_yitiaoxianyu',"gz_spmaliao"],

'5':['gz_guanyinping','gz_liuzhangx','gz_gaoshun','gz_zhangchunhua','gz_caoxiu','gz_zumao','gz_caojie','gz_sp_zhaofuren','gz_caozhang','gz_jun_zhangjiao','gz_chendao','gz_sp_chentai','gz_caohuax','gz_sp_sunli','gz_sunru','gz_heqi','gz_zhangxingcai','gz_zhaoxiang','gz_guohuai','gz_hansui','gz_guotufengji','gz_lingju','gz_wuyi','gz_shen_lvmeng','gz_zhangyi','gz_caoying','gz_gaolan',"gz_shen_zhouyu",'gz_zhangbao',"gz_shen_zhenji","gz_wangshuang","gz_zhangrang","gz_sp_jianshuo","gz_sp_hanlong","gz_gexuan",'gz_jun_liushan','gz_jun_dongzhuo','gz_sp_gaoxiang','gz_caoren',"gz_zhangyix",'gz_machao','gz_wangrong','gz_ganfuren','gz_madai',"gz_xugong",'gz_jiling','gz_pangde','gz_re_lidian','gz_yuejin','gz_huangzhong','gz_menghuo','gz_lvbu','gz_zhangren','gz_sunquan','gz_xurong','gz_sp_guanping','gz_shen_huatuo','gz_liuzan','gz_sunshao','gz_qiaoguolaox',"gz_wangji",'gz_sp_wuban','gz_sp_goufu','gz_huangyueying','gz_lvqian','gz_dingfeng','gz_duyu','gz_duji','gz_sp_xinpi','gz_manchong','gz_sp_fengfangnv'],

'4':['gz_liyan','gz_mayunlu',"gz_fangxu",'gz_liuchen','gz_sp_jiangwei','gz_sp_zhangning','gz_dongbai','gz_sp_xuyou','gz_zhuhuan','gz_jun_caocao','gz_hanhaoshihuan','gz_guanping',"gz_sp_tangji",'gz_yanyan','gz_jsp_guanyu','gz_qinmi','gz_zhoufei','gz_gongsunzan','gz_panfeng',"gz_shen_zhugeliang","gz_shen_simayi","gz_shen_lvbu","gz_shen_guanyu","gz_xuezong","gz_hucheer","gz_sunliang",'gz_shen_zhangliao',"gz_zhugezhan","gz_zhangji",'gz_jun_caopi','gz_jun_re_yuanshao','gz_wanglang','gz_sunshangxiang','gz_lvmeng','gz_simayi','gz_luxun','gz_wuguotai','gz_caiwenji','gz_xiahoudun','gz_fazheng','gz_liqueguosi','gz_huanggai','gz_jun_liuxie','gz_sp_shanqun','gz_huanjiex','gz_panhuanghoux','gz_jipingx','gz_zhangweix',"gz_liuyu",'gz_shen_diaochan','gz_jun_jin_simayi','gz_zhanghuyuechen','gz_lingcao','gz_jin_yanghuiyu','gz_huangwudiex','gz_chendeng','gz_zhoufang','gz_lvdai','gz_caobuxing','gz_sp_chenzhi','gz_sp_zhangbu','gz_sp_luoxian','gz_caochun',"gz_jiuqi","gz_xuande",'gz_sp_guanqiujian'],

'3':['gz_liuxie','gz_jushou','gz_sp_yanglan','gz_sp_zaozhirenjun','gz_sp_liubian','gz_re_lusu','gz_simalang','gz_buzhi','gz_lvfan',"gz_chengyu",'gz_re_jsp_pangtong','gz_sunqian','gz_guyong','gz_caozhen','gz_liufeng','gz_xushi','gz_zhugejin','gz_sunxiu','gz_zhuzhi','gz_quancong','gz_xinxianying','gz_maliang','gz_sp_liuhong','gz_guohuanghou','gz_xunchen',"gz_sp_sunyi","gz_huaxiong","gz_yanjun","gz_huaman",'gz_chenlin','gz_zhangzhang','gz_diy_spliushan',"gz_haozhao",'gz_caoshuang','gz_sp_xiangchong','gz_huoyix',"gz_sunhuanx","gz_luotongx",'gz_sunjingx','gz_guansuo','gz_puyuan','gz_liru','gz_niujin','gz_xiahoushi','gz_wenyang','gz_liuye','gz_fuwan','gz_fanchou','gz_liuyan','gz_sp_sunben','gz_yuantanyuanshang','gz_shenpei'],

'2':['gz_chenqun','gz_sp_huzong','gz_caopi',"gz_heyanx",'gz_huaxin',"gz_zhaoangx",'gz_sp_chenggongying','gz_yuji','gz_caorui','gz_sp_zhangliang',"gz_guozhao",'gz_xuzhu','gz_caocao','gz_guojia','gz_xunyu','gz_luyusheng','gz_wangyun','gz_kuailiangkuaiyue','gz_liuyao','gz_fuhuanghou','gz_caiyong','gz_caochun','gz_xizhicai','gz_re_sunluyu','gz_zhuran','gz_kanze','gz_caozhi','gz_cenhun','gz_mizhu','gz_zhongyao',"gz_shen_luxun",'gz_xf_yiji',"gz_guanzhang",'gz_zangba','gz_huojunx',"gz_dengzhi","gz_dongcheng",'gz_liubiao','gz_dongguirenx',"gz_hanhaoshihuan",'gz_handang','gz_sp_ganshen','gz_sp_baifuren','gz_sp_huangzu',"gz_sp_tenghuanghou"],

'1':['gz_zhangchux','gz_yl_luzhi','gz_sp_puyangxing','gz_sunhao','gz_luji','gz_caoang','gz_sp_jiaxu','gz_bulianshi','gz_chengpu','gz_chengong','gz_xianglangx','gz_sunluban','gz_wangyi','gz_zhugeguo','gz_mazhong','gz_panzhangmazhong','gz_sp_cuifuren','gz_caifuren','gz_hejin','gz_jianyong','gz_yangxiu','gz_zhangsong','gz_zhoucang','gz_pangdegong','gz_sp_huangchengyan',"gz_huanghao","gz_yuanfurenx",'gz_limuzi',"gz_yangyi",'gz_caochong','gz_yangwanx','gz_wuyanx','gz_zhangchangpu','gz_liubei','gz_sundeng',"gz_sp_wucan","gz_sp_caiwenji",'gz_jikang',"gz_esperanto"],
		};
		for(var i in aozhanRank){
			lib.aozhanRank[i].addArray(aozhanRank[i])
		}

//珠联璧合
　　lib.perfectPair.luji=['luyusheng']
　　lib.perfectPair.dengzhi=['jiangwei']
　　lib.perfectPair.zhangyix=['jiangwei','liaohua','zhaoyun']
　　lib.perfectPair.zhaoangx=['wangyi']
　　lib.perfectPair.yuanfurenx=['sunquan']
　　lib.perfectPair.sp_huangchengyan=['sp_zhugeliang','huangyueying']
　　lib.perfectPair.zhonghui=['zhongyao','jiangwei','sp_jiangwei']
　　lib.perfectPair.simazhao=['simayi','zhangchunhua']
　　lib.perfectPair.qiaoguolaox=['daqiao','xiaoqiao']
　　lib.perfectPair.liuqi=['liubiao','caifuren']
　　lib.perfectPair.heyanx=['caoshuang']
　　lib.perfectPair.caochong=['caocao']
　　lib.perfectPair.panhuanghoux=['sunquan','sunliang']
　　lib.perfectPair.sunshao=['sunquan','zhangzhang']
　　lib.perfectPair.huojunx=['huoyix']
　　lib.perfectPair.zhugedan=['tangzi']
　　lib.perfectPair.wujing=['wuguotai']
　　lib.perfectPair.miheng=['kongrong']
　　lib.perfectPair.huanjiex=['caopi']
　　lib.perfectPair.huaxin=['wanglang','caozhen','dongzhao']
　　lib.perfectPair.puyuan=['zhugeliang']
　　lib.perfectPair.wanglang=['xiahoudun','caozhen']
　　lib.perfectPair.mengda=['fazheng']
　　lib.perfectPair.sp_wucan=['lvdai']
　　lib.perfectPair.zhangji=['liqueguosi','zoushi']
　　lib.perfectPair.fanchou=['jiaxu']
　　lib.perfectPair.guanzhang=['guanyu','zhangfei']
　　lib.perfectPair.huaman=['guansuo','menghuo','zhurong']
　　lib.perfectPair.zhugezhan=['zhugeliang','huangyueying','sp_zhugeliang']
　　lib.perfectPair.caiyong=['caiwenji']
　　lib.perfectPair.yanjun=['buzhi','zhugejin']
　　lib.perfectPair.shen_zhaoyun=['liushan']
　　lib.perfectPair.sunliang=['sunquan']
　　lib.perfectPair.shen_guanyu=['liubei']
　　lib.perfectPair.shen_lvbu=['diaochan']
　　lib.perfectPair.shen_diaochan=['lvbu','wangyun']
　　lib.perfectPair.shen_zhenji=['caopi']
　　lib.perfectPair.shen_simayi=['zhangchunhua']
　　lib.perfectPair.shen_luxun=['shen_lvmeng']
　　lib.perfectPair.shen_zhugeliang=['huangyueying']
　　lib.perfectPair.dongcheng=['liuxie','mateng','jiping']
　　lib.perfectPair.dongguirenx=['dongcheng','liuxie']
　　lib.perfectPair.zhongyao=['xunyou','simayi']
　　lib.perfectPair.shen_zhouyu=['sunce','xiaoqiao','huanggai']
　　lib.perfectPair.sp_tenghuanghou=['sunhao']
　　lib.perfectPair.wenqin=['wenyang']
　　lib.perfectPair.baosanniang=['guansuo']
　　lib.perfectPair.mizhu=['mifuren']
　　lib.perfectPair.sunhao=['cenhun']
　　lib.perfectPair.xunchen=['re_yuanshao']
　　lib.perfectPair.zhoucang=['guanyu']
　　lib.perfectPair.sunhuanx=['luxun','shen_luxun']
　　lib.perfectPair.gaolan=['yanwen']
　　lib.perfectPair.zhaoxiang=['guanping','mayunlu','zhaoyun']
　　lib.perfectPair.liubiao=['caifuren','liuqi']
　　lib.perfectPair.yuantanyuanshang=['guotufengji','re_yuanshao']
　　lib.perfectPair.sp_xinpi=['caopi','xinxianying']
　　lib.perfectPair.zhangyi=['mazhong']
　　lib.perfectPair.sp_jianshuo=['sp_liuhong']
　　lib.perfectPair.re_sunluyu=['sunquan','bulianshi']
　　lib.perfectPair.xizhicai=['xunyu','guojia']
　　lib.perfectPair.duji=['xunyu']
　　lib.perfectPair.diy_sppanjun=['jiangfei']
　　lib.perfectPair.panjun=['jiangfei']
　　lib.perfectPair.lvqian=['xiahouyuan']
　　lib.perfectPair.shen_lvmeng=['sunquan']
　　lib.perfectPair.lingju=['lvbu','diaochan']
　　lib.perfectPair.yangwanx=['machao']
　　lib.perfectPair.zhangchangpu=['zhongyao']
　　lib.perfectPair.zhuran=['zhuzhi','luxun']
　　lib.perfectPair.guotufengji=['re_yuanshao']
　　lib.perfectPair.hansui=['mateng','chenggongying']
　　lib.perfectPair.sp_liuhong=['wangrong','hetaihou','zhangrang']
　　lib.perfectPair.zhaotongzhaoguang=['zhaoyun']
　　lib.perfectPair.jsp_guanyu=['caocao']
　　lib.perfectPair.quancong=['sunluban','re_jsp_pangtong']
　　lib.perfectPair.zhangxingcai=['zhangfei','xiahoushi','liushan']
　　lib.perfectPair.sp_liubian=['sp_tangji','hetaihou']
　　lib.perfectPair.sp_sunli=['caorui']
　　lib.perfectPair.sp_sunyi=['xushi','sunce']
　　　　lib.perfectPair.niujin=['caoren']
　　lib.perfectPair.yanyan=['zhangfei']
　　lib.perfectPair.hucheer=['jiaxu','zhangxiu']
　　lib.perfectPair.sunru=['sunce','luxun']
　　lib.perfectPair.caoying=['caocao']
　　lib.perfectPair.zhuzhi=['zhangzhang']
　　lib.perfectPair.guanping=['zhaoxiang','guanyu']
　　lib.perfectPair.caohuax=['caojie','liuxie']
　　lib.perfectPair.caorui=['caopi','zhenji']
　　lib.perfectPair.mazhong=['liubei','zhugeliang','zhaoyun']
　　lib.perfectPair.sunxiu=['dingfeng','sunquan']
　　lib.perfectPair.hejin=['hetaihou']
　　lib.perfectPair.huangwudiex=['huangzhong']
　　lib.perfectPair.guozhao=['caopi']
　　lib.perfectPair.jin_yanghuiyu=['jin_simashi']
　　lib.perfectPair.chendao=['liubei','zhaoyun']
　　lib.perfectPair.simalang=['simayi']
　　lib.perfectPair.guohuanghou=['caorui']
　　lib.perfectPair.lvdai=['jiangqing','lvmeng']
　　lib.perfectPair.dongyun=['jiangfei','zhugeliang','sp_zhugeliang']
　　lib.perfectPair.caozhang=['caocao']
　　lib.perfectPair.sp_zaozhirenjun=['dengai']
　　lib.perfectPair.sundeng=['sunquan','zhoufei']
　　lib.perfectPair.yj_jushou=['re_yuanshao']
　　lib.perfectPair.dongbai=['sp_dongzhuo']
　　lib.perfectPair.re_jsp_pangtong=['zhugejin']
　　lib.perfectPair.xiahoushi=['zhangfei']
　　lib.perfectPair.wuxian=['liubei','wuyi','sp_wuban']
　　lib.perfectPair.wuyi=['zhangyi','sp_wuban']
　　lib.perfectPair.sp_zhaofuren=['sunquan']
　　lib.perfectPair.xiahouba=['xiahouyuan','caoshuang']
　　lib.perfectPair.sunchen=['sp_shanqun']
　　lib.perfectPair.simazhao=['simayi','jin_simayi','jin_zhangchunhua','zhangchunhua','jin_wangyuanji']
　　lib.perfectPair.zhugeke=['zhugejin']
　　lib.perfectPair.sp_zhaofuren=['sunquan']
　　lib.perfectPair.liuyan=['zhanglu','liuzhangx']
　　lib.perfectPair.sp_chenzhi=['huanghao','liushan']
　　lib.perfectPair.sp_huzong=['dingfeng','sunquan']
　　lib.perfectPair.sp_sunben=['wujing','sunce']
　　lib.perfectPair.sp_chentai=['chenqun','guohuai']
　　lib.perfectPair.manchong=['caoren']
　　lib.perfectPair.sp_zhangbu=['sunxiu']
　　lib.perfectPair.sp_ganshen=['lukang']
　　lib.perfectPair.sp_fengfangnv=['yuanshu']
　　lib.perfectPair.sp_yanglan=['jiangwei']
　　lib.perfectPair.sp_baifuren=['simayi','shen_simayi']
　　lib.perfectPair.wangfuzhaolei=['guanyu']
　　lib.perfectPair.shenpei=['re_yuanshao','guotufengji']
　　lib.perfectPair.sp_guanqiujian=['caorui']
　　lib.perfectPair.caochun=['caoren']
　　lib.perfectPair.yl_luzhi=['caiyong','gongsunzan']
　　lib.perfectPair.sp_puyangxing=['sunxiu','sp_zhangbu']
　　lib.perfectPair.sp_goufu=['wangping']
　　lib.perfectPair.dingyuan=['hejin']
　　lib.perfectPair.wuyanx=['lukang']
　　lib.perfectPair.zhangchux=['zhangjiao','zhangbao','sp_zhangliang']
　　lib.perfectPair.zumao=['sunjian']
　　lib.perfectPair.sunjingx=['sunjian']
　　lib.perfectPair.sp_jiaxu=['caopi']
　　lib.perfectPair.caoxiu=['caohong']
　　lib.perfectPair.chengpu=['handang','huanggai']
　　lib.perfectPair.sp_zhangliang=['zhangjiao','zhangbao']
　　lib.perfectPair.mayunlu=['zhaoyun']
　　lib.perfectPair.wangyun=['diaochan']
　　lib.perfectPair.sp_zhangning=['zhangjiao','zhangchux']
　　lib.perfectPair.heqi=['sunce']
　　lib.perfectPair.re_zuoci=['yuji']
　　lib.perfectPair.fazheng=['huangzhong']
　　lib.perfectPair.liyan=['lifeng']
　　lib.perfectPair.caozhi=['zhenji']
　　lib.perfectPair.caozhen=['caopi','haozhao']
　　lib.perfectPair.wangshuang=['haozhao']
　　lib.perfectPair.fuhuanghou=['fuwan']
　　lib.perfectPair.liuxie=['fuhuanghou','caojie','wangrong']
　　lib.perfectPair.guohuai=['zhanghe','sp_sunli']
　　lib.perfectPair.zhugejin=['zhugeke','buzhi']
    lib.perfectPair.lvbu=['gaoshun','chengong','diaochan']
　　lib.perfectPair.zhugeguo=['zhugeliang','huangyueying']
　　lib.perfectPair.xianglangx=['masu','maliang']
    lib.perfectPair.sp_gaoxiang=['weiyan','sp_wuban']
　　lib.perfectPair.xin_liru=['sp_dongzhuo']
　　lib.perfectPair.sp_cuifuren=['liuchen']
    lib.perfectPair.yanwen=['re_yuanshao']
　　lib.perfectPair.jiangwei=['zhugeliang']
　　lib.perfectPair.lingcao=['lingtong']
　　lib.perfectPair.pangde=['caoren']
　　lib.perfectPair.simafux=['simayi']
lib.perfectPair.sunshangxiang=['sunquan','liubei']
    lib.perfectPair.huangyueying=['zhegeliang','sp_zhugeliang']
    lib.perfectPair.bulianshi=['sunquan','sunluban']
　　lib.perfectPair.sunluban=['sunquan','bulianshi']
　　lib.perfectPair.zhangchunhua=['simayi']
　　lib.perfectPair.chenqun=['simayi']
　　lib.perfectPair.caoang=['caocao','dianwei']
　　lib.perfectPair.guanyinping=['guanyu']
}

},precontent:function(){
	_status.forceSupplement=true;
	lib.extensionMenu.extension_国战补充.cleardownload.onclick=function(){
		var list=["diy_spdongzhuo","diy_spliushan","diy_spsimazhao","diy_spzhouyu","fanxing","zhugexiaojun","fangxu","huijin","xuande","jiuqi","canghai","esperanto","gz_yenaisumibang1","gz_yenaisumibang2","heyanx","huoyix","jun_caopi","jun_jin_simayi","jun_liushan","jun_liuxie","jun_re_yuanshao","jun_sp_dongzhuo","jun_sunce","limuzi","luotongx","qiaoguolaox","shen_huatuo","sp_xiangchong","sp_guanping","sp_huangchengyan","wuyanx","sp_wenqin","yangwanx","huangwudiex","dongguirenx","caohuax","zhangchux","panhuanghoux","wenqinx","sp_yanbaihu","huanjiex","sunhuanx","yenaisumibang","yuanfurenx","zhangweix","zhangyix","zhaoangx","zhuxiaoer","spmaliao","sp_diy_yuri","sp_tangji","yitiaoxianyu","sp_wuban","sp_zhangbu","sp_puyangxing","sp_goufu","sp_chenzhi","sp_huzong","sp_sunben","sp_chentai","sp_sunli","sp_zhangliang","sunjingx","aurora","huojunx","liuzhangx","xianglangx","diy_sppanjun","xushux","jipingx","sp_shanqun","sp_chenggongying","sp_liuhong","sp_wucan","sp_gaoxiang","sp_zaozhirenjun","sp_hanlong","sp_baifuren","sp_guanqiujian","sp_yanglan","sp_cuifuren","sp_ganshen","sp_fengfangnv","sp_jianshuo","sp_tenghuanghou","sp_zhaofuren","sp_zhangning","sp_zhangwen","puppet1","puppet2"];
		for(var i=0;i<list.length;i++){
			lib.config['noname_supplement_updateFiles'+list[i]]=false;
			game.saveConfig('noname_supplement_updateFiles'+list[i],lib.config['noname_supplement_updateFiles'+list[i]]);
		}
		alert('【国战补充】下载记录已经清除。将于下一次重启时自动重新下载全部图片素材。');
	}
	var list1=["diy_spdongzhuo","diy_spliushan","diy_spsimazhao","diy_spzhouyu","fanxing","zhugexiaojun","fangxu","huijin","xuande","jiuqi","canghai","esperanto","gz_yenaisumibang1","gz_yenaisumibang2","heyanx","huoyix","jun_caopi","jun_jin_simayi","jun_liushan","jun_liuxie","jun_re_yuanshao","jun_sp_dongzhuo","jun_sunce","limuzi","luotongx","qiaoguolaox","shen_huatuo","sp_xiangchong","sp_guanping","sp_huangchengyan","wuyanx","sp_wenqin","yangwanx","huangwudiex","dongguirenx","caohuax","zhangchux","panhuanghoux","wenqinx","sp_yanbaihu","huanjiex","sunhuanx","yenaisumibang","yuanfurenx","zhangweix","zhangyix","zhaoangx","zhuxiaoer","spmaliao","sp_diy_yuri","sp_tangji","yitiaoxianyu","sp_wuban","sp_zhangbu","sp_puyangxing","sp_goufu","sp_chenzhi","sp_huzong","sp_sunben","sp_chentai","sp_sunli","sp_zhangliang","sunjingx","aurora","huojunx","liuzhangx","xianglangx","diy_sppanjun","xushux","jipingx","sp_shanqun","sp_chenggongying","sp_liuhong","sp_wucan","sp_gaoxiang","sp_zaozhirenjun","sp_hanlong","sp_baifuren","sp_guanqiujian","sp_yanglan","sp_cuifuren","sp_ganshen","sp_fengfangnv","sp_jianshuo","sp_tenghuanghou","sp_zhaofuren","sp_zhangning","sp_zhangwen","puppet1","puppet2"];
	var list2=[];
	for(var i=0;i<list1.length;i++){
		if(lib.config['noname_supplement_updateFiles'+list1[i]]!=true) list2.push(list1[i]);
	}
	var download=function(){
	game.download('https://gitee.com/giraffe-yu/national-war-supplement/raw/master/'+list2[0]+'.jpg','image/character/'+list2[0]+'.jpg',function(){
			lib.config['noname_supplement_updateFiles'+list2[0]]=true;
			game.saveConfig('noname_supplement_updateFiles'+list2[0],lib.config['noname_supplement_updateFiles'+list2[0]]);
			list2.remove(list2[0]);
			if(list2.length>0){
	           if(lib.device=='android'){
		          download();
	           }
			}
			else alert('【国战补充】素材已经下载完成。请重启游戏以加载素材。');
		});
	};
	if(list2.length>0){
	    if(lib.device=='android'){
		   download();
	    }
	}
	else console.log('素材已下载完成，祝您玩的愉快！');
},help:{},config:{"cleardownload":{"name":"<span style='text-decoration: underline'>重新下载图片素材</span>","clear":true}},package:{
    character:{
        character:{
        },
        translate:{
        },
    },
    card:{
        card:{
//斩
			zhan:{
				mode:['guozhan'],
				type:'basic',
				enable:true,
				usable:1,
                audio:"ext:国战补充",
				fullskin:true,
				range:{attack:1},
				selectTarget:1,
				filterTarget:function(card,player,target){
					return target!=player;
				},
				content:function(){
					"step 0"
					var next=target.chooseToRespond({name:'sha'});
					next.set('ai',function(card){
						return 7-get.value(card);
					});
					next.autochoose=lib.filter.autoRespondSha;
					"step 1"
					if(result.bool==false){
						target.loseHp();
					}
				},
				ai:{
					basic:{
						order:9,
						value:3,
						useful:1,
					},
					result:{
						target:-2
					},
					tag:{
						discard:1,
						loseHp:1
					}
				}
			},

//酥
			su:{
				mode:['guozhan'],
				fullskin:true,
				type:'basic',
                audio:"ext:国战补充",
				enable:true,
				chongzhu:function(){
					return !game.countPlayer(function(current){ 
						return current!=_status.currentPhase&&current.isFriendOf(_status.currentPhase);
                    });
				},
				filterTarget:function(card,player,target){
					return target.hp<target.maxHp&&target.isFriendOf(player)&&target!=player;
				},
				content:function(){
					target.recover();
				},
				ai:{
					basic:{
						useful:[7,2],
						value:[7,2],
					},
					order:2.2,
					result:{
						target:2
					},
					tag:{
						recover:1,
					}
				}
			},

//粮
			liang:{
				mode:['guozhan'],
				fullskin:true,
				type:'basic',
				enable:true,
                usable:1,
                audio:"ext:国战补充",
				toself:true,
				filterTarget:function(card,player,target){
					return player==target;
				},
				selectTarget:-1,
				modTarget:true,
				content:function(){
					if(_status.currentPhase==target){
						target.addTempSkill('liang_skill');
					}
                    target.draw();
				},
				ai:{
					order:10,
					result:{
						target:1
					}
				}
			},

//故技重施
			gujichongshix:{
				mode:['guozhan'],
				fullskin:true,
				type:'trick',
                audio:"ext:国战补充",
				global:'g_gujichongshix',
				content:function(){
					if(Array.isArray(player.storage.gujichongshix)){
						player.useCard(player.storage.gujichongshix[0],player.storage.gujichongshix[1]);
					}
				},
				ai:{
					order:1,
					useful:6,
					value:6,
					result:{
						player:function(){
							var cardname=_status.event.cardname;
							if(get.tag({name:cardname},'norepeat')) return 0;
							return 1;
						}
					},
				}
			},


//雪中送炭
			xuezhongsongtan:{
				mode:['guozhan'],
				type:'trick',
				enable:true,
                audio:"ext:国战补充",
				fullskin:true,
                filterTarget:function (card,player,target){
                   return target.countCards('h')<=target.hp;
                },
				content:function(){
					var list=[];
					for(var i=0;i<2;i++){
						list.push(game.createCard('shan'));
					}
					target.gain(list,'gain2');
				},
				ai:{
					order:4.5,
					value:[5,1],
					tag:{
						gain:1,
						norepeat:1
					},
					result:{
						target:function(player,target){
							if(target==player){
								if(!target.hasShan()) return 2;
								var num=target.needsToDiscard(2);
								if(num==0) return 1.5;
								if(num==1) return 1;
								return 0.5;
							}
							else{
								switch(target.countCards('h')){
									case 0:return 2;
									case 1:return 1.5;
									case 2:return 1;
									default:return 0.5;
								}
							}
						}
					}
				}
			},
//妙手回春
			miaoshouhuichun:{
				mode:['guozhan'],
				type:'trick',
				enable:true,
                audio:"ext:国战补充",
				fullskin:true,
                filterTarget:function(card,player,target){
                   return !target.hasViceCharacter();
                },
				content:function(){
					'step 0'
					var list=[];
					for(var i=0;i<_status.characterlist.length;i++){
						var info=lib.character[_status.characterlist[i]];
						if(info[4]&&info[4].contains('jun')) continue;
						list.push(_status.characterlist[i]);
					}
                    var players=game.players.concat(game.dead);
                    for(var i=0;i<players.length;i++){
                        list.remove(players[i].name);
                        list.remove(players[i].name1);
                        list.remove(players[i].name2);
                    }
                    var dialog=ui.create.dialog('将士兵替换为一名角色','hidden');
                    dialog.add([list.randomGets(3),'character']);
                    player.chooseButton(dialog,true).ai=function(button){
                       return get.rank(button.link,true);
                    };	
					'step 1'
				    var hp=target.hp;
				    var maxhp=target.maxHp;
				    var group=target.group;
				    var identity=target.identity;
　　　　　　　　    target.init(target.name,result.links[0]);
			     	target.hp=hp;
			     	target.maxHp=maxhp;
			     	target.identity=identity;
			     	target.group=group;
				    target.update();
				},
				ai:{
					value:6,
					useful:[6,1],
					result:{
                        target:function(player,target){
                            if(!target.isFriendOf(player)) return 0;
                            return 1;
                        },
					},
					order:10,
				}
			},

//决胜千里
			jueshengqianli:{
				fullskin:true,
				type:'trick',
				enable:true,
                audio:"ext:国战补充",
				mode:['guozhan'],
				global:'g_jueshengqianli',
				filterTarget:function(card,player,target){
					return target!=player;
				},
				content:function(){
					player.storage.jueshengqianli=target;
					player.addTempSkill('jueshengqianli_skill');
				},
				ai:{
					tag:{
						norepeat:1
					},
					value:4,
					wuxie:function(){
						return 0;
					},
					useful:[2,1],
					basic:{
						order:7,
					},
					result:{
						player:function(player,target){
							if(get.attitude(player,target)<0){
								if(get.distance(player,target)>1) return 1;
								return 0.6;
							}
							return 0.3;
						}
					}
				},
			},
//安营扎寨
			anyingzhazhai:{
				fullskin:true,
				mode:['guozhan'],
                audio:"ext:国战补充",
				enable:true,
				type:'trick',
				selectTarget:-1,
				filterTarget:function(card,player,target){
					return target==player;
				},
				modTarget:true,
				content:function(){
					'step 0'
					var cards=target.getCards('h');
					if(cards.length){
						target.lose(cards)._triggered=null;
					}
					event.num=1+cards.length;
					'step 1'
					var cards=[];
                    var list=get.inpile('basic');
					list.remove('du');
					if(list.length){
						for(var i=0;i<event.num;i++){
							cards.push(game.createCard(list.randomGet()));
						}
						target.directgain(cards);
					}
				},
				ai:{
					order:1,
					result:{
						target:function(player,target){
							var hs=target.getCards('h');
							for(var i=0;i<hs.length;i++){
								if(get.type(hs[i])!='basic'&&get.useful(hs[i])>=6){
									return 0;
								}
							}
							return 1;
						}
					}
				}
			},

//择木而栖
			zemuerqi:{
				fullskin:true,
				type:'trick',
				mode:['guozhan'],
				enable:true,
                audio:"ext:国战补充",
				toself:true,
				filterTarget:function(card,player,target){
					return target==player&&!target.hasSkill('zemuerqi_skill')&&target.identity!='unknown';
				},
				modTarget:true,
				content:function(){
					'step 0'
    target.chooseControl('魏','蜀','吴','群','晋').set('ai',function(event){
                  var n=[1,2,3,4].randomGet();
                  if(n==1) return '吴';
                  if(n==2) return '魏';       
                  if(n==3) return '群';  
                  if(n==4) return '蜀';    
                  });
					'step 1'
					if(result.control=='魏'){
						target.modifyGroup('wei');
					}
					if(result.control=='蜀'){
						target.modifyGroup('shu');
					}
					if(result.control=='吴'){
						target.modifyGroup('wu');
					}
					if(result.control=='群'){
						target.modifyGroup('qun');
					}
					if(result.control=='晋'){
						target.modifyGroup('jin');
					}
					'step 2'
					target.draw(game.countPlayer(function(current){
						return current.group==target.group&&current!=target;
					}));
					'step 3'
					target.addSkill('zemuerqi_skill');
				},
				selectTarget:-1,
				ai:{
					order:7,
					useful:5,
					value:5,
					result:{
                        target:function(player,target){
                            if(player.isMajor()) return 0;
                            return 1;
                        },
					}
				}
			},

//洞察先机
			dongchaxianji:{
				fullskin:true,
				type:'trick',
				mode:['guozhan'],
				enable:true,
                audio:"ext:国战补充",
				toself:true,
				filterTarget:function(card,player,target){
					return target==player;
				},
				modTarget:true,
				content:function(){
					'step 0'
					var choice;
					if(target.countCards('h','shan')==0||target.countCards('h','sha')==0||target.hp<=1){
						choice='basic';
					}
					else{
						var e2=target.getEquip(2);
						var e3=target.getEquip(3);
						if((e2&&e3)||((e2||e3)&&target.needsToDiscard()<=1)||Math.random()<0.5){
							choice='trick';
						}
						else{
							choice='equip';
						}
					}
					target.chooseControl('basic','trick','equip',function(){
						return choice;
					}).set('prompt','选择一种卡牌类型');
					'step 1'
					var list=get.inpile(result.control,'trick');
					list=list.randomGets(3);
					for(var i=0;i<list.length;i++){
						list[i]=[get.translation(result.control),'',list[i]];
					}
					var dialog=ui.create.dialog('选择一张加入你的手牌',[list,'vcard'],'hidden');
					target.chooseButton(dialog,true).ai=function(button){
						return get.value({name:button.link[2]});
					};
					'step 2'
					if(result.buttons){
						target.gain(game.createCard(result.buttons[0].link[2]),'draw');
					}
				},
				selectTarget:-1,
				ai:{
					order:7,
					value:7,
					useful:4,
					result:{
						target:1
					}
				}
			},
			yangjingxurui:{
				fullskin:true,
				type:'delay',
                audio:"ext:国战补充",
				mode:['guozhan'],
				filterTarget:function(card,player,target){
					return (lib.filter.judge(card,player,target)&&player!=target);
				},
				judge:function(card){
					return get.suit(card)=='diamond'?0:2;
				},
				effect:function(){
					if(result.bool){
player.addTempSkill('yangjingxurui_skip',{player:'phaseAfter'});
					}else player.addTempSkill('yangjingxurui_put',{player:'phaseAfter'});
				},
				ai:{
					basic:{
						order:1,
						useful:1,
						value:8,
					},
					result:{
						target:function(player,target){
							var num=target.countCards('h')-target.hp-2;
							if(num>-1) return 0.01;
							if(target.hp<3) num++;
							if(target.isTurnedOver()) num/=2;
							return 1.5/Math.sqrt(target.countCards('h')+1);
						}
					},
					tag:{
						skip:'phaseDiscard'
					}
				}
			},
			huanmeng:{
				fullskin:true,
				audio:true,
				mode:['guozhan'],
				type:'equip',
				subtype:'equip3',
				skills:['huanmeng_skill'],
				nomod:true,
				nopower:true,
				unique:true,
				ai:{
					equipValue:9
				}
			},
			nanmanzhanxiang:{
				fullskin:true,
				audio:true,
				mode:['guozhan'],
				type:'equip',
				subtype:'equip4',
　　　　　　　　distance:{globalFrom:-1},
				skills:['nanmanzhanxiang_skill'],
				nomod:true,
				nopower:true,
				unique:true,
				ai:{
					equipValue:4
				}
			},
			yumianxiaoyao:{
				fullskin:true,
				audio:true,
				mode:['guozhan'],
				type:'equip',
				subtype:'equip4',
				skills:['yumianxiaoyao_skill'],
				nomod:true,
				nopower:true,
				unique:true,
				ai:{
					equipValue:8
				}
			},
			jiangjunling:{
				audio:true,
				mode:['guozhan'],
				fullskin:true,
				type:'equip',
				subtype:'equip5',
				nomod:true,
				nopower:true,
				unique:true,
				skills:['jiangjunling_skill'],
				ai:{
					equipValue:function(card,player){
						if(player.hasSkill('gzjuebi')) return 8;
						if(game.hasPlayer(function(current){
							return current.hasSkill('gzjuebi')&&get.attitude(player,current)<=0;
						})){
							return 0;
						}
						return 7;
					},
					basic:{
						equipValue:6.5
					}
				}
			},

				liulongyuling:{
				    mode:['guozhan'],
 					fullskin:true,
 					type:"equip",
 					subtype:"equip2",
 					onLose:function(){
            for(var i=0;i<game.dead.length;i++){
                if(game.dead[i].group==player.group){
 				player.storage.liulongyuling++;
               }
            }
					if(player.identity=='ye'){
						player.draw(2);
					}
					else{
　　　player.draw(Math.max(player.storage.liulongyuling,1));		
				player.storage.liulongyuling=0;
					  }
					},
 					onEquip:function(){
				player.storage.liulongyuling=0;
 					},
 					skills:['liulongyuling_skill'],
 					ai:{
 						basic:{
 						equipValue:7
		 					}
	 					}
 					},
			yuanyang:{
				mode:['guozhan'],
				fullskin:true,
				type:'equip',
				subtype:'equip1',
				nomod:true,
				nopower:true,
				unique:true,
				distance:{attackFrom:-1},
				skills:['yuanyang1','yuanyang2'],
				ai:{
					basic:{
						equipValue:6
					}
				}
			},
			wuhuajian:{
				mode:['guozhan'],
				fullskin:true,
				type:'equip',
				subtype:'equip1',
				nomod:true,
				nopower:true,
				unique:true,
				distance:{attackFrom:-1},
				skills:['wuhuajian_skill'],
				ai:{
					basic:{
						equipValue:4.5
					}
				}
			},
			supo_equip1:{
				fullskin:true,
				type:'equip',
				subtype:'equip1',
			},
			supo_equip2:{
				fullskin:true,
				type:'equip',
				subtype:'equip2',
			},
			supo_equip5:{
				fullskin:true,
				type:'equip',
				subtype:'equip5',
			},
			supo_equip3:{
				fullskin:true,
				type:'equip',
				subtype:'equip3',
			},
			supo_equip4:{
				fullskin:true,
				type:'equip',
				subtype:'equip4',
			},

//阵法卡牌
			fengshizhenx:{
				type:'zhenfa',
				chongzhu:true,
				fullskin:true,
				enable:true,
				filterTarget:function(card,player,target){
					return target.sieged();
				},
				selectTarget:-1,
				content:function(){
					target.addTempSkill('gztuwei',{player:'phaseEnd'});
					target.popup('gztuwei');
					game.log(target,'获得了技能','【突围】');
				},
				mode:['guozhan'],
				ai:{
					order:7,
					result:{
						target:2,
					},
				}
			},
           zhonghuangzhenx:{
                type:"zhenfa",
				fullskin:true,
                chongzhu:true,
                enable:true,
                enable:function (){
        return game.players.length>2;
    },
                filterTarget:function (card,player,target){
        return player.next==target||player.previous==target;
    },
                content:function (){
        game.swapSeat(player,target);
    },
                ai:{
                    basic:{
                        order:7,
                    },
                    result:{
                        target:function (player,target){
                if(player.next==target) return -1;
                if(player.previous==target) return 1;
            },
                    },
                },
                mode:["guozhan"],
                selectTarget:1,
            },
			pozhenjuex:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:true,
				notarget:true,
				content:function(){
					var targets=game.filterPlayer();
					var n=targets.length;
					while(n--){
						game.swapSeat(targets.randomGet(),targets.randomGet());
					}
				},
				mode:['guozhan'],
				ai:{
					order:8,
					result:{
						player:1,
					},
				}
			},
			changshezhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:function(card,player){
					if(player.inline()) return true;
					if(player.identity=='unknown'||player.identity=='ye') return false;
					return game.hasPlayer(function(current){
						return current!=player&&current.isFriendOf(player);
					});
				},
				notarget:true,
				content:function(){
					if(player.inline()){
						var targets=game.filterPlayer(function(current){
							return player.inline(current);
						});
						player.line(targets);
						game.asyncDraw(targets);
					}
					else if(player.getNext()){
						var list=game.filterPlayer(function(current){
							return current!=player&&current.isFriendOf(player);
						});
						if(list.length){
							list.sort(function(a,b){
								return get.distance(player,a,'absolute')-get.distance(player,b,'absolute');
							});
							player.line(list[0]);
							game.swapSeat(list[0],player.getNext(),true,true);
						}
					}
				},
				mode:['guozhan'],
				ai:{
					order:6.5,
					result:{
						player:1,
					},
					tag:{
						draw:1
					}
				}
			},
			tianfuzhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:function(){
					return game.hasPlayer(function(current){
						return current.isMajor();
					});
				},
				filterTarget:function(card,player,target){
					return target.isMajor()&&target.countCards('he')>0;
				},
				selectTarget:-1,
				content:function(){
					target.chooseToDiscard('he',true).delay=false;
				},
				mode:['guozhan'],
				ai:{
					order:7,
					result:{
						target:-1,
					},
					tag:{
						discard:1
					}
				}
			},
			dizaizhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:function(){
					return game.hasPlayer(function(current){
						return current.isNotMajor();
					});
				},
				filterTarget:function(card,player,target){
					return target.isNotMajor();
				},
				selectTarget:-1,
				content:function(){
					target.draw(false);
					target.$draw();
				},
				mode:['guozhan'],
				ai:{
					order:7,
					result:{
						target:1,
					},
					tag:{
						draw:1
					}
				}
			},
			fengyangzhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:true,
				filterTarget:function(card,player,target){
					return target.sieged();
				},
				selectTarget:-1,
				content:function(){
					target.addTempSkill('feiying',{player:'damageAfter'});
					target.popup('feiying');
					game.log(target,'获得了技能','【飞影】');
				},
				mode:['guozhan'],
				ai:{
					order:7,
					result:{
						target:2,
					},
				}
			},
			yunchuizhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:true,
				filterTarget:function(card,player,target){
					return target.siege();
				},
				selectTarget:-1,
				content:function(){
					target.addTempSkill('wushuang',{source:'damageAfter'});
					target.popup('wushuang');
					game.log(target,'获得了技能','【无双】');
				},
				mode:['guozhan'],
				ai:{
					order:7,
					result:{
						target:2,
					},
				}
			},
			qixingzhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:function(card,player){
					return player.siege()||player.sieged();
				},
				filterTarget:function(card,player,target){
					return target==player;
				},
				selectTarget:-1,
				content:function(){
					'step 0'
					event.targets=game.filterPlayer(function(current){
						return current.siege(player);
					});
					'step 1'
					if(event.targets.length){
						var current=event.targets.shift();
						player.line(current,'green');
						player.discardPlayerCard(current,true);
						event.redo();
					}
					'step 2'
					var card={name:'sha',isCard:true};
					var list=game.filterPlayer(function(current){
						return current.siege(player)&&player.canUse(card,current);
					});
					if(list.length){
						player.useCard(card,list,false);
					}
				},
				mode:['guozhan'],
				ai:{
					order:7,
					result:{
						target:1,
					},
				}
			},
			shepanzhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:function(card,player){
					if(player.identity=='unknown'||player.identity=='ye') return false;
					if(get.population(player.identity)<=1) return false;
					return game.hasPlayer(function(current){
						return current!=player&&current.identity==player.identity&&!player.inline(current);
					});
				},
				notarget:true,
				content:function(){
					var targets=game.filterPlayer(function(current){
						return current.identity==player.identity;
					});
					targets.sortBySeat();
					for(var i=1;i<targets.length;i++){
						game.swapSeat(targets[i],targets[i-1].next,false);
					}
					game.log(get.translation(player.identity)+'势力角色摆成了蛇蟠阵')
				},
				mode:['guozhan'],
				ai:{
					order:7,
					result:{
						player:1,
					},
				}
			},
			longfeizhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:function(card,player){
					return player.next.siege(player);
				},
				filterTarget:function(card,player,target){
					if(target.getCards('he').length==0) return false;
					return target==player.next||target==player.previous;
				},
				selectTarget:-1,
				content:function(){
					"step 0"
					player.choosePlayerCard(target,'he',true);
					"step 1"
					target.discard(result.buttons[0].link);
					"step 2"
					if(target==targets[targets.length-1]){
						player.draw();
					}
				},
				mode:['guozhan'],
				ai:{
					order:10,
					result:{
						target:-1,
						player:1
					},
				}
			},
			huyizhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:function(card,player){
					return player.siege(player.next)||player.siege(player.previous);
				},
				filterTarget:function(card,player,target){
					return player.siege(target);
				},
				selectTarget:-1,
				content:function(){
					"step 0"
					player.chooseCard('将一张非基本牌当作杀对'+get.translation(target)+'使用','he',function(card){
						return get.type(card)!='basic';
					}).ai=function(card){
						if(get.effect(target,{name:'sha'},player,player)>0){
							return 6-get.value(card);
						}
						return 0;
					};
					"step 1"
					if(result.bool){
						player.useCard({name:'sha',isCard:true},result.cards,target,false);
					}
					"step 2"
					if(target==player.next) event.player2=player.next.next;
					else event.player2=player.previous.previous;
					event.player2.chooseCard('将一张非基本牌当作杀对'+get.translation(target)+'使用','he',function(card){
						return get.type(card)!='basic';
					}).ai=function(card){
						if(get.effect(target,{name:'sha'},event.player2,event.player2)>0){
							return 6-get.value(card);
						}
						return 0;
					};
					"step 3"
					if(result.bool){
						event.player2.useCard({name:'sha'},result.cards,target,false);
					}
				},
				mode:['guozhan'],
				ai:{
					order:7,
					result:{
						target:-2,
					},
				}
			},
			niaoxiangzhenx:{
				type:'zhenfa',
				fullskin:true,
				chongzhu:true,
				enable:true,
				filterTarget:function(card,player,target){
					if(player.identity==target.identity) return false;
					if(target.identity=='unknown'||target.identity=='ye') return false;
					return target.identity==target.next.identity||target.identity==target.previous.identity
				},
				selectTarget:-1,
				content:function(){
					"step 0"
					var next=target.chooseToRespond({name:'shan'});
					next.ai=function(card){
						if(get.damageEffect(target,player,target)>=0) return 0;
						return 1;
					};
					next.autochoose=lib.filter.autoRespondShan;
					"step 1"
					if(result.bool==false){
						target.damage();
					}
				},
				ai:{
					basic:{
						order:9,
						useful:1
					},
					result:{
						target:-1.5,
					},
					tag:{
						respond:1,
						respondShan:1,
						damage:1,
					}
				},
				mode:['guozhan'],
			},
			menghuqinlong:{
				mode:['guozhan'],
				fullskin:true,
				type:'equip',
				subtype:'equip1',
				nomod:true,
				nopower:true,
				unique:true,
				distance:{attackFrom:-1},
				skills:['menghuqinlong_skill'],
				ai:{
					basic:{
						equipValue:6
					}
				}
			},

			xuwangzhimian:{
				type:'equip',
				fullskin:true,
				subtype:'equip5',
				mode:['guozhan'],
				skills:['xuwangzhimian'],
				nomod:true,
				nopower:true,
				unique:true,
				ai:{
					equipValue:6
				}
			},

　　　　},
        translate:{
			zhenfa:'阵法',
			changshezhenx:'长蛇阵',
			pozhenjuex:'破阵决',
			tianfuzhenx:'天覆阵',
			dizaizhenx:'地载阵',
			fengyangzhenx:'风扬阵',
			yunchuizhenx:'云垂阵',
			qixingzhenx:'七星阵',
			shepanzhenx:'蛇蟠阵',
			longfeizhenx:'龙飞阵',
			huyizhenx:'虎翼阵',
			niaoxiangzhenx:'鸟翔阵',
			zhonghuangzhenx:'中黄阵',
			fengshizhenx:'锋矢阵',
			zhonghuangzhenx_info:'你可以与相邻角色交换位置',
			fengshizhenx_info:'令所有被围攻角色获得技能【突围】，直到其回合结束',
			niaoxiangzhenx_info:'令所有非你阵营的队列的角色今次打出一张【闪】，或者受到一点伤害',
			qixingzhenx_info:'弃置所有围攻你的角色各一张牌，然后视为对所有你围攻的角色使用一张不计入出杀次数的【杀】',
			longfeizhenx_info:'弃置围攻你的角色各一张牌，然后摸一张牌',
			shepanzhenx_info:'令我方所有角色进入队列状态',
		    yunchuizhenx_info:'令所有围攻角色获得技能〖无双〗，直到其首次造成伤害',
			fengyangzhenx_info:'令所有被围攻角色获得技能〖飞影〗，直到其首次受到伤害',
			dizaizhenx_info:'所有小势力角色摸一张牌',
			changshezhenx_info:'若你处于队列中，与你同一队列的所有角色摸一张牌，否则将与你逆时针距离最近的同势力角色移至你下家',
　　　　　　huyizhenx_info:'你与另一围攻角色可以将一张非基本牌当作【杀】对被围攻角色使用（不计入使用次数）',
			pozhenjuex_info:'将所有角色的顺序随机重排',
			tianfuzhenx_info:'所有大势力角色弃置一张牌',
			yuanyang:'鸳鸯剑',
			yuanyang1:'鸳鸯剑',
			yuanyang2:'鸳鸯剑',
			yuanyang_info:'◆每回合限3次，当你使用的锦囊牌造成伤害时，你可以摸一张牌；<br>◆你使用【杀】杀死一名角色后，若你所属的势力是全场最少的（或之一），你可令该角色的使用者选择是否从未使用的武将牌中选择一张与你势力相同的武将牌重新加入游戏',
			wuhuajian:'无华剑',
			wuhuajian_info:'当你杀死一名角色时，你可以选择回复一点体力或者获得其所有的牌',
			wuhuajian_skill_info:'当你杀死一名角色时，你可以选择回复一点体力或者获得其所有的牌',
			menghuqinlong:'猛虎擒龙',
			menghuqinlong_info:'每当你使用（指定目标后）一张【决斗】或红色的【杀】时，你可以摸一张牌。',
			menghuqinlong_skill_info:'每当你使用（指定目标后）一张【决斗】或红色的【杀】时，你可以摸一张牌。',
			xuwangzhimian:'虚妄之冕',
			xuwangzhimian_disable:'虚妄',
			xuwangzhimian_info:'锁定技，你的手牌上限+2；其它角色于其回合内第二次使用锦囊牌指定你为目标时，取消之',

　　　　　　liulongyuling_bg:'令',
　　　　　　liulongyuling:'留龙玉令',
            liulongyuling_info:'◆你防止锦囊牌造成的伤害；<br>◆锁定技，当你失去装备区的【留龙玉令】时你摸X张牌（X为与你势力相同的已死亡角色数且至少为1；当你为“野心家时”，X的值为2）',

　　　　　　jiangjunling:'将军令',
            jiangjunling_info:'出牌阶段限一次，你可以失去一点体力（当体力为1时，可无损拼点），令两名其他角色拼点：拼点赢的角色视为对没赢的另一名角色使用一张【杀】。',
			yumianxiaoyao:'玉面逍遥',
　　　　　　yumianxiaoyao_info:'准备阶段，你可以重铸一张手牌，令你本回合计算与其他角色的距离时-X/3（X为该牌点数，向下取整）',
			yangjingxurui:"养精蓄锐",
			yangjingxurui_info:"出牌阶段，对一名其他角色使用。若判定结果不为方片，则跳过弃牌阶段，否则结束阶段一张新的【养精蓄锐】将置于其判定区内。",
			xuezhongsongtan:'雪中送炭',
			xuezhongsongtan_info:'出牌阶段对一名手牌数不大于体力值的角色使用，目标获得两张【闪】',
			liang:'粮',
　　　　　　liang_info:'出牌阶段限一次，对自己使用，摸一张牌，本回合手牌上限+2。',
			zhan:'斩',
			zhan_info:'出牌阶段，对攻击范围内的一名角色使用，令其打出一张【杀】或失去一点体力。',
			su:'酥',
			su_info:'出牌阶段，你可以令一名其他友方角色回复1点体力，若场上没有友方角色，你可以重铸之。',
			gujichongshix:'故技重施',
　　　　　　gujichongshix_info:'出牌阶段内限用一次，当你使用一张基本牌或普通锦囊牌后使用，令此牌再结算一次。',
			zemuerqi:'择木而栖',
			zemuerqi_info:'每局游戏限一次，出牌阶段，对你使用，你将势力更改为你选择的另一个势力，然后你摸X张牌（X为该势力的其他角色数），若如此做，当该势力成为唯一的大势力时，你成为野心家。',
			dongchaxianji:'洞察先机',
			dongchaxianji_info:'出牌阶段对自己使用，选择一种卡牌类别，发现一张该类别的卡牌',
			anyingzhazhai:'安营扎寨',
			anyingzhazhai_info:'出牌阶段对自己使用，将所有手牌（含此张）替换为基本牌',
			jueshengqianli:'决胜千里',
			jueshengqianli_info:'出牌阶段，对一名其他角色使用，本回合内对其使用卡牌无视距离，结算后摸一张牌',
			miaoshouhuichun:'妙手回春',
			miaoshouhuichun_info:'出牌阶段，对一名没有副将的角色使用。你随机观看5张武将牌，选择一张为其增补副将。',
			huanmeng:'幻梦',
　　　　　　huanmeng_info:'出牌阶段结束时，你可选择：1.摸一张牌。2.将一张牌置于武将牌上，并于回合结束后获得此牌。',
			nanmanzhanxiang:'南蛮战象',
　　　　　　nanmanzhanxiang_info:'锁定技，你的进攻距离+1，【南蛮入侵】对你无效。',
			supo_equip4:'绝尘金戈',
			supo_equip4_info:'没什么实际作用，据说以前是神曹操的坐骑',
			supo_equip3:'七彩神鹿',
			supo_equip3_info:'没什么实际作用，据说以前是神陆逊的坐骑。',
			supo_equip1:'和光塵尾',
			supo_equip1_info:'没什么实际作用，据说以前是贾诩的武器。',
			supo_equip2:'七星法袍',
			supo_equip2_info:'没什么实际作用，据说以前是神诸葛的防具。',
			supo_equip5:'幻梦之书',
			supo_equip5_info:'没什么实际作用，据说以前是来自西方的宝物。',
　　　　},
        list:[],
　　},
    skill:{
        skill:{
//突围阵
			gztuwei:{
				audio:'xianzhen',
				mod:{
					cardUsable:function (card,player,num){
						if(player.sieged()&&typeof num=='number') return num+100;
					},
					playerEnabled:function (card,player,target){
						if(player.sieged()&&!target.siege(player)){
							var num=player.getCardUsable(card)-100;
							if(num<=0) return false;
						}
					},
				},
			},
//粮
			liang_skill:{
				mod:{
					maxHandcard:function(player,num){
						return num+2;
					}
				}
			},
//择木而栖
            zemuerqi_skill:{
	            trigger:{
					global:['dieAfter','showCharacterAfter','useSkillAfter','useCardAfter','phaseEnd'],
				}, 
　　　　　　　　forced:true,
                audio:"baiyin",
				filter:function(event,player){
					return player.isMajor(true);
				},
                content:function(){
					player.modifyGroup('ye');           
				},
            },

//故技重施
			g_gujichongshix:{
				trigger:{player:'useCardAfter'},
				direct:true,
				filter:function(event,player){
					if(event.parent.name=='g_gujichongshix') return false;
					if(_status.currentPhase!=player) return false;
					if(event.parent.parent.name!='phaseUse') return false;
					if(!event.targets||!event.card) return false;
					if(event.card.name=='gujichongshix') return false;
					if(player.hasSkill('gujichongshix2')) return false;
					if(get.info(event.card).complexTarget) return false;
					if(!lib.filter.cardEnabled(event.card,player,event.parent)) return false;
					var type=get.type(event.card);
					if(type!='basic'&&type!='trick') return false;
					var card=game.createCard(event.card.name,event.card.suit,event.card.number,event.card.nature);
					var targets=event._targets||event.targets;
					for(var i=0;i<targets.length;i++){
						if(!targets[i].isIn()) return false;
						if(!player.canUse({name:event.card.name},targets[i],false,false)){
							return false;
						}
					}
					if(player.hasCard('gujichongshix')) return true;
					return false;
				},
				content:function(){
					'step 0'
					var card=game.createCard(trigger.card.name,trigger.card.suit,trigger.card.number,trigger.card.nature);
					player.storage.gujichongshix=[card,(trigger._targets||trigger.targets).slice(0)];
					player.chooseToUse('是否使用故技重施？',function(card,player){
						if(card.name!='gujichongshix') return false;
						return lib.filter.cardEnabled(card,player,'forceEnable');
					},trigger.player,-1).set('cardname',trigger.card.name).targetRequired=true;
					'step 1'
					if(result.bool){
						player.addTempSkill('gujichongshix2');
					}
					delete player.storage.gujichongshix;
				}
			},
			gujichongshix2:{},

//决胜千里
			jueshengqianli_skill:{
				mod:{
					targetInRange:function(card,player,target,now){
						if(player.storage.jueshengqianli==target) return true;
					},
				},
				mark:true,
				intro:{
					content:'player'
				},
				onremove:true,
			},
			g_jueshengqianli:{
				trigger:{player:'useCardAfter'},
				forced:true,
				popup:false,
				filter:function(event,player){
					return event.card.name=='jueshengqianli';
				},
				content:function(){
					player.draw();
				}
			},

//养精蓄锐
			yangjingxurui_skip:{
　　　　　　　　audio:'tuntian',
                forced:true,
				trigger:{
　　　　　　　　    player:"phaseDiscardBefore",
　　　　　　　　},
				content:function(){
                    trigger.cancel();
				}
			},
			yangjingxurui_put:{
                forced:true,
				trigger:{player:"phaseJieshuBegin"},
				content:function(){
                   var card=game.createCard('yangjingxurui');
                   player.addJudge(card);
                   player.$draw(card);
                   game.delay();                    
				}
			},
//南蛮战象
			nanmanzhanxiang_skill:{
				trigger:{target:'useCardToBefore'},
				equipSkill:true,
				audio:'huoshou',
				forced:true,
				filter:function(event,player){
					return event.card.name=='nanman';
				},
				content:function(){
					trigger.cancel();
				},
			},
//幻梦
			huanmeng_skill:{
				trigger:{player:'phaseUseEnd'},
				equipSkill:true,
				direct:true,
				content:function(){
					'step 0'
					var list=['摸一张牌'];
					if(player.countCards('he')>1) list.push('将一张牌置于武将牌上，于回合结束后获得之');
					player.chooseControl('cancel2').set('prompt',get.prompt('huanmeng_skill')).set('choiceList',list).set('ai',function(){
					 var player=_status.event.player;
					 if(player.countCards('e',function(card){
					  return card.name!='tengjia'&&get.value(card)<=0;
					 })) return 1;
					 if(!player.needsToDiscard()) return 0;
					 return 1;
					});
					'step 1'
					if(result.control=='cancel2'){
					 event.finish();return;
					}
					player.logSkill('huanmeng_skill');
					if(result.index==0){
					 player.draw();
					 event.finish();
					}
					else{
					 player.chooseCard('he',true,function(card,player){
					  return card!=player.getEquip(5);
					 }).set('ai',function(card){
					  if(get.position(card)=='e'&&get.value(card)<=0) return 10;
					  return (get.position(card)=='h'?2:1)*-get.value(card);
					 });
					}
					'step 2'
					player.addSkill('huanmeng_skill2');
					player.lose(result.cards,ui.special,'toStorage');
					player.markAuto('huanmeng_skill2',result.cards);
				},
			},
			huanmeng_skill2:{
				trigger:{player:'phaseEnd'},
				equipSkill:true,
				forced:true,
				popup:false,
				content:function(){
					player.gain(player.getStorage('huanmeng_skill2'),'gain2','log');
					player.storage.huanmeng_skill2.length=0;
					player.removeSkill('huanmeng_skill2');
				},
				intro:{content:'cards'},
			},


//将军令
            jiangjunling_skill:{
				equipSkill:true,
                audio:"olxueyi",
                enable:"phaseUse",
                usable:1,
                filterTarget:function(card,player,target){
                 if(player==target) return false;
                 return target.countCards('h')>0;
                },
                selectTarget:2,
                multitarget:true,
                multiline:true,
                filter:function(event,player){
					return game.countPlayer(function(current){
						return current!=player;
					})>1;
                },
                content:function(){
        "step 0"
		if(player.hp>1){
           player.loseHp();
		}
		else{
		  event.goto(1);
		}
        "step 1"
        if(targets[0].countCards('h')&&targets[1].countCards('h')){
            targets[0].chooseToCompare(targets[1]);
        }
        else{
            event.finish();
        }
        "step 2"
					if(result.bool){
	targets[0].useCard({name:'sha',isCard:true},targets[1],false);
					}
					else if(!result.tie){
	targets[1].useCard({name:'sha',isCard:true},targets[0],false);
					}
			        else event.finish();
　　},
　　				ai:{
　　					order:8,
　　					result:{
                          player:function(player){
                            if(player.isHealthy()) return 6;
                            if(player.maxHp>=4&&player.hp>=3) return 4;
                            if(player.hp==1) return 10;
                               return 0;
                            },
　　						target:function(player,target){
　　							if(ui.selected.targets.length==0){
　　								return -3;
　　							}
　　							else{
　　								return get.effect(target,{name:'sha'},ui.selected.targets[0],target);
　　							}
　　						}
　　					},
　　					expose:0.4,
　　				}
            },

//留龙玉令
			liulongyuling_skill:{
				trigger:{player:'damageBefore'},
				forced:true,
				priority:15,
				filter:function(event,player){
					if(event.source&&event.source.hasSkillTag('unequip',false,{
						name:event.card?event.card.name:null,
						target:player,
						card:event.card
					})) return false;
					return get.type(event.card,'trick')=='trick';
				},
				content:function(){
					trigger.cancel();
				},
				ai:{
					notrick:true,
					effect:{
						target:function(card,player,target,current){
							if(player.hasSkillTag('unequip',false,{
								name:card?card.name:null,
								target:player,
								card:card
							})) return;
							if(get.type(card)=='trick'&&get.tag(card,'damage')){
								return 'zeroplayertarget';
							}
						},
					}
				}
			},

//虚妄之冕
			xuwangzhimian:{
				mod:{
					maxHandcard:function(player,num){
						return num+2;
					}
				},
				trigger:{target:'useCardToAfter'},
				forced:true,
				filter:function(event,player){
					return get.type(event.card,'trick')=='trick'&&_status.currentPhase==event.player&&event.player!=player;
				},
				content:function(){
					player.addTempSkill('xuwangzhimian_disable');
				}
			},
			xuwangzhimian_disable:{
				audio:'renjie',
				trigger:{target:'useCardToBefore'},
				forced:true,
				priority:15,
				onremove:true,
				filter:function(event,player){
					return (event.player==_status.currentPhase&&get.type(event.card,'trick')=='trick');
				},
				content:function(){
					trigger.cancel();
				},
				ai:{
					effect:{
						target:function(card,player,target,current){
									if(get.type(card,'trick')=='trick'&&_status.currentPhase==player) return 'zeroplayertarget';
						}
					}
				}
	},

//猛虎擒龙
			menghuqinlong_skill:{
				audio:'jiang',
				trigger:{
					player:'useCardToPlayered',
				},
				frequent:true,
				filter:function(event,player){
	if(!(event.card.name=='juedou'||(event.card.name=='sha'&&get.color(event.card)=='red'))) return false;
					return player==event.target||event.getParent().triggeredTargets3.length==1;
				},
				direct:true,
				content:function(){
					player.draw();
				},
				ai:{
					effect:{
						target:function(card,player,target){
							if(card.name=='sha'&&get.color(card)=='red') return [1,0.6];
						},
						player:function(card,player,target){
							if(card.name=='sha'&&get.color(card)=='red') return [1,1];
						}
					}
				}
			},

//无华剑
			wuhuajian_skill:{
                audio:'xingshang',
				trigger:{global:'die'},
				filter:function(event,player){
					return player==event.source&&(player.isDamaged()||event.player.countCards('he')>0);
				},
				direct:true,
				content:function(){
					"step 0"
					var choice=[];
					if(player.isDamaged()) choice.push('回复体力');
					if(trigger.player.countCards('he')) choice.push('获得牌');
					choice.push('cancel2');
					player.chooseControl(choice).set('prompt',get.prompt2('wuhuajian_skill')).set('ai',function(){
						if(choice.length==2) return 0;
						if(get.value(trigger.player.getCards('he'))>8) return 1;
						return 0;
					});
					"step 1"
					if(result.control!='cancel2'){
						player.logSkill(event.name,trigger.player);
						if(result.control=='获得牌'){
							event.togain=trigger.player.getCards('he');
							player.gain(event.togain,trigger.player,'giveAuto');
						}
						else player.recover();
					}
				},
			},

//鸳鸯剑
        	yuanyang1:{
              usable:3,
              trigger:{
                source:"damageBefore",
              },
            audio:'cixiong',
            priority:15,
            filter:function (event,player){
            return get.type(event.card,'trick')=='trick';
            },
            content:function (){
            player.draw();
              }
        	},
			yuanyang2:{
				trigger:{source:'dieAfter'},
				filter:function(event,player){
					if(event.reason&&event.reason.card&&event.reason.card.name=='sha'){
						return event.player.isDead()&&lib.group.contains(player.identity)&&player.isMinor()&&player.group!="ye";
					}
					return false;
				},
				logTarget:'player',
				content:function(){
					'step 0'
					trigger.player.clearSkills();
					'step 1'
					var list=[];
					for(var i=0;i<_status.characterlist.length;i++){
						var info=lib.character[_status.characterlist[i]];
						if(info[4]&&info[4].contains('jun')) continue;
						if(info[1]==player.identity){
							list.push(_status.characterlist[i]);
						}
					}
					event.identity=event.player.identity;
					if(trigger.player==game.me&&!_status.auto){
						event.dialog=ui.create.dialog('是否选择一名角色重新加入游戏？',[list,'character']);
						event.filterButton=function(){return true};
						event.player=game.me;
						event.custom.replace.confirm=function(){
							if(!ui.selected.buttons.length){
								event.directresult='refuse';
							}
							else{
								event.directresult=ui.selected.buttons[0].link;
							}
							event.dialog.close();
							if(ui.confirm) ui.confirm.close();
							delete event.player;
							game.resume();
						}
						event.switchToAuto=function(){
							event.directresult=list.randomGet();
							event.dialog.close();
							if(ui.confirm) ui.confirm.close();
							delete event.player;
						};
						game.check();
						game.pause();
					}
					else if(trigger.player.isOnline()){
						trigger.player.send(function(player,list){
							if(_status.auto){
								_status.event._result=list.randomGet();
							}
							else{
								var next=game.createEvent('replacePlayer');
								next.source=player;
								next.list=list;
								next.setContent(function(){
									event.dialog=ui.create.dialog('是否选择一名角色重新加入游戏？',[event.list,'character']);
									event.filterButton=function(){return true};
									event.player=event.source;
									event.custom.replace.confirm=function(){
										if(!ui.selected.buttons.length){
											event.result='refuse';
										}
										else{
											event.result=ui.selected.buttons[0].link;
										}
										event.dialog.close();
										if(ui.confirm) ui.confirm.close();
										delete event.player;
										game.resume();
										game.uncheck();
									}
									event.switchToAuto=function(){
										event.result=list.randomGet();
										event.dialog.close();
										if(ui.confirm) ui.confirm.close();
										delete event.player;
										game.uncheck();
									};
									game.check();
									game.pause();
								});
							}
							game.resume();
						},trigger.player,list);
						trigger.player.wait();
						game.pause();
					}
					else{
						event.directresult=list.randomGet();
					}
					event.list=list;
					'step 2'
					game.uncheck();
					if(!event.directresult){
						if(event.resultOL){
							event.directresult=event.resultOL[trigger.player.playerid];
						}
						if(!event.directresult||event.directresult=='ai'){
							event.directresult=event.list.randomGet();
						}
					}
					if(event.directresult=='refuse'){
						game.log(trigger.player,'拒绝重新加入游戏');
						return;
					}
					game.log(trigger.player,'重新加入游戏');
					var name=event.directresult;
					game.log(trigger.player,'将主将替换为','#b'+name);
					_status.characterlist.remove(name);
					game.broadcastAll(function(source,name,identity){
						source.revive(2,false);
						source.identity=identity;
						source._group=identity;
						source.setIdentity();
						if(source==game.me){
							ui.arena.classList.remove('selecting');
						}
					},trigger.player,name,event.identity);
					trigger.player.draw();
					trigger.player.reinit(trigger.player.name1,name,false);
					trigger.player.removeCharacter(1);
					trigger.getParent('damage').untrigger(false,trigger.player);
					game.addVideo('setIdentity',trigger.player,event.identity);
				}
			},

//君主技能
//君司马懿
            gzniyongx:{
				trigger:{player:'phaseEnd'},
				check:function(event,player){
					if(player.hp==1) return false;
					return !player.hasShan()||player.hp==3;
				},
                content:function(){
　　　　　　　　　　　player.loseHp();        
　　　　　　　　　　　player.addTempSkill('gzniyongx2',{player:'phaseBegin'});
　　　　　　　　},
				//group:'gzniyongx_draw',
				subSkill:{
					draw:{
                        trigger:{
                            player:"phaseDrawBegin",
                        },
                        forced:true,
						content:function(){
                          trigger.num+=player.maxHp-player.hp;
						},
					}
				},
            },
            gzniyongx2:{
                marktext:"睨",
                intro:{
                    content:function (storage){
                       return '不受任何伤害'
　　　　　　　　　　},
                },
                mark:true,				
                trigger:{
                    player:"damageBegin",
                },
                forced:true,
                content:function(){
					trigger.untrigger();
					trigger.finish();
　　　　　　　　},
				ai:{
					effect:{
						target:function (card,player,target){
							var num=get.tag(card,'damage');
							if(num){
								return 0;
							}
						},
					},
				},
            },
              gzyinbianx:{
                audio:"ext:国战补充:1",
                unique:true,
                enable:"phaseUse",
                mark:true,
                notarget:true,
                init:function (player){
                    player.storage.gzyinbianx=false;
                },
                intro:{
                    content:"limited",
                },
                filter:function(event,player){
                     return game.dead.length>0;
                },
                content:function(){                
               "step 0"         
                player.storage.gzyinbianx=true;
                player.unmarkSkill('gzyinbianx');
                player.awakenSkill('gzyinbianx');
               "step 1"
    	        game.broadcastAll(function(player){
		        var list =[];
		        for(var i=0;i<game.dead.length;i++){
		        list.push(game.dead[i]);
			      player.line(game.dead[i],'green');
		        }																
		        for(var i=0;i<list.length;i++){
				  list[i].revive(2);
				  list[i].modifyGroup('jin');
				  list[i].draw(2);
				  list[i].clearSkills();
　　　　　　　　  list[i].init('gz_puppet1','gz_puppet2');
				}
			    },player);
                },           
                ai:{
                    threaten:2.5,
　　				order:8,
　　				result:{
                       player:function(player){
                         if(game.dead.length>=3) return 1;
                              return 0;
                       },                   
                    },
                },
            },
			zhonghufulangyin:{
				nopop:true,
				unique:true,
				forceunique:true,
				mark:true,
				intro:{content:function(){return get.translation('zhonghufulangyin_info')}},
			},
			gzyingshix:{
				unique:true,
				forceunique:true,
				group:'zhonghufulangyin',
				derivation:'zhonghufulangyin',
				global:'g_gzyingshix',
			},
			g_gzyingshix:{
				trigger:{
					player:['phaseZhunbeiBegin','phaseBefore','dieBegin'],
				},
				audio:'gzyingshix',
				forceaudio:true,
				filter:function(event,player,name){
					if(name!='phaseZhunbeiBegin') return get.is.jun(player)&&player.identity=='wei';
					return this.filter2.apply(this,arguments);
				},
				filter2:function(event,player){
					if(!get.zhu(player,'gzyingshix')) return false;
					if(!player.countCards('he')) return false;
					return !player.isUnseen();
				},
				direct:true,
				content:function(){
					'step 0'
					if(event.triggername!='phaseZhunbeiBegin'){
						event.trigger('gzyingshixUpdate');
						event.finish();
						return;
					}
					var skills=['reguose','rejizhi','new_duanliang','lijian','shiduo'];
					game.countPlayer(function(current){
					if(current==player) return;
					if(current.hasSkill('reguose')) skills.remove('reguose');
					if(current.hasSkill('rejizhi')) skills.remove('rejizhi');
					if(current.hasSkill('new_duanliang')) skills.remove('new_duanliang');
					if(current.hasSkill('lijian')) skills.remove('lijian');
					if(current.hasSkill('shiduo')) skills.remove('shiduo');
					});
					if(!skills.length) event.finish();
					else{
						event.skills=skills;
						var next=player.chooseToDiscard('he');
						var str='';
						for(var i=0;i<skills.length;i++){
							str+='、【';
							str+=get.translation(skills[i]);
							str+='】';
						}
						next.set('prompt','是否发动【冢虎伏狼印】？')
						next.set('prompt2',get.translation('弃置一张牌，随机获得以下技能中的一个直到回合结束：'+str.slice(1)));
						next.logSkill='g_gzyingshix';
						next.skills=skills;
						next.ai=function(card){
							var skills=_status.event.skills;
							var player=_status.event.player;
　　　　　　　　　　　　　　return 7-get.value(card);
						};
					}
					'step 1'
					if(!result.bool) event.finish();
					else{
					player.removeSkill(player.storage.g_gzyingshix);
					switch(Math.floor(Math.random()*5)){
					case 0:if(lib.skill.reguose){player.addTempSkill('reguose'); player.storage.g_gzyingshix='reguose';player.popup('reguose');}break;
					case 1:if(lib.skill.rejizhi){player.addTempSkill('rejizhi'); player.storage.g_gzyingshix='rejizhi';player.popup('rejizhi');}break;
					case 2:if(lib.skill.lijian){player.addTempSkill('lijian'); player.storage.g_gzyingshix='lijian';player.popup('lijian');}break;
					case 3:if(lib.skill.new_duanliang){player.addTempSkill('new_duanliang'); player.storage.g_gzyingshix='new_duanliang';player.popup('new_duanliang');}break;
					case 4:if(lib.skill.shiduo){player.addTempSkill('shiduo'); player.storage.g_gzyingshix='shiduo';player.popup('shiduo');}break;
				}

				}
				},
			},

			gzlingbianx:{
                audio:"baiyin",
　　　　　　　　forced:true,
　　　　　　　　frequent:true,
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return event.toShow.contains('gz_jun_jin_simayi');
				},
			    content:function(){
                 "step 0" 
                 var players=game.players.slice(0).sortBySeat();
                 for(var i=0;i<players.length;i++){
　　　　　　　　　　　players[i].showCharacter(2);
                  }
                 "step 1" 
		var card=get.cardPile(function(card){return card.name=='xuwangzhimian'});
							if(card!=undefined){
								player.gain(card,'gain2');
								player.equip(card);
							};
                 "step 2"
                 var players=game.players.slice(0).sortBySeat();
                 for(var i=0;i<players.length;i++){
                 if(players[i].identity=='ye'){
                 players[i].group="jin";
                 game.log(players[i],'的势力变为晋');
                 if(get.mode()=='guozhan'){
                 players[i].identity="jin";
                 players[i]._group="jin";
       players[i].node.identity.firstChild.innerHTML=get.translation("jin");
                 players[i].node.identity.dataset.color=players[i].identity;        
                 if(players[i].name) lib.character[players[i].name][1]="jin";
                 if(players[i].name1) lib.character[players[i].name1][1]="jin";
                 if(players[i].name2) lib.character[players[i].name2][1]="jin";                
                 }
                 else{
                  if(players[i].name) lib.character[players[i].name][1]="jin";
                  if(players[i].name1) lib.character[players[i].name1][1]="jin";
                  if(players[i].name2) lib.character[players[i].name2][1]="jin";            
                 }
                  }}
                 "step 3"
                 var players=game.players.slice(0).sortBySeat();
                 for(var i=0;i<players.length;i++){
                 if(players[i].group=='key'){
                 players[i].group="jin";
                 game.log(players[i],'的势力变为晋');
                 if(get.mode()=='guozhan'){
                 players[i].identity="jin";
                 players[i]._group="jin";
       players[i].node.identity.firstChild.innerHTML=get.translation("jin");
                 players[i].node.identity.dataset.color=players[i].identity;        
                 if(players[i].name) lib.character[players[i].name][1]="jin";
                 if(players[i].name1) lib.character[players[i].name1][1]="jin";
                 if(players[i].name2) lib.character[players[i].name2][1]="jin";                
                 }
                 else{
                  if(players[i].name) lib.character[players[i].name][1]="jin";
                  if(players[i].name1) lib.character[players[i].name1][1]="jin";
                  if(players[i].name2) lib.character[players[i].name2][1]="jin";            
                 }
                  }}
				},
			},

//君刘协
			 gzhantongx:{
				unique:true,
				forceunique:true,
				group:'hantianzichiling',
				derivation:'hantianzichiling',
				forced:true,
			},
			hantianzichiling:{
				nopop:true,
				unique:true,
				forceunique:true,
				mark:true,
				group:['gzhantongx2','gzhantongx3'],  
intro:{content:function(){return get.translation('hantianzichiling_info')}},
			},
			gzhantongx1:{
				enable:'phaseUse',
				usable:1,
				filterTarget:function(card,player,target){
			 return target!=player&&target.group=='qun'&&target.countCards('h');
				},
				content:function(){
					'step 0'
					if(player.countCards('h')){
						player.chooseCardButton('汉天子敕令',target.getCards('h')).ai=function(button){
							return get.value(button.link)-5;
						}
					}
					else{
						player.viewHandcards(target);
						event.finish();
					}
					'step 1'
					if(result.bool){
						event.card=result.links[[0]];
						player.chooseCard('h',true,'用一张手牌替换'+get.translation(event.card)).ai=function(card){
							return -get.value(card);
						};
					}
					else{
						event.finish();
					}
					'step 2'
					if(result.bool){
						player.gain(event.card,target);
						target.gain(result.cards,player);
						player.$giveAuto(result.cards,target);
						target.$giveAuto(event.card,player);
						game.log(player,'与',target,'交换了一张手牌');
					}
				},
				ai:{
					threaten:1.3,
					result:{
						target:function(player,target){
							return -target.countCards('h');
						}
					},
					order:10,
					expose:0.2,
				}
			},
		    gzhantongx2:{
				unique:true,
				global:'gzhantongx22',
			},
			gzhantongx22:{
				trigger:{player:'phaseDiscardEnd'},
				filter:function(event,player){
					if(player.group!='qun') return false;
					return game.hasPlayer(function(target){
						return player!=target&&target.hasSkill('gzhantongx',player);
					});
				},
				direct:true,
				content:function(){
					'step 0'
					var list=game.filterPlayer(function(current){
						return current!=player&&current.hasSkill('gzhantongx',player);
					});
					list.sortBySeat();
					event.list=list;
					'step 1'
					if(event.list.length){
						var current=event.list.shift();
						event.current=current;
						player.chooseBool(get.prompt('gzhantongx',current)).set('choice',get.attitude(player,current)>0);
					}
					else{
						event.finish();
					}
					'step 2'
					if(result.bool){
						player.logSkill('gzhantongx',event.current);
						var name=get.translation(event.current.name);
						var att=0;
						if(event.current.needsToDiscard()){
							att=1;
						}
						player.chooseControlList(['令'+name+'重铸一张牌','弃置一张牌并令'+name+'获得一张本回进入弃牌堆的牌'],function(){
							return _status.event.att;
						}).set('att',att);
					}
					else{
						event.goto(1);
					}
					'step 3'
					switch(result.index){
						case 0: {
							event.current.chooseToDiscard(true,'he');
　　　　　　　　　　　　　　event.current.draw();
							break;
						}
						case 1: {
							player.chooseToDiscard(true,'he');
							break;
						}
					}
					if(result.index!=1){
						event.goto(1);
					}
					'step 4'
					if(result.bool){
						var discarded=get.discarded();
						if(discarded.length){
							event.current.chooseCardButton('选择一张获得之',discarded,true).set('ai',function(button){
								return get.value(button.link);
							});
						}
						else{
							event.goto(1);
						}
					}
					else{
						event.goto(1);
					}
					'step 5'
					if(result.bool&&result.links&&result.links.length){
						event.current.gain(result.links,'gain2');
					}
					event.goto(1);
				}
			},
			gzhantongx3:{
                audio:"yongsi",
				trigger:{global:'useCard'},
				priority:15,
				filter:function(event,player){
					return event.card.name=='sha'&&event.player!=player&& event.targets[0].group=='qun'&&player.countCards('h','shan')>0&&event.targets.contains(player)==false&&event.targets.length==1;
				},
				direct:true,
				content:function(){
					"step 0"
					var effect=0;
					for(var i=0;i<trigger.targets.length;i++){
						effect+=get.effect(trigger.targets[i],trigger.card,trigger.player,player);
					}
					var str='汉天子敕令：是否弃置一张闪令'+get.translation(trigger.player);
					if(trigger.targets&&trigger.targets.length){
						str+='对'+get.translation(trigger.targets);
					}
					str+='的'+get.translation(trigger.card)+'失效？';
					var next=player.chooseToDiscard('h',function(card){
						return card.name=='shan';
					},str);
					next.ai=function(card){
						if(effect<0){
							return 9-get.value(card);
						}
						return -1;
					}
					next.autodelay=true;
					next.logSkill=['gzhantongx3',trigger.targets];
					"step 1"
					if(result.bool){
						trigger.cancel();
					}
				},
				ai:{
					expose:0.2
				}
			},
			gzchengyunx:{
                audio:"weidi",
				trigger:{global:'discardAfter'},
				filter:function(event,player){
					if(event.player==player) return false;
					if(player.countCards('h')>=player.maxHp) return false;
					for(var i=0;i<event.cards.length;i++){
						if(get.type(event.cards[i])!='basic'){
							return true;
						}
					}
					return false;
				},
				frequent:true,
				content:function(){
					"step 0"
					if(trigger.delay==false) game.delay();
					"step 1"
					player.draw();
				},
			},
		  gztianshoux:{
                audio:"yjixi",
　　　　　　　　forced:true,
				trigger:{player:'damageEnd'},
                frequent:true,
                filter:function(event,player){
					return !player.getEquip(5);
                },
			    content:function(){
					event.equip=get.cardPile(function(card){
						return get.subtype(card)=='equip5';
					});
						player.equip(event.equip||game.createCard(get.inpilefull('equip').randomGet()),true);
						event.e=true;

				},
			},
//君董卓
			 gzeweix:{
				unique:true,
				forceunique:true,
				group:'duopoxiuluofan',
				derivation:'duopoxiuluofan',
				forced:true,
			},
			duopoxiuluofan:{
				nopop:true,
				unique:true,
				forceunique:true,
				mark:true,
				group:['gzjiwu','gzlianyux','gzshenwei'],  
				intro:{content:function(){return get.translation('duopoxiuluofan_info')}},
			},
			gzmoxing:{
				audio:'hengzheng',
				trigger:{player:'phaseZhunbeiBegin'},
				filter:function(event,player){
					var players=game.filterPlayer();
					for(var i=0;i<players.length;i++){
						if(players[i]!=player&&players[i].getEquip('huanmeng')){
							return true;
						}
					}
				},
				content:function(){
					var players=game.filterPlayer();
					for(var i=0;i<players.length;i++){
						if(players[i]!=player){
							var e=players[i].getEquip('huanmeng');
							if(e){
								player.line(players[i],'green');
								players[i].give(e,player);
							}
						}
					}
				}
			},
			gzmodang:{
				forced:true,	
				locked:true,
				charlotte:true,
			group:["gzmodang_wuqi","gzmodang_fangju","gzmodang_zuoji","gzmodang_baowu"],
				subSkill:{
					wuqi:{
						mod:{
							cardUsable:function(card,player,num){
								if(player.getEquip(1)&&card.name=='sha') return num+1;
							},
						},
						sub:true,
					},
					fangju:{
						trigger:{
							player:"damageBegin4",
						},
				        audio:'boss_aozhan',
						forced:true,
						filter:function (event,player){
							return player.getEquip(2)&&event.num>1; 
						},
						content:function (){
							trigger.num=1; 
						},
						sub:true,
					},
					zuoji:{
						trigger:{
							player:"phaseDrawBegin",
						},
						forced:true,
				        audio:'boss_aozhan',
						filter:function (event,player){
							return (player.getEquip(3)||player.getEquip(4)); 
						},
						content:function(){
							trigger.num++;
						},
						sub:true,
					},
					baowu:{
						trigger:{
							player:"phaseJudgeBefore",
						},
				        audio:'boss_aozhan',
						forced:true,
						filter:function (event,player){
							return player.getEquip(5);
						},
						content:function (){
							trigger.cancel();
							game.log(player,'跳过了判定阶段');
						},
						sub:true,
					},
				},
			},
			gzjiwu:{
				audio:'jiwu',
				enable:'phaseUse',
                usable:2,
				filter:function(event,player){
					if(player.countCards('h')==0) return false;
					if(!player.hasSkill('qiangxi')) return true;
					if(!player.hasSkill('new_tieji')) return true;
					if(!player.hasSkill('gzxuanlve')) return true;
					if(!player.hasSkill('gzjinjiu')) return true;
					return false;
				},
				filterCard:true,
				position:'he',
				check:function(card){
					if(get.position(card)=='e'&&_status.event.player.hasSkill('gzxuanlve')) return 16-get.value(card);
					return 7-get.value(card);
				},
				content:function(){
					'step 0'
					var list=[];
					if(!player.hasSkill('qiangxi')) list.push('qiangxi');
					if(!player.hasSkill('new_tieji')) list.push('new_tieji');
					if(!player.hasSkill('gzxuanlve')) list.push('gzxuanlve');
					if(!player.hasSkill('gzjinjiu')) list.push('gzjinjiu');
					if(list.length==1){
						player.addTempSkill(list[0]);
						event.finish();
					}
					else{
						player.chooseControl(list,function(){
							if(list.contains('gzxuanlve')&&player.countCards('he',{type:'equip'})) return 'gzxuanlve';
							if(!player.getStat().skill.qiangxi){
								if(player.hasSkill('qiangxi')&&player.getEquip(1)&&list.contains('gzxuanlve')) return 'gzxuanlve';
								if(list.contains('gzjinjiu')||list.contains('qiangxi')){
									var players=game.filterPlayer();
									for(var i=0;i<players.length;i++){
										if(players[i].hp==1&&get.attitude(player,players[i])<0){
											if(list.contains('gzjinjiu')) return 'gzjinjiu';
											if(list.contains('qiangxi')) return 'qiangxi';
										}
									}
								}
							}
							if(list.contains('qiangxi')) return 'qiangxi';
							if(list.contains('gzjinjiu')) return 'gzjinjiu';
							if(list.contains('gzxuanlve')) return 'gzxuanlve';
							return 'new_tieji';
						}).set('prompt','选择获得一项技能直到回合结束');
					}
					'step 1'
					player.addTempSkill(result.control);
					player.popup(get.translation(result.control));
				},
				ai:{
					order:function(){
						var player=_status.event.player;
						if(player.countCards('e',{type:'equip'})) return 10;
						if(!player.getStat().skill.qiangxi){
							if(player.hasSkill('qiangxi')&&player.getEquip(1)&&!player.hasSkill('gzxuanlve')) return 10;
							if(player.hasSkill('gzjinjiu')) return 1;
							var players=game.filterPlayer();
							for(var i=0;i<players.length;i++){
								if(players[i].hp==1&&get.attitude(player,players[i])<0) return 10;
							}
						}
						return 1;
					},
					result:{
						player:function(player){
							if(player.countCards('e',{type:'equip'})) return 1;
							if(!player.getStat().skill.qiangxi){
								if(player.hasSkill('qiangxi')&&player.getEquip(1)&&!player.hasSkill('gzxuanlve')) return 1;
								if(!player.hasSkill('gzjinjiu')||!player.hasSkill('qiangxi')){
									var players=game.filterPlayer();
									for(var i=0;i<players.length;i++){
										if(players[i].hp==1&&get.attitude(player,players[i])<0) return 1;
									}
								}
							}
							return 0;
						}
					}
				}
			},
		  gzlianyux:{
                audio:"boss_baonu",
　　　　　　　　forced:true,
　　　　　　　　frequent:true,
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return event.toShow.contains('gz_jun_sp_dongzhuo');
				},
			    content:function(){
                "step 0" 
　　　　　　　　player.removeCharacter(1);
                player.addMark('zhulianbihe_mark'); 
                player.addSkill('gzshihunx'); 
                "step 1" 
                 var players=game.players.slice(0).sortBySeat();
                 for(var i=0;i<players.length;i++){
　　　　　　　　　　players[i].showCharacter(2);
					players[i].modifyGroup('ye');
                    players[i].addSkill('gzshihunx'); 
                  };
				},
			},
			gzshihunx:{
              trigger:{
                global:"dieBefore",
              },
              forced:true,
              filter:function (event,player){
                return event.source&&event.source==player;
              },
              content:function (){
					'step 0'
					var list=[];
					var listm=[];
					var listv=[];
					if(trigger.player.name1!=undefined) listm=lib.character[trigger.player.name1][3];
					else listm=lib.character[trigger.player.name][3];
					if(trigger.player.name2!=undefined) listv=lib.character[trigger.player.name2][3];
					listm=listm.concat(listv);
					var func=function(skill){
						var info=get.info(skill);
						if(!info||info.charlotte||info.mainSkill||info.viceSkill||info.limited||(info.unique&&!info.gainable)) return false;
						return true;
					};
					for(var i=0;i<listm.length;i++){
						if(func(listm[i])) list.add(listm[i]);
					}
					event.skills=list;
					'step 1'
					if(event.skills.length>0){
						player.chooseControl(event.skills).set('prompt','请选择要获得的技能').set('ai',function(){return event.skills.randomGet()});
					}
					else event.finish();
					'step 2'
					player.addSkill(result.control);
					player.popup(result.control,'thunder');
　　          },
　　		},
			gzshihuny:{
				audio:'huashen2',
                trigger:{ 
　　　　　　　　　　global:"die",
　　　　　　　　},
				group:['gzshihunz'],
　　			forced:true,
				content:function(){
					 'step 0'			    		
        event.skills=[]; 
		event.list=[];		
　　　　　　　　　　'step 1'
        for(var i in lib.characterPack['mode_guozhan']){
        for(var j=0;j<lib.character[i][3].length;j++){
           var info=lib.skill[lib.character[i][3][j]];
               if(info&&(info.gainable||!info.unique||!info.mainSkill||!info.ViceSkill)){
                   event.skills.add(lib.character[i][3][j]); 
               }
           } 
        }
        var list=event.skills.randomGets(3);		
		if(event.isMine()){
		var dialog=ui.create.dialog('forcebutton');
			dialog.add('选择获得一项技能');						
			for(i=0;i<list.length;i++){
				if(lib.translate[list[i]+'_info']){
				var translation=get.translation(list[i]);
				if(translation[0]=='新'&&translation.length==3){
			    	translation=translation.slice(1,3);
				}
				else{
					translation=translation.slice(0,2);
				}
				var item=dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+translation+'】</div><div>'+lib.translate[list[i]+'_info']+'</div></div>');								
					item.firstChild.link=list[i];
				}
			}						
		}						
		player.chooseControl(list).set('prompt','请选择一个你的要获得的技能').set('ai',function(){
            return list.randomGet();
        }).dialog=dialog;
		'step 2'				
		player.popup(result.control,'thunder'); 
		player.addSkill(result.control);		                 
        player.mark(result.control,{
            name:get.translation(result.control),
            content:lib.translate[result.control+'_info']
        });                            
		game.log(player,'获得了技能','#g【'+get.translation(result.control)+'】');                                                         
     },
			},
			gzshihunz:{
				audio:'huashen2',
                trigger:{ 
　　　　　　　　    global:"gameDrawAfter",
　　　　　　　　},
　　			forced:true,
				content:function(){
					 'step 0'			    		
        event.skills=[]; 
		event.list=[];		
　　　　　　　　　　'step 1'
        for(var i in lib.characterPack['mode_guozhan']){
        for(var j=0;j<lib.character[i][3].length;j++){
           var info=lib.skill[lib.character[i][3][j]];
               if(info&&(info.gainable||!info.unique||!info.mainSkill||!info.ViceSkill)){
                   event.skills.add(lib.character[i][3][j]); 
               }
           } 
        }
        var list=event.skills.randomGets(3);		
		if(event.isMine()){
		var dialog=ui.create.dialog('forcebutton');
			dialog.add('选择获得一项技能');						
			for(i=0;i<list.length;i++){
				if(lib.translate[list[i]+'_info']){
				var translation=get.translation(list[i]);
				if(translation[0]=='新'&&translation.length==3){
			    	translation=translation.slice(1,3);
				}
				else{
					translation=translation.slice(0,2);
				}
				var item=dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+translation+'】</div><div>'+lib.translate[list[i]+'_info']+'</div></div>');								
					item.firstChild.link=list[i];
				}
			}						
		}						
		player.chooseControl(list).set('prompt','请选择一个你的要获得的技能').set('ai',function(){
            return list.randomGet();
        }).dialog=dialog;
		'step 2'				
		player.popup(result.control,'thunder'); 
		player.addSkill(result.control);		                 
        player.mark(result.control,{
            name:get.translation(result.control),
            content:lib.translate[result.control+'_info']
        });                            
		game.log(player,'获得了技能','#g【'+get.translation(result.control)+'】');                                                         
     },
			},

			gzshenwei:{
				group:['gzshenwei1','gzshenwei2'],
				ai:{
					effect:{
						target:function(card,player,target,current){
							if(card.name=='lebu'&&card.name=='bingliang') return 0.8;
						}
					}
				}
			},
			gzshenwei1:{
				trigger:{player:'judge'},
				forced:true,
				filter:function(event,player){
					if(event.card){
						if(event.card.viewAs){
							return event.card.viewAs=='lebu';
						}
						else{
							return event.card.name=='lebu';
						}
					}
				},
				content:function(){
					player.addTempSkill('gzshenwei3','judgeAfter');
				}
			},
			gzshenwei2:{
				trigger:{player:'judge'},
				forced:true,
				filter:function(event,player){
					if(event.card){
						if(event.card.viewAs){
							return event.card.viewAs=='bingliang';
						}
						else{
							return event.card.name=='bingliang';
						}
					}
				},
				content:function(){
					player.addTempSkill('gzshenwei4','judgeAfter');
				}
			},
			gzshenwei3:{
				mod:{
					suit:function(card,suit){
						if(suit=='diamond') return 'heart';
					}
				}
			},
			gzshenwei4:{
				mod:{
					suit:function(card,suit){
						if(suit=='spade') return 'club';
					}
				}
			},

//君刘禅
			 gzyanxi:{
				audio:'fangquan',
				unique:true,
				forceunique:true,
				group:'chengenxueqishu',
				derivation:'chengenxueqishu',
				forced:true,
			},
			chengenxueqishu:{
				nopop:true,
				unique:true,
				forceunique:true,
				mark:true,
				group:['gzyanxi1','gzyanxi3'],  
				intro:{content:function(){return get.translation('chengenxueqishu_info')}},
			},
              gzyanxi1:{
                audio:"jijiang",
                trigger:{
                    player:"damageAfter",
                },     
                check:function(event,player){
                    return get.attitude(player,event.source)<=0;
                },         
                filter:function(event,player){
		          if(!player.hasSkill('gzyanxi')) return false;
		          if(!event.source||!event.source.isAlive()) return false;
		             return game.hasPlayer(function(current){
		           	   return current!=player&&current.group=='shu';
		           });
                },                
                content:function (){   
                "step 0" 
		         event.players=game.filterPlayer(function(current){
			       return current.group=='shu'&&current!=player;
		         });
		         event.players.sort(lib.sort.seat);
                "step 1"
		         if(event.players.length){
			        var player1=event.players.shift();
			        event.current=player1;
		         }
		         else event.finish();
		        "step 2"
		        if(event.current){
			       event.current.chooseToUse({name:'sha'},trigger.source,-1,'承恩血泣书：是否对'+get.translation(trigger.source)+'使用1张杀？').set('targetRequired',true);
}
		           else event.goto(1);
　　　　　　    },
            },
			gzyanxi2:{
				unique:true,
				global:'gzyanxi22',
			},
			gzyanxi22:{
				audio:'fangquan',
				enable:'phaseUse',
                usable:1,
				filter:function(event,player){
					if(player.group!='shu') return false;
					return game.hasPlayer(function(target){
						return target!=player&&target.hasSkill('gzyanxi',player);
					});
				},
				filterTarget:function(card,player,target){
					return target!=player&&target.hasSkill('gzyanxi',player);
				},
				content:function(){
					'step 0'
					target.draw();
					'step 1'
					if(target.countCards('h')>0) target.chooseCard('h',true,'交给'+get.translation(player)+'一张牌').set('ai',function(card){
						return 14-get.value(card);
					});
					else event.finish();
					'step 2'
					player.gain(result.cards,target,'giveAuto');
				},
				ai:{
					expose:0.3,
					order:10,
					result:{
						target:5
					}
				}
			},
				gzyanxi3:{
					trigger:{
						global:'dieBefore'
					},
					frequent:true,
					filter:function(event,player){
						return event.player.maxHp>0&&event.source&&event.source.group==player.group;
					},
					content:function(){
						"step 0"
						player.draw(trigger.player.maxHp);
						"step 1"
						event.cards=result;
						"step 2"
						player.chooseCardTarget({
							filterCard:function(card){
								return _status.event.getParent().cards.contains(card);
							},
							selectCard:[1,event.cards.length],
							filterTarget:function(card,player,target){
								return player!=target;
							},
							ai1:function(card){
								if(ui.selected.cards.length>0) return -1;
								return (_status.event.player.countCards('h')-_status.event.player.hp);
							},
							ai2:function(target){
								var att=get.attitude(_status.event.player,target);
								return att-4;
							},
							prompt:'请选择要送人的卡牌'
						});
						"step 3"
						if(result.bool){
							player.line(result.targets,'green');
							result.targets[0].gain(result.cards,player);
							player.$give(result.cards.length,result.targets[0]);
							for(var i=0;i<result.cards.length;i++){
								event.cards.remove(result.cards[i]);
							}
							if(event.cards.length) event.goto(2);
						};
					},
				},		
            gzguixiang:{
                skillAnimation:"epic",
                animationColor:"metal",
                unique:true,
                xiandingji:true,
                limited:true,
                mark:true,
                audio:"ruoyu",
                init:function (player,skill){
                  player.storage[skill]=false;
                },
                intro:{
                    content:"limited",
                },
				check:function(event,player){
					if(game.hasPlayer(function(current){
						return current!=player&&current.isFriendOf(player);
					})==0) return true;
					if(!player.isMajor()) return true;
                    if(player.countCards('h',{name:['tao','jiu']})==0) return true;
                    return false;
				},
                trigger:{
                    player:"dyingBegin",
                },
                filter:function(event,player){
                  return player.storage.gzguixiang==false;
                },
                content:function (){
                  "step 0"
    player.chooseControl('吴','魏','群','晋').set('ai',function(event){
                  var n=[1,2,3].randomGet();
                  if(n==1) return '吴';
                  if(n==2) return '魏';       
                  if(n==3) return '群';     
                  });
                 "step 1"
                 if(result.control=='魏'){
                 player.group="wei";
                 game.log(player,'的势力变为魏');
                 if(get.mode()=='guozhan'){
                 player.identity="wei";
                 player._group="wei";
        player.node.identity.firstChild.innerHTML=get.translation("wei");
                 player.node.identity.dataset.color=player.identity;        
                 if(player.name) lib.character[player.name][1]="wei";
                 if(player.name1) lib.character[player.name1][1]="wei";
                 if(player.name2) lib.character[player.name2][1]="wei";                
                 }
                 else{
                   if(player.name) lib.character[player.name][1]="wei";
                   if(player.name1) lib.character[player.name1][1]="wei";
                   if(player.name2) lib.character[player.name2][1]="wei";            
                 }}
                 if(result.control=='晋'){
                 player.group="jin";
                 game.log(player,'的势力变为晋');
                 if(get.mode()=='guozhan'){
                 player.identity="jin";
                 player._group="jin";
        player.node.identity.firstChild.innerHTML=get.translation("jin");
                 player.node.identity.dataset.color=player.identity;        
                 if(player.name) lib.character[player.name][1]="jin";
                 if(player.name1) lib.character[player.name1][1]="jin";
                 if(player.name2) lib.character[player.name2][1]="jin";                
                 }
                 else{
                   if(player.name) lib.character[player.name][1]="jin";
                   if(player.name1) lib.character[player.name1][1]="jin";
                   if(player.name2) lib.character[player.name2][1]="jin";            
                 }}
                 if(result.control=='吴'){
                 player.group="wu";
                 game.log(player,'的势力变为吴');
                 if(get.mode()=='guozhan'){
                 player.identity="wu";
                 player._group="wu";
        player.node.identity.firstChild.innerHTML=get.translation("wu");
                 player.node.identity.dataset.color=player.identity;        
                 if(player.name) lib.character[player.name][1]="wu";
                 if(player.name1) lib.character[player.name1][1]="wu";
                 if(player.name2) lib.character[player.name2][1]="wu";                
                 }
                 else{
                   if(player.name) lib.character[player.name][1]="wu";
                   if(player.name1) lib.character[player.name1][1]="wu";
                   if(player.name2) lib.character[player.name2][1]="wu";            
                 }}
                 if(result.control=='群'){
                 player.group="qun";
                 game.log(player,'的势力变为群');
                 if(get.mode()=='guozhan'){
                 player.identity="qun";
                 player._group="qun";
        player.node.identity.firstChild.innerHTML=get.translation("qun");
                 player.node.identity.dataset.color=player.identity;        
                 if(player.name) lib.character[player.name][1]="qun";
                 if(player.name1) lib.character[player.name1][1]="qun";
                 if(player.name2) lib.character[player.name2][1]="qun";                
                 }
                 else{
                   if(player.name) lib.character[player.name][1]="qun";
                   if(player.name1) lib.character[player.name1][1]="qun";
                   if(player.name2) lib.character[player.name2][1]="qun";            
                 }}
                  "step 2"  
                   var players=game.players.slice(0).sortBySeat();
                   for(var i=0;i<players.length;i++){
                   if(players[i]!=player&&players[i].identity=='shu'){
　　　　　　　　　　　players[i].chooseDrawRecover(3,true);
                      players[i].mayChangeVice(true);
                      players[i].setIdentity('ye');
                      players[i].identity='ye';
　　　　　　　　　　　}
                  };
                  "step 3"  
                   player.storage.gzguixiang=true;
                   player.awakenSkill("gzguixiang");
                   player.storage.gzguixiang=true;
                   player.recover(2-player.hp); 
                   player.addSkill('xiangle'); 
				   player.removeSkill('gzyanxi');
				   player.removeSkill('chengenxueqishu');
				   player.removeSkill('gzjingyao');
               },
            },
			gzjingyao:{
				audio:'xiangle',
				unique:true,
				forceunique:true,
				ai:{
					threaten:2,
				},
				group:['gzjingyao_gain','gzjingyao_clear','gzjingyao_count1','gzjingyao_count2','gzjingyao_count3'],
				subSkill:{
					gain:{
						audio:'xiangle',
						trigger:{global:['discardAfter','respondAfter','useCardAfter','equipAfter',
							'judgeAfter','useSkillAfter','phaseDrawBegin','phaseAfter']},
						forced:true,
						filter:function(event,player){
							if(player.storage.gzjingyao){
								for(var i=0;i<player.storage.gzjingyao.length;i++){
									if(get.owner(player.storage.gzjingyao[i])==player) continue;
									var position=get.position(player.storage.gzjingyao[i]);
									if(position&&position!='s'&&position!='c'){
										return true;
									}
								}
							}
							if(event.name=='equip'&&player!=event.player&&event.card.name=='liulongyuling') return true;
							//if(game.hasPlayer(function(current){
							//	return current!=player&&current.getEquip('liulongyuling');
							//})){
							//	return true;
							//}
							if(['discard','respond','useCard'].contains(event.name)&&event.cards){
								for(var i=0;i<event.cards.length;i++){
									if(event.cards[i].name=='liulongyuling'&&get.position(event.cards[i])=='d'){
										return true;
									}
								}
							}
							for(var i=0;i<ui.discardPile.childElementCount;i++){
								if(ui.discardPile.childNodes[i].name=='liulongyuling') return true;
							}
							return false;
						},
						content:function(){
							'step 0'
							if(trigger.name=='equip'||trigger.name=='respond'||trigger.delay==false) game.delay();
							'step 1'
							var list=[];
							/*game.countPlayer(function(current){
								if(current!=player){
									var es=current.getEquip('liulongyuling');
									if(es){
										list.add(es);
									}
								}
							});*/
							if(trigger.name=='equip'&&player!=trigger.player) list.add(trigger.card);
							if(['discard','respond','useCard'].contains(trigger.name)&&trigger.cards){
								for(var i=0;i<trigger.cards.length;i++){
									if(trigger.cards[i].name=='liulongyuling'&&get.position(trigger.cards[i])=='d'){
										trigger.cards[i].fix();
										list.add(trigger.cards[i]);
										ui.special.appendChild(trigger.cards[i]);
									}
								}
							}
							for(var i=0;i<ui.discardPile.childElementCount;i++){
								if(ui.discardPile.childNodes[i].name=='liulongyuling'){
									list.add(ui.discardPile.childNodes[i]);
									ui.special.appendChild(ui.discardPile.childNodes[i]);
								}
							}
							var list2=[];
							if(player.storage.gzjingyao){
								for(var i=0;i<list.length;i++){
									if(player.storage.gzjingyao.contains(list[i])){
										player.storage.gzjingyao.remove(list[i]);
										list2.add(list[i]);
										list.splice(i--,1);
									}
								}
								for(var i=0;i<player.storage.gzjingyao.length;i++){
									if(get.owner(player.storage.gzjingyao[i])==player) continue;
									var position=get.position(player.storage.gzjingyao[i]);
									if(position&&position!='s'&&position!='c'){
										list2.add(player.storage.gzjingyao[i]);
									}
								}
							}
							if(list.length){
								player.gain(list);
								var owner=get.owner(list[0]);
								if(trigger.name!='respond'&&owner){
									player.line(owner,'green');
									owner.$give(list,player);
								}
								else{
									player.$gain2(list,true);
								}
								event.delay=true;
							}
							if(list2.length){
								player.showCards(get.translation(player)+'发动了【景耀】',list2);
								for(var i=0;i<list2.length;i++){
									var owner=get.owner(list2[i]);
									if(owner){
										owner.lose(list2[i],ui.special);
										event.delay=true;
									}
								}
								event.list2=list2;
							}
							'step 2'
							if(event.delay){
								game.delay();
							}
							'step 3'
							if(event.list2&&event.list2.length){
								for(var i=0;i<event.list2.length;i++){
									event.list2[i].fix();
									ui.cardPile.appendChild(event.list2[i]);
								}
								game.log(player,'将',event.list2,'置于牌堆底');
                            var players=game.players.slice(0).sortBySeat();
                            for(var i=0;i<players.length;i++){
                              if(players[i]!=player&&players[i].identity=='shu') 
                                 players[i].draw();
                              };
							}
						}
					},
					count1:{
						trigger:{player:'loseAfter'},
						silent:true,
						filter:function(event,player){
							if(event.type!='gain'&&event.type!='equip') return true;
							if(event.parent.player==player) return true;
							return false;
						},
						content:function(){
							if(!player.storage.gzjingyao){
								player.storage.gzjingyao=[];
							}
							for(var i=0;i<trigger.stockcards.length;i++){
								if(trigger.stockcards[i].name=='liulongyuling'){
									player.storage.gzjingyao.add(trigger.stockcards[i]);
								}
							}
						}
					},
					count2:{
						audio:'xiangle',
						trigger:{player:'loseAfter'},
						forced:true,
						filter:function(event,player){
							if(lib.skill.gzjingyao_count1.filter(event,player)){
								return false;
							}
							for(var i=0;i<event.stockcards.length;i++){
								if(event.stockcards[i].name=='liulongyuling'){
									return true;
								}
							}
						},
						content:function(){
							'step 0'
							var list=[];
							for(var i=0;i<trigger.stockcards.length;i++){
								if(trigger.stockcards[i].name=='liulongyuling'){
									list.add(trigger.stockcards[i]);
								}
							}
							if(list.length){
								if(trigger.type=='gain'){
									for(var i=0;i<list.length;i++){
										trigger.parent.cards.remove(list[i]);
									}
								}
								else if(trigger.type=='equip'){
									trigger.parent.cancelled=true;
								}
								player.showCards(get.translation(player)+'发动了【景耀】',list);
								event.list=list;
							}
							else{
								event.finish();
							}
							'step 1'
							for(var i=0;i<event.list.length;i++){
								event.list[i].fix();
								ui.cardPile.appendChild(event.list[i]);
							}
							game.log(player,'将',event.list,'置于牌堆底');
                            var players=game.players.slice(0).sortBySeat();
                            for(var i=0;i<players.length;i++){
                              if(players[i]!=player&&players[i].identity=='shu') 
                                 players[i].draw();
                            };
						}
					},
					count3:{
						audio:'xiangle',
						trigger:{global:'equipBefore'},
						forced:true,
						filter:function(event,player){
							return event.card&&event.card.name=='liulongyuling'&&event.player!=player&&
								player.storage.gzjingyao&&player.storage.gzjingyao.contains(event.card);
						},
						content:function(){
							'step 0'
							trigger.cancel();
							trigger.card.fix();
							player.showCards(get.translation(player)+'发动了【景耀】',[trigger.card]);
							var owner=get.owner(trigger.card);
							if(owner){
								owner.lose(trigger.card,ui.special);
							}
							player.storage.gzjingyao.remove(trigger.card);
							'step 1'
							trigger.card.fix();
							ui.cardPile.appendChild(trigger.card);
							game.log(player,'将',trigger.card,'置于牌堆底');
                            var players=game.players.slice(0).sortBySeat();
                            for(var i=0;i<players.length;i++){
                              if(players[i]!=player&&players[i].identity=='shu') 
                                 players[i].draw();
                            };
						}
					},
					clear:{
						trigger:{global:'phaseAfter'},
						silent:true,
						content:function(){
							delete player.storage.gzjingyao;
						}
					}
				}
			},

//君孙策
			gzzhiba:{
                audio:"zhiba",
　　　　　　　　forced:true,
　　　　　　　　frequent:true,
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return event.toShow.contains('gz_jun_sunce');
				},
			    content:function(){
	var card1=get.cardPile(function(card){return card.name=='menghuqinlong'});
						if(card1!=undefined){
							player.gain(card1,'gain2');
							player.equip(card1);
						};
					},
				},
			gzangwu:{
                audio:"jiang",
				mod:{
					targetInRange:function(card,player){
						if(card.name=='sha'&&get.color(card)=='black') return true;
					},
				},
				trigger:{player:'shaBegin'},
				forced:true,
				popup:false,
				filter:function(event,player){
					return event.card&&get.color(event.card)=='red';
				},
				content:function(){
					trigger.directHit=true;
				}
			},
			tuoyehujiangpo:{
				nopop:true,
				unique:true,
				forceunique:true,
				mark:true,
				group:['gzhunji1','gzhunji2'],     				intro:{content:function(){return get.translation('tuoyehujiangpo_info')}},
			},
			 gzhunji:{
				audio:'hunzi',
				unique:true,
				forceunique:true,
				group:'tuoyehujiangpo',
				derivation:'tuoyehujiangpo',
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return event.toShow.contains('gz_jun_sunce');
				},
				forced:true,
                content:function(){  
                  game.countPlayer(function(current){ 
                   if(current.group=='wu'&&!current.hasMark('zhulianbihe_mark')){ 
                   player.line(current,'green'); 
                   current.addMark('zhulianbihe_mark'); 
                   } 
                });
			  },
			},
                        gzhunji1:{
                            audio:"hunzi",
                            trigger:{
                                global:"discardAfter",
                            },
                            filter:function (event,player){
                                if(event.player.group!="wu") return false;
                                if(event.player==player) return false;
                                for(var i=0;i<event.cards.length;i++){
                                    if(get.type(event.cards[i])=='equip'&&get.position(event.cards[i])=='d'){
                                        if(game.hasPlayer(function(current){
                                            return player.canUse(event.cards[i],current);
                                        })){
                                            return true;
                                        }
                                    }
                                }
                                return false;
                            },
                            direct:true,
                            content:function (){
                                "step 0"
                                if(trigger.delay==false) game.delay();
                                "step 1"
                                var cards=[];
                                for(var i=0;i<trigger.cards.length;i++){
                                    if(get.position(trigger.cards[i])=='d'){
                                        cards.push(trigger.cards[i]);
                                    }
                                }
                                if(cards.length){
                                    event.use=cards;
                                }
                                "step 2"
                                if(event.use.length){
                                    player.chooseCardButton(event.use,1,'是否发动【拓业虎将魄】<br>选择一张装备牌使用之?').set('filterButton',function(button){
                                        if(game.hasPlayer(function(current){
                                            return player.canUse(button.link,current);
                                        })){
                                            return get.type(button.link)=='equip';
                                        }
                                        return false;
                                    }).set('ai',function(button){
                                        var pl=_status.event.player;
                                        var eff=game.hasPlayer(function(current){
                                            return get.effect(current,button.link,pl,pl)>0&&pl.canUse(button.link,current);
                                        });
                                        if(eff) return get.value(button.link);          
                                        return -1;
                                    });
                                }
                                else{
                                    event.finish();
                                }  
                                "step 3"
                                if(result.bool){
                                    player.chooseUseTarget(result.links[0],true);
                                    player.logSkill('gzhunji1');
                                }
                                else{
                                    event.finish();
                                }  
                            },
                        },
                        gzhunji2:{
                            audio:"hunshang",
                            trigger:{
                              global:"dieAfter",
                            },
                            filter:function(event,player){
                              return event.player.group=="wu";
                            },
                            content:function(){
                              player.insertPhase();
                         },
　　　　　　　　　　  },
  gzhunji3:{
    audio:"zhiba2",
 	trigger:{
		player:"compare",
		target:"compare",
	},
	filter:function (event,player){
		if(event.iwhile) return false;
		return true;
	},
	forced:true,
	content:function (){
		"step 0"
		player.chooseControl('视为1','视为K').set('prompt','使拼点点数视为').ai=function(event){
			var trigger=_status.event.getTrigger();
			var player=_status.event.player;
			if(trigger.parent.name=='CSrenli') {
				if(!player.isDamaged()) return '视为1';
			}
			return '视为K';
		};
		"step 1"
		if(result.control=='视为1'){
			game.log(player,'拼点牌点数视为','#y1');
			if(player==trigger.player){
				trigger.num1=1;
			}
			else{
				trigger.num2=1;
			}
		}
		else{
			game.log(player,'拼点牌点数视为','#y13');
			if(player==trigger.player){
				trigger.num1=13;
			}
			else{
				trigger.num2=13;
			}
		}
	},
            },

//君曹丕
			 gzjiyex:{
				audio:'songwei',
				unique:true,
				forceunique:true,
				group:'jiuwuzhizunzhao',
				derivation:'jiuwuzhizunzhao',
				forced:true,
			},
			jiuwuzhizunzhao:{
				nopop:true,
				unique:true,
				forceunique:true,
				mark:true,
				group:['gzjiyex1','gzjiyex3'],  
				intro:{content:function(){return get.translation('jiuwuzhizunzhao_info')}},
			},
		 gzjiyex1:{
	       unique:true,
       	   trigger:{
		     player:"discardBefore",
	       },
	       direct:true,
	filter:function(event,player){
		if(!player.hasSkill('gzjiyex')) return false;
		if(event.cards.length!=1) return false;
		return game.hasPlayer(function(current){
			return current!=player&&current.group=='wei';
		});
	},
    content:function (){
		"step 0"
		player.chooseTarget('九五至尊诏：选择1名其他魏势力角色，其可以代替你弃置1张牌',1,function(card,player,target){
			return target!=player&&target.group=='wei';
		}).ai=function(target){
			var att=get.attitude(_status.event.player,target);
			return att;
		}
		"step 1"
		if(result.bool) {
			event.tar=result.targets[0];
			event.tar.chooseCard('九五至尊诏：是否代替'+get.translation(player)+'弃置1张牌？','he',false).ai=function(card){
				var att=get.attitude(event.tar,player);
				if(att>=0){
					return 5-get.value(card);
				}
				else return -1;
			}
		}
		else event.finish();
        "step 2"
        if(result.bool){
			player.logSkill('gzjiyex1',event.tar);
			game.log(event.tar,'代替',player,'弃置了1张牌');
			trigger.player=event.tar;
			trigger.cards=result.cards;
        }
    },
		},
				gzjiyex2:{
				    audio:"songwei",
				    usable:1,
					trigger:{
						global:'damageAfter'
					},
					filter:function(event,player){
						return event.player!=player&&event.player.group=="wei";
					},
					direct:true,
					content:function(){
						"step 0"
						trigger.player.chooseControl(["令"+lib.translate[player.name]+"摸一弃一","取消"]).set('ai',function(event){
							if(get.attitude(trigger.player,player)>0) return "令"+lib.translate[player.name]+"摸一弃一";
							return "取消";
						}).set('prompt','请选择一项');
						"step 1"
						if(result.control=="令"+lib.translate[player.name]+"摸一弃一"){
							player.logSkill('gzjiyex2');
							player.draw();
				            player.chooseToDiscard(true,'he');
						};
					},
				},
            gzjiyex3:{
                audio:"jijiang",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                filter:function (event,player){
                    if(!player.hasSkill('gzjiyex')) return false;
                    return game.hasPlayer(function(current){
                        return current.countGainableCards(player,'ej')>0;
                    });
                },
                direct:true,
                unique:true,
                content:function (){
                    'step 0'
                    if(!player.canMoveCard(null,event.nojudge)){
                        event.finish();
                        return;
                    }
                    var next=player.chooseTarget(2,function(card,player,target){
                        if(ui.selected.targets.length){
                            var from=ui.selected.targets[0];
                            var js=from.getCards('j');
                            for(var i=0;i<js.length;i++){
                                if(_status.event.nojudge) break;
                                if(!target.storage._disableJudge&&!target.hasJudge(js[i])) return true;
                            }
                            if(target.isMin()) return false;
                            var es=from.getCards('e');
                            for(var i=0;i<es.length;i++){
                                if(target.isEmpty(get.subtype(es[i]))) return true;
                            }
                            return false;
                        }
                        else{
                            var range='ej';
                            if(_status.event.nojudge) range='e';
                            return target.countCards(range)>0;
                        }
                    });
                    next.set('nojudge',event.nojudge||false);
                    next.set('ai',function(target){
                        var player=_status.event.player;
                        var att=get.attitude(player,target);
                        var sgnatt=get.sgn(att);
                        if(ui.selected.targets.length==0){
                            if(att>0){
                                if(!_status.event.nojudge&&target.countCards('j',function(card){
                                    return game.hasPlayer(function(current){
                                        return !current.hasJudge(card);
                                    })
                                })) return 14;
                                if(target.countCards('e',function(card){
                                    return get.value(card,target)<0&&game.hasPlayer(function(current){
                                        return current!=target&&get.attitude(player,current)<0&&current.isEmpty(get.subtype(card))
                                    });
                                })>0) return 9;
                            }
                            else if(att<0){
                                if(game.hasPlayer(function(current){
                                    if(current!=target&&get.attitude(player,current)>0){
                                        var es=target.getCards('e');
                                        for(var i=0;i<es.length;i++){
                                            if(get.value(es[i],target)>0&&current.isEmpty(get.subtype(es[i]))&&get.value(es[i],current)>0) return true;
                                        }
                                    }
                                })){
                                    return -att;
                                }
                            }
                            return 0;
                        }
                        var es=ui.selected.targets[0].getCards('e');
                        var i;
                        var att2=get.sgn(get.attitude(player,ui.selected.targets[0]));
                        for(i=0;i<es.length;i++){
                            if(sgnatt!=0&&att2!=0&&
                                get.sgn(get.value(es[i],ui.selected.targets[0]))==-att2&&
                                get.sgn(get.value(es[i],target))==sgnatt&&
                                target.isEmpty(get.subtype(es[i]))){
                                return Math.abs(att);
                            }
                        }
                        if(i==es.length&&(_status.event.nojudge||!ui.selected.targets[0].countCards('j',function(card){
                            return !target.hasJudge(card);
                        }))){
                            return 0;
                        }
                        return -att*get.attitude(player,ui.selected.targets[0]);
                    });
                    next.set('multitarget',true);
                    next.set('targetprompt',_status.event.targetprompt||['被移走','移动目标']);
                    next.set('prompt',event.prompt||'是否将一名角色区域内的一张牌移给另一名角色？');
                    'step 1'
                    if(result.bool){
                        player.line2(result.targets,'green');
                        event.targets=result.targets;
                    }
                    else{
                        event.finish();
                    }
                    'step 2'
                    game.delay();
                    'step 3'
                    if(targets.length==2){
                        player.choosePlayerCard('ej',true,function(button){
                            var player=_status.event.player;
                            var targets0=_status.event.targets0;
                            var targets1=_status.event.targets1;
                            if(get.attitude(player,targets0)>get.attitude(player,targets1)){
                                if(get.position(button.link)=='j') return 12;
                                if(get.value(button.link,targets0)<0) return 10;
                                return 0;
                            }
                            else{
                                if(get.position(button.link)=='j') return -10;
                                return get.equipValue(button.link);
                            }
                        },targets[0]).set('nojudge',event.nojudge||false).set('targets0',targets[0]).set('targets1',targets[1]).set('filterButton',function(button){
                            var targets1=_status.event.targets1;
                            if(get.position(button.link)=='j'){
                                if(_status.event.nojudge) return false;
                                return !targets1.storage._disableJudge&&!targets1.hasJudge(button.link);
                            }
                            else{
                                return targets1.isEmpty(get.subtype(button.link));
                            }
                        });
                    }
                    else{
                        event.finish();
                    }
                    'step 4'
                    if(result.bool&&result.links.length){
                        player.logSkill('gzjiyex3');
                        var link=result.links[0];
                        if(get.position(link)=='e'){
                            event.targets[1].equip(link);
                        }
                        else if(link.viewAs){
                            event.targets[1].addJudge({name:link.viewAs},[link]);
                        }
                        else{
                            event.targets[1].addJudge(link);
                        }
                        event.targets[0].$give(link,event.targets[1])
                        game.delay();
                        event.result={bool:true};
                    }
                },
                ai:{
                    skillTagFilter:function (player){
                        if(!player.hasSkill('gzjiyex')) return false;
                        return game.hasPlayer(function(current){
                            return current.countGainableCards(player,'ej')>0;
                        });
                    },
                },
            },
			gzhuazaox:{
				audio:'dengji',
				unique:true,
				forceunique:true,
				enable:'phaseUse',
				usable:1,
				filterCard:function(card){
					return get.name(card)!='wuhuajian'&&get.color(card)=='red';
				},
				position:'he',
				check:function(card){
					return 6-get.value(card);
				},
				onChooseToUse:function(event){
					if(game.online) return;
					event.set('gzhuazaox',function(){
						for(var i=0;i<ui.discardPile.childElementCount;i++){
							if(ui.discardPile.childNodes[i].name=='wuhuajian') return true;
						}
						return game.hasPlayer(function(current){
							return current.countCards('ej','wuhuajian');
						});
					}());
				},
				filter:function(event,player){
					return event.gzhuazaox==true;
				},
				content:function(){
					var list=[];
					for(var i=0;i<ui.discardPile.childElementCount;i++){
						if(ui.discardPile.childNodes[i].name=='wuhuajian'){
							list.add(ui.discardPile.childNodes[i]);
						}
					}
					game.countPlayer(function(current){
						var ej=current.getCards('ej','wuhuajian');
						if(ej.length){
							list.addArray(ej);
						}
					});
					if(list.length){
						var card=list.randomGet();
						var owner=get.owner(card);
						if(owner){
							player.gain(card,owner,'give');
							player.line(owner,'green');
						}
						else{
							player.gain(card,'log');
							player.$draw(card);
						}
					}
				},
				ai:{
					order:4.5,
					result:{
						player:1
					}
				}
			},
            gztianweix:{
                audio:"fangzhu",
				trigger:{player:'recoverAfter'},
                content:function(){
				'step 0'
            player.chooseTarget(get.prompt('gztianweix'),'令一名其他角色选择一项：1.执行一项军令；2.将武将牌叠置并摸'+get.cnNumber(player.getDamagedHp())+'张牌',function(card,player,target){
            return player!=target
        }).ai=function(target){
            if(target.hasSkillTag('noturn')) return 0;
            var player=_status.event.player;
            if(get.attitude(_status.event.player,target)==0) return 0;
            if(get.attitude(_status.event.player,target)>0){
                if(target.classList.contains('turnedover')) return 1000-target.countCards('h');
                if(player.getDamagedHp()<3) return -1;
                return 100-target.countCards('h');
            }
            else{
                if(target.classList.contains('turnedover')) return -1;
                if(player.getDamagedHp()>=3) return -1;
                return 1+target.countCards('h');
            }
        }
					'step 1'
					if(result.bool){
						event.target=result.targets[0];
						player.logSkill('gztianweix',result.targets);
						player.chooseJunlingFor(result.targets[0]);
					}
					else event.finish();
					'step 2'
					event.junling=result.junling;
					event.targets=result.targets;
					var choiceList=[];
					choiceList.push('执行该军令，然后选择回复一点体力或摸两张牌');
					choiceList.push('不执行军令，你将武将叠置，然后令君曹丕弃置X张牌（X为君曹丕已损失的体力值且至少为1）');
					target.chooseJunlingControl(player,result.junling,result.targets).set('prompt','天威').set('choiceList',choiceList).set('ai',function(){
						if(get.attitude(target,player)>0) return 0;
						if(get.attitude(target,player)<0) return get.junlingEffect(player,result.junling,target,result.targets,target)>1?0:1;
						return get.junlingEffect(player,result.junling,target,result.targets,target)>=-1?0:1;
					});
					'step 3'
					if(result.index==0){
						target.carryOutJunling(player,event.junling,targets);
						target.chooseDrawRecover(2,true);
					}
					else{
						target.turnOver();
                        player.chooseToDiscard([1,Math.max(1,player.getDamagedHp())],'he','请弃置X张牌（X为君曹丕已损失的体力值，且至少为1）',true).ai=function(card){ 
                        return 7-get.value(card); 
                        }; 
					}
                },
                ai:{
                    order:3,
                    result:{
                        player:1,
                    },
                },
            },

//君袁绍    
			 gzjiewang:{
				audio:'xueyi',
				unique:true,
				forceunique:true,
				group:'qunxionggongtaoxie',
				derivation:'qunxionggongtaoxie',
			},
		gzjiewang1:{
	     unique:true,
         trigger:{
           global:"gainAfter",
         },
	     direct:true,
	     filter:function (event,player){
		 if(!player.hasSkill('gzjiewang')) return false;
		 if(event.player==player) return false;
		 if(!player.countCards('h')) return false;
		 if(!event.player.isPhaseUsing()) return false;
		 if(event.player.group!='qun') return false;
		return true;
	},
	content:function (){
		"step 0"
		trigger.player.chooseBool(get.prompt('gzjiewang'),'是否令'+get.translation(player)+'可以选择重铸1张手牌？').set('ai',function(){        
			return get.attitude(player,trigger.player)>0;           
		});
		"step 1"
		if(result.bool){
			trigger.player.logSkill('gzjiewang',player);
			player.chooseCardButton('群雄共讨榭：重铸1张手牌',player.getCards('h'),false).ai=function(button){
                return 4-get.value(button.link);
            }  
        } 
		else event.finish();
		"step 2"
		if(result.bool){
			var cards=result.links;
			player.lose(cards,ui.discardPile);
			player.$throw(cards,1000);
			game.log(player,'将',cards,'置入了弃牌堆');
			event.draw={bool:true,num:cards.length}
        } 
		else event.finish();
		"step 3"
		if(event.draw&&event.draw.bool){
			player.draw(event.draw.num);
		}
    },
		},
			gzjiewang2:{
				unique:true,
				forceunique:true,
				global:'gzjiewang22'
			},
			gzjiewang22:{
				audio:"xueyi",
				trigger:{player:'phaseEnd'},
				direct:true,
				filter:function(event,player){
					if(player.group!='qun') return false;
					if(player.hasSkill('gzjiewang2')) return false;
					if(!player.countCards('he')) return false;
					if(player.hasSkill('gzjiewang23')) return true;
					return game.hasPlayer(function(current){
						return current.hasSkill('gzjiewang2');
					});
				},
				content:function(){
					'step 0'
					player.removeSkill('gzjiewang23');
					event.target=game.findPlayer(function(current){
						return current.hasSkill('gzjiewang2');
					});
					if(event.target){
						player.chooseToDiscard([1,2],'群雄共讨榭：是否弃置1~2张手牌并令'+get.translation(event.target)+'摸等量的牌？').set('ai',function(card){
							if(get.attitude(_status.event.player,_status.event.getParent().target)>1){
								return 6-get.value(card);
							}
							return 0;
						}).set('logSkill',['gzjiewang2',event.target]);
					}
					else{
						event.finish();
					}
					'step 1'
					if(result.bool){
						event.target.draw(result.cards.length);
						player.storage.gzjiewang23=event.target;
						player.addSkill('gzjiewang23');
						player.addExpose(0.2);
					}
				}
			},
			gzjiewang23:{
				mark:'character',
				intro:{
					content:'每当$对你使用一张牌，你摸一张牌'
				},
				trigger:{target:'useCardToBegin'},
				filter:function(event,player){
					return event.player==player.storage.gzjiewang23;
				},
				forced:true,
				content:function(){
					player.draw();
				},
			},
			qunxionggongtaoxie:{
				nopop:true,
				unique:true,
				forceunique:true,
				mark:true,
				group:['gzjiewang1','gzjiewang2'],  
				intro:{content:function(){return get.translation('qunxionggongtaoxie_info')}},
			},
			gzjiewang3:{
				audio:"xueyi",
				forceaudio:true,
				unique:true,
				trigger:{
					player:"phaseDiscardBegin",
				},
				direct:true,
				filter:function(event,player){
					if(!player.hasSkill('gzjiewang')) return false;
					return player.needsToDiscard()>0&&game.countPlayer(function(current){return current!=player&&current.group=='qun'})>0;
				},
				content:function(){
					'step 0'
					event.count=player.needsToDiscard();
					event.logged=false;
					event.gived=[];
					'step 1'
					if(!game.hasPlayer(function(target){
						return target!=player&&target.group=='qun'&&!event.gived.contains(target);
					})) event.finish();
					else player.chooseCardTarget({
						prompt:'是否将一张手牌给予其他群雄角色？',
						filterTarget:function(card,player,target){
							return target!=player&&target.group=='qun'&&!_status.event.gived.contains(target);
						},
						filterCard:true,
						position:'h',
						ai1:function(card){
							var player=_status.event.player;
							var value=get.value(card,player,'raw');
							if(game.hasPlayer(function(current){
								return get.sgn(value)==get.sgn(get.attitude(player,current))
							})) return 1;
							return -1;
						},
						ai2:function(target){
							var player=_status.event.player;
							if(get.value(ui.selected.cards[0],player,'raw')<0) return -get.attitude(player,target);
							return get.attitude(player,target);
						},
						gived:event.gived,
					});
					'step 2'
					if(result.bool){
						if(!event.logged){
							player.logSkill('gzjiewang3');
							event.logged=true;
						}
						player.line(result.targets[0]);
						result.targets[0].gain(result.cards[0],player,'giveAuto');
						event.gived.add(result.targets[0]);
						event.count--;
						if(event.count) event.goto(1);
					}
				},
			},
			gzquanshi:{
				group:['gzquanshi_more','gzquanshi_less'],
				subSkill:{
					more:{
						audio:'gzmizhao',
						trigger:{source:'damageBegin1'},
						direct:true,
						filter:function(event,player){
							return player!=event.player;
						},
						content:function(){
							'step 0'
                             player.judge(function(card){ 
                               if(get.color(card)=='black') return 3; 
                                 return -3; 
                            }); 
                            "step 1" 
                             if(result.bool==true){ 
                               trigger.num++; 
                             } 
                             else event.finish();
						}
					},
					less:{
						audio:'gzmizhao',
						trigger:{player:'damageBegin2'},
						filter:function(event,player){
							return event.source&&player!=event.source;
						},
						direct:true,
						content:function(){
							"step 0"
                             player.judge(function(card){ 
                               if(get.color(card)=='red') return 3; 
                                 return -3; 
                            }); 
                            "step 1" 
                             if(result.bool==true){ 
                               trigger.num--; 
                             } 
                             else event.finish();
						}
					}
				},
				ai:{
					expose:0.2,
					threaten:1.5
				}
			},
			gzjuebi:{
				audio:'tianming',
				unique:true,
				forceunique:true,
				group:['gzjuebi_swap','gzjuebi_gain'],
				ai:{
					threaten:1.2,
				},
				subSkill:{
					swap:{
						trigger:{global:'equipAfter'},
						direct:true,
						filter:function(event,player){
							if(event.player==player||!player.countCards('e',{subtype:'equip5'})) return false;
	                   return event.card.name=='jiangjunling';
						},
						check:function(event,player){
							if(get.attitude(player,target)<=0) return player.countCards('e',{subtype:['equip2']})==1;
							return true;
						},
						content:function(){
							'step 0'
							player.chooseBool('是否发动【决愎】，与'+get.translation(trigger.player)+'交换装备区内的宝物牌？');
							'step 1'
							if(result.bool){
								player.logSkill('gzjuebi',trigger.player);
								event.cards=[player.getCards('e',{subtype:'equip5'}),trigger.player.getCards('e',{name:'jiangjunling'})];
								player.lose(event.cards[0],ui.special);
								trigger.player.lose(event.cards[1],ui.special);
								if(event.cards[0].length) player.$give(event.cards[0],trigger.player);
								if(event.cards[1].length) trigger.player.$give(event.cards[1],player);
							}
							else event.finish();
							'step 2'
							for(var i=0;i<event.cards[1].length;i++) player.equip(event.cards[1][i]);
							for(var i=0;i<event.cards[0].length;i++) trigger.player.equip(event.cards[0][i]);
						},
					},
			gain:{
				trigger:{player:'phaseJieshuBegin'},
				forced:true,
				unique:true,
				filter:function(event,player){
					if(game.hasPlayer(function(current){
						return current.countCards('ej',function(card){
							return card.name=='jiangjunling';
						});
					})){
						return true;
					}
					for(var i=0;i<ui.discardPile.childElementCount;i++){
						if(ui.discardPile.childNodes[i].name=='jiangjunling'){
							return true;
						}
					}
					return false;
				},
				content:function(){
					var target=game.findPlayer(function(current){
						return current!=player&&(current.countCards('e',{name:'jiangjunling'}));
					});
					if(target&&target.countGainableCards(player,'he')){
						player.line(target,'green');
						player.gainPlayerCard(target,true);
					}
				},
			},
		}
	},

//钟会削弱
			gzpaiyiy:{
				audio:'paiyi',
				enable:'phaseUse',
				filter:function(event,player){
					return player.getStorage('gzquanji').length>0&&!player.hasSkill('gzquanji2');
				},
				chooseButton:{
					dialog:function(event,player){
						return ui.create.dialog('排异',player.storage.gzquanji,'hidden')
					},
					backup:function(links,player){
						return {
							audio:'paiyi',
							filterTarget:true,
							filterCard:function(){return false},
							selectCard:-1,
							card:links[0],
							delay:false,
							content:lib.skill.gzpaiyiy.contentx,
							ai:{
								order:10,
								result:{
									target:function(player,target){
	  							var num=player.getStorage('gzquanji').length-1;
	  							if(num==0){
	  								if(target.countCards('h')>player.countCards('h')) return get.damageEffect(target,player,target);
	  								return 0;
	  							}
	if(player.hp==1&& player.countCards('h',{name:['tao','jiu']})==0) return 0;	  							if(player.needsToDiscard()&&!player.getEquip('zhuge')&&!player.hasSkill('new_paoxiao')) return 0;
	  							return 1;
	  						}
	  					},
							},
						}
					},
					prompt:function(){return '请选择【排异】的目标'},
				},
				contentx:function(){
					"step 0"
					var card=lib.skill.gzpaiyiy_backup.card;
					game.cardsDiscard(card);
					player.$throw(card);
					player.storage.gzquanji.remove(card);
					game.log(card,'进入了弃牌堆');
					if(!player.storage.gzquanji.length){
						player.unmarkSkill('gzquanji');
					}
					else{
						player.markSkill('gzquanji');
					}
					player.syncStorage('gzquanji');
					game.delayx();
					"step 1"
					var num=player.getStorage('gzquanji').length;
					if(num) target.draw(num);
					"step 2"
					if(target.countCards('h')>player.countCards('h')||target==player){
						target.damage();
						player.addTempSkill('gzquanji2');
					}
				},
				ai:{
					order:function(item,player){
						var num=player.getStorage('gzquanji').length;
						if(num==1) return 8;
						return 1;
					},
					result:{
						player:1,
					},
				},
			},
			gzquanji2:{charlotte:true},

//常规武将
			gzwushengy:{
				audio:'wusheng',
				enable:'phaseUse',
                group:"wusheng",
				filterCard:function(card){
					return get.suit(card)=='spade';
				},
				viewAs:{name:'shuiyanqijunx'},
				viewAsFilter:function(player){
					if(!player.countCards('hs',{suit:'spade'})) return false;
				},
				position:'hs',
				prompt:'将一张♠牌当水淹七军使用',
				check:function(card){
					var player=_status.currentPhase;
					if(player.countCards('h')>player.hp){
						return 6-get.value(card);
					}
					return 3-get.value(card)
				},
				ai:{
					thunderAttack:true,
				},
			},
			gzyinghuny:{
				audio:'yinghun',
				trigger:{player:'phaseZhunbeiBegin'},
				filter:function(event,player){
					return player.isDamaged()||player.isMinEquip();
				},
				direct:true,
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt2('gzyinghuny'),function(card,player,target){
						return player!=target;
					}).set('ai',function(target){
						var player=_status.event.player;
						if(target.countCards('he')==0){
							return 0;
						}
						if(get.attitude(_status.event.player,target)>0){
							return 10+get.attitude(_status.event.player,target);
						}
						if(player.getDamagedHp()<=1){
							return -1;
						}
						return 1;
					});
					"step 1"
					if(result.bool){
						event.num=Math.max(1,player.getDamagedHp());
						player.logSkill(event.name,result.targets);
						event.target=result.targets[0];
						if(event.num==1){
							event.directcontrol=true;
						}
						else{
							var str1='摸'+get.cnNumber(event.num,true)+'弃一';
							var str2='摸一弃'+get.cnNumber(event.num,true);
							player.chooseControl(str1,str2,function(event,player){
								return _status.event.choice;
							}).set('choice',get.attitude(player,event.target)>0?str1:str2);
							event.str=str1;
						}
					}
					else{
						event.finish();
					}
					"step 2"
					if(event.directcontrol||result.control==event.str){
						event.target.draw(event.num);
						event.target.chooseToDiscard(true,'he');
					}
					else{
						event.target.draw();
						event.target.chooseToDiscard(event.num,true,'he');
					}
				},
				ai:{
					threaten:function(player,target){
						if(target.hp==target.maxHp) return 0.5;
						if(target.hp==1) return 2;
						if(target.hp==2) return 1.5;
						return 0.5;
					},
					maixie:true,
				}
			},
			gznijianx:{
				audio:'zhouxuan',
				filter:function(event,player){
					if(player.countDisabled()>=5||event.player.countDisabled()>=5) return false;
					return event.player!=player&&event.card&&(event.card.name=='sha'||get.type(event.card)=='trick');
				},
				logTarget:'player',
				check:function(event,player){
					if(event.getParent().excluded.contains(player)) return false;
					if(get.attitude(player,event.player)>0){
						return false;
					}
					if(get.tag(event.card,'respondSha')){
						if(player.countCards('h',{name:'sha'})==0){
							return true;
						}
					}
					else if(get.tag(event.card,'respondShan')){
						if(player.countCards('h',{name:'shan'})==0){
							return true;
						}
					}
					else if(get.tag(event.card,'damage')){
						if(event.card.name=='shuiyanqijunx') return player.countCards('e')==0;
						return true;
					}
					return false;
				},
				trigger:{target:'useCardToTargeted'},
				content:function(){
					"step 0"
					trigger.getParent().excluded.add(player);
					"step 1"
					var list1=[];
					for(var i=1;i<6;i++){
						if(!player.isDisabled(i)) list1.add((i==3||i==4)?6:i);
					}
					var num=list1.randomGet();
					if(num!=6) player.disableEquip(num);
					else{
						player.disableEquip(3);
						player.disableEquip(4);
					}
					"step 2"
					var list2=[];
					for(var i=1;i<6;i++){
						if(!trigger.player.isDisabled(i)) list2.add((i==3||i==4)?6:i);
					}
					var num=list2.randomGet();
					if(num!=6) trigger.player.disableEquip(num);
					else{
						trigger.player.disableEquip(3);
						trigger.player.disableEquip(4);
					}
				},
				ai:{
					expose:0.3
				}
			},
			gzhaowux:{
				audio:"fengji",
				trigger:{player:'phaseUseBegin'},
				check:function(event,player){
					if(player.hasJudge('lebu')) return false;
					return player.hp>1;
				},
				content:function(){
					'step 0'
					player.draw(3).gaintag=['gzhaowux'];
					player.addTempSkill('gzhaowux2');
					player.addTempSkill('gzhaowux3');
				},
			},
			gzhaowux2:{
				trigger:{player:'phaseUseEnd'},
				forced:true,
				charlotte:true,
				mod:{
					aiOrder:function(player,card,num){
						if(get.itemtype(card)=='card'&&card.hasGaintag('gzhaowux')) return num+2;
					},
					aiValue:function(player,card,num){
						if(get.itemtype(card)=='card'&&card.hasGaintag('gzhaowux')) return 0;
					},
				},
				filter:function(event,player){
					return player.countCards('h',function(card){
						return card.hasGaintag('gzhaowux');
					})>0;
				},
				content:function(){
					player.loseHp(player.countCards('h',function(card){
						return card.hasGaintag('gzhaowux');
					}));
					player.removeGaintag('gzhaowux');
				},
			},
			gzhaowux3:{
				audio:"fengji",
				trigger:{player:"phaseJieshuBegin"},
				forced:true,
				filter:function(event,player){
					return !player.getHistory('lose',function(evt){
						return evt.type=='discard';
					}).length;
				},
				content:function(){
					'step 0'
	player.chooseTarget(get.prompt2('gzhaowux'),function(card,player,target){
						return target.isFriendOf(player);
					}).set('ai',function(target){
						return get.attitude(_status.event.player,target);
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzhaowux',result.targets);
						result.targets[0].mayChangeVice();
					}
				},
			},
            gzfandix:{
				    audio:'drlt_xiongluan',
                    unique:true,
                    enable:"phaseUse",
                    filter:function (event,player){
                        return !player.storage.gzfandix;
                    },
                    init:function (player){
                        player.storage.gzfandix=false;
                    },
                    mark:true,
                    intro:{
                        content:function (type){
                           return get.translation(type)+'牌';
                        },
                     },
                     skillAnimation:"epic",
                     animationColor:"thunder",
                     prepare:function (cards,player){
                        player.line(game.players);
                        for(var i=0;i<game.players.length;i++){
                           if(game.players[i]!=player){
                              game.players[i].animate('target');
                           }
                        }
                     },
                     content:function (){
                         "step 0"
                         player.unmarkSkill('gzfandix')
                         player.storage.gzfandix=true;
                         event.current=player.next;
                         "step 1"
                         event.current.animate('target');
                         var e=event.current;
                         if(e.get('h').length==0&&event.current.next!=player){
                              event.current=event.current.next;
                              game.delay(0.5);
                              event.goto(1);
                         }
                         else{
                            e.chooseCard('展示一张手牌',true).set('ai',function(card){
                               if(get.color(card)=='red'&&Math.random()<0.7) return 1
                               return 0;
                            });
                         }
                        "step 2"
                        var e=event.current;
                        var card=result.cards;
                        e.showCards(card);
                        e.storage.gzfandix=get.color(card);
                        game.addVideo('storage',e,['gzfandix',e.storage.gzfandix]);
                        e.markSkill('gzfandix');
                        if(event.current.next!=player){
                           event.current=event.current.next;
                           game.delay(0.5);
                           event.goto(1);
                        }
                        "step 3"
                        player.chooseControl('红色','黑色').ai=function(){
                        var num1=0;
                        var num2=0;
                        var att=ai.get.attitude(player,game.players[i])
                        for(var i=0;i<game.players.length;i++){
                        if(att>0){
                           if(game.players[i].storage.gzfandix=='red'){
                               num1++;
                            }
                           if(game.players[i].storage.gzfandix=='black'){
                               num2++;
                            }
                         }
                         else{
                             if(game.players[i].storage.gzfandix=='red'){
                                num1--;
                             }
                             if(game.players[i].storage.gzfandix=='black'){
                                num2--;
                             }  
                         }
                    }
                    if(num1>=num2) return '红色'
                    return '黑色'
                  }
                  'step 4'
                  if(result.control=='红色'){
                     for(var i=0;i<game.players.length;i++){
                          if(game.players[i].storage.gzfandix=='red'){
                               game.players[i].draw(2);
                          }
                          if(game.players[i].storage.gzfandix=='black'){
                               game.players[i].chooseToDiscard(2,true,'he');
                          }
                      }
                  }
                  else{
                       for(var i=0;i<game.players.length;i++){
                           if(game.players[i].storage.gzfandix=='black'){
                               game.players[i].draw(2);
                           }
                           if(game.players[i].storage.gzfandix=='red'){
                               game.players[i].chooseToDiscard(2,true,'he');
                           }
                       }
                   }
                   "step 5"
                   for(var i=0;i<game.players.length;i++){
                      game.players[i].unmarkSkill('gzfandix');
                   }
                },
                ai:{
                    order:6,
                    result:{
                        player:function (player){
                           if(game.phaseNumber<game.players.length*2) return 0;
                           return 1;
                        },
                    },
                },
            },
            gzbaiyoux:{
                trigger:{
                    player:"phaseDiscardEnd",
                },
				audio:'drlt_congjian',
                filter:function (event,player){
                    return player.countCards('h','sha')==0;
                },
                frequent:true,
                content:function (){
                   'step 0'
                   player.showHandcards();
                   'step 1'
				   player.chooseDrawRecover(2,true);
                   'step 2'
                   player.addTempSkill('gzbaiyoux2',{player:'phaseBegin'});
                },
                ai:{
                    expose:0.2,
                },
            },
            gzbaiyoux2:{
                global:"gzbaiyoux3",
                unique:true,
                forceunique:true,
				audio:'drlt_congjian',
            },
            gzbaiyoux3:{
                mod:{
                   targetInRange:function(card,player,target){ 
                        if(target.hasSkill('gzbaiyoux2')){ 
                              return true; 
                        } 
                    },
                }, 
            },
			gzshouyex:{
                trigger:{
                    player:['phaseEnd','damageEnd','phaseZhunbeiBegin'], 
                },
				frequent:true,
				audio:'shouye',
                filter:function(event,player){
                    return !player.countCards('e');
                },
				content:function(){
					'step 0'
					player.chooseCardButton(3,true,get.cards(3),'按顺序将卡牌置于牌堆顶（先选择的在上）').set('ai',function(button){
						return get.value(button.link);
					});
					'step 1'
					if(result.bool){
						var list=result.links.slice(0);
						while(list.length){
							ui.cardPile.insertBefore(list.pop(),ui.cardPile.firstChild);
						}
						game.updateRoundNumber();
					}
					'step 2'
					player.draw();
				}
			},
			gzluanjianx:{
				trigger:{
					player:'gainAfter',
				},
				forced:true,
				usable:1,
				audio:'gangzhi',
				filter:function(event,player){
					var num1=player.countCards('h')-player.hp-event.cards.length;
					var num2=player.countCards('h')-player.hp;
					return event.getParent('phaseDraw').player!=player&&num2>0&&num1<=0;
				},
				content:function(){
					"step 0"
                player.chooseControl().set('choiceList',[
                    '将手牌数调整至与体力值相同，视为使用一张【万箭齐发】',
                    '失去1点体力，然后本回合你使用牌无次数限制',
                ]).set('ai',function(){
                     var list1=[];
                     var list2=[];
                     var num=get.attitude(player,event.player);
                     var players=game.filterPlayer();
                     for(var i=0;i<players.length;i++){
                        if(get.attitude(player,players[i])>0) list1.push(players[i]);
                        else if(get.attitude(player,players[i])<0) list2.push(players[i]);
                    }
                    if(list2>list1) return 0;
                    if(player.hp==1) return 0;
                    if(player.hasSkill('gzluanjianx_buff')||player.hasSkill('gzrekuangcai')) return 0;
                    if(_status.currentPhase==player&&player.hp>1&&player.countCards('h','sha')>2) return 1;
                    return 0;
				});
					"step 1"
					if(result.index==0){
						var num=player.countCards('h')-player.hp;
						player.chooseToDiscard(num,true,'h');
						var targets=game.filterPlayer(function(current){
							return player.canUse('wanjian',current);
						});
						targets.sort(lib.sort.seat);
						player.useCard({name:'wanjian'},targets);
					}
					else{
						player.loseHp();
						player.addTempSkill('gzluanjix_buff');
					}
				},
			},
			gzluanjix_buff:{
				forced:true,
				mod:{
					cardUsable:function(card,player,num){
						return Infinity;
					},
				},
			},
			gzlvlix:{
				trigger:{player:'phaseBegin'},
				audio:'lvli',
				forced:true,
				priority:2021,
				filter:function(event,player){
					if(_status._aozhan) return false;
					return get.mode()=='guozhan';
				},
				content:function(){
					"step 0"
					var color=get.groupnature(player.group,"raw");
					if(player.isUnseen()) color='fire';
					player.$fullscreenpop('鏖战模式',color); 
					"step 1"
                    var players=game.players.slice(0).sortBySeat();
                    for(var i=0;i<players.length;i++){
　　　　　　　　　　   players[i].addTempSkill('aozhan');
                    };
				},
			},
			gzshishix:{
                audio:"ext:国战补充:1",
				trigger:{player:'phaseDrawBegin1'},
				filter:function(event,player){
					return !event.numFixed;
				},
				forced:true,
				content:function(){
					"step 0"
					trigger.changeToZero();
					event.num=1+game.countPlayer(function(current){
						return current.group==player.group;
					});
					player.draw(event.num);
					"step 1"
					if(event.num==2){
						player.loseHp();
						player.draw(3); 
						player.addTempSkill('gzlingren_addsha','phaseUseEnd');
					}
					else event.finish();
				}
			},
			gzqingcex:{
                audio:"drlt_qingce",
				trigger:{global:"discardAfter"},
				usable:1,
				viceSkill:true,
				init:function(player){					  if(player.checkViceSkill('gzqingcex')&&!player.viceChanged){
				   player.removeMaxHp();
				   }
				},
				filter:function(event,player){
					if(player!=_status.currentPhase) return false;
					if(event.player==player) return false;
					if(event.cards){
						for(var i=0;i<event.cards.length;i++){
							if(event.cards[i].position!='d')
							return true;
						}
					}
					return event.player.storage.disableEquip!=undefined&&event.player.storage.disableEquip.length<5;
				},
				content:function(){
					trigger.player.chooseToDisable();
				},
			},
			gzzhengrongx:{
				trigger:{
					source:"damageSource",
				},
				audio:"drlt_zhenrong",
				filter:function(event,player){
					return event.player!=player&&event.player.countCards('he');
				},
				check:function(event,player){
					return get.attitude(player,event.player)<0;
				},
				content:function (){
					"step 0"
					if(trigger.player.countCards('h')>player.countCards('h')){
						player.discardPlayerCard(trigger.player,'he',true);
					}
					else player.draw();
				},
			},
			gzxiansix:{
				trigger:{
					global:"dying",
				},
                audio:"ext:国战补充:1",
				filter:function (event,player){
					return player!=event.player;
				},
				check:function (event,player){
					return get.attitude(player,event.player)>0&&(player.countCards('h',{name:['tao','jiu']})>0||player.hasMark('zhulianbihe_mark'));
				},
				content:function (){
					"step 0"
                     event.num=player.hp-trigger.player.hp; 
                     trigger.player.changeHp(event.num);
					"step 1"
                     player.loseHp(player.hp); 
				},
			},
			gzyitongx:{
				trigger:{player:'die'},
				direct:true,
                audio:"ext:国战补充:1",
				group:'gzyitongx_dying',
				skillAnimation:true,
				animationColor:'wood',
				forceDie:true,
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt2('gzyitongx'),function(card,player,target){
						return player!=target;
					}).set('forceDie',true).set('ai',function(target){
						var num=get.attitude(_status.event.player,target);
						if(num>0){
							if(target.isHealthy()){
								num+=3.5;
							}
	if(target.hasSkill('new_paoxiao')||target.hasSkill('new_tieji')){
								num+=3;
							}							if(target.hasSkill('liegong')||target.hasSkill('qianxi')||target.hasSkill('wushuang')||target.hasSkill('wushen')){
								num+=2.5;
							}
							if(target.hasSkill('gzyongmoux')||target.hasSkill('gzxiwux')){
								num+=2;
							}
							if(target.hasSkill('gzfuhunx')||target.hasSkill('gzfengpox')||target.hasSkill('gzhuxiao')||target.hasSkill('qimou')||target.hasSkill('qiangwu')){
								num+=1.5;
							}
							if(target.hasSkill('gzwushengy')||target.hasSkill('yongjue')||target.hasSkill('gzbenxi')||target.hasSkill('new_longdan')){
								num+=1;
							}
							if(target.countCards('h')>target.maxHp){
								num+=0.5;
							}
						}
						return num;
					});
					"step 1"
					if(result.bool){
						var cards=player.getCards('hej');
						var target=result.targets[0];
						player.$give(cards,target);
						player.logSkill('gzyitongx',target);
						player.line(target,'green');
						target.gain(cards);
						target.addSkill('gzyitongx2');
					}
				},
				ai:{
					expose:0.5,
				}
			},
			gzyitongx_dying:{
				trigger:{player:'dying'},
				forced:true,
                audio:"ext:国战补充:1",
				filter:function(event,player){
					return player.countCards('h')<player.maxHp;
				},
				content:function(){
					player.draw(player.maxHp-player.countCards('h'));
				},
			},
			gzyitongx2:{
				trigger:{
					source:"damageBegin1",
					player:"damageBegin3",
				},
				forced:true,
                audio:"ext:国战补充:1",
				content:function (){
					trigger.num++;
				},
				ai:{
					damageBonus:true,
				},
　　		},
			gzchongaix:{
				enable:'phaseUse',
				usable:1,
                audio:"ext:国战补充:1",
				filter:function(event,player){
					return player.countCards('h')>0&&game.hasPlayer(function(current){
						return current!=player&&current.countCards('h')>0;
					});
				},
				filterTarget:function(card,player,target){
					return target!=player&&target.countCards('h')>0;
				},
				filterCard:true,
				delay:false,
				charlotte:true,
				position:'h',
				discard:false,
				lose:false,
				content:function(){
					'step 0'
					player.choosePlayerCard(true,target,'h');
					'step 1'
					event.card=result.cards[0];
					player.$compare(cards[0],target,event.card);
					game.log(player,'展示了',cards[0]);
					game.log(target,'展示了',event.card)
					game.delay(3.5);
					'step 2'
					game.broadcastAll(ui.clear);
					if(get.color(cards[0],player)==get.color(card,target)){
						target.damage('nocard');
						target.discard(card).animate=false;
					}
					else player.gainPlayerCard(target,true,'hej');
				},
				mod:{
					maxHandcard:function(player,num){
						return num+2;
					},
				},
				ai:{
					order:7,
					result:{
						target:-1,
					},
				},
			},
			 gzchuilianx:{
				audio:"ext:国战补充:1",
				trigger:{player:'phaseEnd'},
				filter:function(event,player){
                   return player.inline()||player.sieged()||player.siege();
				},
				check:function(event,player){
					return game.countPlayer(function(current){
						return player.next==current&&get.attitude(player,current)>0;
				   })||game.countPlayer(function(current){
						return player.previous==current&&get.attitude(player,current)<0;
				   })>0;
				},
				content:function(){
					'step 0'
	player.chooseTarget(get.prompt('gzchuilianx'),function(card,player,target){
						return  player.next==target||player.previous==target;
					}).ai=function(target){
                          if(player.next==target) return -ai.get.attitude(player,target);
                          if(player.previous==target) return ai.get.attitude(player,target);
					};
					'step 1'
					if(result.bool){
						game.swapSeat(player,result.targets[0]);
					}else{
						event.finish();
					};
				},                
			},
            gzlingyinx:{
                group:"gzlingyinx2",
                enable:"phaseUse",
                usable:1,
                audio:"ext:国战补充:1",
                filterTarget:function(card,player,target){
                    return player!=target&&target.countCards('h');
                },
                content:function (){
                    'step 0'
                    player.addTempSkill('gzlingyinx2');
                    'step 1'
                    event.card=target.getCards('h').randomGet();
                    var fakecard={name:event.card.name,suit:event.card.suit,number:event.card.number,nature:event.card.nature};
                    target.showCards(game.createCard(fakecard),get.translation(target)+'展示了'+get.translation(event.card));
                    player.storage.gzlingyinx=event.card;
                    player.storage.gzlingyinx_card=fakecard;
                    game.broadcastAll(function(name){
                        lib.skill.gzlingyinx2.viewAs=fakecard;
                    },fakecard);
                    var next=game.createEvent('gzlingyinx3');
                    event.next.remove(next);
                    event.getParent(3).after.push(next);
                    next.player=player;
                    next.setContent(lib.skill.gzlingyinx3.content);                    
                },
                ai:{
                    order:9,
                    result:{
                        target:function (player,target){
                            if(!target.countCards('h')) return 2;
                            return 1;
                        },
                    },
                },
            },
            gzlingyinx2:{
                enable:"phaseUse",
				usable:1,
                filter:function (event,player){
                    if(!player.storage.gzlingyinx) return false;
                    if(get.type(player.storage.gzlingyinx_card)=='equip') return false;
                    return game.checkMod(player.storage.gzlingyinx,player,'unchanged','cardEnabled2',player)!==false;
                },
                filterCard:true,
                popname:true,
                filterTarget:function (card,player,target){
                    return lib.filter.filterTarget(player.storage.gzlingyinx_card,player,target);
                },
                check:function (card){
                    return 8-get.value(card);
                },
                ai:{
                    order:6,
                    result:{
                        player:1,
                    },
                },
            },
            gzlingyinx3:{
                trigger:{
                    player:"phaseJieshuBegin",
                },
                silent:true,
                content:function (){
                    delete player.storage.gzlingyinx;
                    delete player.storage.gzlingyinx_card;
                },
                forced:true,
                popup:false,
            },
			gzyixiaox:{
				enable:'phaseUse',
                audio:"ext:国战补充:2",
				usable:1,
				filter:function(event,player){
					if(player.inline()) return true;
					if(player.identity=='unknown'||player.identity=='ye') return false;
					return game.hasPlayer(function(current){
						return current!=player&&current.isFriendOf(player);
					});
				},
                filterCard:function(card){
                    return get.type(card)!='basic';
　　　　　　　　},
　　			position:'hes',
				notarget:true,
				content:function(){
					if(player.inline()){
						var targets=game.filterPlayer(function(current){
							return player.inline(current);
						});
						player.line(targets);
						game.asyncDraw(targets);
					}
					else if(player.getNext()){
						var list=game.filterPlayer(function(current){
							return current!=player&&current.isFriendOf(player);
						});
						if(list.length){
							list.sort(function(a,b){
								return get.distance(player,a,'absolute')-get.distance(player,b,'absolute');
							});
							player.line(list[0]);
							game.swapSeat(list[0],player.getNext(),true,true);
						}
					}
				},
				ai:{
					order:6.5,
					result:{
						player:1,
					},
				}
			},
			gzmutux:{
				enable:'phaseUse',
                audio:"ext:国战补充:1",
				usable:1,
				filter:function(event,player){
					if(player.identity=='unknown'||player.identity=='ye') return false;
					if(get.population(player.identity)<=1) return false;
					return game.hasPlayer(function(current){
						return current!=player&&current.identity==player.identity&&!player.inline(current);
					});
				},
                filterCard:function(card){
                    return get.type(card)=='equip';
　　　　　　　　},
　　			position:'hes',
				notarget:true,
				content:function(){
					var targets=game.filterPlayer(function(current){
						return current.identity==player.identity;
					});
					targets.sortBySeat();
					for(var i=1;i<targets.length;i++){
						game.swapSeat(targets[i],targets[i-1].next,false);
					}
					game.log(get.translation(player.identity)+'势力角色摆成了队列')
				},
				ai:{
					order:7,
					result:{
						player:1,
					},
				}
			},
			gzyichix:{
				enable:'phaseUse',
                audio:"ext:国战补充:1",
				usable:1,
				filter:function(event,player){
					if(!player.countCards('h')) return false;
					return game.hasPlayer(function(current){
						return lib.skill.gzyichix.filterTarget(null,player,current);
					});
				},
				filterCard:true,
				selectCard:1,
				filterTarget:function(card,player,target){
					if(player.identity==target.identity) return false;
					if(target.identity=='unknown'||target.identity=='ye') return false;
					return target.identity==target.next.identity||target.identity==target.previous.identity
				},
				selectTarget:-1,
				content:function(){
					"step 0"
					var next=target.chooseToRespond({name:'shan'});
					next.ai=function(card){
						if(get.damageEffect(target,player,target)>=0) return 0;
						return 1;
					};
					next.autochoose=lib.filter.autoRespondShan;
					"step 1"
					if(result.bool==false){
						target.damage();
					}
				},
				ai:{
					order:9,
					result:{
						player:1,
						target:-1.5,
					},
				},
			},
			gzchongxix:{
                audio:"ext:国战补充:1",	
				enable:'chooseToUse',
				viewAs:{name:'guohe'},
				filterCard:{suit:'club'},
				viewAsFilter:function(player){
					return player.countCards('hes',{suit:'club'})>0;
				},
				position:'hes',
				mod:{
					selectTarget:function(card,player,range){
						if(card.name=='guohe'&&range[1]!=-1) range[1]++;
					},
				},
				check:function(card){
					var player=_status.event.player;
					if(game.countPlayer(function(current){
						return player.canUse('guohe',current)&&get.effect(current,{name:'guohe'},player,player)>0;
					})>1) return 6-get.value(card);
					return 4-get.value(card);
				},
			},
			gzxuanliex:{
				trigger:{player:'phaseDrawEnd'},
                audio:"ext:国战补充:1",	
				filter:function(event,player){
					var hs=player.getCards('h');
					return hs.length>0&&player.getHistory('gain',function(evt){
						if(evt.getParent().name!='draw'||evt.getParent('phaseDraw')!=event) return false;
						for(var i of evt.cards){
							if(hs.contains(i)) return true;
						}
						return false;
					}).length>0;
				},
				check:function(event,player){
					var hs=player.getCards('h'),cards=[],suits=[];
					player.getHistory('gain',function(evt){
						if(evt.getParent().name!='draw'||evt.getParent('phaseDraw')!=event) return false;
						for(var i of evt.cards){
							if(hs.contains(i)){
								cards.add(i);
								suits.add(get.suit(i,player));
							}
						}
					});
					return cards.length==suits.length;
				},
				content:function(){
					var hs=player.getCards('h'),cards=[],suits=[];
					player.getHistory('gain',function(evt){
						if(evt.getParent().name!='draw'||evt.getParent('phaseDraw')!=trigger) return false;
						for(var i of evt.cards){
							if(hs.contains(i)){
								cards.add(i);
								suits.add(get.suit(i,player));
							}
						}
					});
					player.showCards(cards,get.translation(player)+'发动了【烜烈】');
					if(cards.length==suits.length) player.draw();
				},
			},
			gztucunx:{
                audio:"ext:国战补充:1",	
				trigger:{player:'phaseUseBegin'},
				filter:function(event,player){
					//if(event.player!=player) return false;
					return game.hasPlayer(function(current){return current!=player&&current.identity=='unknown'})||player.countCards('h')>=2;
				},
				check:function(event,player){
					if(player.countCards('h',function(card){return get.value(card)<7})){
						if(player.isUnseen()) return Math.random()>0.7;
						return true;
					}
				},
				content:function(){
					'step 0'
					var choices=[];
					if(game.hasPlayer(function(current){return current.isUnseen()})) choices.push('选择一名未确定势力的角色');
					if(game.hasPlayer(function(current){return current!=player&&!current.isUnseen()})&&player.countCards('h')>=2) choices.push('与一名已确定势力的角色交换两张牌');
					if(choices.length==1){
						event._result={index:choices[0]=='选择一名未确定势力的角色'?0:1};
					}
					else player.chooseControl().set('ai',function(){
						if(choices.length>1){
							var player=_status.event.player;
							if(!game.hasPlayer(function(current){
								return !current.isUnseen()&&current.getEquip('yuxi')||current.hasSkill('gzyongsi')&&!game.hasPlayer(function(current){
									return current.getEquip('yuxi');
								});
							})&&game.hasPlayer(function(current){return current!=player&&current.isUnseen()})){
								var identity;
								for(var i=0;i<game.players;i++){
									if(game.players[i].isMajor()){identity=game.players[i].identity;break;}
								}
							}
							if(!player.isUnseen()&&player.identity!=identity&&get.population(player.identity)+1>=get.population(identity)) return 0;
							return 1;
						}
						return 0;
					}).set('prompt','图存：请选择一项').set('choiceList',choices);
					'step 1'
					if(result.index==0) player.chooseTarget('请选择一名未确定势力的角色',function(card,player,target){
						return target!=player&&target.identity=='unknown'
					},true);
					else player.chooseCardTarget({
						prompt:'请用两张牌与一名已确定势力的其他角色交换',
						selectCard:2,
						position:'he',
						filterCard:true,
						filterTarget:function(card,player,target){
							return target!=player&&target.identity!='unknown';
						},
						ai1:function(card){return 5-get.value(card)},
						ai2:function(target){
							var player=_status.event.player;
							var att=get.attitude(player,target);
							return att/target.countCards('h');
						}
					}).set('forced',true);
					'step 2'
					event.target=result.targets[0];
					player.line(result.targets,'green');
					if(result.cards.length){
						event.cards=result.cards;
						result.targets[0].gain(result.cards,player,'give');
					}
					else{
						player.gainPlayerCard(result.targets[0],'he',true);
						event.finish();
					}
					'step 3'
					target.chooseCard('he',2,true);
					'step 4'
					if(result.cards){
						player.gain(result.cards,target,'giveAuto');
					}
				},
			},
			gzjinxiux:{
				trigger:{player:'phaseEnd'},
				forced:true,
			    audio:'jinzhi',
				filter:function(event,player){
					return player.countCards('h')!=player.hp;
				},
				content:function(){player.draw()},
			},
			gzmanxianx:{
				enable:"phaseUse",
				usable:1,
			    audio:'spguixiu',
				filter:function (event,player){
					return player.countCards('h')>0;
				},
				filterCard:true,
				selectCard:1,
				filterTarget:function (card,player,target){
					return target!=player&&target.countCards('he')>0;
				},
				discard:false,
				delay:false,
				check:function (card){
					return 6-get.value(card);
				},
				content:function (){
					'step 0'
					player.showCards(cards);
					'step 1'
					var tt=target;
					cards[0].fix();
					ui.cardPile.insertBefore(cards[0],ui.cardPile.firstChild);
					player.chooseTarget('选择出杀的目标',true,function(card,player,target){
						return target.canUse('sha',tt)&&player!=target;
					}).set('ai',function(target){
							return get.effect(target,{name:'sha'},_status.event.target,_status.event.player);
						});
					"step 2"
						game.log(player,'指定的出杀目标为',result.targets);
						target.line(result.targets);
						target.chooseToUse('对'+get.translation(result.targets)+'使用一张杀，或令'+get.translation(player)+'获得你的一张牌',{name:'sha'},result.targets[0],-1);
					"step 3"
					if(result.bool==false){
						player.gainPlayerCard('he',target,1,true);
					}
					else target.draw();
				},
				ai:{
					order:1,
					result:{
						player:1,
						target:-1,
					},
				},
			},
			gzfengtangx:{
				trigger:{
					player:"damageEnd",
				},
                audio:"ext:国战补充:1",
				filter:function (event,player){
					return game.countPlayer(function(current){return current.countCards('e')>0})>0;
				},
				content:function (){
					'step 0'
						player.chooseTarget(get.prompt('gzfengtangx'),function(card,player,target){
						return target.countCards('e')>0&&target!=player;;
					}).ai=function(target){
						return -ai.get.attitude(player,target);
					};
					'step 1'
					if(result.bool){
						player.line(event.target1);
						player.logSkill('gzfengtangx');
						event.target1=result.targets[0];
	player.chooseCardButton(lib.translate[result.targets[0].name]+'装备区内的牌',result.targets[0].get('e')).ai=function(button){
							return 1;
						};
					}else{
						event.finish();
					};
					'step 2'
					if(result.bool){
						event.equipCard=result.links[0];
						player.chooseTarget().ai=function(target){
							return ai.get.attitude(player,target);
						};
					}else{
						event.finish();
					};
					'step 3'
					if(result.bool){
						event.target=result.targets[0];
						player.chooseControl(['手牌区','装备区']).set('ai',function(event){
							return '装备区';
						});
					}else{
						event.finish();
					};
					'step 4'
					if(result.control=='手牌区'){
						event.target1.$give(event.equipCard,event.target);
						event.target.gain(event.equipCard,event.target1);
					};
					if(result.control=='装备区'){
						event.target1.$give(event.equipCard,event.target);
						event.target.gain(event.equipCard,event.target1);
						event.target.equip(event.equipCard);
					};
					if(get.subtype(event.equipCard)=='equip3'||get.subtype(event.equipCard)=='equip4'||get.subtype(event.equipCard)=='equip6') player.draw(2);
					if(get.subtype(event.equipCard)=='equip2') player.recover();
					if(get.subtype(event.equipCard)=='equip5') player.mayChangeVice();
					if(get.subtype(event.equipCard)=='equip1'){
					player.chooseTarget('请选择【凤棠】的目标',function(card,player,target){
						return get.distance(player,target,'attack')<=1;
						}).ai=function(target){
							return -ai.get.attitude(player,target);
						};
					}else{
						event.finish();
					};
					'step 5'
					if(result.bool){
						result.targets[0].damage(1,'fire');
					}else{
						event.finish();
					};
				},
			},
			gzshangshix:{
				audio:"shangshi",
                trigger:{
                  global:"damageEnd",
                },
				frequent:true,
				filter:function(event,player){
					return get.distance(player,event.player)<=1&&event.num>0;
				},
				content:function(){
					"step 0"
					event.count=trigger.num;
					"step 1"
					event.count--;
					player.draw();
					"step 2"
					if(event.count>0) event.goto(1);
				},
                ai:{
                    threaten:2.2,
                },
			},
			gzjueqingx:{
				trigger:{source:'damageBegin'},
				forced:true,
                audio:"jueqing",
				content:function(){
                   trigger.source=undefined; 
                   trigger.nosource=true;
				},
				group:'gzjueqingx_damaged',
				subSkill:{
					damaged:{
						trigger:{player:'damageBegin'},
						forced:true,
						audio:"jueqing",
						content:function(){
                           trigger.source=undefined; 
                           trigger.nosource=true;
						},
					}
				},
			},
			gzcanmengx:{
				enable:'phaseUse',
                audio:"ext:国战补充:1",
				filterCard:function(card){
					if(ui.selected.cards.length){
						return get.suit(card)==get.suit(ui.selected.cards[0]);
					}
					return true;
				},
				complexCard:true,
				usable:1,
				selectCard:2,
				check:function(card){
					return 6-get.value(card);
				},
	            intro:{
		           content:function(content,player){
			          var temp1=player.storage.gzcanmengx;
			          if(!temp1.length){
				           return '未使用过任何牌';
			          }else{
				          var str='已使用：'+get.translation(temp1);
				          return str;
			          }
		           },
	          },
	          init:function(player){
                  player.storage.gzcanmengx=[];
              },
              content:function(){
		         "step 0"
		         var list=[];
		         for(var i=0;i<lib.inpile.length;i++){
			        if(get.type(lib.inpile[i])!='trick') continue;
			        var card={name:lib.inpile[i]};
		            if(!player.storage.gzcanmengx.contains(lib.inpile[i])){
				       if(lib.filter.cardEnabled(card,player)){
					      list.push(['卡牌','',lib.inpile[i]]);
				       }	
			        }
		         }
		         if(list.length){
			        player.chooseButton(['你可跳过弃牌阶段并视为使用1张未以此法使用过的普通锦囊牌',[list,'vcard']]).set('ai',function(button){
				        return player.getUseValue({name:button.link[2]});
			        });
		         }
		         else event.finish();
		         "step 1"
		         if(result&&result.bool&&result.links[0]){
			         player.storage.gzcanmengx.push(result.links[0][2]);
			         player.markSkill('gzcanmengx');
                     player.chooseUseTarget({name:result.links[0][2],isCard:true},true);
		            }
	            },
　　　      },
			gzhunwux:{
                audio:"ext:国战补充:1",
				unique:true,
				limited:true,
	            trigger:{player:'phaseEnd'},	
　　			animationColor:'thunder',
				skillAnimation:'legend',
				filter:function(event,player){
					return !player.storage.gzhunwux;
				},
				direct:true,
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt2('gzhunwux'),function(card,player,target){
						return target!=player;
					}).set('ai',function(target){
						if(!_status.event.goon) return 0;
						var player=_status.event.player;
						var att=get.attitude(player,target);
						if(target.sex=='male') return 10;
						if(att<=1) return 0;
						var mode=get.mode();
						return att;
					}).set('goon',!player.hasUnknown());
					'step 1'
					if(result.bool){
						player.awakenSkill('gzhunwux');
						player.storage.gzhunwux=true;
						player.logSkill('gzhunwux',result.targets);
						var target=result.targets[0];
			            if(target.sex=='male'){
							target.addSkill('gzfuji');
                        };
						target.gainMaxHp(true);
						target.recover();
						var mode=get.mode();
					}
				},
				ai:{
					order:1, 
					result:{ 
　　　　　　　　　　　target:0,
　　　　　　　　　　},
　　　　　　　　},
　　　　　　　　mark:true,
				intro:{
					content:"limited",
				},
				init:function (player){
					player.storage.gzhunwux=false;
				},
			},
			gzciqiux:{
				trigger:{source:'damageBegin'},
				forced:true,
                audio:"xinfu_shajue",
				filter:function(event,player){
					return event.card&&event.card.name=='sha'&&event.player.hp==event.player.maxHp&&event.notLink();
				},
				content:function(){
					trigger.num++;
					trigger._gzciqiux3=true;
				},
				group:['gzciqiux2']
			},
			gzciqiux2:{
				trigger:{global:'dying'},
				priority:9,
                audio:"xinfu_shajue",
				filter:function(event,player){
					return event.player!=player&&event.parent._gzciqiux3&&event.parent.source==player;
				},
				check:function(event,player){
					return get.attitude(player,event.player)<0;
				},
				forced:true,
				logTarget:'player',
				content:function(){
					"step 0"
　　　　　　　　    player.chooseJunlingFor(trigger.player);
					"step 1"
                    event.junling=result.junling;
                    event.targets=result.targets;
					"step 2"
trigger.player.carryOutJunling(player,event.junling,targets);
				}
			},
			gzciqiux3:{},
			gzsijiy:{
                audio:"xinfu_sidao",
				trigger:{player:'phaseDiscardEnd'},
				direct:true,
				filter:function(event,player){
					var cards=[];
					player.getHistory('lose',function(evt){
						if(evt.type=='discard'&&evt.getParent('phaseDiscard')==event) cards.addArray(evt.cards2);
					});
					if(cards){
						if(cards.length<2) return false;
						var suits=[];
						for(var i=0;i<cards.length;i++){
							var suit=get.suit(cards[i]);
							if(!cards[i].name=='sha'){
								return false;
							}
							if(suits.contains(suit)){
								return false;
							}
							else{
								suits.push(suit);
							}
						}
						return true;
					}
					return false;
				},
				content:function(){
					player.draw(2);
				},
			},
			gzweinanx:{
                audio:"ext:国战补充:true",
                skillAnimation:"epic",
                animationColor:"metal",
                unique:true,
				mainSkill:true,
				init:function (player){
					if(player.checkMainSkill('gzweinanx')){
						player.removeMaxHp();
					}
				},
                limited:true,
                mark:true,
				trigger:{player:'phaseBegin'},
				content:function(){
			var card=get.cardPile(function(card){return card.name=='chitu'});
					if(card!=undefined){
						player.gain(card,'gain2');
						player.equip(card);
					};
			var card1=get.cardPile(function(card){return card.name=='hanbing'});
					if(card1!=undefined){
						player.gain(card1,'gain2');
						player.equip(card1);
					};
					player.awakenSkill('gzweinanx');
					player.storage.gzweinanx=true;
					player.mayChangeVice();
				},
				ai:{
					order:6, 
					result:{ 
						target:1,
					},
				},
			},
			gzfumanx:{
				global:'gzfumanx_others',
				ai:{
					threaten:function(player,target){
						if(game.hasPlayer(function(current){
							return current!=target&&current.isFriendOf(target);
						})) return 2;
						return 0.5;
					},
				},
				subSkill:{
					others:{
						sub:true,
						enable:'phaseUse',
						usable:1,
						audio:'fuman',
						filter:function(event,player){
							return !player.isUnseen()&&game.hasPlayer(function(current){
									return current!=player&&current.hasSkill('gzfumanx')&&player.isFriendOf(current)&&player.countCards('he');
							})
						},
						position:'he',
						filterCard:true,
						selectCard:2,
						//complexSelect:true,
						//complexCard:true,
						check:function(card){return 11-get.value(card)},
						filterTarget:function(card,player,target){return target!=player&&target.hasSkill('gzfumanx')},
						//selectTarget:1,
						discard:false,
						content:function(){
							'step 0'
							target.gain(cards,player);
							player.$give(2,target);
							'step 1'
				            player.chooseUseTarget('sha');
						},
						ai:{
							order:7,
							result:{
								player:function(player,target){
									if(get.attitude(player,target)>0){
									if(player.needsToDiscard()) return 1;
										if(player.countCards('he')>4) return 1;
										return Math.random()>0.7?1:0;
									}
									return -1;
								},
								target:2,
							}
						},
					},
				},
			},
			gzkangruix:{
                audio:"zhiyi",
				trigger:{
					global:["useCard","respond"],
				},
				filter:function(event,player){
				    return event.player!=player&&event.card.name=='shan';
				},
				check:function(event,player){
					var att=get.attitude(player,event.player);
					var nh=event.player.countCards('h')-player.countCards('h');
　　　　　　　　　　if(att>0&&nh<0) return true;
　　　　　　　　　　if(att<=0&&nh>0) return true;
					return false;
				},
				content:function(){
					"step 0"
					event.num=player.countCards('h');
					event.numx=trigger.player.countCards('h');
					event.numy=player.countCards('h')-trigger.player.countCards('h');
					if(event.num<event.numx){
						trigger.player.chooseToDiscard(event.numx-event.num,true,'h');
					}
					else trigger.player.drawTo(Math.min(5,event.num));
					"step 1"
					if(event.numy>=2){
						trigger.player.chooseToDiscard('he',true);
					}
					if(event.numy<=-2){
						trigger.player.recover();
					}
					else event.finish();
				},
			},
				 gzfengtianx:{
				    audio:'tuntian',
					enable:'phaseUse',
					usable:1,
					filter:function(event,player){
						return player.countCards('h')>player.hp;
					},
					filterCard:true,
					selectCard:function(card,player,target){
						var player=_status.event.player;
						if(player.countCards('h')-player.hp<3) return player.countCards('h')-player.hp;
						return 3;
					},
					filterTarget:function(card,player,target){
						return get.distance(player,target,'attack')<=1&&ui.selected.cards.length>0&&target!=player;
					},
					selectTarget:[0,3],
					check:function(card){
						return 6-get.value(card);
					},
					content:function(){
						target.draw();
					},
					ai:{
						order:11,
						result:{
							target:function(player,target){
								if(game.countPlayer(function(current){return current!=player&&get.distance(player,current,'attack')<=1&&get.attitude(player,current)>0})>0) return 1;
							},
						},
						expose:0.3,
					},
				},
				 gzgongqinx:{
				    audio:'yizhong',
					trigger:{
						target:'shaBefore'
					},
					forced:true,
					filter:function(event,player){
						return event.card.name=='sha'&&get.color(event.card)=='black'&&player.countCards('e')<event.player.countCards('e');
					},
					content:function(){
						trigger.cancel();
					},
					ai:{
						effect:{
							target:function(card,player){
								if(card.name=='sha'&&get.color(card)=='black') return 'zerotarget';
							},
						},
					},
				},
			gzyanghuix:{
                audio:"requanji",
				trigger:{
					player:'damageAfter'
				},
				filter:function(event,player){
				    return event.num>0&&player.maxHp<5;
				},
				frequent:true,
				content:function(){
					"step 0"
					event.count=trigger.num;
					"step 1"
					event.count--;
					player.gainMaxHp(true);
					"step 2"
					if(event.count>0) event.goto(1);
				},
			},
			gzzhulix:{
				trigger:{global:'phaseAfter'},
                audio:"qinwang",
				check:function(event,player){
　　　　　　　　　　if(player.maxHp==5) return true;
					return player.maxHp>3;
				},
				content:function(){
					'step 0'
					if(player.isHealthy()){
						player.draw();
					}
					'step 1'
					player.draw();
					player.loseMaxHp();
					'step 2'
                    player.phaseUse();
				},
			},
			gzxianzhenx:{
				trigger:{player:'shaBegin'},
                audio:"ext:国战补充:1",
				usable:1,
				frequent:true,
				group:['gzxianzhenx2','gzxianzhenx3'],				 							content:function(){
					"step 0"
					if(event.isMine()){
						event.dialog=ui.create.dialog('先阵：猜测对'+get.translation(trigger.target)+'的杀能否命中');
					}
					player.chooseControl('能命中','不能命中','cancel').ai=function(event){
						if(player.hasSkill('wushuang')) return 0;
						if(player.hasSkill('gzxiyingx')) return 0;
						if(player.hasSkill('jianchu')) return 0;
						if(player.hasSkill('gzxionghuox')&&trigger.target.isHealthy()) return 0;
						var equip=trigger.target.getEquip(2);
						if(equip&&equip.name=='bagua') return 1;
						return trigger.target.countCards('h')<2?0:1;
					};
					"step 1"
					if(event.dialog){
						event.dialog.close();
					}
					if(result.control!='cancel'){						player.logSkill(['gzxianzhenx',result.control],trigger.target);
						game.log(player,'猜测'+result.control);
						player.storage.gzxianzhenx=result.control;
						game.delay();
					}
				},
				ai:{
					threaten:1.3
				}
			},
			gzxianzhenx2:{
				trigger:{player:'shaEnd'},
				forced:true,
				popup:false,
				filter:function(event,player){
					return player.storage.gzxianzhenx?true:false;
				},
				content:function(){
					if(player.storage.gzxianzhenx=='不能命中'){
						player.popup('猜测成功');
						player.draw();
					}
					else{
						player.popup('猜测失败');
					}
					delete player.storage.gzxianzhenx;
				}
			},
			gzxianzhenx3:{
				trigger:{player:'shaDamage'},
				forced:true,
				popup:false,
				filter:function(event,player){
					return player.storage.gzxianzhenx?true:false;
				},
				content:function(){
					if(player.storage.gzxianzhenx=='能命中'){
						player.popup('猜测成功');
						player.draw();
					}
					else{
						player.popup('猜测失败');
					}
					delete player.storage.gzxianzhenx;
				}
			},
			gzmingrenx:{
				trigger:{
					global:"dying",
				},
				//priority:6,
				filter:function (event,player){
					return player!=event.player&&(event.player.countCards('h')>0||event.player.isUnseen(2));
				},
				audio:"nzry_mingren",
				check:function (event,player){
					return event.player.isUnseen(2)||get.attitude(player,event.player)>0;
				},
				logTarget:'player',
				line:'thunder',
				content:function (){
					"step 0"
					if(!trigger.player.countCards('h')){
						event._result={index:1};
					}
					else if(!trigger.player.isUnseen(2)){
						event._result={index:0};
					}
					else{
						player.chooseControl().set('choiceList',[
							'观看'+get.translation(trigger.player)+'的手牌并可以获得其中一张牌。',
							'观看'+get.translation(trigger.player)+'的所有暗置的武将牌并摸一张牌。',
						]).ai=function(){return 1};
					}
					"step 1"
					if(result.index==0){
　　　　　　　　　　　　player.gainPlayerCard(trigger.player,'h',true,'visible').set('ai',function(button){
						   return get.value(button.link);
					    });
					}
					else{
						player.viewCharacter(trigger.player,2);
						player.draw();
					}
				},
			},
			gzzhenliangx1:{
				trigger:{
					source:"damageBegin2",
				},
				audio:"nzry_zhenliang",
				filter:function (event,player){
					return event.player.isFriendOf(player);
				},
				direct:true,
				content:function (){
		   "step 0"
					player.chooseToDiscard('he',get.prompt2('gzzhenliangx')).set('ai',function(card){
						return 6-get.value(card);
					}).logSkill=["gzzhenliangx",trigger.player];
					"step 1"
					if(result.bool){
						trigger.cancel();
						trigger.player.draw();
					}
				},
			},
			gzzhenliangx2:{
				trigger:{
					player:"damageEnd",
				},
				audio:"nzry_zhenliang",
				filter:function (event,player){
					return !event.source||!event.source.isFriendOf(player);
				},
				content:function (){
					player.draw();
					if(trigger.source) trigger.source.chooseToDiscard(true);
				},
				ai:{
					"maixie_defend":true,
					threaten:0.9,
				},
			},
			gzzhenliangx:{
				group:["gzzhenliangx1","gzzhenliangx2"],
				audio:"nzry_zhenliang",
			},
			gzxintux:{
				audio:"ext:国战补充:1",
				enable:"phaseUse",
				usable:1,
				check:function (card){return 7-get.value(card)},
				filterCard:true,
				filterTarget:function (card,player,target){
					if(ui.selected.targets.length==0){
						return target.countCards('e')>0;
					}
					var es=ui.selected.targets[0].getCards('e');
					for(var i=0;i<es.length;i++){
						if(target.isEmpty(get.subtype(es[i]))) return true;
					}
					return false;
				},
				discard:false,
				prepare:"give2",
				position:"he",
				targetprompt:["被移走装备","得到装备"],
				selectTarget:2,
				multitarget:true,
				content:function (){
					"step 0"
					 targets[0].gain(cards,player);
					"step 1"
						player.choosePlayerCard(targets[0],'e','将一张装备牌移至目标角色的装备区').set('filterButton',function(button){
							return targets[1].isEmpty(button.link);
						});
					"step 2"
					if(result&&result.links&&result.links.length){
						game.delay(2);
						targets[0].$give(result.links[0],targets[1]);
						targets[1].equip(result.links[0]);
					}
				},
				ai:{
					order:8,
					result:{
						target:function (player,target){
							if(ui.selected.targets.length==0){
								var es=target.getCards('e');
								var value=0;
								for(var i=0;i<es.length;i++){
									if(game.hasPlayer(function(current){
										return current.isEmpty(get.subtype(es[i]));
									})&&get.value(es[i])>value) value=get.value(es[i]);
								}
								return -value;
							}
							else{
								var es=ui.selected.targets[0].getCards('e');
								var value=0;
								for(var i=0;i<es.length;i++){
									if(target.isEmpty(get.subtype(es[i]))&&get.value(es[i])>value) value=get.value(es[i]);
								}
								return value;
							}
						},
					},
				},
			},
			gzsilix:{
				enable:"phaseUse",
				usable:1,
                audio:"ext:国战补充:1",
				filter:function (event,player){
					return player.countCards('h')>0;
				},
				filterCard:true,
				selectCard:1,
				filterTarget:function (card,player,target){
					return target!=player&&target.countCards('he')>0;
				},
				discard:false,
				delay:false,
				check:function (card){
					return 6-get.value(card);
				},
				content:function (){
					'step 0'
					player.showCards(cards);
					'step 1'
					var tt=target;
					cards[0].fix();
					ui.cardPile.insertBefore(cards[0],ui.cardPile.firstChild);
					player.chooseTarget('选择出杀的目标',true,function(card,player,target){
						return target.canUse('sha',tt)&&player!=target;
					}).set('ai',function(target){
							return get.effect(target,{name:'sha'},_status.event.target,_status.event.player);
						});
					"step 2"
						game.log(player,'指定的出杀目标为',result.targets);
						target.line(result.targets);
						target.chooseToUse('对'+get.translation(result.targets)+'使用一张杀，或令'+get.translation(player)+'获得你的一张牌',{name:'sha'},result.targets[0],-1);
					"step 3"
					if(result.bool==false){
						player.gainPlayerCard('he',target,1,true);
					}
					else target.draw();
				},
				ai:{
					order:1,
					result:{
						player:1,
						target:-1,
					},
				},
			},
			gzshanjiax:{
				trigger:{
					global:"phaseEnd",
				},
				audio:'shanjia',
				filter:function (event,player){
					return event.player.isAlive()&&event.player.getStat('damage')&&event.player!=player&&player.countCards('h')>0;
				},
				check:function (event,player){
					var att1=get.attitude(player,event.player);
					return att1<=0;
				},
				content:function (){
					"step 0"
					player.line(trigger.player,'water');
					trigger.player.discardPlayerCard(player,'h',true);
					"step 1"
					if(result.cards[0].name!='sha'){
						player.useCard({name:'sha',isCard:true},trigger.player,false);
					}
					else player.draw();
				},
			},
			gzlieshoux:{
                audio:"ext:国战补充:2",
				trigger:{global:'dieAfter'},
				frequent:true,
				content:function(){
					'step 0'
					var list=['摸一张牌'];
					if(!player.hasSkill('reyingzi')||!player.hasSkill('wushuang')||!player.hasSkill('mashu')) list.push('获得一项技能');
					if(list.length>1){
						player.chooseControl(list).set('prompt','摸一张牌还是获得一个技能？').set('ai',function(){
							var player=_status.event.player;
							if((!player.hasSkill('reyingzi')&&player.hp>1)||(!player.hasSkill('wushuang')&&player.hp>2)||(!player.hasSkill('mashu')&&player.hp>3)) return '获得一项技能';
							return '摸一张牌';
						});
					}
					'step 1'
			  if(result.control&&result.control=='获得一项技能'){
					var list=[];
					if(!player.hasSkill('reyingzi')){
						list.push('reyingzi');
					}
					if(!player.hasSkill('wushuang')){
						list.push('wushuang');
					}
					if(!player.hasSkill('mashu')){
						list.push('mashu');
					}
					if(list.length){
						player.chooseControl(list).set('prompt','选择获得一项技能');
					    }
					}
					else{
						player.draw();
						event.finish();
					}
					'step 2'
					player.loseHp();
					player.addSkill(result.control);
					player.popup(result.control);
					game.log(player,'获得技能','【'+get.translation(result.control)+'】');
				},
				ai:{
					threaten:2
				},
				derivation:['wushuang','reyingzi','mashu'],
			},
            gzquanzhengx:{
                trigger:{
                   target:"useCardToTarget",
                },
                audio:"ext:国战补充:1",
                frequent:true,
                filter:function(event,player){
					if(event.player==player) return false;
					var nh=event.player.countCards('h')-player.countCards('h');
					var ne=event.player.countCards('e')-player.countCards('e');
if(nh>0||ne>0) return get.type(event.card)=='trick'||event.card.name=='sha';
                    return false;
                },
                content:function(){
　　　　　　　　　　player.draw();
                },
            },
			gzchaochenx:{
				usable:1,
                audio:"ext:国战补充:1",
				enable:'phaseUse',
				filterCard:true,
				selectCard:[1,Infinity],
				discard:false,
				lose:false,
				delay:0,
				filterTarget:function(card,player,target){
					return player!=target&&!target.hasSkill('gzchaochenx2');;
				},
				check:function(card){
					if(ui.selected.cards.length>1) return 0;
					if(ui.selected.cards.length&&ui.selected.cards[0].name=='du') return 0;
					if(!ui.selected.cards.length&&card.name=='du') return 20;
					var player=get.owner(card);
					var num=0;
					var evt2=_status.event.getParent();
					player.getHistory('lose',function(evt){
						if(evt.getParent().skill=='gzchaochenx'&&evt.getParent(3)==evt2) num+=evt.cards.length;
					});
					if(num>1||player.countCards('h')<=1){
						if(ui.selected.cards.length){
							return -1;
						}
						var players=game.filterPlayer();
						for(var i=0;i<players.length;i++){
							if(players[i].countCards('h')<players[i].hp&&
								!players[i].isTurnedOver()&&
								!players[i].hasJudge('lebu')&&
								get.attitude(player,players[i])>=3&&
								get.attitude(players[i],player)>=3){
								return 10-get.value(card);
							}
							if(players[i].countCards('h')>=players[i].hp&&
								players[i].hasJudge('lebu')&&
								get.attitude(player,players[i])<=-3&&
								get.attitude(players[i],player)<=-3){
								return 5-get.value(card);
							}
						}
						if(player.countCards('h')>2) return 5-get.value(card);
						return -1;
					}
					return 4-get.value(card);
				},
				content:function(){
					target.gain(cards,player,'giveAuto');
					target.storage.gzchaochenx2=cards;
					target.storage.gzchaochenx3=player;
　　　　　　　　　　target.addSkill('gzchaochenx2');
				},
				ai:{
					order:function(skill,player){
						if(player.countCards('h')>1){
							return 10;
						}
						return 1;
					},
					result:{
						target:function(player,target){
							if(target.hasSkillTag('nogain')) return 0;
							if(ui.selected.cards.length&&ui.selected.cards[0].name=='du'){
								if(target.hasSkillTag('nodu')) return 0;
								return -10;
							}
							var nh=target.countCards('h');
							var np=player.countCards('h');
							if(target.hasJudge('lebu')) return -nh;
							if(np<=player.maxHp+1) return -nh;
							return get.damageEffect(target,player,target);
						}
					},
					threaten:2.5
				}
			},
			gzchaochenx2:{
				trigger:{player:'phaseZhunbeiBegin'},
				forced:true,
                audio:"ext:国战补充:1",
				filter:function(event,player){
					return player.storage.gzchaochenx2&&player.storage.gzchaochenx3;
				},
				content:function(){
				  "step 0"
	if(player.storage.gzchaochenx3&&player.storage.gzchaochenx3.isAlive()&&player.countCards('h')>player.hp){
						player.damage(player.storage.gzchaochenx3);
						player.storage.gzchaochenx3.line(player,'fire');
					    delete player.storage.gzchaochenx2;
					    delete player.storage.gzchaochenx3;
					    player.removeSkill('gzchaochenx2');
					}
					else{
					    delete player.storage.gzchaochenx2;
					    delete player.storage.gzchaochenx3;
					    player.removeSkill('gzchaochenx2');
					}
				},
			},
            gzzhongzhangx:{
				audio:'xinfu_tunan',
                trigger:{
                    global:"phaseUseBegin",
                },
                filter:function (event,player){
                    return player.countCards("h","sha")&&event.player!=player; 
                },
                intro:{
                    content:"card",
                },
                content:function(){
                    "step 0"
                    var check=ai.get.attitude(player,trigger.player)>2;
                    var next=player.chooseCard(get.prompt('gzzhongzhangx',trigger.player),{name:'sha'});
                    next.set('ai',function(card){
                       if(!_status.event.check) return -1;
                       return 1;
                    });
                    next.set('logSkill',['gzzhongzhangx',trigger.player]);
                    next.set('check',check);
                    "step 1"
                    if(result.bool){
                       var card=result.cards[0];
                       player.showCards([card]);
                       trigger.player.storage.gzzhongzhangx=card;
                       trigger.player.storage.gzzhongzhangx2=player;
                       trigger.player.syncStorage('gzzhongzhangx');
                       trigger.player.markSkill('gzzhongzhangx');
                       trigger.player.addTempSkill('gzzhongzhangx2','phaseAfter');
                       trigger.player.addTempSkill('gzzhongzhangx3','phaseAfter');
                    }
                },
                ai:{
                    threaten:1,
                    expose:0.3,
                },
            },
            gzzhongzhangx2:{
				audio:'xinfu_tunan',
                enable:"phaseUse",
                filter:function(event,player){
                    if(player.storage.gzzhongzhangx&&player.storage.gzzhongzhangx2&&
                    get.owner(player.storage.gzzhongzhangx)==player.storage.gzzhongzhangx2&&
                    lib.filter.filterCard(player.storage.gzzhongzhangx,player,event)){
                        return true;
                    }
                    return false;
                },
                filterTarget:function(card,player,target){
                    return player.canUse(player.storage.gzzhongzhangx,target);
                },
                selectTarget:function(){
                    var info=get.info(_status.event.player.storage.gzzhongzhangx);
                    if(info.notarget) return -1;
                    return get.select(info.selectTarget);
                },
                multitarget:true,
                multiline:true,
                content:function (){
                   'step 0'
                   var card=player.storage.gzzhongzhangx;
                   if(!card){
                      event.finish();
                      return;
                   }
                   var owner=get.owner(card);
                   if(owner){
                       owner.lose(card,ui.special);
                   }
                   event.card=card;
                   player.$throw(card);
                   'step 1'
                   player.useCard(event.card,targets).animate=false;
                   delete player.storage.gzzhongzhangx;
                   delete player.storage.gzzhongzhangx2;
                   player.unmarkSkill('gzzhongzhangx');
                },
                ai:{
                    order:8,
                    result:{
                        target:function(player,target){
                           return ai.get.effect(target,player.storage.gzzhongzhangx,player,target);
                        },
                        player:1,
                    },
                },
            },
            gzzhongzhangx3:{
                trigger:{
                    player:"phaseEnd",
                },
                forced:true,
                popup:false,
                filter:function(event,player){
                    return player.storage.gzzhongzhangx?true:false;
                },
                content:function (){
                   delete player.storage.gzzhongzhangx;
                   delete player.storage.gzzhongzhangx2;
                   player.unmarkSkill('gzzhongzhangx');
                },
            },
            gzlvemingx:{
                trigger:{
                    player:"useCardAfter",
                },
                audio:'xinfu_lveming',
                filter:function(event,player){
                    return  event.card.isCard&&get.color(event.card)=='black';
                },
                prompt:function (event,player){
                    return '是否发动【掠命】获得'+get.translation(event.cards)+'？';
                },
                check:function (event,player){
                    if(get.number(event.card)<=1) return false;
                    if(get.type(event.card)=='equip'||get.type(event.card)=='delay') return false;
                    return true;
                },
                content:function (){
                    'step 0'
                    event.num=trigger.cards[0].number;
                    player.gain(trigger.cards,'gain2');             
                    'step 1'
                    if(event.num) player.storage.gzlvemingx2=event.num;
                    player.addTempSkill('gzlvemingx2');
                },
            },
            gzlvemingx2:{
                onremove:function (player){
                    delete player.storage.gzlvemingx2;
                },
                mark:true,
                mod:{
                    cardEnabled:function (card,player){
                        if(card.number>=player.storage.gzlvemingx2) return false;
                    },
                    cardSavable:function (card,player){
                        if(card.number>=player.storage.gzlvemingx2) return false;
                    },
                },
            },
			gzjimux:{
				trigger:{player:'phaseDrawBefore'},
                audio:"ext:国战补充:1",
				unique:true,
				mark:true,
				skillAnimation:true,
				init:function(player){
					player.storage.gzjimux=false;
				},
				check:function(event,player){
					if(player.hasJudge('lebu')) return false;
					return true;
				},
				filter:function(event,player){
					if(player.storage.gzjimux) return false;
					return player.isMinHp();
				},
				content:function(){
					'step 0'
					trigger.cancel();
					'step 1'
					player.addTempSkill('new_paoxiao');
					player.awakenSkill('gzjimux');
					player.storage.gzjimux=true;
					var cards=[];
					for(var i=0;i<3;i++){
						cards.push(game.createCard('sha'));
					}
					player.gain(cards,'gain2');
				},
				ai:{
					effect:{
						target:function(card,player,target){
							if(!target.hasFriend()) return;
							if(get.tag(card,'damage')==1&&target.hp==2&&target.countCards('he')&&
							!target.isTurnedOver()&&_status.currentPhase!=target){
								if(get.distance(_status.currentPhase,target,'absolute')<=2) return [0.5,1];
								return 0.8;
							}
						}
					}
				},
				intro:{
					content:'limited'
				}
			},
			gzliegongx:{
                mod:{
                   targetInRange:function(card,player,target){ 
                      if(card.name=='sha'&&get.zhu(player,'shouyue')){ 
                           return true; 
                        } 
                    },
                }, 
				trigger:{player:'shaBegin'},
                audio:"liegong",
				forced:true,
                usable:1,
				filter:function(event,player){
                    for(var i=0;i<game.players.length;i++){
if(game.players[i]!=player&&game.players[i].getAttackRange()>=player.getAttackRange()) return false;
                    }
                    return true;
				},
				content:function(){
					player.draw();
				},
                group:"gzliegongx_direct",
				subSkill:{
					'direct':{
                        audio:"liegong",
				        trigger:{
                           player:"shaBegin",
				        },
				        forced:true,
				        filter:function(event,player){
                            return get.distance(event.target,player,'attack')>1;				        },
				        content:function(){
                            trigger.directHit=true; 
				        },
					},
				},
			},
			gzhuweiy:{
                audio:"yijue",
				trigger:{player:'shaMiss'},
				usable:1,
				direct:true,
				filter:function(event,player){
					return player.canUse('sha',event.target,false)&&(player.hasSha()||player.countCards('h'));
				},
				content:function(){
					"step 0"
					player.chooseToUse(get.prompt('gzhuweix'),function(card,player,event){
						if(get.name(card)!='sha') return false;
						return lib.filter.filterCard.apply(this,arguments);
					},trigger.target,-1).set('addCount',false).logSkill='gzhuweix';
				}
			},
            gzanqingx:{
			    audio:'renshi',
                trigger:{
                    player:"phaseEnd",
                },
                direct:true,
                content:function (){
                  "step 0"
                   player.chooseTarget(get.prompt('gzanqingx'),function(card,player,target){
                       return player!=target;
                       }).set('ai',function(target){
                      if(target.countCards('h',{type:'equip'})>0) return 1;
                      return 0;
                   });
                  "step 1"
                  if(result.bool){
                     game.delay();
                     player.logSkill('gzanqingx',result.targets);
                     event.target=result.targets[0];
                     var card=event.target.get('h').randomGet();
                     player.showCards(card);
                     if(get.type(card,'trick')=='equip'){
                         player.chooseControl(function(event,player){
                         var target=event.target;
if(game.countPlayer(function(current){current.isDamaged()&&current!=player&&get.attitude(player,current)>0})) return 1;
                         if(ai.get.attitude(player,target)>0) return 0;
                         return 1;
                      }).set('choiceList',['令'+get.translation(event.target)+'和你各摸一张牌',
 '令你指定的另一名角色回复１点体力']);
                      }
                      else{
                         event.finish();
                      }
                   }
                   else{
                      event.finish();
                   }
                   "step 2"
                   if(result.index==0){
					  game.asyncDraw([event.target,player]);
                      event.finish();
                   }
                   else{
                      player.chooseTarget(function(card,player,target){
                          return target!=player&&target.hp<target.maxHp;
                      }).set('ai',function(target){
                          return ai.get.attitude(_status.event.player,target);
                      });
                   }
                   "step 3"
                   if(result.bool){
                       result.targets[0].recover();
                   }
                },
                ai:{
                    expose:0.4,
                    threaten:1.4,
                },
             },
             gzqingliux:{
                trigger:{
                    player:"phaseDrawBegin",
                },
                audio:"ext:国战补充:1",
                direct:true,
				filter:function(event,player){
                   return game.hasPlayer(function(current){
                      return current.countCards("e");
                   });
				},
                content:function (){
                "step 0"
                 var check=player.countCards('h')>=2;
        player.chooseTarget(2,get.prompt('gzqingliux'),function(card,player,target){
                    if(ui.selected.targets.length){
                        if(target.isMin()) return false;
                        return true;
                     }
                     else{
                         return target.countCards('e');
                     }
                     }).set('check',check).set('ai',function(target){
                          if(!_status.event.check) return 0;
                          var player=_status.event.player;
                          if(ui.selected.targets.length==0){
                             if(ai.get.attitude(player,target)<0){
                                var players=game.filterPlayer();
                                for(var i=0;i<players.length;i++){
                                   if(ai.get.attitude(player,players[i])>0){
                                    if((target.get('e','1')&&!players[i].get('e','1'))||(target.get('e','2')&&!players[i].get('e','2'))||(target.get('e','3')&&!players[i].get('e','3'))||(target.get('e','4')&&!players[i].get('e','4'))||(target.get('e','5')&&!players[i].get('e','5'))) 
　　　　　　　　　　　　　　　　　　 return -ai.get.attitude(player,target);
                                  }
                               }
                          }
                          return 0;
                     }
                     return -ai.get.attitude(player,target)*ai.get.attitude(player,ui.selected.targets[0]);
                });
                "step 1"
                if(!result.bool){
                     event.finish();
                }
                else{
                     trigger.num--;
                     player.logSkill('gzqingliux',result.targets,false);
                     player.line2(result.targets);
                     event.targets=result.targets;
                }
                "step 2"
                game.delay();
                "step 3"
                if(targets.length==2){
                    player.choosePlayerCard('e',function(button){
                       var targets1=_status.event.targets1;
                       if(targets1.countCards('e',{subtype:get.subtype(button.link)})) return 0;
                       return ai.get.equipValue(button.link);
                    },targets[0]).set('targets0',targets[0]).set('targets1',targets[1]).set('filterButton',function(button){
                    return true;
                    });
                 }
                 else{
                    event.finish();
                 }
                 "step 4"
                 if(result.bool&&result.links.length){
                     var link=result.links[0];
                     event.targets[1].gain(link);
                     event.targets[0].$give(link,event.targets[1])
                     game.delay();
                     }
                },
                ai:{
                    expose:0.5,
                },
            },
			gzjianbix:{
				trigger:{target:'useCardToTargeted'},
                audio:"ext:国战补充:1",
				mainSkill:true,
				init:function (player){
					if(player.checkMainSkill('gzjianbix')){
						player.removeMaxHp();
					}
				},
				priority:5,
				filter:function(event,player){
					if(get.type(event.card)!='trick') return false;
					if(get.info(event.card).multitarget) return false;
					if(event.targets.length<2) return false;
					return true;
				},
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gzjianbix'),
						[1,1],function(card,player,target){
						return _status.event.getTrigger().targets.contains(target);
					}).set('ai',function(target){
						var trigger=_status.event.getTrigger();
						var eff=-get.effect(target,trigger.card,trigger.player,_status.event.player);
						if(trigger.card.name=='wugu'&&eff==0&&get.attitude(player,target)<0){
							return 0.01;
						}
						return eff;
					});
					"step 1"
					if(result.bool){
						event.targets=result.targets;
						if(event.isMine()){
							player.logSkill('gzjianbix',event.targets);
							event.finish();
						}
						for(var i=0;i<result.targets.length;i++){
							trigger.getParent().excluded.add(result.targets[i]);
						}
						game.delay();
					}
					else{
						event.finish();
					}
					"step 2"
					player.logSkill('gzjianbix',event.targets);
				},
				ai:{
					effect:{
						target:function(card,player,target){
							if(get.tag(card,'multineg')){
								return 'zerotarget';
							}
							if(get.tag(card,'multitarget')){
								var info=get.info(card);
								if(info.selectTarget==-1&&!info.multitarget){
									return [1,Math.min(3,1+target.maxHp-target.hp)];
								}
							}
						}
					}
				}
			},
			gzliangcex:{
                audio:"ext:国战补充:2",
                trigger:{
                    global:"phaseBegin",
　　　　　　　　},
　　			filter:function(event,player){
					return event.player!=player&&player.storage.tuntian&&player.storage.tuntian.length&&get.distance(player,event.player)<=1;
				},
                check:function(event,player){
                    return event.player.isFriendOf(player);
                },         
				content:function(){
					'step 0'
					player.chooseCardButton(get.prompt('gzliangcex',trigger.player),player.storage.tuntian).set('ai',function(button){
						return get.value(button.link);
					});
					'step 1'
					if(result.bool){
						var card=result.links[0];
						player.logSkill('gzliangcex',trigger.player);
						player.storage.tuntian.remove(card);
						player.syncStorage('tuntian');
						if(!player.storage.tuntian.length){
							player.unmarkSkill('tuntian');
						}
						else{
							player.updateMarks('tuntian');
						}
					    game.cardsDiscard(card);
					    player.$throw(card);
					    game.log(card,'进入了弃牌堆');

					    player.syncStorage('tuntian');
					    game.delayx();
					}
					'step 2'
					var targets=game.filterPlayer(function(current){
						return trigger.player.canUse('wugu',current);
					});
					targets.sort(lib.sort.seat);
                    trigger.player.useCard({name:'wugu'},targets);
				}
			},
　　　　　　gzzhengsix:{
                trigger:{
                    player:"phaseAfter",
　　　　　　　　},
                audio:'neifa',
	            forced:true,
                filter:function(event,player){
                    return player.countCards('h')>0;
　　　　　　　　},
                content:function(){
		            var num=player.countCards('h')-2;
		            if(num>0){
			             player.chooseToDiscard(num,'h',true);
		            }
		            else player.draw(-num);
                },
　　　　　　},
			gzdikaix:{
				audio:'neifa',
				mod:{
					targetInRange:function(card,player,target){
						if(card.gzdikaix) return true;
					},
				},
				enable:'phaseUse',
				usable:1,
				position:'hs',
				viewAs:{
					name:'sha',
					gzdikaix:true,
				},
				locked:false,
				filter:function(event,player){
					return player.countCards('hs')>0;
				},
				filterCard:true,
				selectCard:[2,Infinity],
				position:'hs',
				check:function(card){
					var player=_status.event.player;
					if(ui.selected.cards.length){
						var list=game.filterPlayer(function(current){
							return current!=player&&player.canUse('sha',current,false)&&get.effect(current,{name:'sha'},player,player)>0;
						}).sort(function(a,b){
							return get.effect(b,{name:'sha'},player,player)-get.effect(a,{name:'sha'},player,player);
						});
						if(!list.length) return 0;
						var target=list[0];
						if(target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
							target:target,
							card:card,
						},true)) return 7-get.value(card);
					}
					return 5-get.value(card);
				},
				onuse:function(result,player){
					player.addTempSkill('gzdikaix_draw');
				},
				subSkill:{
					draw:{
						trigger:{player:'shaMiss'},
						forced:true,
						charlotte:true,
						filter:function(event,player){
                            return event.skill=='gzdikaix'&&event.cards&&event.cards.length;
						},
						content:function(){
							player.draw(trigger.cards.length);
						},
					},
				},
				ai:{
					order:function(item,player){
						return get.order({name:'sha'},player)+0.3*(Math.min(player.getCardUsable('sha'),player.countCards('hs','sha')+player.hasCard(function(card){
							return card.name!='sha'&&get.value(card,player)<7;
						},'hs')?1:0)>1?-1:1);
					},
				},
			},
			gzxiangyux:{
                audio:'mansi',
				group:['gzxiangyux_viewas','gzxiangyux_draw'],
				trigger:{global:'damageEnd'},
				filter:function(event,player){
					return event.card&&event.card.name=='nanman';
				},
                init:function(player){
                   player.storage.gzxiangyux=0;
                },
                mark:true,
				frequent:true,
				content:function(){
                   player.storage.gzxiangyux++;   
				},
			},
			gzxiangyux_viewas:{
                audio:'mansi',
				position:'h',
				enable:'phaseUse',
				round:1,
				filterCard:true,
				selectCard:-1,
				filter:function(event,player){
					var hs=player.getCards('h');
                    if(hs.length<2) return false;
					for(var i=0;i<hs.length;i++){
						var mod2=game.checkMod(hs[i],player,'unchanged','cardEnabled2',player);
						if(mod2===false) return false;
					}
					return true;
				},
				viewAs:{name:'nanman'},
				ai:{order:0.1},
			},
　　　　　　gzxiangyux_draw:{
				trigger:{player:'phaseEnd'},
				filter:function(event,player){
					return player.storage.gzxiangyux>0;
				},
                audio:'suoying',
　　　　　　　　frequent:true,
				content:function(){
					var num=Math.min(player.storage.gzxiangyux,player.maxHp);
				    player.draw(num);
                    player.storage.gzxiangyux=0;
				}
　　　　　　},
			gzxinfux:{
				locked:true,
				audio:"hmmanyi",
				group:['gzxinfux1','gzxinfux2'],
				ai:{
					effect:{
						target:function(card){
							if(card.name=='nanman') return [0,1];
						}
					}
				}
			},
			gzxinfux1:{
				trigger:{target:'useCardToBefore'},
				forced:true,
				priority:15,
				filter:function(event,player){
					return (event.card.name=='nanman');
				},
				content:function(){
					trigger.cancel();
				}
			},
			gzxinfux2:{
				trigger:{global:'useCardAfter'},
				forced:true,
				filter:function(event,player){
					return (event.card.name=='nanman'&&event.player!=player&&get.itemtype(event.cards)=='cards');
				},
				content:function(){
                   player.recover();
				}
			},
			gzmashux:{
				mod:{
                   globalFrom:function (from,to,distance){ 
                      return distance-(Math.max(1,from.getDamagedHp())); 
                   },
				}
			},
            gzjieyex:{
                trigger:{
                    player:["chooseToRespondBegin","chooseToUseBegin"],
                },
				audio:'lizhan',
                init:function (player){
                    player.storage.gzjieyex=[];
                },
                filter:function (event,player){
                    if(event.responded) return false;
                    if(player.storage.gzjieyex.length>0) return false;
                    if(!event.filterCard({name:'shan'},player,event)) return false;
                    return player.countCards('h');
                },
                content:function (){
                    "step 0"        
                    player.chooseCard('h','是否将一张手牌置于你的武将牌上视为打出一张【闪】？').set('ai',function(card){
                        if(card.name=='du') return 20;
                        return 8-get.value(card);
                    });
                    "step 1"
                    if(result.bool){
                        player.$give(result.cards,player,false);
                        player.storage.gzjieyex=player.storage.gzjieyex.concat(result.cards);
                        player.lose(result.cards,ui.special,'toStorage');
                        player.markSkill('gzjieyex');
                        player.syncStorage('gzjieyex');
                        game.log(player,'将',result.cards,'置于武将牌上');  
                    }
                    else event.finish();
                    "step 2"
                    trigger.untrigger();
                    trigger.responded=true;
                    trigger.result={bool:true,card:{name:'shan',isCard:true}};
                },
                intro:{
                    content:"cards",
                },
                group:"gzjieyex2",
            },
            gzjieyex2:{
                enable:"chooseToUse",
                filter:function (event,player){
                    if(!player.storage.gzjieyex) return false;
                    if(player.storage.gzjieyex.length==0) return false;
                    return event.filterCard({name:'sha'},player,event);
                },
                chooseButton:{
                    dialog:function (event,player){
                        var list=[];
                        if(event.filterCard({name:'sha'},player,event)){
                            list.push(['基本','','sha']);
                            list.push(['基本','','sha','fire']);
                            list.push(['基本','','sha','thunder']);
                        }
                        return ui.create.dialog('诘谒',[list,'vcard'],'hidden');
                    },
                    check:function (button){
                        var player=_status.event.player;
                        var card={name:button.link[2],nature:button.link[3]};                       
                        if(card.name=='sha'){
                            if(card.nature=='fire') return 2.95;
                            else if(card.nature=='fire') return 2.92;
                            else return 2.9;
                        }
                        return 0;
                    },
                    backup:function (links,player){
                        return {
                            filterCard:function(){return false},
                            viewAs:{name:links[0][2],nature:links[0][3],isCard:true},
                            selectCard:-1,
                            popname:true,
                            log:false,
                            precontent:function(){
                                player.$throw(player.storage.gzjieyex,1000);
                                game.cardsDiscard(player.storage.gzjieyex);
                                 player.storage.gzjieyex=[];
                                 player.syncStorage('gzjieyex');
                                 player.unmarkSkill('gzjieyex');
                            },
                        }
                    },
                    prompt:function (links,player){
                        return '选择'+get.translation(links[0][3]||'')+get.translation(links[0][2])+'的目标';
                    },
                },
                ai:{
                    order:10,
                    respondSha:true,
                    result:{
                        player:function (player){
                            return 1;
                        },
                    },
                },
            },
			gzgushoux:{
                audio:"yuce",
				group:['gzgushoux_wuxie','gzgushoux_shan']
			},
			gzgushoux_wuxie:{
				enable:'chooseToUse',
                filterCard:{
                    name:"shan",
                },
				viewAsFilter:function(player){
					return player.countCards('hs',{name:'shan'})>0;
				},
				viewAs:{name:'wuxie'},
				position:'hs',
				prompt:'将一张闪当无懈可击使用',
				check:function(card){
					var tri=_status.event.getTrigger();
					if(tri&&tri.card&&tri.card.name=='chiling') return -1;
					return 9-get.value(card)
				},
				threaten:1.2
			},
			gzgushoux_shan:{
				enable:['chooseToRespond','chooseToUse'],
				filterCard:{name:'wuxie'},
				viewAs:{name:'shan'},
				prompt:'将一张无懈可击当闪使用或打出',
				check:function(card){
					return 6-get.value(card)
				},
				position:'hs',
				viewAsFilter:function(player){
					if(!player.countCards('hs','shan')) return false;
				},
				ai:{
					respondShan:true,
					skillTagFilter:function(player){
						if(!player.countCards('hs','shan')) return false;
					},
					effect:{
						target:function(card,player,target,current){
							if(get.tag(card,'respondShan')&&current<0) return 0.6
						}
					},
					order:4,
					useful:-1,
					value:-1
				}
			},
			gzyanfax:{
				enable:'phaseUse',
				audio:'junxing',
				usable:1,
				filterCard:true,
				selectCard:[1,Infinity],
				filter:function(event,player){
					return player.countCards('h')>0;
				},
				check:function(card){
					if(ui.selected.cards.length) return -1;
					var val=get.value(card);
					if(get.type(card)=='basic') return 8-get.value(card);
					return 5-get.value(card);
				},
				filterTarget:function(card,player,target){
					return player!=target;
				},
				content:function(){
					"step 0"
					var types=[];
					for(var i=0;i<cards.length;i++){
						types.add(get.type(cards[i],'trick',player));
					}
					target.chooseToDiscard(function(card){
						return !_status.event.types.contains(get.type(card,'trick'));
					}).set('ai',function(card){
						if(_status.event.player.isTurnedOver()) return -1;
						return 8-get.value(card);
					}).set('types',types).set('dialog',['弃置一张与'+get.translation(player)+'弃置的牌类别均不同的牌，或执行一项军令','hidden',cards]);
					"step 1"
					if(!result.bool){
　　　　　　　　        player.chooseJunlingFor(target);
					}
					"step 2"
                    event.junling=result.junling;
                    event.targets=result.targets;
					"step 3"
　　　　　　　　　  target.carryOutJunling(player,event.junling,targets);
				},
				ai:{
					order:2,
					expose:0.3,
					threaten:1.8,
					result:{
						target:function(player,target){
							return -1/(target.countCards('h')+1);
						}
					}
				}
			},
			gzyangjingx:{
                audio:"ext:国战补充:1",
				group:['gzyangjingx_recover','gzyangjingx_draw']
			},
			gzyangjingx_recover:{
				trigger:{player:'recoverEnd'},
				filter:function(event,player){
					return player.hp==player.maxHp;
				},
　　　　　　　　frequent:true,
				content:function(){
					'step 0'
					player.draw();
					'step 1'
                    if(player.countCards('h')==player.maxHp){
                       player.chooseTarget('请选择一名角色执行相同的操作',function(card,player,target){
                        return player!=target;
                        }).set('ai',function(target){
                            return get.attitude(_status.event.player,target);
                        });
                    }
                    else{ 
                      event.finish(); 
                    } 
					'step 2'
                   if(result.bool){
                      result.targets[0].draw();
                   }
                   else{ 
                      event.finish(); 
                   } 
				},
			},
			gzyangjingx_draw:{
				trigger:{player:'drawAfter'},
				filter:function(event,player){
					return player.countCards('h')==player.maxHp&&player.isDamaged();
				},
　　　　　　　　frequent:true,
				content:function(){
					'step 0'
					player.recover();
					'step 1'
                    if(player.hp==player.maxHp){
                       player.chooseTarget('请选择一名角色执行相同的操作',function(card,player,target){
                        return player!=target&&target.isDamaged();
                        }).set('ai',function(target){
                            return get.attitude(_status.event.player,target);
                        });
                    }
                    else{ 
                      event.finish(); 
                    } 
					'step 2'
                   if(result.bool){
                      result.targets[0].recover();
                   }
                   else{ 
                      event.finish(); 
                   } 
				},
			},
			gzfabianx:{
                audio:"ext:国战补充:1",
                trigger:{
                    global:"phaseJieshuBegin",
　　　　　　　　},
　　			filter:function(event,player){
　　                if(player==event.player) return false;
					return player.countCards('h')&&event.player.countCards('h');
				},
				check:function(event,player){
					if(player.isUnseen()) return false;
					var hs=player.getCards('h');
					var att=get.attitude(player,event.player);
                    if(att>=0){
					   for(var i=0;i<hs.length;i++){
						  var val=get.value(hs[0]);
						  if(hs[i].number>=10&&val<=6) return true;
					   	  if(hs[i].number>=8&&val<=3) return true;
					   }
					   return false;
                    }
                    if(att<0){
					   for(var i=0;i<hs.length;i++){
					   	  if(hs[i].number<=6&&val<=7) return true;					                   }
					   return false;
                    }
					return false;
				},
				logTarget:'player',
				content:function(){
					'step 0'
					player.chooseToCompare(trigger.player);
					'step 1'
					if(result.bool){
						player.draw();
						trigger.player.draw();
						event.goto(2);
					}
					else{
						event.goto(4);
					}
					'step 2'
					if(game.hasPlayer(function(current){
						return trigger.player.canUse('sha',current);
					})) 
player.chooseTarget('选择出杀的目标',true,function(card,player,target){
						return trigger.player.canUse('sha',_status.event.player)&&target!=player&&target!=trigger.player;
					}).set('ai',function(target){
						return get.effect(target,{name:'sha'},player,player)>0;
					});
					"step 3"
					if(result.bool&&result.targets.length){
						game.log(player,'指定的出杀目标为',result.targets);
            trigger.player.useCard({name:'sha',isCard:true},result.targets);
						event.finish();
					}
					else{
						event.finish();
					}
					"step 4"
                    player.discardPlayerCard(trigger.player,'he',true);
					"step 5"
                    if(result.bool&&result.cards.length){ 
                      if(get.type(result.cards[0])=='equip'){ 
　　　　　　　　　　　　　player.gain(result.cards[0],'gain2');
                      }
                      else{ 
                        event.finish(); 
                      } 
                   } 
				},
				ai:{
					mingzhi:false,
					expose:0.2
				}
			},
			gzliweix:{
                audio:"ext:国战补充:1",
				trigger:{player:'damageBegin3'},
				filter:function(event,player){
					return event.source!=undefined;
				},
　　　　　　　　frequent:true,
				content:function(){
					'step 0'
					player.draw();
					'step 1'
					trigger.source.chooseBool('摸一张牌，令此伤害-1？').set('choice',get.attitude(trigger.source,player)>0);
					'step 2'
					if(result.bool){
						trigger.num--;
					}
					else{
						event.finish();
					}
				},
			},
			gzyongmoux:{
				audio:'nzry_binglve',
				group:['gzyongmoux1','gzyongmoux2']
			},
			gzyongmoux1:{
				trigger:{player:'useCard'},
				usable:1,
				filter:function(event,player){
				    if(!player.countCards('he')) return false;
					return get.type(event.card,false)=='basic';
				},
				check:function(event,player){
					return player.countCards('he');
				},
				content:function(){
					'step 0'
					var type=get.type(trigger.card);
	player.chooseToDiscard('he',get.prompt2('gzyongmoux'),function(card){
						return get.type(card)!=type;
					}).set('autodelay',true).set('logSkill',['gzyongmoux',player]).ai=function(card){
						return 8-get.value(card);
					};
					'step 1'
					if(result.bool){
						player.draw(2);
					}
				},
			},
			gzyongmoux2:{
				trigger:{source:'damageBegin'},
				usable:1,
				filter:function(event,player){
					return event.card&&player.countCards('he');
				},
				check:function(event,player){
					return get.attitude(player,event.player)<0;
				},
				content:function(){
					'step 0'
					var type=get.type(trigger.card);
	player.chooseToDiscard('he',get.prompt2('gzyongmoux'),function(card){
						return get.type(card)==type;
					}).set('autodelay',true).set('logSkill',['gzyongmoux',player]).ai=function(card){
						return 7-get.value(card);
					};
					'step 1'
					if(result.bool){
						trigger.num++;
					}
				}
			},
			gzzongshiy:{
			    audio:"rezongshi",
				viceSkill:true,
				forced:true,
　　　　　　　　init:function(player){player.checkViceSkill('gzzongshiy')},
			    mod:{
                   maxHandcard:function (player,num){
                      return num+game.countGroup();
                   },
			    },
			},
			 gzlimux:{
				mod:{
					targetInRange:function(card,player,target){
						if(player.countCards('j')&&player.inRange(target)){
							return true;
						}
					},
					cardUsableTarget:function(card,player,target){
						if(player.countCards('j')&&player.inRange(target)) return true;
					},
				},
				audio:"xinfu_limu",
				enable:"phaseUse",
                mainSkill:true,
				init:function(player){
					if(player.checkMainSkill('gzlimux')){
					    player.removeMaxHp();
					}
				},
				filter:function(event,player){
					return player.countCards('hes');
				},
				discard:false,
				position:"hes",
				filterCard:true,
				filterTarget:function(card,player,target){
					if(target.hasJudge('lebu')) return false;
					if(!target.isFriendOf(player)) return false;
					return target.canAddJudge({name:'lebu'});
				},
				check:function(card){
					var player=_status.event.player;
					if(player.countCards('hs','sha')>2) return 9;
					if(card.name=='shan') return 7;
					if(card.name=='tao') return 2;
					return 7-get.value(card);
				},
				content:function(){
					player.logSkill('gzlimux');
					player.$throw(cards);
					target.addJudge({name:'lebu'},cards);
　　　　　　　　　  target.recover();	
				},         
				ai:{
					result:{
                        player:function(player,target){
　　　　　　　if(game.countPlayer(function(current){current.isDamaged()&&get.attitude(player,current)>0}))             return 1;
if(game.countPlayer(function(current){current.isHealthy()&&get.attitude(player,current)<0}))             return 1;
                         return 0;
                        },
						target:function(player,target){
							if(game.countPlayer(function(current){
								current!=player&&current.isDamaged()
							})) return 1;
							if(game.hasPlayer(function(current){
								current!=player&&current.isHealthy()
							})) return -1;
							return 0;
						},
					},
					order:7,
				},
			},
			gztushex:{
				audio:"xinfu_tushe",
				trigger:{
					player:"useCardToPlayered",
				},
				frequent:true,
                usable:1,
				filter:function(event,player){
					if(get.type(event.card)=='equip') return false;
                    if(_status.currentPhase!=player) return false;
					if(event.getParent().triggeredTargets3.length>1) return false;
					return event.targets.length>0&&!player.countCards('h',{type:'basic',});
				},
				content:function(){
var num=Math.min(trigger.targets.length,game.countPlayer(function(current){
　　　　　　　　　　	 return current.isFriendOf(player);
　　　　　　　　　　}));
					player.draw(num);
				},
				ai:{
					presha:true,
					pretao:true,
					threaten:1.8,
				},
			},
			gzjiezhix:{
				audio:"spchijie",
				trigger:{global:'phaseUseBegin'},
				filter:function(event,player){
					return player.countCards('he')&&event.player!=player;
				},
                check:function(event,player){
                    return get.attitude(player,event.player)<0&&event.player.countCards('h')>2;
                },
				content:function(){
				   "step 0"
                    player.chooseCard('he').set('ai',function(card){
                       return 7-get.value(card);
                    });
					"step 1"
                    if(result.bool){
                       trigger.player.gain(result.cards,player,'give');
                       trigger.player.addTempSkill('gzjiezhix2');
                    }
					else{
						event.finish();
					}
				},
				ai:{
					threaten:2.1
				},
			},
			gzjiezhix2:{
				forced:true,
				audio:"spchijie",
				mod:{
					cardEnabled:function(card,player){
						if(_status.currentPhase!=player) return;
						if(player.countUsed()>=2) return false;
					},
				},
			},
			gzzhengjianx:{
				audio:'yinju',
				trigger:{global:'changeHp'},
				filter:function (event,player,name){
					return event.player.hp==1&&event.player.countCards('e');
				},
				check:function(event,player){
					return get.attitude(player,event.player)>0;
				},
				content:function(){
					'step 0'
                    var es=trigger.player.getCards('e');
                    trigger.player.discard(trigger.player.getCards('e'));
                    trigger.player.draw(es.length);
					'step 1'
                    trigger.player.recover();
				},
			},
			 gzlianbiaox:{
				audio:"ext:国战补充:2",
				trigger:{player:'phaseEnd'},
				filter:function(event,player){
                   return game.countPlayer(function(current){
						return current.isLinked;
				   })>0;
				},
				check:function(event,player){
					return game.countPlayer(function(current){
						return current.isLinked&&get.attitude(player,current)<0;
				   })-game.countPlayer(function(current){
						return current.isLinked&&get.attitude(player,current)>=0;
				   })>0;
				},
				content:function(){
                    var players=game.players.slice(0).sortBySeat();
                    for(var i=0;i<players.length;i++){
                      if(players[i].isLinked()){
　　　　　　　　　　　players[i].chooseToDiscard('he',true).set('ai',function(card){
					     return 6-get.value(card);
					     });
　　　　　　           }
                    };
				},
			},
			gzzhaoyix:{
				enable:'phaseUse',
				usable:1,
                audio:"ext:国战补充:2",	
				filterTarget:function(card,player,target){
				  return !target.isLinked()&&target.isDamaged();
				},
				filter:function(event,player){
					return game.countPlayer(function(current){
						return current.isDamaged();
				   });
				},
				content:function(){
　　　　　　　　　　target.link(true);
　　　　　　　　　　target.recover();
				},
				ai:{
					order:5,
					result:{
						target:1,
						player:function(player){
							if(game.countPlayer(function(current){
						         return current.isDamaged()&&current.isFriendOf(player);
				            })>0){
								return 1;
							}
							return 0;
						},
					},
					threaten:1.3
				}
			},
			gzhuomox:{
				audio:'huomo',
				group:['gzhuomox_count','gzhuomox_count2','gzhuomox_use']
			},
			gzhuomox2:{},
			gzhuomox_count:{
				init:function(player){
					player.storage.gzhuomox={};
				},
				trigger:{global:'phaseBefore'},
				silent:true,
				content:function(){
					player.storage.gzhuomox={};
				}
			},
			gzhuomox_count2:{
				trigger:{player:['useCard1']},
				silent:true,
				firstDo:true,
				filter:function(event){
					return get.type(event.card)=='basic';
				},
				content:function(){
					if(!player.storage.gzhuomox) player.storage.gzhuomox={};
					player.storage.gzhuomox[trigger.card.name]=true;
				}
			},
			gzhuomox_use:{
				enable:'chooseToUse',
				hiddenCard:function(player,name){
					return (['sha','shan','tao','jiu'].contains(name)&&(!player.storage.gzhuomox||!player.storage.gzhuomox[name])&&player.hasCard(function(card){
						return get.color(card)=='black'&&get.type(card)!='basic';
					},'he'));
				},
				filter:function(event,player){
					if(!player.storage.gzhuomox) player.storage.gzhuomox={};
	                if(_status.currentPhase==player) 	return false;
	if((!player.storage.gzhuomox.sha&&event.filterCard({name:'sha'},player,event))||
						(!player.storage.gzhuomox.jiu&&event.filterCard({name:'jiu'},player,event))||
						(!player.storage.gzhuomox.shan&&event.filterCard({name:'shan'},player,event))||
						(!player.storage.gzhuomox.tao&&event.filterCard({name:'tao'},player,event))){
						return player.hasCard(function(card){
							return get.color(card)=='black'&&get.type(card)!='basic';
						},'he');
					}
					return false;
				},
				chooseButton:{
					dialog:function(event,player){
						var list=[];
						if(!player.storage.gzhuomox.sha&&event.filterCard({name:'sha'},player,event)){
							list.push(['基本','','sha']);
							list.push(['基本','','sha','fire']);
							list.push(['基本','','sha','thunder']);
							list.push(['基本','','sha','ice']);
						}
						if(!player.storage.gzhuomox.tao&&event.filterCard({name:'tao'},player,event)){
							list.push(['基本','','tao']);
						}
						if(!player.storage.gzhuomox.shan&&event.filterCard({name:'shan'},player,event)){
							list.push(['基本','','shan']);
						}
						if(!player.storage.gzhuomox.jiu&&event.filterCard({name:'jiu'},player,event)){
							list.push(['基本','','jiu']);
						}
						return ui.create.dialog('活墨',[list,'vcard'],'hidden');
					},
					check:function(button){
						var player=_status.event.player;
						var card={name:button.link[2],nature:button.link[3]};
						if(game.hasPlayer(function(current){
							return player.canUse(card,current)&&get.effect(current,card,player,player)>0;
						})){
							switch(button.link[2]){
								case 'tao':return 5;
								case 'jiu':return 3.01;
								case 'shan':return 3.01;
								case 'sha':
									if(button.link[3]=='fire') return 2.95;
									else if(button.link[3]=='fire') return 2.92;
									else return 2.9;
							}
						}
						return 0;
					},
					backup:function(links,player){
						return {
							check:function(card){
								return 1/Math.max(0.1,get.value(card));
							},
							filterCard:function(card){
								return get.type(card)!='basic'&&get.color(card)=='black';
							},
							viewAs:{
								name:links[0][2],
								nature:links[0][3],
								suit:'none',
								number:null,
								isCard:true,
							},
							position:'he',
							popname:true,
							ignoreMod:true,
							precontent:function(){
								'step 0'
								player.logSkill('gzhuomox');
								var card=event.result.cards[0];
								event.card=card;
								player.$throw(card,1000);
								game.log(player,'将',card,'置于牌堆顶');
								event.result.card={name:event.result.card.name,nature:event.result.card.nature};
								event.result.cards=[];
								player.lose(card,ui.cardPile,'visible','insert');
								'step 1'
								game.delay();
							},
						}
					},
					prompt:function(links,player){
						return '将一张黑色非基本牌置于牌堆顶并视为使用一张'+get.translation(links[0][3]||'')+get.translation(links[0][2]);
					}
				},
				ai:{
					order:function(){
						var player=_status.event.player;
						var event=_status.event;
						if(!player.storage.gzhuomox.jiu&&event.filterCard({name:'jiu'},player,event)&&get.effect(player,{name:'jiu'})>0){
							return 3.1;
						}
						return 2.9;
					},
					respondSha:true,
					fireAttack:true,
					respondShan:true,
					skillTagFilter:function(player,tag,arg){
						if(tag=='fireAttack') return true;
						if(player.hasCard(function(card){
							return get.color(card)=='black'&&get.type(card)!='basic';
						},'he')){
							if(!player.storage.gzhuomox) player.storage.gzhuomox={};
							if(tag=='respondSha'){
								if(arg!='use') return false;
								if(player.storage.gzhuomox.sha) return false;
							}
							else if(tag=='respondShan'){
								if(player.storage.gzhuomox.shan) return false;
							}
							else{
								if(player.storage.gzhuomox.tao&&player.storage.gzhuomox.jiu) return false;
							}
						}
						else{
							return false;
						}
					},
					result:{
						player:1
					}
				}
			},
			gzjiuyanx:{
                audio:"guiming",
				unique:true,
				limited:true,
				mark:true,
				forced:true,
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.gzjiuyanx&&event.toShow.contains('gz_sunhao');
				},
　　				content:function(){
					'step 0'
                    player.awakenSkill('gzjiuyanx');
                    player.storage.gzjiuyanx=true;
					event.targets=game.players.slice(0).sortBySeat();
					'step 1'
					if(event.targets.length){
						var target=event.targets.shift();
						event.target=target;
						target.chooseBool('令'+get.translation(player)+
						'增加1点体力上限？').set('choice',get.attitude(target,player)>0);
					}
					else{
						event.finish();
					}
					'step 2'
					if(result.bool){
						player.gainMaxHp(true);
					}
					else{
　　　　　　　　　　event.target.useCard({name:'jiu',isCard:true},event.target);
					   event.target.loseHp();
					}
					event.goto(1);
				  },
				init:function(player){
					player.storage.gzjiuyanx=false;
				},
				intro:{
					content:'limited'
				}
			},
			gzlanxingx:{
				trigger:{source:'damageAfter'},
                audio:"chouhai",
				forced:true,
                usable:1,
                filter:function(event,player){
                  return game.hasPlayer(function(current){
             return current!=event.player&&get.distance(event.player,current)<=1
                    });
                },
				content:function(){
					"step 0"
					var choice=[];
					if(game.hasPlayer(function(current){
             return current!=player&&current.maxHp>=player.maxHp
                    })) choice.push('令所有体力上限不小于你的角色弃一张牌');
					if(game.hasPlayer(function(current){
         return current!=trigger.player&&get.distance(trigger.player,current)<=1
                    })) choice.push('对与受伤害角色距离为1的角色造成1点伤害，并扣除一点体力上限');
	player.chooseControl(choice).set('prompt',get.prompt2('gzlanxingx')).set('ai',function(){
			if(game.hasPlayer(function(current){
                return current!=player&&current.maxHp>=player.maxHp
            })) return 0;
					return 1;
					});
					"step 1"
					if(result.control=='令所有体力上限不小于你的角色弃一张牌'){
                       var players=game.players.slice(0).sortBySeat();
                       for(var i=0;i<players.length;i++){
                         if(players[i].maxHp>=player.maxHp&&players[i]!=player){
                             players[i].chooseToDiscard('he',true);
　　　　　　             }
                       };
					   event.finish();
					}
					else{
				       var eff=0;
	player.chooseTarget(get.prompt('gzlanxingx'),true,function(card,player,target){
						return get.distance(trigger.player,target)<=1&&trigger.player!=target;
					  }).ai=function(target){
							return get.attitude(_status.event.player,target)<0;
					   }
					}
					"step 2"
					if(result.bool){
                        event.target=result.targets[0];
						player.logSkill('gzlanxingx',event.target);
						event.target.damage();
					    player.loseMaxHp();
					}
					else{
						event.finish();
					}
				}
			},
            gzfuningx:{
				forced:true,
                mod:{
                    targetEnabled:function (card,player,target){
                         if(get.distance(player,target)!=1) return;
                         if(get.cardCount(true,player)==0) return false;
                    },
                },
                ai:{
                    threaten:2.2,
                },
            },
            gzcefengx:{
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                audio:"ext:国战补充:1",	
                frequent:true,
                filter:function (event,player){
                    return (ui.cardPile.childElementCount+ui.discardPile.childElementCount)>=1;
                },
                content:function (){
                    "step 0"
                    event.card=get.cards();
                    player.showCards(event.card);
                    "step 1"      
                    if(get.color(event.card)=='red'){               
                        player.addTempSkill("gzcefengx1",{player:"phaseBegin"});
                        event.finish();
                    }
                    if(get.color(event.card)=='black'){
                        event.num=Math.max(1,player.getDamagedHp());                        
                        player.chooseTarget([1,event.num],get.prompt('gzcefengx'),function(card,player,target){
                            return target.countCards('he')&&player!=target;
                            }).set('ai',function(target){
                            return -get.attitude(_status.event.player,target);
                        });
                    }
                    "step 2"
                    if(result.bool){
                        player.logSkill('gzcefengx',result.targets);     
                        for(var i=0;i<result.targets.length;i++){
                            player.discardPlayerCard(result.targets[i],'he',true);
                        }
                    }
                    else{
                        event.finish();
                    }
                },
                ai:{
                    threaten:0.5,
                },
            },
            gzcefengx1:{
                mark:true,
                intro:{
                    content:"当你使用或成为【杀】的目标时，摸一张牌",
                },
                group:"gzcefengx2",
                trigger:{
                    player:"useCardToPlayered",
                },
                forced:true,
                filter:function (event,player){
                    return event.card.name=='sha';
                },
                content:function (){
                    player.draw();
                },
            },
            gzcefengx2:{
                trigger:{
                    target:"useCardToTargeted",
                },
                forced:true,
                filter:function (event,player){
                    return event.card.name=='sha';
                },
                content:function (){
                    player.draw();
                },
            },
					gzhanliex:{
                        audio:"ext:国战补充:1",	
						trigger:{
							player:'phaseDiscardBegin'
						},
						content:function(){
							"step 0"
							player.chooseToUse(get.prompt('gzhanliex'));
							"step 1"
							if(result.bool) player.draw();
						},
					},
			gzjuebiex:{
				trigger:{global:'die'},
                audio:"jielie",	
				frequent:true,
				content:function(){
					"step 0"
					var choice=[];
					if(trigger.player.countCards('he')) choice.push('获得牌');
					choice.push('摸三张牌');
					player.chooseControl(choice,'cancel2').set('prompt',get.prompt2('gzjuebiex')).set('ai',function(){
						if(get.value(trigger.player.getCards('he'))>10) return 0;
						return 1;
					});
					"step 1"
					if(result.control!='cancel2'){
						player.logSkill(event.name,trigger.player);
						if(result.control=='获得牌'){
							event.togain=trigger.player.getCards('he');
							player.gain(event.togain,trigger.player,'giveAuto');
						}
						else player.draw(3);
					}
				},
			},
            gzaiwux:{
                audio:"kangge",
                trigger:{
                   global:"damageEnd",
                },
                filter:function(event,player){
                   return event.player!=player&&event.player.isAlive()&&player.countCards('he')>=3;
                },
				check:function(event,player){
                   return player.isDamaged()&&get.attitude(player,event.player)>0;
				},
                content:function(){
					'step 0'
					player.chooseToDiscard('he',3,true).ai=function(card){
						return -get.value(card);
					}
					'step 1'
					trigger.player.recover();
					player.recover();
                },
            },
			gzqingyix:{
				audio:'shiyuan',
				trigger:{player:'phaseDrawBegin'},
				direct:true,
				content:function(){
				   'step 0'
					player.chooseControlList(get.prompt('gzqingyix'),'多摸两张牌，手牌上限-1','少摸一张牌，手牌上限+2',function(){
						return 1;
					});
					'step 1'
					if(result.control!='cancel2'){
						player.logSkill('gzqingyix');
						if(result.index==0){
							trigger.num+=2;
							player.addTempSkill('gzqingyix_0');
						}
						else if(result.index==1){
							trigger.num--;
							player.addTempSkill('gzqingyix_1');
						}
					}
					else{
						event.finish();
					}
				},
				subSkill:{
					'0':{
						mark:true,
						intro:{
							content:'本回合手牌上限-1',
						},
						mod:{
							maxHandcard:function(player,num){
								return num-1;
							},
						},
					},
					'1':{
						mark:true,
						intro:{
							content:'本回合手牌上限+2',
						},
						mod:{
							maxHandcard:function(player,num){
								return num+2;
							},
						},
					},
				},
			},
			gzgongbianx:{
				trigger:{
					player:'damageBegin3',
				},
				forced:true,
                audio:"ext:国战补充:1",
				filter:function(event,player,name){
					if(event.num<=0) return false;
					if(name=='damageBegin3'&&_status.currentPhase==player) return true;
					return false;
				},
				check:function(event,player){
					return _status.currentPhase==player;
				},
				content:function(){
                   trigger.cancel();
　　　　　　　　},
                group:"gzgongbianx_discard",
				subSkill:{
					'discard':{
                        audio:"shiyuan",
				        trigger:{
					         player:'loseAfter',
	global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter'],
				        },
				        forced:true,
				        filter:function(event,player){
					       if(player==_status.currentPhase) return false;
					       if(event.name=='gain'&&event.player==player) return false;
					       if(event.getParent(2).name!='gzgongbianx') return false;
					       var evt=event.getl(player);
					       return evt&&evt.cards2&&evt.cards2.length>0;
				        },
				        content:function(){
                           player.chooseToDiscard('he',true);
				        },
					},
				},
			},
			gzchizhongx:{
				trigger:{target:"useCardToTarget"},
				filter:function(event,player){
					return event.card.name=='sha';
				},
                audio:"ext:国战补充:1",	
				content:function(){
					"step 0"
					var controls=['draw_card'];
					if(trigger.player.countCards('he')){
						controls.push('discard_card');
					}
					controls.push('cancel');
					player.chooseControl(controls).set('ai',function(){
						var trigger=_status.event.getTrigger();
						if(trigger.player.countCards('he')&&get.attitude(_status.event.player,trigger.player)<0){
							return 'discard_card';
						}
						else{
							return 'draw_card';
						}
					}).set('prompt',get.prompt2('gzchizhongx'));
					"step 1"
					if(result.control=='draw_card'){
						player.draw();
						player.logSkill('gzchizhongx');
					}
					else if(result.control=='discard_card'&&trigger.player.countCards('he')){
						player.discardPlayerCard(trigger.player,'he',true).logSkill=['gzchizhongx',trigger.player];
					}
					else event.finish();
				},
				ai:{
					expose:0.1
				}
			},
			gzleilix:{
				enable:'phaseUse',
				usable:1,
                audio:"ext:国战补充:1",	
				filterTarget:function(card,player,target){
					return player!=target;
				},
				content:function(){
					"step 0"
　　　　　　　　　　player.link(true);
　　　　　　　　　　target.link(true);
					"step 1"
                    var card={name:'sha',nature:'thunder'};
                    if(player.canUse(card,target,false)) player.useCard(card,target,false);
				},
				ai:{
					order:5,
					result:{
						player:function(player){
							if(player.hp==1){
								return 0;
							}
							return 1;
						},
						target:function(player,target){
							return get.effect(target,{name:'sha'},player,player);
						},
					},
					threaten:1.3
				}
			},
			gzfengxingx:{
				trigger:{
                   player:"loseAfter",
                   source:"gainAfter",
                   global:["equipAfter","addJudgeAfter"],
				},
				frequent:true,
				filter:function(event,player){
                     var evt=event.getl(player);
                     return evt&&evt.es&&evt.es.length>0; 
				},
				content:function(){
					"step 0"
                    player.logSkill('gzfengxingx');
                    var list=['重置武将牌','摸一张牌'];
                    event.list=list;
                    if(!player.isTurnedOver()&&!player.isLinked){
                        event.list.remove('重置武将牌');
                    }                    player.chooseControl(event.list).set('ai',function(evt,player){
                        var controls=_status.event.controls;
                        var player=_status.event.player;
                        if(player.isTurnedOver()){
                            return '重置武将牌';
                        }
                        return '摸一张牌';
                    }).set('prompt','风行：请选择一项');
					"step 1"
                    player.popup(result.control);
                    if(result.control=='重置武将牌'){
                        if(player.isLinked()){
                           player.link(false);
                        }
                        if(player.isTurnedOver()){
                           player.turnOver(false);
                        }
                        event.finish();
                    }
                    else if(result.control=='摸一张牌'){
                        player.draw();
                        event.finish();
                    }
				},
                group:"gzfengxingx_link",
				subSkill:{
					'link':{
                        audio:"qiaobian",	
						trigger:{
							player:'linkBegin'
						},
						forced:true,
						filter:function(event,player){
							return !player.isLinked()&&player.canMoveCard();
						},
						content:function(){
							player.moveCard();
						},
					},
				},
				ai:{
					noe:true,
					reverseEquip:true,
					effect:{
						target:function(card,player,target,current){
							if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
						}
					}
				}
			},
            gzdujunx:{
                audio:"ext:国战补充:1",	
                trigger:{
                    player:["phaseZhunbeiBegin","phaseJudgeBegin","phaseUseBegin","phaseDiscardBegin","phaseJieshuBegin"],
                },
                filter:function (event,player){
                    return player.countCards('h')<2;
                },
                forced:true,
                content:function (){
                    'step 0'
                    trigger.cancel();                 
                    'step 1'
                    player.phaseDraw();
                },
            },
            gzxiaojunx:{
                audio:"zhiman",
                trigger:{
                   global:"gainAfter",
                },
                usable:1,
                filter:function(event,player){
                   if(_status.currentPhase==event.player) return false;
                   return event.player!=player;
                },
                logTarget:"player",
                check:function (event,player){
                   return get.attitude(player,event.player)>0;
                }, 
                content:function(){
                   "step 0"
                    var list=['摸一张牌','重铸一张牌'];
                    event.list=list;
                    if(!trigger.player.countCards('h')){
                        event.list.remove('重铸一张牌');
                    }            
trigger.player.chooseControl(event.list).set('ai',function(evt,player){
                        return _status.event.controls.randomGet();
                    }).set('prompt','晓军：请选择一项');
                   "step 1"
                    if(result.index==0){
                        trigger.player.draw();
                        player.chooseToDiscard('请选择要重铸的一张牌','he',true);
					    player.draw();
                    }
                    else if(result.index==1){
					    player.draw();
                        trigger.player.chooseToDiscard('请选择要重铸的一张牌','he',true);
                        trigger.player.draw();
                    }
                },
            },
            gzdanggux:{
				audio:"tuxing",
                forced:true,
                trigger:{
                   global:"damageEnd",
                },
                round:1,
                filter:function(event,player){
                   return event.source!=undefined&&!event.player.isUnseen(2);
                },
                content:function(){
                    var players=game.players.slice(0).sortBySeat();
                    for(var i=0;i<players.length;i++){
if(players[i].group==trigger.player.group&&players[i]!=trigger.player){
                          players[i].damage(trigger.source);
　　　　　　           }
                    };
                },
            },
            gzyujuex:{
                global:"gzyujuex2",
                unique:true,
                forceunique:true,
				audio:"yujue",
            },
            gzyujuex2:{
                enable:"phaseUse",
                usable:1,
				audio:"yujue",
                filter:function (event,player){
                   if(player.hasSkill("gzyujuex")) return false;
                      return game.hasPlayer(function(current){
                          return current.hasSkill('gzyujuex');
                      });
                },
                filterCard:function (card){
                   var num=0;
                   for(var i=0;i<ui.selected.cards.length;i++){
                       num+=get.number(ui.selected.cards[i]);
                   }
                   return get.number(card)+num<=13;
                },
                complexCard:true,
                selectCard:function(){
                   var num=0;
                   for(var i=0;i<ui.selected.cards.length;i++){
                       num+=get.number(ui.selected.cards[i]);
                   }
                   if(num==13) return ui.selected.cards.length;
                   return ui.selected.cards.length+2;
                },
                discard:false,
                prepare:"give",
                filterTarget:function (card,player,target){
                   return player!=target&&target.hasSkill("gzyujuex");
                },
                check:function(card){
                    var num=0;
                    for(var i=0;i<ui.selected.cards.length;i++){
                       num+=get.number(ui.selected.cards[i]);
                    }
                    if(num+get.number(card)==13) return 6-ai.get.value(card);
                    if(ui.selected.cards.length==0){
                       var cards=_status.event.player.get('h');
                       for(var i=0;i<cards.length;i++){
                           for(var j=i+1;j<cards.length;j++){
                               if(cards[i].number+cards[j].number==13){
                                  if(cards[i]==card||cards[j]==card) return 4-ai.get.value(card);
                               }
                           }
                        }
                     }
                     return 0;
                },
                content:function(){
                  "step 0"
                   target.gain(cards,player);
                  "step 1"
                   event.cards=get.cards(3);
                   event.videoId=lib.status.videoId++;
                   game.broadcastAll(function(player,id,cards){
                      var str;
                      if(player==game.me&&!_status.auto){
                          str='鬻爵：选择任意张点数不大于13的牌';
                      }
                      else{
                          str='鬻爵';
                      }
                      var dialog=ui.create.dialog(str,cards);
                      dialog.videoId=id;
                   },player,event.videoId,event.cards);
                   event.time=get.utc();
                   game.addVideo('showCards',player,['鬻爵',get.cardsInfo(event.cards)]);
                   game.addVideo('delay',null,2);
                   "step 2"
                   var next=player.chooseButton([0,3]);
                   next.set('dialog',event.videoId);
                   next.set('filterButton',function(button){
                       var num=0
                       for(var i=0;i<ui.selected.buttons.length;i++){
                           num+=get.number(ui.selected.buttons[i].link);
                       }
                       return (num+get.number(button.link)<=13);
                   });
                   next.set('ai',function(button){
                       return ai.get.value(button.link,_status.event.player);
                   });
                   "step 3"
                   if(result.bool&&result.links){
                       player.logSkill('gzyujuex2');
                       var cards2=[];
                       for(var i=0;i<result.links.length;i++){
                           cards2.push(result.links[i]);
                           cards.remove(result.links[i]);
                       }
                       for(var i=0;i<cards.length;i++){
                           ui.discardPile.appendChild(cards[i]);
                       }
                       event.cards2=cards2;
                   }
                   else{
                       event.finish();
                   }
                   var time=1000-(get.utc()-event.time);
                   if(time>0){
                       game.delay(0,time);
                   }
                   "step 4"
                   game.broadcastAll('closeDialog',event.videoId);
                   var cards2=event.cards2;
                   player.gain(cards2,'log');
                   player.$draw(cards2);
                   game.delay();
                },
                ai:{
                    order:9,
                    result:{
                        player:1.5,
                    },
                    threaten:1.3,
                },
            },
            gzwangzhix:{
                audio:"ext:国战补充:1",
                trigger:{
                    player:"gainAfter",
                },
                init:function (player){
                    player.storage.gzwangzhix=[];
                },
                filter:function (event,player){
                    var num=0;
                    for(var i=0;i<event.cards.length;i++){
                        if(get.suit(event.cards[i])=='spade') num++;
                    }
                    return event.cards&&event.cards.length>0&&num>0;
                },
                content:function (){
                    "step 0"
                    event.cards=trigger.cards.slice(0);
                    "step 1"            
                    player.chooseCard('he','是否将其中一张♠牌置于你的武将牌上？',function(card,player){
                        return _status.event.getParent().cards.contains(card)&&get.suit(card)=='spade';
                    }).set('ai',function(card){
                        if(card.name=='du') return 20;
                        return 9-get.value(card);
                    });
                    "step 2"
                    if(result.bool){
                        player.$give(result.cards,player,false);
                        player.storage.gzwangzhix=player.storage.gzwangzhix.concat(result.cards);
                        player.lose(result.cards,ui.special,'toStorage');
                        player.markSkill('gzwangzhix');
                        player.syncStorage('gzwangzhix');
                        game.log(player,'将',result.cards,'置于武将牌上');  
                    }
                },
                intro:{
                    content:"cards",
                },
                group:["gzwangzhix2","gzwangzhix3"],
            },
            gzwangzhix2:{
                trigger:{
                    player:"chooseToRespondBegin",
                },
                filter:function (event,player){
                    if(event.responded) return false;
                    if(!event.filterCard({name:'shan'},player,event)&&!event.filterCard({name:'sha'},player,event)) return false;
                    return player.storage.gzwangzhix&&player.storage.gzwangzhix.length;
                },
                content:function (){
                    "step 0"
                    player.$throw(player.storage.gzwangzhix,1000);
                    game.cardsDiscard(player.storage.gzwangzhix);
                    player.storage.gzwangzhix=[];
                    player.syncStorage('gzwangzhix');
                    player.unmarkSkill('gzwangzhix');
                    "step 1"
                    trigger.untrigger();
                    trigger.responded=true;
                    if(trigger.filterCard({name:'shan',isCard:true})){
                        trigger.result={bool:true,card:{name:'shan',isCard:true}}
                    }
                    else{
                        trigger.result={bool:true,card:{name:'sha',isCard:true}}
                    }
                    "step 2"
                    player.draw();
                },
                ai:{
                    effect:{
                        target:function (card,player,target,effect){
                            if(get.tag(card,'respondShan')) return 0.7;
                            if(get.tag(card,'respondSha')) return 0.7;
                        },
                    },
                },
            },
            "gzwangzhix3":{
                enable:"chooseToUse",
                filter:function (event,player){
                    if(!player.storage.gzwangzhix) return false;
                    if(player.storage.gzwangzhix.length==0) return false;
                    return event.filterCard({name:'sha'},player,event)||event.filterCard({name:'shan'},player,event);
                },
                chooseButton:{
                    dialog:function (event,player){
                        var list=[];
                        if(event.filterCard({name:'sha'},player,event)){
                            list.push(['基本','','sha']);
                            list.push(['基本','','sha','fire']);
                            list.push(['基本','','sha','thunder']);
                        }
                        if(event.filterCard({name:'shan'},player,event)){
                            list.push(['基本','','shan']);
                        }
                        return ui.create.dialog('望志',[list,'vcard'],'hidden');
                    },
                    check:function (button){
                        var player=_status.event.player;
                        var card={name:button.link[2],nature:button.link[3]};                       
                        if(card.name=='sha'){
                            if(card.nature=='fire') return 2.95;
                            else if(card.nature=='fire') return 2.92;
                            else return 2.9;
                        }
                        else if(card.name=='shan'){
                            return 4;
                        }
                        return 0;
                    },
                    backup:function (links,player){
                        return {
                            filterCard:function(){return false},
                            viewAs:{name:links[0][2],nature:links[0][3],isCard:true},
                            selectCard:-1,
                            popname:true,
                            log:false,
                            precontent:function(){
                                'step 0'
                                player.$throw(player.storage.gzwangzhix,1000);
                                game.cardsDiscard(player.storage.gzwangzhix);
                                player.storage.gzwangzhix=[];
                                player.syncStorage('gzwangzhix');
                                player.unmarkSkill('gzwangzhix');
                                'step 1'
                                player.draw();
                            },
                        }
                    },
                    prompt:function (links,player){
                        return '选择'+get.translation(links[0][3]||'')+get.translation(links[0][2])+'的目标';
                    },
                },
                ai:{
                    order:11,
                    respondShan:true,
                    respondSha:true,
                    result:{
                        player:function (player){
                            return 1;
                        },
                    },
                },
            },
            gzpingxix:{
                trigger:{
                    player:"phaseUseBegin",
                },
                audio:"ext:国战补充:1",
                direct:true,
                filter:function(event,player){
                    if(player.countCards('h','sha')>0) return true;
                    if(player.storage.zmwangzhi&&player.storage.zmwangzhi.length) return true;
                    return false;
                },
                content:function (){
                    'step 0'
                    player.logSkill('gzpingxix');
                    var list=['重铸杀','使用杀'];
                    event.list=list;
                    if(player.countCards('h','sha')==0&&player.storage.zmwangzhi){
                        event.list.remove('重铸杀');
                    }
                    var num=game.countPlayer(function(current){
                        return player.canUse({name:'sha'},current,false);
                    });                    
                    if(num<1) event.list.remove('使用杀');
                    player.chooseControl(event.list,'cancel2').set('ai',function(evt,player){
                        var controls=_status.event.controls;
                        var player=_status.event.player;
                        if(controls.contains('使用杀')){
                            return '使用杀';
                        }
                        return controls.randomGet();
                    }).set('prompt','平西：请选择一项');
                    'step 1'
                    player.popup(result.control);
                    if(result.control=='使用杀'){
                        event.list.remove('重铸杀');
                        player.chooseToUse(function(card,player){
                            return card.name=='sha';
                        });
                        event.goto(3);
                    }
                    else if(result.control=='cancel2'){
                        event.finish();
                        return;
                    }
                    else if(result.control=='重铸杀'){
                        event.list.remove('使用杀');
                        event.choice=result.control;
                        player.chooseCard('h',true,function(card,player){
                            return card.name=='sha';
                        });
                    }
                    'step 2'
                    if(result.bool){
                        player.lose(result.cards,ui.discardPile);
                        player.draw('nodelay');
                    }
                    'step 3'
                    player.chooseTarget('平西：请指定一名角色',true,function(card,player,target){
                        return player!=target;
                        }).set('ai',function(target){
                        return get.attitude(_status.event.player,target);
                    });
                    'step 4'
                    if(result.bool){
                        event.target=result.targets[0];
                        player.logSkill('gzpingxix',event.target);
                        player.line(event.target,'green');
                        var count=game.countPlayer(function(current){
                            return event.target.canUse({name:'sha'},current,false);
                        });
                        if(count<1) event.list.remove('使用杀');
                        if(event.target.countCards('h','sha')==0){
                            event.list.remove('使用杀');
                            event.list.remove('重铸杀');
                        }        
                        game.delay(3);                
                        event.target.chooseControl(event.list,'cancel2').set('ai',function(evt,player){
                            var controls=_status.event.controls;
                            var player=_status.event.player;
                            if(controls.contains('使用杀')){
                                return '使用杀';
                            }
                            if(controls.contains('重铸杀')){
                                return '重铸杀';
                            }
                               return controls.randomGet();
                        }).set('prompt','平西：请选择一项');
                    }
                    'step 5'
                    event.target.popup(result.control);
                    if(result.control=='使用杀'){
                        event.target.chooseToUse(true,function(card,player){
                            return card.name=='sha';
                        });
                        event.finish();
                    }
                    else if(result.control=='cancel2'){
                        if(event.choice=='重铸杀'){
                            player.chooseUseTarget('sha',true);
                        }
                        else player.draw('nodelay');
                        event.finish();
                    }
                    else if(result.control=='重铸杀'){
                        event.target.chooseCard('h',true,function(card,player){
                            return card.name=='sha';
                        });
                    }
                    'step 6'
                    if(result.bool){
                        event.target.lose(result.cards,ui.discardPile);
                        event.target.draw('nodelay');
                    }
                },
            },
			gzyanjunx:{
				enable:'phaseUse',
				usable:1,
                audio:"ext:国战补充:1",	
				filterTarget:function(card,player,target){
					return player!=target&&target.countCards('h');
				},
				filterCard:true,
				filter:function(event,player){
					return player.countCards('h');
				},
				content:function(){
					"step 0"
					player.draw();
					"step 1"
					var card=target.getCards('h').randomGet();
					if(!card){
						event.finish();
						return;
					}
					target.discard(card);
					target.draw();
					if(get.type(card)==get.type(cards[0])){
						event.bool=true;
					}
					event.target1=target;
					"step 2"
					if(event.bool) event.finish();
                    else{
					   player.chooseControl().set('choiceList',[
					   '视为对其使用一张【杀】',
					   '令一名其他角色回复1点体力',
						]).set('ai',function(){
           if(get.effect(target,{name:'sha'},player,player)>0) return 0;
                        return 1;
					   });
                    }
					"step 3"
                    if(result.index==0){
                        player.logSkill('gzyanjunx');
                        player.useCard({name:'sha',isCard:true},target,false);
　　　　　　　　　　　　event.finish();
                    }
                    else{
player.chooseTarget(get.prompt('gzyanjunx'),function(card,player,target){
                    return player!=target&&target!=event.target1;
					   }).set('ai',function(target){
						  return get.attitude(_status.event.player,target);
					   });
                    }
					"step 4"
					if(result.bool){
					   player.logSkill('gzyanjunx',result.targets);
                       result.targets[0].recover();
                    }
　　				else event.finish();
				},
				check:function(card){
					return 7-get.value(card);
				},
				ai:{
					order:5,
					result:{
						target:function(player,target){
							if(target.hasSkillTag('noh')) return 0;
							return -1;
						}
					},
					threaten:1.3
				}
			},
            gztunshoux:{
				audio:"cangchu",
                trigger:{
                    player:"phaseDrawBegin1",
                },
                check:function (event,player){
                    return [0,1].randomGet(); 
                },
                content:function (){
                    player.draw(2);
                    player.addTempSkill('gztunshoux2');
                },
                ai:{
                    noe:true,
                    reverseEquip:true,
                    effect:{
                        target:function (card,player,target,current){
                            if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
                        },
                    },
                },
            },
             gztunshoux2:{
                trigger:{
                    player:"useCardToBefore",
                },
                init:function (player){
                    player.storage.gztunshoux2=[];
                },
                intro:{
                    content:"cards",
                },
                forced:true,
                filter:function (event,player){
				  if(event.targets&&event.targets.length>1) return false;
                    return player.hasSkill('gztunshoux');
                },
                content:function (){
                    'step 0'
                    if(trigger.target==player){
                        event.finish();
                    }
                    else trigger.cancel();
                    'step 1'
                    player.choosePlayerCard(trigger.target,'屯守：选择一张牌置于你的武将牌上','he',true).set('ai',function(button){
                        return get.value(button.link);
                    });
                    'step 2'
                    if(result.bool){
                        trigger.target.$give(result.cards,player,false);
                        trigger.target.lose(result.cards,ui.special);
                        player.storage.gztunshoux2=player.storage.gztunshoux2.concat(result.cards);
                        player.syncStorage('gztunshoux2');
                        player.markSkill('gztunshoux2');           
                        game.log(player,'将',result.cards,'置于武将牌上'); 
                    }
                },
                group:"gztunshoux2_gain",
                subSkill:{
                    gain:{
                        trigger:{
                            player:"phaseJieshuBegin",
                        },
                        forced:true,
                        filter:function (event,player){
                            return player.storage.gztunshoux2&&player.storage.gztunshoux2.length;
                        },
                        content:function (){
                            'step 0'
                            event.num=player.getDamagedHp();
                            if(event.num==0) event.num=1;
                            player.chooseCardButton([1,event.num],'屯守：可以获得'+get.cnNumber(event.num)+'张牌',player.storage.gztunshoux2,true).set('ai',function(button){
                                 return get.value(button.link);
                            });
                            'step 1'
                            if(result.bool){
                                event.cards=result.links;
                                player.gain(event.cards,'fromStorage');
                                player.storage.gztunshoux2.remove(event.cards);           
                            }
                            'step 2'
                            player.$throw(player.storage.gztunshoux2,1000);
                            game.cardsDiscard(player.storage.gztunshoux2);
                            player.storage.gztunshoux2=[];
                            player.storage.gztunshoux=0;
                            player.syncStorage('gztunshoux2');
                            player.unmarkSkill('gztunshoux2');                             
                        },
                        sub:true,
                    },
                },
            },
			gzdujuanx:{
                audio:"ext:国战补充:1",	
				enable:'phaseUse',
				filter:function(event,player){
					return player.getHandcardLimit()>0;
				},
				filterTarget:function(card,player,target){
					return player!=target;
				},
				init:function(player){
					player.storage.gzdujuanx=0;
				},
				usable:20,
				content:function(){
					'step 0'
					player.storage.gzdujuanx++;
					'step 1'
　　　　　　　　　　target.gain(target.getCards('e'),'gain2');
					'step 2'
					target.phaseDiscard();
				},
				ai:{
					order:10,
					result:{
                        target:-1,
						player:function(player,target){
                           if(target.countCards('he')>target.hp&&get.attitude(player,target)<=0) return 1;
                           return 0;
                        },
					}
				},
				mod:{
					maxHandcard:function(player,num){
						return num-player.storage.gzdujuanx;
					}
				},
				group:['gzdujuanx2']
			},
			gzdujuanx2:{
				trigger:{player:'phaseAfter'},
				silent:true,
				content:function(){
					player.storage.gzdujuanx=0;
				}
			},
			gzyuanchouy:{
				audio:"jinzhi",
				trigger:{
					global:"recoverBegin",
				},
                forced:true,
				filter:function (event,player){
					return event.player!=player&&event.player.inRange(player)&&!player.isMaxHandcard()&&!player.isMaxHp();
				},
				content:function(){
                    player.recover();
				},
			},
			gzyueqiangx:{
				audio:"xjshijian",
				trigger:{
					global:"phaseBegin",
				},
				filter:function(event,player){
					return event.player!=player&&!player.sameIdentityAs(event.player)&&player.countCards('h');
				},
			    check:function(event,player){
　　　　　　　　　　return event.player.countCards('h')>=2;
　　　　　　　　},
				content:function(){
				   "step 0"
                    player.chooseCard('he',true).set('ai',function(card){
                       return 5-get.value(card);
                    });
					"step 1"
                    if(result.bool){
                       trigger.player.gain(result.cards,player,'give');
                       trigger.player.addTempSkill('gzyueqiangx3');
                       player.addTempSkill('gzyueqiangx2');
                    }
					else{
						event.finish();
					}
				},
				ai:{
					threaten:3,
				},
			},
            gzyueqiangx2:{
				audio:"xjshijian",
                trigger:{
                    global:"useCard",
                },
				filter:function(event,player){
					return event.player!=player&&event.player.hasSkill('gzyueqiangx3');
				},
                forced:true,
                content:function(){
                    player.draw();
                },
            },
            gzyueqiangx3:{},
			gzxuyuy:{
				audio:"xuyu",
				trigger:{
					global:"useCard",
				},
				forced:true,
				filter:function(event,player){
					return event.targets&&event.targets.contains(player)&&event.card.name=='sha'&&event.player.countCards('h')>player.countCards('h');
				},
				content:function(){
					trigger.targets.remove(player);
				},
			},
			gzcunxux:{
				trigger:{global:"useCard1"},
                audio:"ext:国战补充:1",	
				forced:true,
				filter:function(event,player){
					return event.card.name=='sha'&&(player.isMaxHandcard(true)||player.isMaxHp(true)||player.isMajor(true));
				},
				content:function(){
					'step 0'
					event.num=0;
					if(player.isMaxHandcard(true)) event.num++;
					if(player.isMaxHp(true)) event.num++;
					if(player.isMajor(true)) event.num++;
					'step 1'
			player.chooseToDiscard('he',event.num,true).set('ai',function(card){
					     return 6-get.value(card);
					});
					'step 2'
                    if(result.bool&&result.cards.length>=2){
						player.chooseTarget('请选择一名角色，其摸三张牌',true).ai=function(target){
							return get.attitude(_status.event.player,target);
						};
                    }
                    else{ 
                        event.finish(); 
                    } 
					'step 3'
					player.line(result.targets[0],'fire');
					result.targets[0].draw(3);
				},
			},
            gzqingjiux:{
                trigger:{
                    global:"dying",
                },
                audio:"ext:国战补充:1",	
                priority:6,
                filter:function(event,player){
                    return event.player.hp<=0&&event.player!=player;
                },
                check:function(event,player){
                    return ai.get.attitude(player,event.player)>0;
                },
                content:function(){
                   _status.event.getTrigger().player.draw(2);
                   player.storage.gzqingjiux= _status.event.getTrigger().player;
                   player.addSkill('gzqingjiux2');
                   player.addSkill('gzqingjiux3');
                },
                ai:{
                    expose:0.2,
                    threaten:1.5,
                    save:true,
                },
            },
            gzqingjiux2:{
                trigger:{
                    global:"recoverAfter",
                },
                filter:function (event,player){
        return event.player.hp>0&&event.player==player.storage.gzqingjiux;
                },
                forced:true,
                content:function (){
                   player.chooseToDiscard('he',true);
                   delete player.storage.gzqingjiux;
                   player.removeSkill('gzqingjiux2');
                   player.removeSkill('gzqingjiux3');
                },
            },
            gzqingjiux3:{
                trigger:{
                    global:"dieAfter",
                },
                filter:function (event,player){
                    return event.player==player.storage.gzqingjiux;
                },
                forced:true,
                content:function(){
                   delete player.storage.gzqingjiux;
                   player.removeSkill('gzqingjiux2');
                   player.removeSkill('gzqingjiux3');
                },
            },
            gzduanlix:{
                audio:"ext:国战补充:1",	
                enable:"phaseUse",
                usable:1,
                filter:function (event,player){
                     var cards=player.get('h');
                     if(cards.length<=1) return false;
                     var color=get.color(cards[0]);
                     for(var i=1;i<cards.length;i++){
                        if(get.color(cards[i])!=color) return true;
                     }
                     return false;
                 },
                check:function (card){return 6-ai.get.value(card)},
                content:function (){
                   "step 0"
　　　　　　　　   player.judge(ui.special);
　　　　　　　    "step 1"
　　　　　　　    if(result.color=='red'){
                      event.cards=player.get('h',{color:'black'});
                  }
                  else{
                      event.cards=player.get('h',{color:'red'});
                  }
                 'step 2'
                 player.discard(event.cards);
                 player.draw(event.cards.length);
                 'step 3'
                 var cards=player.get('h');
                 var samecolor=true;
                 for(var i=1;i<cards.length;i++){
                    var color=get.color(cards[0]);
                    if(get.color(cards[i])!=color) samecolor=false;
                }
                if(samecolor==true) player.draw();
                },
                ai:{
                    order:1,
                    result:{
                        player:1,
                    },
                },
             },
			 gzhujiux:{
                audio:"ext:国战补充:1",	
　　　　　　　　trigger:{global:'phaseEnd'},
				filter:function(event,player){
				   return player.isMinHandcard(true);
				},
				forced:true,
				content:function(){
                   player.draw();
				},
				group:"gzhujiux_discard",
				subSkill:{
					discard:{
　　　　　　　        　trigger:{global:'phaseEnd'},
					    forced:true,
				        filter:function(event,player){
				            return player.isMaxHandcard(true);
				        },
					    content:function(){
　　　　　　　　　　　　　　player.chooseToDiscard('h',true);
					    },
						sub:true,
					},
				},
　　　　　　},
            gzjiyiy:{
                audio:"ext:国战补充:1",
                enable:"phaseUse",
                usable:1,
                content:function (){
                "step 0"
                 event.card=get.cards(2);
                 player.showCards(event.card);      if(get.color(event.card[0])!=get.color(event.card[1])){
            ui.discardPile.appendChild(event.card[0]);
            ui.discardPile.appendChild(event.card[1]);
            event.finish();
        }
        else{
            player.chooseTarget(function(card,player,target){
            return player!=target;
        }).set('ai',function(target){
                if(event.card[0].name=='tao'||event.card[1].name=='tao'){
                    if(target.hp==target.maxHp) return 0;
                }
            return ai.get.attitude(_status.event.player,target);
        });
        }
        "step 1"
        if(result.bool){
          event.target=result.targets[0];  event.target.chooseCardButton(event.card).set('filterButton',function(button){
                    return (lib.filter.cardEnabled(button.link,event.target,event.parent.parent)&&lib.filter.cardUsable(button.link,event.target,event.parent.parent));
                }).ai=function(button){
              return ai.get.buttonValue(button);
          };            
        }
        "step 2"
        if(result.bool){
            event.target.gain(result.links[0],'gain2');
            event.card.remove(result.links[0]);
            event.target.chooseToUse().filterCard=function(card){
                                return card==result.links[0];
                            }          
        }
        for(var i=0;i<event.card.length;i++){
            ui.discardPile.appendChild(event.card[i]);            
        }
    },
                ai:{
                    result:{
                        player:function (player){
                var num=0;
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i]!=player&&ai.get.attitude(player,game.players[i])>1&&ai.get.attitude(game.players[i],player)>1){
                        num++;
                    }
                }
                if(num>=1) return 1;
                return -1;
            },
                    },
                    order:8.5,
                    expose:0.3,
                },
            },
            gzshanghuanx:{
                audio:"ext:国战补充:1",
                enable:"chooseToUse",
                filterCard:function(card){
                     return get.type(card)=='equip';
                },
                position:"he",
				viewAs:{
					name:'jiu',
					isCard:true,
				},
                viewAsFilter:function(player){
                     if(!player.countCards('he',{type:'equip'})) return false;
                },
                prompt:"将一张装备牌当酒使用",
                check:function(card){
                       if(_status.event.type=='dying') return 1;
                       return 7-ai.get.value(card);
                },
                group:"gzshanghuanx2",
                ai:{
                    skillTagFilter:function (player){
                       return player.countCards('h',{suit:'spade'})>0&&player.hp<=0;
                    },
                    threaten:1.5,
                    save:true,
                    basic:{
                        useful:function(card,i){
                           if(_status.event.player.hp>1){
                              if(i==0) return 5;
                              return 1;
                           }
                           if(i==0) return 7.3;
                              return 3;
                        },
                        value:function (card,player){
                           if(player.hp>1){
                              if(i==0) return 5;
                              return 1;
                           }
                           if(i==0) return 7.3;
                               return 3;
                        },
                    },
                    order:function (){
                         return ai.get.order({name:'sha'})+0.2;
                    },
                    result:{
                        target:function (player,target){
                           if(target&&target.hp<=0) return 2;
                           var shas=player.get('h','sha');
                           if(shas.length>1&&player.getCardUsable('sha')>1){
                                return 0;
                           }
                           var card;
                           if(shas.length){
                               for(var i=0;i<shas.length;i++){
                                   if(lib.filter.filterCard(shas[i],target)){
                                       card=shas[i];break;
                                   }
                               }
                            }
                            if(card){
                               if(game.hasPlayer(function(current){
                                    return (ai.get.attitude(target,current)<0&&
                                    target.canUse(card,current,true,true)&&
                                    !current.countCards('e','baiyin')&&
                                    ai.get.effect(current,card,target)>0);
                                    })){
                                       return 1;
                                       }
                                    }
                                    return 0;
                                },
                            },
                            tag:{
                               save:1,
                            },
                        },
                    },
                    gzshanghuanx2:{
                        trigger:{
                           player:"useCardAfter",
                        },
                        direct:true,
                        filter:function(event,player){
					       return event.skill=='gzshanghuanx';
　                      },
                        content:function(){
                          'step 0'
                          player.chooseTarget(function(card,player,target){
                             return target.countCards('e')&&target!=player;
                          },'选择一名装备区有牌的角色').set('ai',function(target){
                             var player=_status.event.player;
                             return -ai.get.attitude(player,target)
                          });
                          'step 1'
                          if(result.bool){
                             var target=result.targets[0];
                             player.line(target,'green');
                             player.discardPlayerCard(target,'e',true);
　　　　　　　　　　         target.useCard({name:'jiu',isCard:true},target);
                         }
                         else{
                             event.finish();
                         }
                     },
                 },
		   gzpolux:{
			  audio:'polu',
              shaRelated:true,
              forced:true,
              trigger:{
                source:"damageSource",
              },
              filter:function (event,player){
                if(event._notrigger.contains(event.player)) return false;
                  return(event.card&&event.card.name=='sha'&&
　　　　　　　　　event.getParent().name=='sha'&&event.player.isAlive()&&
                  player.canCompare(event.player));
              },
			  check:function(event,player){
				  return get.attitude(player,event.player)<0;
			  },
              content:function (){
					"step 0"
					if(!player.getEquip(1)&&!player.getEquip(4)){
						event._result={index:0};
					}
					else if(!player.getEquip(2)&&!player.getEquip(3)){
						event._result={index:1};
					}
					else{
						trigger.player.chooseControl().set('choiceList',[
							'弃置武器牌和进攻马',
							'弃置防具牌和防御马',
						]).set('ai',function(){return 0});
					}
					"step 1"
					if(result.index==0){
					  var equip1=trigger.player.getEquip(1);
					  var equip4=trigger.player.getEquip(4);
					  var cards=[];
					  if(equip1) cards.push(equip1);
					  if(equip4) cards.push(equip4);
					  if(cards.length){
						  trigger.player.discard(cards);
					  }
					}
					else{
					  var equip2=trigger.player.getEquip(2);
					  var equip3=trigger.player.getEquip(3);
					  var cards=[];
					  if(equip2) cards.push(equip2);
					  if(equip3) cards.push(equip3);
					  if(cards.length){
						  trigger.player.discard(cards);
					  }
					}
              },
　　		},

			gzchoulvex:{
                audio:"choulve",
				trigger:{player:'damageEnd'},
				frequent:true,
				filter:function(event){
                    return (event.num>0)
				},
				content:function(){
					"step 0"
					player.draw();
					"step 1"
	player.chooseTarget(get.prompt('gzchoulvex'),function(card,player,target){
                    return player!=target;
					}).set('ai',function(target){
						return -get.attitude(_status.event.player,target);
					});
					"step 2"
					if(result.bool){
					   event.target=result.targets[0];
					   player.viewHandcards(event.target);
        player.chooseToUse(get.prompt('gzchoulvex'),function(card,player,event){
                       if(!get.tag(card,'damage')) return false;
                       return lib.filter.filterCard.apply(this,arguments);
                       },event.target,-1).set('addCount',false).logSkill='gzchoulvex';
                    }
　　				else event.finish();
				},
				ai:{
					effect:{
						target:function(card,player,target){
							if(get.tag(card,'damage')&&_status.currentPhase!=target){
								return [1,0.5];
							}
						}
					}
				}
			},
				 gzanliux:{
				    trigger:{player:'phaseEnd'},
				    audio:"nzry_kuizhu",
                    filter:function(event,player){
                       if(!player.countCards("h"))return false;
                         return game.hasPlayer(function(current){
                           if(player==current)return false;
                             return current.countCards("h");
                         });
                    },
                    check:function(event,player){
                       return player.hasFriend();
                    },
				    content:function(){
					   'step 0'
	player.chooseTarget(get.prompt2('gzanliux'),true,function(card,player,target){
						return target!=player&&target.countCards('h');
					}).set('ai',function(target){
						var att=get.attitude(_status.event.player,target);
		                return att>=0;
					    });
					   'step 1'
					    if(result.bool){
						   event.target=result.targets[0];
					       player.chooseCard('he',true).ai=function(card){
						      return get.value(event.cardt)<5;
					       };
					       event.cardt=event.target.getCards('h').randomGet();
					       event.target.showCards(event.cardt);
					    }
					   'step 2'
					   if(result.bool){
					   　　event.cardp=result.cards[0];
　　　　　　　　　　       player.showCards(event.cardp); 
                       }
					   'step 3'
					   player.$giveAuto(event.cardp,event.target);
					   event.target.gain(event.cardp,player);
					   event.target.give(event.cardt,player);
					    'step 4'
				  	   var colorp=get.color(event.cardp);
					   var colort=get.color(event.cardt);
					   if(colort=='red'&& colorp=='red'){
						   player.recover();
					   }
					   if(colort=='black'&&colorp=='black'){
						   event.target.draw(2);
					   }
　　　　　　　　　　},
				},
            gzdiedangx:{
                enable:"phaseUse",
                usable:1,
				audio:"nzry_zhizheng",
                init:function (player,skill){
        player.storage[skill]=true;
    },
                mark:true,
                intro:{
                    content:function (n,p,s){
            var a=p.storage[s];
            var f=function(a){return a?"摸":"弃置"};
            return "出牌阶段限一次，你可以"+f(a)+"三张牌，然后"+f(!a)+"一张牌。";
        },
                },
                f:function (){
        var p=get.player();
        return p.storage.gzdiedangx;
    },
                selectCard:function (){
        return lib.skill.gzdiedangx.f()?0:3;
    },
                position:"he",
                filterCard:true,
                check:function (card){
        if(lib.skill.gzdiedangx.f())return 1;
        return 8-get.value(card);
    },
                content:function (){
        "step 0"
        var b=lib.skill.gzdiedangx.f();
        player.storage.gzdiedangx=!player.storage.gzdiedangx;
        player.draw(b?3:1);
        if(b)player.chooseToDiscard("he",true);
    },
                ai:{
                    order:function (){
            if(lib.skill.gzdiedangx.f())return 6;
            return 1;
        },
                    result:{
                        player:function (player,target){
                if(lib.skill.gzdiedangx.f())return player.maxHp-player.countCards("h");
                return player.needsToDiscard()||player.countCards("he")-player.hp-1.9;
            },
                    },
                },
            },
			gzxiaomoux:{
                audio:"ext:国战补充:1",
				trigger:{
					player:"useCardToPlayered",
				},
				filter:function(event,player){
                    if(event.player==event.target||event.targets.length!=1) return false;
                    return event.target.countCards('hej');
				},
				check:function(event,player){
					return event.target.countCards('hej');
				},
				content:function(){
					"step 0" 
					player.gainPlayerCard(trigger.target,'hej',true);
					"step 1" 
                    player.chooseCard('交给'+get.translation(trigger.target)+'一张手牌','h',true).set('ai',function(card){
　　　　　　　　　　if(get.attitude(player,trigger.target)>0) return 11-get.value(card);
                    return 7-get.value(card);
                    });
					"step 2" 
                    if(result.bool){
                        trigger.target.gain(result.cards[0],player,'giveAuto');
                    }
                    else{
                        event.finish();
                    }
				},
			},
			gzchengzhaox:{
                audio:"chengzhao",
                trigger:{
                   global:"phaseJieshuBegin",
　　　　　　　　},
				filter:function(event,player){
                   return event.player!=player&&!event.player.countCards('h');
				},
				check:function(event,player){
					return get.attitude(player,event.player)<0;
				},
				content:function(){
					"step 0" 
                    trigger.player.link(true);
					"step 1"
                    player.link(true);
					"step 2"
                    player.chooseToUse('是否使用一张牌？');
				},
			},
			gzzongzuox:{
				trigger:{global:'phaseUseEnd'},
                audio:"zongzuo",
				forced:true,
				logTarget:'player',
				filter:function(event,player){
					return event.player!=player&&event.player.isFriendOf(player);
				},
				content:function(){
　　　　　　　　　　trigger.player.addTempSkill('gzzongzuox_max');
　　　　　　　　　　trigger.player.draw();
　　　　　　　　},
　　　　　　　　subSkill:{
　　　　　　　　    max:{
　　　　　　　　       mod:{
                          maxHandcardBase:function(player,num){
                             return player.maxHp;
                          },
　　　　　　　　       },
　　　　　　　　       sub:true,
　　　　　　　　    },
　　　　　　　　},
			},
			gztuxix:{
				audio:'retuxi',
				trigger:{player:'phaseDrawBegin2'},
				filter:function(event){
					return event.num>0;
				},
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gztuxix'),[1,trigger.num],function(card,player,target){
						return target.countCards('h')>0&&player!=target&&target.countCards('h')>=player.countCards('h');
					},function(target){
						var att=get.attitude(_status.event.player,target);
						if(target.hasSkill('tuntian')) return att/10;
						return 1-att;
					});
					"step 1"
					if(result.bool){
						player.logSkill('retuxi',result.targets);
						player.gainMultiple(result.targets);
						trigger.num-=result.targets.length;
					}
					else{
						event.finish();
					}
					"step 2"
					if(trigger.num<=0) game.delay();
					"step 3"
　　　　　　        var num1=Math.max(1,player.getDamagedHp());
                    player.chooseCardButton('请选择要重铸的手牌',player.getCards('h'),[1,num1],false).ai=function(button){ 
                        return 5-get.value(button.link); 
                     }
					"step 4"
                     if(result.bool){ 
                        var cards=result.links; 
                        player.lose(cards,ui.discardPile); 
                        player.$throw(cards,1000); 
                        game.log(player,'将',cards,'置入了弃牌堆'); 
                        event.draw={bool:true,num:cards.length} 
                     }  
                     else event.finish();
					"step 5"
                     if(event.draw&&event.draw.bool){ 
                        player.draw(event.draw.num); 
                     }
				},
				ai:{
					threaten:1.6,
					expose:0.2
				}
			},
			gzlieyix:{
				enable:'phaseUse',
                audio:"ext:国战补充:1",
				usable:1,
				filter:function(event,player){
					return player.countCards('h');
				},
				filterCard:true,
				selectCard:1,
				filterTarget:function(card,player,target){
					return player!=target;
				},
				check:function(card){
					return 7-get.value(card);
				},
				content:function(){
					target.loseHp();
				},
				ai:{
					expose:0.3,
					result:{
						target:function(player,target){
							return get.damageEffect(target,player)-(target.maxHp-target.hp)/2;
						}
					},
					order:5
				}
			},
			gzgudux:{
				trigger:{player:'die'},
                audio:"ext:国战补充:1",
				forced:true,
				forceDie:true,
				skillAnimation:true,
				animationColor:'gray',
				filter:function(event){
					return event.source&&event.source.isIn();
				},
				content:function(){
					trigger.source.recover();
					trigger.source.addSkill('gzjiyix');
				},
				logTarget:'source',
				ai:{
					threaten:function(player,target){
						if(target.hp==1) return 0.2;
						return 1.5;
					},
					effect:{
						target:function(card,player,target,current){
							if(!target.hasFriend()) return;
							if(target.hp<=1&&get.tag(card,'damage')) return [1,0,0,-2];
						}
					}
				}
			},
			gzjiyix:{
				trigger:{player:'recoverBefore'},
				forced:true,
                audio:"ext:国战补充:1",
				filter:function(event,player){
					return player.hp>0&&event.num>0;
				},
				content:function(){
					trigger.cancel();
				},
			},
			gzfengzix:{
                audio:"minsi",
				trigger:{player:'phaseEnd'},
                filter:function (event,player){
                   return player.countCards('h');
                },
				check:function(event,player){
                    var cards=player.getCards('h');
                    var color=get.color(cards[0]);
                    for(var i=1;i<cards.length;i++){
                       if(get.color(cards[i])!=color) return false;
                    }
                    return true;
                },
				content:function(){
					"step 0"
					player.showHandcards();
					"step 1"
					var cards=player.getCards('h');
					var color=get.color(cards[0],player);
					for(var i=1;i<cards.length;i++){
						if(get.color(cards[i],player)!=color) return;
					}
					player.recover();
				},
				ai:{
					threaten:1.9
				}
			},
			gzmengrix:{
				trigger:{player:'recoverBefore'},
                audio:"jijing",
				filter:function(event,player){
					return player.hp>0&&event.num>0;
				},
				check:function(event,player){
					return player.hp>1;
				},
				content:function(){
					'step 0'
					trigger.cancel();
					player.draw(2*trigger.num);
					'step 1'
					player.chooseTarget(get.prompt('gzmengrix'),'令一名角色回复一点体力',function(card,player,target){
						return target!=player&&target.hp<target.maxHp;
					}).set('ai',function(target){
						return get.attitude(_status.event.player,target);
					});
					'step 2'
					if(result.bool){
						player.logSkill('gzmengrix',result.targets);
						result.targets[0].recover();
					}

				},
			},
			gzyaomengy:{
                audio:"jimeng",
				trigger:{player:'phaseUseBegin'},
				direct:true,
				filter:function(event,player){
					return player.countCards('h');
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt2('gzyaomengy'),function(card,player,target){
						return player.canCompare(target)&&!target.isUnseen(2)&&target.group!=player.group;
					}).set('ai',function(target){
						if(!_status.event.goon) return 0;
						return -get.attitude(_status.event.player,target);
					}).set('goon',player.needsToDiscard()||player.hasCard(function(card){
						var val=get.value(card);
						if(val<0) return true;
						if(val<=5){
							return card.number>=11;
						}
						if(val<=6){
							return card.number>=12;
						}
						return false;
					}));
					'step 1'
					if(result.bool){
						player.logSkill('gzyaomengy',result.targets);
						event.target=result.targets[0];
						player.chooseToCompare(event.target);
					}
					else{
						event.finish();
					}
					'step 2'
					if(result.bool){
						player.useCard({name:'yuanjiao',isCard:true},event.target);
					}
					else{
						event.target.useCard({name:'yuanjiao',isCard:true},player);
					}
				}
			},

			gzguhuanx:{
                audio:"ext:国战补充:1",
				trigger:{player:'useCard2'},
				filter:function(event,player){
					if(!event.targets||event.targets.length!=1) return false;
					var info=get.info(event.card);
					if(info.multitarget) return false;
					if(info.allowMultiple==false) return false;
					if(info.type=='equip') return false;
					if(info.type=='delay') return false;
					return game.hasPlayer(function(current){
						return current.isLinked();
					});
		        },
				direct:true,
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt2('gzguhuanx'),function(card,player,target){
					var trigger=_status.event.getTrigger();
								return !trigger.targets.contains(target)&&lib.filter.targetEnabled2(trigger.card,player,target)&&target.isLinked();
							}).set('ai',function(target){
								var player=_status.event.player;
								return get.effect(target,_status.event.getTrigger().card,player,player);
							});
				'step 1'
				if(result.bool){
					if(!event.isMine()&&!_status.connectMode) game.delayx();
						event.targets=result.targets.slice(0);
				}
				else{
						event.finish();
				}
				'step 2'
				player.logSkill('gzguhuanx',event.targets);
				trigger.targets.addArray(event.targets);
				},
				group:"gzguhuanx_cancel",
				subSkill:{
					cancel:{
					    trigger:{
						    player:'linkBegin'
					    },
					    forced:true,
					    filter:function(event,player){
						    return !player.isLinked();
					    },
					    content:function(){
						    trigger.untrigger();
						    trigger.finish();
					    },
						sub:true,
					},
				},
			},
			gzzhenmux:{
                audio:"ext:国战补充:1",
				trigger:{target:'useCardToTarget'},
				direct:true,
				filter:function(event,player){
					return event.card.name=='sha';
				},
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt2('gzzhenmux'),function(card,player,target){
						return target!=player&&!_status.event.targets.contains(target)&&_status.event.playerx.canUse('sha',target,false);
					}).set('ai',function(target){
						var trigger=_status.event.getTrigger();
						var player=_status.event.player;
						return get.effect(target,trigger.card,trigger.player,player)+0.1;
					}).set('targets',trigger.targets).set('playerx',trigger.player);
					"step 1"
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('gzzhenmux',target);
						event.target=target;
						target.chooseBool('令'+get.translation(player)+
						'摸一张牌？').set('choice',get.attitude(target,player)>0);
						game.delay();
					}
					else{
						event.finish();
					}
					"step 2"
					if(result.bool){
						player.draw();
						game.delay();
					}
					else{
						event.target.link(true);
					}
				},
				ai:{
					expose:0.2,
					effect:{
						target:function(card,player,target){
							if(card.name!='sha') return;
							var players=game.filterPlayer();
							if(get.attitude(player,target)<=0){
								for(var i=0;i<players.length;i++){
									var target2=players[i];															if(!target2.isLinked()) return 0.6;
										return 0.3;
								}
							}
							else return 1;
						}
					}
				}
			},
			gzbaier:{
               audio:"ext:国战补充:2",
			   trigger:{
				  global:"shaMiss",
			   },
			   frequent:true,
			   filter:function(event,player){
				   return event.target==player;
			   },
			   content:function(){
					player.draw();
			   },
			},
             gznongweix:{
                audio:"qinqing",
                trigger:{global:"phaseAfter"},
				filter:function(event,player){
                   if(!player.countCards('he')) return false;
                   if(!player.isMajor()) return false;
                   if(event.player==player) return false;
        if(event.player.getHistory('skipped').contains('phaseUse')) return false;
        return event.player.getHistory('useCard',function(evt){
            if(evt.targets&&evt.targets.length&&evt.isPhaseUsing()){
                var targets=evt.targets.slice(0);
                while(targets.contains(event.player)) targets.remove(event.player);
                return targets.length>0;
            }
                   return false;
                   }).length==0;
				},
                check:function(event,player){
                   return true;
　　　　　　　　},
                content:function(){
                   "step 0"
                   player.chooseToDiscard('he','是否弃置一张牌并获得一个额外回合？').set('ai',function(card){
                       return 7-get.value(card);
                   });
                   "step 1"
                   if(result.bool){
                       player.insertPhase();
                   }
                },
            },
             gzluanzhengx:{
                audio:"huisheng",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.isMajor()&&!player.storage.gzluanzhengx;
				},
				skillAnimation:true,
                check:function(event,player){
                   return game.countPlayer(function(current){
						return current.isMajor();
				   })>=3;
　　　　　　　　},
　　            content:function(){
                   "step 0"
		            player.awakenSkill('gzluanzhengx');
                    player.storage.gzluanzhengx=true;
					var list=[];
					for(var i=0;i<_status.characterlist.length;i++){
						var info=lib.character[_status.characterlist[i]];
						if(info[4]&&info[4].contains('jun')) continue;
						   if(info[1]==player.identity){
							 list.push(_status.characterlist[i]);
						   }
					}
					event.identity=event.player.identity;
        var players=game.players.concat(game.dead);
        for(var i=0;i<players.length;i++){
            list.remove(players[i].name);
            list.remove(players[i].name1);
            list.remove(players[i].name2);
        }
        var dialog=ui.create.dialog('将另一武将牌替换为一名角色','hidden');
        dialog.add([list.randomGets(3),'character']);
        player.chooseButton(dialog,true).ai=function(button){
            return get.rank(button.link,true)-lib.character[button.link][2];
        };	
					'step 1'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzluanzhengx')){
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init(result.links[0],player.name2);
					}
					else{
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,result.links[0]);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
				    player.update();
                   "step 2"
　　　　　　　　　　var players=game.players.slice(0).sortBySeat(); 
　　　　　　　　　　for(var i=0;i<players.length;i++){ 
　　　　　　　　　　　　if(!players[i].isMajor())  
　　　　　　　　　　       players[i].draw(); 
　　　　　　　　　　};
                },
            },
			  gzchishenx:{
				audio:'zongzuo',
				trigger:{player:'phaseUseEnd'},
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzchishenx&&game.players.length<=4;
				},
                forced:true,
				content:function(){
					'step 0'
					player.removeSkill('gzzhigex');
					'step 1'
					player.addSkill('gzzhigey');
					'step 2'
					player.awakenSkill('gzchishenx');
                    player.storage.gzchishenx=true;
				},
			},
			gzzhigex:{
				trigger:{global:'useCard1'},
				audio:"zhige",
				round:1,
                group:"gzchishenx",
				filter:function(event,player){
					if(event.targets.length!=1) return false;
					if(event.player==player) return false;
					if(player!=event.targets[0]) return false;
					for(var i=0;i<lib.inpile.length;i++){
						var info=lib.card[lib.inpile[i]];
						if(info.multitarget) continue;
						if(lib.filter.targetEnabled2({name:lib.inpile[i]},event.player,player)){
							return true;
						}
					}
					return false;
				},
				check:function(event,player){
					return get.effect(player,event.card,event.player,player)<0;
				},
				prompt2:function(event,player){
					return '发现一张牌代替'+get.translation(event.player)+'对你使用的'+get.translation(event.card);
				},
				autodelay:true,
				content:function(){
					'step 0'
					var list=[],list1=[],list2=[];
					for(var i=0;i<lib.inpile.length;i++){
						var info=lib.card[lib.inpile[i]];
						if(info.multitarget) continue;
						if(lib.filter.targetEnabled2({name:lib.inpile[i]},trigger.player,trigger.targets[0])){
							var cardinfo=[trigger.card.suit||'',trigger.card.number||'',lib.inpile[i]];
							list1.push(cardinfo);
							if(info.type!='equip'){
								list2.push(cardinfo);
							}
						}
					}
					var equipped=false;
					for(var i=0;i<3;i++){
						if(equipped&&list2.length){
							list.push(list2.randomRemove());
						}
						else{
							equipped=true;
							list.push(list1.randomRemove());
						}
					}
					player.chooseButton(true,['止戈',[list,'vcard']]).ai=function(button){
						var card={suit:trigger.card.suit,number:trigger.card.number,name:button.link[2]};
						return get.effect(trigger.targets[0],card,trigger.player,player);
					};
					'step 1'
					if(result.bool){
						var card=game.createCard({
							suit:trigger.card.suit||lib.suit.randomGet(),
							number:trigger.card.number||Math.ceil(Math.random()*13),
							name:result.links[0][2]}
						);
						event.card=card;
						game.log(player,'将',trigger.card,'变为',card);
						// if(!event.isMine()) game.delayx();
						trigger.card=get.autoViewAs(card);
						trigger.cards=[card];
						game.cardsGotoOrdering(card).relatedEvent=trigger;
					}
					else{
						event.finish();
					}
					'step 2'
					player.$throw(event.card,null,null,true);
					if(player==trigger.player){
						player.line(trigger.targets[0],'green');
					}
					else{
						player.line(trigger.player,'green');
					}
					game.delayx(0.5);
				},
				ai:{
					threaten:2.2
				}
			},
			gzzhigey:{
				trigger:{global:'useCard1'},
				audio:"zhige",
				round:3,
				filter:function(event,player){
					if(event.targets.length!=1) return false;
					if(event.player==player) return false;
					if(player!=event.targets[0]) return false;
					for(var i=0;i<lib.inpile.length;i++){
						var info=lib.card[lib.inpile[i]];
						if(info.multitarget) continue;
						if(lib.filter.targetEnabled2({name:lib.inpile[i]},event.player,player)){
							return true;
						}
					}
					return false;
				},
				check:function(event,player){
					return get.effect(player,event.card,event.player,player)<0;
				},
				prompt2:function(event,player){
					return '发现一张牌代替'+get.translation(event.player)+'对你使用的'+get.translation(event.card);
				},
				autodelay:true,
				content:function(){
					'step 0'
					var list=[],list1=[],list2=[];
					for(var i=0;i<lib.inpile.length;i++){
						var info=lib.card[lib.inpile[i]];
						if(info.multitarget) continue;
						if(lib.filter.targetEnabled2({name:lib.inpile[i]},trigger.player,trigger.targets[0])){
							var cardinfo=[trigger.card.suit||'',trigger.card.number||'',lib.inpile[i]];
							list1.push(cardinfo);
							if(info.type!='equip'){
								list2.push(cardinfo);
							}
						}
					}
					var equipped=false;
					for(var i=0;i<3;i++){
						if(equipped&&list2.length){
							list.push(list2.randomRemove());
						}
						else{
							equipped=true;
							list.push(list1.randomRemove());
						}
					}
					player.chooseButton(true,['止戈',[list,'vcard']]).ai=function(button){
						var card={suit:trigger.card.suit,number:trigger.card.number,name:button.link[2]};
						return get.effect(trigger.targets[0],card,trigger.player,player);
					};
					'step 1'
					if(result.bool){
						var card=game.createCard({
							suit:trigger.card.suit||lib.suit.randomGet(),
							number:trigger.card.number||Math.ceil(Math.random()*13),
							name:result.links[0][2]}
						);
						event.card=card;
						game.log(player,'将',trigger.card,'变为',card);
						// if(!event.isMine()) game.delayx();
						trigger.card=get.autoViewAs(card);
						trigger.cards=[card];
						game.cardsGotoOrdering(card).relatedEvent=trigger;
					}
					else{
						event.finish();
					}
					'step 2'
					player.$throw(event.card,null,null,true);
					if(player==trigger.player){
						player.line(trigger.targets[0],'green');
					}
					else{
						player.line(trigger.player,'green');
					}
					game.delayx(0.5);
				},
				ai:{
					threaten:1.4
				}
			},
			gzchuhuaix:{
                audio:"ext:国战补充:1",
				trigger:{player:'damageBegin4'},
				filter:function(event,player){
					return event.source!=undefined&&event.num>=player.hp&&player.hasViceCharacter()&&event.source.hasViceCharacter();
				},
				check:function(event,player){
					return !player.countCards('h',{name:['tao','jiu']})&&get.attitude(player,event.source)<=0;
				},
				content:function(){
					trigger.cancel();
					player.removeCharacter(1);
					trigger.source.removeCharacter(1);
				},
			},
            gzkannanx:{
                audio:"xinfu_kannan",
				trigger:{player:'loseAfter'},
				direct:true,
				filter:function(event,player){
					return event.cards&&event.cards.length>1;
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzkannanx'),'令一名体力值大于你的角色造成一点伤害',function(card,player,target){
						return target!=player&&target.hp>player.hp;
					}).set('ai',function(target){
						return -get.attitude(player,target);
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzkannanx',result.targets);
						result.targets[0].damage();
					}
				}
            },
          gzshenmoux:{
            audio:"ext:国战补充:1",
            shaRelated:true,
            trigger:{
               player:"useCardToPlayered",
            },
            prompt:function (event,player){
                var str='';
                str+='是否发动【深谋】观看'+get.translation(event.target)+'的手牌？';
                return str;
            },
            check:function (event,player){
               if(!player.countCards("h",function(card){
                  return 6-get.value(card);
               }))return false;
               return get.attitude(player,event.target)<0;
            },
            filter:function(event,player){
                return event.target.countCards('h')&&player.countCards('h')&& event.card.name=='sha';
            },
            content:function (){
                "step 0"
                if(player.countCards('h')){
                    var str='';
                    str+='是否替换'+get.translation(trigger.target)+'的一张手牌？';
                    player.chooseCardButton(str,trigger.target.get('h')).set('ai',function(button){
                        return ai.get.value(button.link);
                    });
                }
                else{
                    player.viewCards('深谋',trigger.target.get('h'));
                    event.finish();
                }
                "step 1"
                if(result.bool){
                    event.cards1=result.links[0];
                    player.chooseCard('请选择一张手牌替换'+get.translation(event.cards1)+'这张牌','h',true).set('ai',function(card){
                        return -ai.get.value(card);
                    });
                }
                else{
                    event.finish();
                }
                "step 2"
                if(result.bool){
                    event.cards2=result.cards[0];
                    player.gain(event.cards1,trigger.target);
                    trigger.target.$give(1,player);
                    if(get.position(event.cards2)=='h') player.$give(1,trigger.target);
                    else player.$give(event.cards2,trigger.target);
                    trigger.target.gain(event.cards2,player);
                }
            },
            ai:{
                expose:0.2,
            },
        },
			gzqinguox:{
				trigger:{player:'damageEnd'},
				forced:true,
				audio:'qinguo_use',
				logv:false,
				check:function(event,player){
					return game.hasPlayer(function(current){
						return get.attitude(player,current)>2&&current.countCards('h')==1
					});
				},
				filter:function(event,player){
					return game.hasPlayer(function(current){
						return current.countCards('h');
					});
				},
				content:function(){
					"step 0"
					var cards=[];
					if(ui.cardPile.childNodes.length<3){
						var discardcards=get.cards(3);
						for(var i=0;i<discardcards.length;i++){
							discardcards[i].discard();
						}
					}
					for(var i=0;i<3;i++){
						cards.push(ui.cardPile.childNodes[i]);
					}
					event.cards=cards;
					var dialog=ui.create.dialog('勤国：选择一个目标将手牌替换',cards,'hidden');
					dialog.classList.add('noselect');
					var next=player.chooseTarget(true,dialog,function(card,player,target){
						return target.countCards('h')>0;
					}).ai=function(target){
						var att=get.attitude(player,target);
						var hs=target.getCards('h');
						var num=hs.length;
						if(num<=1) return att*2;
						if(num==2){
							for(var i=0;i<cards.length;i++){
								if(get.value(cards[i],target,'raw')>6) return att;
							}
							if(target==player){
								for(var i=0;i<2;i++){
									if(get.value(cards[i],target,'raw')>6) return -1;
								}
							}
							return att/2;
						}
						if(num==3){
							if(target==player){
								var num2=0;
								for(var i=0;i<3;i++){
									num2+=get.value(cards[i],player,'raw');
									num2-=get.value(hs[i],player,'raw');
								}
								if(num2>0) return 0.5;
								if(num2<0) return -0.5;
							}
							return 0;
						}
						return -att/2;
					};
					"step 1"
					if(result.bool&&result.targets[0]){
						var target=result.targets[0];
						player.line(target,'green');
						// player.logSkill('gzqinguox',target,'green',true);
						var cards=target.getCards('h');
						target.lose(cards)._triggered=null;
						game.log(target,'弃置了',cards,'，并获得三张牌');
						// target.$draw(3);
						target.$throw(cards);
						target.gain(event.cards,'draw')._triggered=null;
					}
					else{
						event.finish();
					}
				},
				ai:{
					expose:0.1
				}
			},
			gzcuoruix:{
				audio:'cuorui',
                trigger:{player:'phaseJudgeBefore'},
				check:function(event,player){
					return player.countCards('j')||player.countCards('h')>=2;
				},
				content:function(){
					"step 0"
				    trigger.cancel();
					player.skip('phaseDraw');
					"step 1"
	player.chooseTarget(get.prompt('gzcuoruix'),true,function(card,player,target){
                    return player!=target&&player.canUse({name:'sha'},target);
					}).set('ai',function(target){
						return -get.attitude(player,target);
					});
					"step 2"
					if(result.bool){
						player.logSkill('gzcuoruix',result.targets);
						player.useCard({name:'sha',isCard:true},result.targets[0],false);
					}
				},	
			},
			 gzcuoruix2:{
                trigger:{
                    player:"useCard",
                },
                silent:true,
                forced:true,
                onremove:function (player){
                    player.removeSkill('gzcuoruix3');
                },
                filter:function (event,player){
                    var evt=event.getParent(2);
                    return evt.skill=='gzcuoruix';
                },
                content:function (){
                    player.storage.gzcuoruix2=trigger.card;
                },
                group:["gzcuoruix2_reset","gzcuoruix2_damage"],
                subSkill:{
                    damage:{
                        trigger:{
                            source:"damage",
                        },
                        silent:true,
                        forced:true,
                        popup:false,
                        filter:function (event,player){
                            return player.storage.gzcuoruix2&&event.card==player.storage.gzcuoruix2;
                        },
                        content:function (){
                            player.addTempSkill('gzcuoruix3');
                        },
                        sub:true,
                    },
                    reset:{
                        trigger:{
                            player:"useCardAfter",
                        },
                        forced:true,
                        silent:true,
                        popup:false,
                        filter:function (event,player){
                            return player.storage.gzcuoruix2&&event.card==player.storage.gzcuoruix2;
                        },
                        content:function (){
                            'step 0'
                            if(!player.hasSkill('gzcuoruix3')){
								player.chooseControl().set('choiceList',[
                                    '重置武将牌',
                                    '摸一张牌',
                                ]).set('ai',function(){
                                    var player=_status.event.player;
                                    if(player.isTurnedOver()||player.isLinked) return 0;
                                    return 1;
                                });
							}
							else event.goto(2);
							'step 1'
				         	if(result.index==0){
				               if(player.countCards('j')){                       
                                  player.discard(player.getCards('j'));
                               }
                               if(player.isLinked()){
                                  player.link(false);
                               }
                               if(player.isTurnedOver()){
                                  player.turnOver(false);
                               }
                            }
                            else if(result.index==1){
                               player.draw();
                            }
                            'step 2'                            
                            delete player.storage.gzcuoruix2;
                            player.removeSkill('gzcuoruix2');  
                        },
                        sub:true,
                    },
                },
            },
            gzcuoruix3:{},
			gzjincex:{
				audio:"xinfu_youdi",
                trigger:{
                  global:"damageEnd",
                },
				filter:function(event,player){
					return event.player.isIn()&&event.player.isFriendOf(player);
				},
                check:function (event,player){
                    return get.attitude(player,event.player)>0;
                },
				content:function(){
					'step 0'
					trigger.player.draw();
					"step 1"
					if(!trigger.player.countCards('h')) event.finish();
					else trigger.player.showHandcards();
					"step 2"
					if(!trigger.source) return;
					var cards=trigger.player.getCards('h');
					var color=get.color(cards[0],trigger.player);
					for(var i=1;i<cards.length;i++){
						if(get.color(cards[i],trigger.player)!=color) return;
					}
					trigger.source.chooseToDiscard(true);
				},
			},
			 gzduanfax:{
				init:function (player){
					player.storage.gzduanfax=0;
				},
				audio:'xinfu_duanfa',
				enable:"phaseUse",
				position:"he",
				filter:function (card,player){
					return player.storage.gzduanfax<player.maxHp;
				},
				filterCard:function (card){
					return get.type(card)!='basic';
				},
				selectCard:function (){
					var player=_status.event.player;
					return [1,player.maxHp-player.storage.gzduanfax];
				},
				check:function (card){
					return 6-get.value(card)
				},
				delay:false,
				content:function (){
					player.draw(cards.length);
					player.storage.gzduanfax+=cards.length;
				},
				group:"gzduanfax_clear",
				subSkill:{
					clear:{
						trigger:{
							player:"phaseBefore",
						},
						forced:true,
						silent:true,
						popup:false,
						content:function (){
							player.storage.gzduanfax=0;
						},
						sub:true,
					},
				},
				ai:{
					order:1,
					result:{
						player:1,
					},
				},
			},
			gzzhaofux:{
				trigger:{ player:"loseAfter"},
				audio:'yaoming',
				filter:function(event,player){
					if(game.hasPlayer(function(current){
			return current.name=='gz_sunluban'||current.name2=='gz_sunluban';
					})) return false;
					return event.cards&&event.cards.length>1;
				},
				content:function(){
					'step 0'
					player.chooseTarget(lib.filter.notMe,'招附：是否令一名其他角色选择是否将其武将牌替换为“孙鲁班”？').set('ai',function(target){
						return get.attitude(_status.event.player,target)-4;
					});
					'step 1'
					if(!result.bool){
						event.finish();
						return;
					}
					var target=result.targets[0];
					event.target=target;
					player.line(target,'fire');
　　　　　　　　　　target.chooseBool('招附：是否将自己的一张武将牌替换为“孙鲁班”？');
					'step 2'
					if(result.bool){
						if(target.name2!=undefined){
							target.chooseControl(target.name,target.name2).set('prompt','请选择要更换的武将牌');
						}
						else event._result={control:target.name};
					}
					else event.finish();
					'step 3'
					target.showCharacter(2);
					target.reinit(result.control,'gz_sunluban');
					if(_status.characterlist){
						_status.characterlist.add(result.control);
						_status.characterlist.remove('gz_sunluban');
					}
				},
			},
			gzzhenshanx:{
				trigger:{player:'chooseToRespondBegin'},
                audio:'yaoming',
				filter:function(event,player){
					if(event.responded) return false;
					if(!event.filterCard({name:'shan'},player,event)&&!event.filterCard({name:'sha'},player,event)) return false;
					if(player.hasSkill('gzzhenshanx2')) return false;
					var nh=player.countCards('h');
					return game.hasPlayer(function(current){
						return current!=player&&current.countCards('h')<nh;
					});
				},
				direct:true,
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gzzhenshanx'),function(card,player,target){
						return target.countCards('h')<player.countCards('h');
					}).set('ai',function(target){
						return get.attitude(player,target)
					});
					"step 1"
					if(result.bool){
						trigger.untrigger();
						trigger.responded=true;
						if(trigger.filterCard({name:'shan',isCard:true})){
							trigger.result={bool:true,card:{name:'shan',isCard:true}}
						}
						else{
							trigger.result={bool:true,card:{name:'sha',isCard:true}}
						}
						player.logSkill('gzzhenshanx',result.targets);
						player.addTempSkill('gzzhenshanx2');
						player.swapHandcards(result.targets[0]);
                        player.mayChangeVice();
					}
				},
				group:'gzzhenshanx_use'
			},
			gzzhenshanx2:{},
			gzzhenshanx_use:{
				enable:'chooseToUse',
				filter:function(event,player){
					if(player.hasSkill('gzzhenshanx2')) return false;
					var nh=player.countCards('h');
					if(!game.hasPlayer(function(current){
						return current!=player&&current.countCards('h')<nh;
					})){
						return false;
					}
					return event.filterCard({name:'sha'},player,event)||
						event.filterCard({name:'jiu'},player,event)||
						event.filterCard({name:'tao'},player,event)||
						event.filterCard({name:'shan'},player,event);
				},
				chooseButton:{
					dialog:function(event,player){
						var list=[];
						if(event.filterCard({name:'sha'},player,event)){
							list.push(['基本','','sha']);
							list.push(['基本','','sha','fire']);
							list.push(['基本','','sha','thunder']);
							list.push(['基本','','sha','ice']);
						}
						if(event.filterCard({name:'tao'},player,event)){
							list.push(['基本','','tao']);
						}
						if(event.filterCard({name:'jiu'},player,event)){
							list.push(['基本','','jiu']);
						}
						if(event.filterCard({name:'shan'},player,event)){
							list.push(['基本','','shan']);
						}
						return ui.create.dialog('振赡',[list,'vcard'],'hidden');
					},
					check:function(button){
						var player=_status.event.player;
						var card={name:button.link[2],nature:button.link[3]};
						if(card.name=='jiu') return 0;
						if(game.hasPlayer(function(current){
							return player.canUse(card,current)&&get.effect(current,card,player,player)>0;
						})){
							if(card.name=='sha'){
								if(card.nature=='fire') return 2.95;
								else if(card.nature=='fire') return 2.92;
								else return 2.9;
							}
							else if(card.name=='tao'||card.name=='shan'){
								return 4;
							}
						}
						return 0;
					},
					backup:function(links,player){
						return {
							filterCard:function(){return false},
							viewAs:{name:links[0][2],nature:links[0][3],isCard:true},
							selectCard:-1,
							popname:true,
							log:false,
							precontent:function(){
								'step 0'
								player.chooseTarget('选择交换手牌的目标',function(card,player,target){
									return target.countCards('h')<player.countCards('h')
								},true).ai=function(target){
									return get.attitude(player,target);
								}
								player.addTempSkill('gzzhenshanx2');
								'step 1'
								if(result.bool){
									player.logSkill('gzzhenshanx',result.targets);
									player.swapHandcards(result.targets[0]);
                                    player.mayChangeVice();
								}
							},
						}
					},
					prompt:function(links,player){
						return '选择'+get.translation(links[0][3]||'')+get.translation(links[0][2])+'的目标';
					}
				},
				ai:{
					order:function(){
						var player=_status.event.player;
						var event=_status.event;
						var nh=player.countCards('h');
						if(game.hasPlayer(function(current){
							return get.attitude(player,current)>0&&current.countCards('h')<nh;
						})){
							if(event.type=='dying'){
								if(event.filterCard({name:'tao'},player,event)){
									return 0.5;
								}
							}
							else{
								if(event.filterCard({name:'tao'},player,event)||event.filterCard({name:'shan'},player,event)){
									return 4;
								}
								if(event.filterCard({name:'sha'},player,event)){
									return 2.9;
								}
							}
						}
						return 0;
					},
					save:true,
					respondSha:true,
					respondShan:true,
					skillTagFilter:function(player,tag,arg){
						if(player.hasSkill('gzzhenshanx2')) return false;
						var nh=player.countCards('h');
						return game.hasPlayer(function(current){
							return current!=player&&current.countCards('h')<nh;
						});
					},
					result:{
						player:function(player){
							if(_status.event.type=='dying'){
								return get.attitude(player,_status.event.dying);
							}
							else{
								return 1;
							}
						}
					}
				}
			},
            gzhaoliex:{
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                direct:true,
                audio:'ext:国战补充:1',
                content:function(){
                    "step 0"
                    player.chooseTarget(get.prompt('gzhaoliex'),function(card,player,target){
                        return player!=target;
                        }).set('ai',function(target){
                        var player=_status.event.player;
                        var att=get.attitude(player,target);
                        if(player.hp==1) return 0;
                        if(player.hp>1&&!player.countCards('h','tao')){
                            if(target.hp!=1&&target.hasSkillTag('maixie')) return att*3;
                            if(target.hp==1) return -att*2;
                        }
                        return -att;
                    });
                    "step 1"
                    if(result.bool){
                        player.logSkill('gzhaoliex',result.targets);
                        player.line(result.targets[0]);
                        if(!player.storage.gzhaoliex) player.storage.gzhaoliex=true;
                        result.targets[0].addTempSkill('gzhaoliex2',{player:"dieAfter"});
                        player.damage('nosource');
                        result.targets[0].damage('nosource');
                    }
                },
                group:"gzhaoliex_end",
                subSkill:{
                    end:{
                        trigger:{
                            player:"phaseJieshuBegin",
                        },
                        filter:function(event,player){
                            return player.storage.gzhaoliex;
                        },
                        silent:true,
                        forced:true,
                        popup:false,
                        content:function(){
                            'step 0'
                            for(var i=0;i<game.players.length;i++){
                                if(game.players[i].hasSkill('gzhaoliex2')){
                                    player.line(game.players[i],'green');                                    
                                    game.players[i].recover();
                                    game.players[i].removeSkill('gzhaoliex2');
                                 }
                            }
                            'step 1'
                            player.recover();
                            delete player.storage.gzhaoliex;
                        },
                        sub:true,
                    },
                },
            },
            gzhaoliex2:{
            },
				 gzyaowangx:{
                    audio:'ext:国战补充:1',
				    trigger:{player:'phaseEnd'},
				    filter:function(event,player){
					   return game.hasPlayer(function(current){
						  return current!=player&&current.countCards('j');
					   });
				    },
					check:function (event,player){
 						return game.hasPlayer(function(current){
							if(!current.countCards("j"))return false;
							return get.attitude(player,current)>0;
						});
					},
				    content:function(){
					   'step 0'
	player.chooseTarget(get.prompt2('gzyaowangx'),function(card,player,target){
						return target!=player&&target.countCards('j');
					}).set('ai',function(target){
						var att=get.attitude(_status.event.player,target);
					    if(_status.event.player.hasJudge('yangjingxurui')) 	return 1;
					    if(_status.event.countCards('j')&&att>0) 	return 1;
					    return 0;
					    });
					   'step 1'
					    if(result.bool){
						   player.gainPlayerCard(1,'j',result.targets[0],true);
					    }
					    else{
						   event.finish();
					    }
						'step 2'
						player.useCard(result.cards[0],player);
						player.chooseDrawRecover(2,true);
　　　　　　　　　　},
				},
			gzbizhuanx:{
                audio:"bizhuan",
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return event.toShow.contains('gz_caiyong');
				},
				forced:true,
				charlotte:true,
				content:function(){
					player.markAuto('gzbizhuanx',game.cardsGotoSpecial(get.cards(game.countGroup())).cards);
				},
				marktext:'书',
				intro:{
					onunmark:function(storage,player){
						if(storage&&storage.length){
							player.$throw(storage,1000);
							game.cardsDiscard(storage);
							game.log(storage,'被置入了弃牌堆');
							storage.length=0;
						}
					},
					mark:function(dialog,content,player){
						if(content&&content.length){
							if(player==game.me||player.isUnderControl()){
								dialog.addAuto(content);
							}
							else{
								return '共有'+get.cnNumber(content.length)+'张牌';
							}
						}
					},
					content:function(content,player){
						if(content&&content.length){
							if(player==game.me||player.isUnderControl()){
								return get.translation(content);
							}
							return '共有'+get.cnNumber(content.length)+'张牌';
						}
					}
				},
				group:'gzbizhuanx2',
			},
			gzbizhuanx2:{
				trigger:{global:'phaseBegin'},
                audio:"bizhuan",
				forced:true,
				filter:function(event,player){
					return player.getStorage('gzbizhuanx').length>0&&get.distance(event.player,player)<=1;
				},
				content:function(){
					'step 0'
					event.num=game.countGroup();
	player.markAuto('gzbizhuanx',game.cardsGotoSpecial(get.cards(event.num)).cards);
					if(window.decadeUI&&!_status.connectMode) event.goto(3);
					'step 1'
					player.chooseButton(['将'+get.cnNumber(num)+'张牌置于牌堆顶（先选择的在上）',player.getStorage('gzbizhuanx')],true,num).set('ai',function(button){
						var player=_status.event.player;
						var next=_status.event.getTrigger().player;
						var att=get.attitude(player,next);
						var card=button.link;
						var judge=next.getCards('j')[ui.selected.buttons.length];
						if(judge){
							return get.judge(judge)(card)*att;
						}
						return get.value(card)*att;
					});
					'step 2'
					player.unmarkAuto('gzbizhuanx',result.links);
					while(result.links.length){
						ui.cardPile.insertBefore(result.links.pop().fix(),ui.cardPile.firstChild);
					}
					game.updateRoundNumber();
					event.finish();
					'step 3'
					var cards=player.getStorage('gzbizhuanx');
					var zhuanji=decadeUI.content.chooseGuanXing(player,cards,cards.length,null,num);
					zhuanji.caption='【辟撰】';
					zhuanji.header1='辟撰';
					zhuanji.header2='牌堆顶';
					zhuanji.tip='将'+num+'张牌置于牌堆顶<br>'+zhuanji.tip;
					zhuanji.callback=function(){
						return this.cards[1].length==num; 
					};
					event.switchToAuto=function(){
						var cheats=[];
						var cards=zhuanji.cards[0].slice(0);
						var stopped=false;
						var next=trigger.player;
						var hasFriend=get.attitude(player,next)>0;
					
						var judges=next.node.judges.childNodes;
						if(judges.length>0) cheats=decadeUI.get.cheatJudgeCards(cards,judges,hasFriend);
						if(hasFriend){
							cards=cards.sort(function(b,a){
								return get.value(b,next)-get.value(a,next);
							});
						}
						else{
							cards.sort(function(a,b){
								return get.value(b,next)-get.value(a,next);
							});
						}
						cards=cheats.concat(cards);
						var time=500;
						var gainNum=num;
						for(var i=cards.length-1;i>=0;i--){
							setTimeout(function(card,index,finished,moveDown){
								zhuanji.move(card,index,moveDown?1:0);
								if(finished) zhuanji.finishTime(1000);
							},time,cards[i],i,i==0,gainNum>0);
							time += 500;
							gainNum--;
						}
					};
					if(!event.isMine()){
						event.switchToAuto();
					}
					'step 4'
					var cards=event.cards2;
					if(event.result&&event.result.bool){
						player.unmarkAuto('gzbizhuanx',cards);
						var first=ui.cardPile.firstChild;
						while(cards.length){
							ui.cardPile.insertBefore(cards.pop().fix(),ui.cardPile.firstChild);
						}
					}
					game.updateRoundNumber();
				},
			},
			gztongbox:{
				trigger:{global:'judge'},
                audio:"tongbo",
				direct:true,
				filter:function(event,player){
					return player.getStorage('gzbizhuanx').length&&event.player.isAlive();
				},
				content:function(){
					"step 0"
					var list=player.storage.gzbizhuanx;
					player.chooseButton([get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+get.translation(trigger.player.judging[0])+
						'，'+get.prompt('gztongbox'),list,'hidden'],function(button){
						var card=button.link;
						var trigger=_status.event.getTrigger();
						var player=_status.event.player;
						var judging=_status.event.judging;
						var result=trigger.judge(card)-trigger.judge(judging);
						var attitude=get.attitude(player,trigger.player);
						return result*attitude;
					}).set('judging',trigger.player.judging[0]).set('filterButton',function(button){
						var player=_status.event.player;
						var card=button.link;
						var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
						if(mod2!='unchanged') return mod2;
						var mod=game.checkMod(card,player,'unchanged','cardRespondable',player);
						if(mod!='unchanged') return mod;
						return true;
					});
					"step 1"
					if(result.bool){
						event.forceDie=true;
						player.respond(result.links,'gztongbox','highlight','noOrdering');
						result.cards=result.links;
						player.unmarkAuto('gzbizhuanx',result.cards);
						if(!player.storage.gzbizhuanx.length){
							player.storage.gztongbox=true;
							player.gainMaxHp();
							player.recover();
							player.addSkill('gzlinmox');
							player.flashAvatar('gztongbox','gz_'+skill.split('_')[0])
						}
					}
					else{
						event.finish();
					}
					"step 2"
					if(result.bool){
						if(trigger.player.judging[0].clone){
							trigger.player.judging[0].clone.classList.remove('thrownhighlight');
							game.broadcast(function(card){
								if(card.clone){
									card.clone.classList.remove('thrownhighlight');
								}
							},trigger.player.judging[0]);
							game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
						}
						game.cardsDiscard(trigger.player.judging[0]);
						trigger.player.judging[0]=result.cards[0];
						trigger.orderingCards.addArray(result.cards);
						game.log(trigger.player,'的判定牌改为',result.cards[0]);
						game.delay(2);
					}
				},
				ai:{
					rejudge:true,
					tag:{
						rejudge:0.6
					}
				},
			},
			gzlinmox:{
				trigger:{player:'loseEnd'},
				usable:1,
                audio:'tongbo',
				filter:function(event,player){
					return _status.currentPhase!=player;
				},
				frequent:true,
				content:function(){
					player.draw();
				}
			},
			gzqingxianx:{
				audio:"qingxian",
				trigger:{player:['damageEnd','recoverEnd']},
				direct:true,
				filter:function(event,player){
					return game.hasPlayer(function(current){
						return current!=player&&current.isDamaged();
					})
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzqingxianx'),'令一名其他角色回复1点体力',lib.filter.notMe).set('ai',function(target){
						var player=_status.event.player;
						return get.recoverEffect(target,player,player);
					});
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('gzqingxianx',target);
						target.recover();
					}
				},
			},
			gzhexianx:{
				global:'gzhexianx2',
			},
			gzhexianx2:{
				audio:"ext:国战补充:1",
				enable:'phaseUse',
				viewAs:function(){
					return {name:'tao'}
				},
				filterCard:{name:'tao'},
				ignoreMod:true,
				filterTarget:function(card,player,target){
					return target!=player&&target.isDamaged()&&target.hasSkill('gzhexianx');
				},
				selectTarget:function(){
					return game.countPlayer(function(current){
						return lib.skill.gzhexianx2.filterTarget(null,_status.event.player,current);
					})>1?1:-1;
				},
				filter:function(event,player){
					return player.countCards('h','tao')&&game.hasPlayer(function(current){
						return lib.skill.gzhexianx2.filterTarget(null,player,current)
					});
				},
				onuse:function(links,player){
					player.addSkill('gzhexianx3');
					player.addMark('gzhexianx3',1,false);
				},
				prompt:function(){
					var list=game.filterPlayer(function(current){
						return lib.skill.gzhexianx2.filterTarget(null,_status.event.player,current);
					});
					var str='对'+get.translation(list);
					if(list.length>1) str+='中的一名角色';
					str+='使用一张【桃】';
					return str;
				},
			},
			gzhexianx3:{
				intro:{
					content:'手牌上限+#',
				},
				mod:{
					maxHandcard:function(player,num){
						return num+player.countMark('gzhexianx3');
					},
				},
				trigger:{player:'useCardAfter'},
				forced:true,
				popup:false,
				filter:function(event,player){
					return event.skill=='gzhexianx2';
				},
				content:function(){
					player.draw();
				},
			},
			gzgushouy:{
				trigger:{player:'useCard'},
                audio:"ext:国战补充:1",
				filter:function(event,player){
                    var info=get.info(event.card);
                    var hs=player.getCards('h');
                    for(var i=0;i<hs.length;i++){
                       if(get.name(hs[i])==event.card.name) return false;
                    }
					return get.type(event.card)=='basic';
				},
				frequent:true,
				content:function(){
					'step 0'
				    player.showHandcards();
					'step 1'
　　　　　　　　　　player.draw();
				},
				ai:{
					threaten:1.8
				}
			},
			gzbizhengx:{
                audio:"bizheng",
　　　　　　　　round:1,
				trigger:{target:'useCardToBegin'},
                check:function(card){
　　　　　　　　　　return get.value(card)>=5;         
                },
				filter:function(event,player){
					return event.targets&&event.targets.length==1&&
	event.target!=event.player&&_status.currentPhase==event.player&&
	!get.info(event.card).unique;
				},
				content:function(){
					player.gain(game.createCard(trigger.card),'gain2');
				},
				ai:{
					threaten:0.7
				}
			},
			gzyidianx:{
                audio:"yidian",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzyidianx;
				},
				skillAnimation:true,
				filterTarget:function(card,player,target){
					return target!=player&&!target.isUnseen(0);
				},
				content:function(){
					'step 0'
		            player.awakenSkill('gzyidianx');
                    player.storage.gzyidianx=true;
					player.chooseSkill(target,function(info,skill){
						return !player.hasSkill(skill);
					});
					'step 1'
					if(result.bool){
						var skill=result.skill;
						player.addAdditionalSkill('gzyidianx',skill);
						player.popup(skill);
						player.markSkillCharacter('gzyidianx',target.name,get.skillTranslation(skill,player),get.skillInfoTranslation(skill));
					}
					'step 2'
					var rank=get.rank(target,true);
					var list=get.gainableCharacters(true);
					var choice=[];
					for(var i=0;i<list.length;i++){
						if(get.rank(list[i],true)==rank+1){
							choice.push(list[i]);
						}
					}
					if(!choice.length){
						for(var i=0;i<list.length;i++){
							if(get.rank(list[i],true)==rank){
								choice.push(list[i]);
							}
						}
					}
					if(choice.length){
						var hp=target.hp;
						var name=choice.randomGet();
						target.reinit(target.name,name);
						target.hp=Math.min(hp,target.maxHp);
						target.update();
						game.triggerEnter(target);
					}
				},
				ai:{
					order:8,
					result:{
						target:function(player,target){
							return 1/(get.rank(target,true)+1);
						}
					}
				}
			},
             gzfuhuax:{
                forced:true,
                audio:"ext:国战补充:1",
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                content:function (){
                   "step 0"
                   player.chooseToDiscard(2,true);
                   "step 1"
                   player.draw(2);
                },
            },
            gzchongdaox:{
                audio:"ext:国战补充:1",
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
                    return event.num>0&&player.isAlive();
                },
                content:function (){
                    'step 0'
	player.chooseTarget(get.prompt('gzchongdaox')).set('ai',function(target){
						return get.attitude(_status.event.player,target);
					});
                    'step 1'
                    if(result.bool){
                        event.target=result.targets[0];
                        player.logSkill('gzchongdaox',event.target);
                        var controls=['判定阶段','摸牌阶段','出牌阶段'];
                        player.chooseControl(controls).set('ai',function(){
                           var player=_status.event.player;
                           if(event.target.countCards('h')>=4) return '出牌阶段';
                           if(event.target.countCards('j')) return '判定阶段';
                           return '摸牌阶段'
                        }).set('prompt','崇道：当前回合结束后，令'+get.translation(event.target)+'执行一个由你指定的阶段');
                    }
                    else event.finish();
                    'step 2'
                    player.popup(result.control);
                    switch(result.control){
                        case '判定阶段':
                               event.target.addTempSkill('gzchongdaox_judge','phaseZhunbeiBegin');
                           break;
                        case '摸牌阶段':
                             event.target.addTempSkill('gzchongdaox_draw','phaseZhunbeiBegin');                    
                           break;
                        case '出牌阶段':
                            event.target.addTempSkill('gzchongdaox_use','phaseZhunbeiBegin');                    
                        break;
                    }
                },
                subSkill:{
                    judge:{
                        trigger:{
                            global:"phaseAfter",
                        },
                        silent:true,
                        forced:true,
                        content:function (){
                            player.phaseJudge();
                        },
                        sub:true,
                        popup:false,
                    },
                    draw:{
                        trigger:{
                            global:"phaseAfter",
                        },
                        silent:true,
                        forced:true,
                        content:function (){
                            player.phaseDraw();
                        },
                        sub:true,
                        popup:false,
                    },
                    use:{
                        trigger:{
                            global:"phaseAfter",
                        },
                        silent:true,
                        forced:true,
                        content:function (){
                            player.phaseUse();
                        },
                        sub:true,
                        popup:false,
                    },
                },
            },
            gzqixix:{
                audio:"qixi",
                unique:true,
                mainSkill:true,
                init:function (player){
                   player.storage.gzqixix=0;
                },
                mark:true,
                intro:{
                    content:"已累计使用过#张【过河拆桥】",
                },
                trigger:{
                      player:"useCard",
                },
                filter:function(event){
                     return event.card.name=='guohe'&&event.card;
                },                                           
                forced:true,
                popup:false,
                content:function(){
                  player.storage.gzqixix++;                      
                },
                group:["gzqixix_1","qixi"],
                subSkill:{
                    "1":{
				        audio:'drlt_poxi',
                        skillAnimation:true,
				        trigger:{player:'phaseUseEnd'},
                        filter:function (event,player){
			                return player.storage.gzqixix>game.players.length;
                        },
                        unique:true,
                        content:function (){      
                           player.mayChangeVice();                  
                        },
                        sub:true,
                    },
                },
            },
			gzzhiyix:{
				audio:'zhiyi',
				trigger:{global:'phaseJieshuBegin'},
				forced:true,
				filter:function(event,player){
					return player.getHistory('useCard',function(card){
						return get.type(card.card)=='basic';
					}).length>0||player.getHistory('respond',function(card){
						return get.type(card.card)=='basic';
					}).length>0;
				},
				content:function(){
					'step 0'
					var list=[];
					player.getHistory('useCard',function(evt){
						if(get.type(evt.card)!='basic') return;
						var name=evt.card.name;
						if(name=='sha'){
							var nature=evt.card.nature;
							switch(nature){
								case 'fire':name='huosha';break;
								case 'thunder':name='leisha';break;
								case 'kami':name='kamisha';break;
								case 'ice':name='icesha';break;
							}
						}
						list.add(name);
					});
					player.getHistory('respond',function(evt){
						if(get.type(evt.card)!='basic') return;
						var name=evt.card.name;
						if(name=='sha'){
							var nature=evt.card.nature;
							switch(nature){
								case 'fire':name='huosha';break;
								case 'thunder':name='leisha';break;
								case 'kami':name='kamisha';break;
								case 'ice':name='icesha';break;
							}
						}
						list.add(name);
					});
					player.chooseButton(['执义：选择要使用的牌，或点取消获得技能〖墨守〗直到你下个回合开始',[list.map(function(name){
						return ['基本','',name];
					}),'vcard']],function(button){
						return _status.event.player.getUseValue({name:button.link[2],nature:button.link[3]});
					},function(button){
						return _status.event.player.hasUseTarget({name:button.link[2],nature:button.link[3]});
					});
					'step 1'
					if(!result.bool) 　　　　　　player.addTempSkill('gzmoshou',{player:'phaseBegin'});
					else player.chooseUseTarget({name:result.links[0][2],isCard:true,nature:result.links[0][3]});
				},
			},
			gzchenghuox:{
                audio:"ext:国战补充:1",  
				trigger:{
                    global:"useCardToPlayer",
                },
                forced:true,
                filter:function (event,player){
					if(!['basic','trick'].contains(get.type(event.card))) return false;
					if(get.color(event.card)!='black') return false;
					if(event.targets.length!=1) return false;
                    return event.card&&event.targets.contains(player)||event.targets.contains(player.getPrevious());
                },
                content:function (){
					event.target=(trigger.target==player)?player.getNext():player;
					trigger.getParent().targets.push(event.target);
                    game.log(event.target,'成为了额外目标');
				},
			},
			gzqingnanx:{
                audio:"ext:国战补充:1",  
				trigger:{
                    global:"useCardAfter",
                },
                filter:function (event,player){
                    if(event.parent.name=='gzqingnanx') return false;
					if(event.player==player) return false;
                    if(event.targets.length<=1||!event.card) return false;
                    if(!event.targets.contains(player)) return false;
                    var card=game.createCard({name:event.card.name,suit:event.card.suit,number:event.card.number,nature:event.card.nature});
                    for(var i=0;i<event.targets.length;i++){
                        if(!event.targets[i].isAlive()) return false;
                    }
                    return player.countCards('he');
                },
                check:function(event,player){
                    var list1=[];
                    var list2=[];
                    var num=get.attitude(player,event.player);
                    var players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        if(get.attitude(player,players[i])>0) list1.push(players[i]);
                        else if(get.attitude(player,players[i])<0) list2.push(players[i]);
                    }
                    if(list1>list2&&event.card.name=='taoyuan'||event.card.name=='wugu') return 1;
                    if((event.card.name=='shunshou'||event.card.name=='guohe')&&num>0) return 1;
if(event.card.name=='lianjunshengyan'&&num>=0) return 1;
if((event.card.name=='juedou'||event.card.name=='huogong'||event.card.name=='shuiyanqijunx'||event.card.name=='jiedao')) return 0;
                    if((event.card.name=='tiesuo'||event.card.name=='lulitongxin'||event.card.name=='yiyi')) return 1;
                    if(event.card.name=='sha'){
                        if(get.attitude(player,player.getNext())<0&&event.targets.contains(player.getNext())){
                            if(player.countCards('h','shan')||player.getEquip(2)) return 1;
                            else if(player.getNext().hp==1&&player.hp>player.getNext().hp) return 1;
                            else{
                                return 0;
                            }
                        }
                        if(get.attitude(player,player.getPrevious())<0&&event.targets.contains(player.getPrevious())){
                            if(player.countCards('h','shan')||player.getEquip(2)) return 1;
                            else if(player.getPrevious().hp==1&&player.hp>player.getPrevious().hp) return 1;
                            else{
                                return 0;
                            }
                        }
                    }
                    return 0;
                },
				logTarget:'player',
				content:function (){
					'step 0'
					player.chooseCard('he','是否重铸一张牌').set('ai',function(card){
						return 8-get.value(card);
					}).set('goon',function(){
						return !player.hasShan();
					}());
					'step 1'
					if(result.bool){
						var card=result.cards[0];
					    player.logSkill('gzqingnanx');
						player.lose(card,ui.discardPile,'visible');
						player.$throw(card,1000);
						game.log(player,'将',card,'置入弃牌堆');
						player.draw();
					}
					else event.finish();
					'step 2'
					var card=game.createCard({name:trigger.card.name,suit:trigger.card.suit,number:trigger.card.number,nature:trigger.card.nature});
                    trigger.player.useCard(card,trigger.targets);
				},
			},	
             gzyihuix2:{
                audio:"ext:国战补充:1",   
                enable:"chooseToUse",
				round:1,				
                filterCard:function (card){                    
                      return card.number%2==0;
                },
                selectCard:1,
                position:"hes",
                viewAsFilter:function (player){					
					return player.countCards('he',function(card){
				       return card.number%2==0;
					});
				},
                viewAs:{name:"wuxie"},                
                prompt:"你可将一张点数为偶数的牌当作一张【无懈可击】使用",
                check:function (){return 1},
                ai:{
                    threaten:0.8,
                    basic:{
                        useful:[6,4],
                        value:[6,4],
                    },
                    result:{
                        player:1,
                    },
                    expose:0.2,
                },
            },
            gzyihuix:{                
                enable:"chooseToUse", 
                round:1,
                audio:"ext:国战补充:1",               
                group:["gzyihuix2"],                
                filter:function (event,player){                                                            
        if((event.filterCard({name:'sha'},player,event))||
            (event.filterCard({name:'shan'},player,event))||
            (event.filterCard({name:'jiu'},player,event))||
            (event.filterCard({name:'tao'},player,event))){
            return player.countCards('he',function(card){
				  return card.number%2==1;
					});   
        }
        return false;
    },
                chooseButton:{
                    dialog:function (event,player){
            var list=[];
            if(event.filterCard({name:'sha'},player,event)){
                list.push(['基本','','sha']);
                list.push(['基本','','sha','fire']);
                list.push(['基本','','sha','thunder']);
            }
                    if(event.filterCard({name:'shan'},player,event)){
                list.push(['基本','','shan']);
            }
            if(event.filterCard({name:'tao'},player,event)){
                list.push(['基本','','tao']);
            }
            if(event.filterCard({name:'jiu'},player,event)){
                list.push(['基本','','jiu']);
            }
            return ui.create.dialog('疑慧',[list,'vcard'],'hidden');
        },
                    check:function (button){
            var player=_status.event.player;
            var card={name:button.link[2],nature:button.link[3]};
            if(game.hasPlayer(function(current){
                return player.canUse(card,current)&&get.effect(current,card,player,player)>0;
            })){
                switch(button.link[2]){
                    case 'tao':return 5;
                    case 'jiu':return 3.01;
                    case 'shan':return 3.01;
                    case 'sha':
                        if(button.link[3]=='fire') return 2.95;
                        else if(button.link[3]=='fire') return 2.92;
                        else return 2.9;
                }
            }
            return 0;
        },
                    backup:function (links,player){
            return {
                  filterCard:function (card,player){                    
                      return card.number%2==1;
                },
                selectCard:1,
                position:'he',
                viewAsFilter:function (player){return player.isAlive()},
                viewAs:{name:links[0][2],nature:links[0][3],suit:null,number:null,isCard:true},                                    
                popname:true,
                ignoreMod:true,
                precontent:function (){                            
                    player.logSkill('gzyihuix'); 
                },
            }
        },
                    prompt:function (links,player){
            return '视为使用一张'+get.translation(links[0][3]||'')+get.translation(links[0][2]);
        },
                },
                ai:{
                    order:function (){
            var player=_status.event.player;
            var event=_status.event;
            if(event.filterCard({name:'jiu'},player,event)&&get.effect(player,{name:'jiu'})>0){
                return 3.1;
            }
            return 2.9;
        },
                    save:true,
                    respondSha:true,
                    respondShan:true,
                    result:{
                        player:1,
                    },
                },
            },
              gzdoukoux:{               
                trigger:{player:'phaseDrawBegin1'},
				filter:function(event,player){
					return !event.numFixed;
				},
				audio:"ext:国战补充:2",
				content:function(){
　　　　　　　　　'step 0' 
                  trigger.changeToZero(); 
                  event.cards=get.cards(3); 
                  player.showCards(event.cards); 
                  game.cardsGotoOrdering(event.cards);                           
                 'step 1'  
                  var controls=[];   
                  event.single=[]; 
                  event.double=[];              
                  for(var i=0;i<3;i++){    
                    if(event.cards[i].number%2==0){ 
                      controls.push('偶数'); 
                      event.double.add(event.cards[i]);   
                    }else{ 
                       controls.push('奇数'); 
                       event.single.add(event.cards[i]);  
                       }                   
                  }                      
                  var str='请选择获得点数为奇数或偶数的牌';             
     player.chooseControl(controls,ui.create.dialog(str,'hidden')).ai=function(){ 
                     return Math.floor(Math.random()*controls.length); 
                  };                                         
                 'step 2' 
                 if(result.control=='偶数'){                              
                     event.cards.remove(event.double); 
                     player.gain(event.double,'gain2');             
                     game.log(player,'获得了',event.double);                    
                 }else{ 
                     event.cards.remove(event.single); 
                     player.gain(event.single,'gain2');             
                     game.log(player,'获得了',event.single);               
                 } 
　　　　　　　　'step 3'
player.chooseTarget('令一名其他角色获得'+get.translation(cards),true,function(card,player,target){
                   return target!=player;
                   }).ai=function(target){
                   return get.attitude(_status.event.player,target);
                 }
                'step 4'
                 if(result.bool){
                    var target=result.targets[0];
                    player.line(target);
                    player.addExpose(0.2);
                    target.gain(cards,'gain2');
                 }
               },
            },    
			gzyanyix:{
				trigger:{player:'phaseUseBefore'},
				direct:true,
                audio:"ext:国战补充:1",
				filter:function(event,player){
					var hs=player.getCards('h');
					return game.hasPlayer(function(current){
						if(current!=player){
							for(var i=0;i<hs.length;i++){
								if(get.info(hs[i]).multitarget) continue;
								if(lib.filter.targetEnabled2(hs[i],player,current)){
									return true;
								}
							}
						}
					});
				},
				content:function(){
					'step 0'
					var hs=player.getCards('h');
					player.chooseTarget(get.prompt('gzyanyix'),function(card,player,target){
						if(player==target) return false;
						for(var i=0;i<hs.length;i++){
							if(get.info(hs[i]).multitarget) continue;
							if(lib.filter.targetEnabled2(hs[i],player,target)){
								return true;
							}
						}
						return false;
					}).ai=function(target){
						var num=0,eff=0,damaged=false;
						for(var i=0;i<hs.length;i++){
							if(get.info(hs[i]).multitarget) continue;
							var hef;
							if(get.tag(hs[i],'damage')&&damaged){
								hef=-1;
							}
							else{
								hef=get.effect(target,hs[i],player,player);
							}
							if(lib.filter.targetEnabled2(hs[i],player,target)&&hef>0){
								num++;
								if(get.attitude(player,target)>0){
									hef/=1.5;
									if(get.tag(hs[i],'damage')){
										damaged=true;
									}
								}
								eff+=hef;
							}
						}
						if(!player.needsToDiscard(-num)){
							return eff;
						}
						return 0;
					};
					'step 1'
					if(result.bool){
						event.target=result.targets[0];
						var num=0;
						player.chooseCard([1,Infinity],'按顺序选择对'+get.translation(result.targets)+'使用的牌',function(card){
							return lib.filter.targetEnabled2(card,player,event.target);
						}).ai=function(card){
							if(get.effect(event.target,card,player,player)>0){
								if(get.attitude(player,event.target)>0&&get.tag(card,'damage')){
									for(var i=0;i<ui.selected.cards.length;i++){
										if(get.tag(ui.selected.cards[i],'damage')){
											return 0;
										}
									}
								}
								return get.order(card);
							}
							return 0;
						}
					}
					else{
						event.finish();
					}
					'step 2'
					if(result.bool){
						player.logSkill('gzyanyix',event.target);
						player.addSkill('gzyanyix_draw');
						player.storage.gzyanyix_draw_num=0;
						player.storage.gzyanyix_draw=event.target;
						trigger.cancel();
						event.cards=result.cards.slice(0);
						player.lose(event.cards,ui.special);
					}
					else{
						event.finish();
					}
					'step 3'
					if(event.cards.length){
						if(event.target.isIn()){
							player.useCard(event.cards.shift(),event.target);
						}
						else{
							event.cards.shift().discard();
						}
						event.redo();
					}
					'step 4'
					if(player.storage.gzyanyix_draw_num){
						player.draw(player.storage.gzyanyix_draw_num);
					}
					player.addTempSkill('gzyanyix_handcard');
					player.removeSkill('gzyanyix_draw');
					delete player.storage.gzyanyix_draw;
					delete player.storage.gzyanyix_draw_num;
				},
				subSkill:{
			       handcard:{
				      mod:{
					      maxHandcardBase:function(player,num){
						     return player.maxHp;
					      }
				       }
			        },
					draw:{
						trigger:{global:'damageEnd'},
						forced:true,
						popup:false,
						filter:function(event,player){
							return event.player==player.storage.gzyanyix_draw;
						},
						content:function(){
							player.storage.gzyanyix_draw_num++;
						}
					}
				},
				ai:{
					threaten:1.3
				}
			},
			gzsijix:{
				trigger:{player:'recoverBefore'},
				forced:true,
                audio:"ext:国战补充:1",
				filter:function(event,player){
					return player.hp>0&&event.num>0;
				},
				content:function(){
					trigger.cancel();
					player.draw(2*trigger.num);
				},
				group:'gzsijix_remove',
				subSkill:{
					remove:{
						trigger:{player:'dying'},
						priority:10,
                        audio:"zhenlie",
						forced:true,
						content:function(){
							player.recover();
							player.removeSkill('gzsijix');
						}
					}
				}
			},
			gzyanjiaox:{
				audio:'yanjiao',
				enable:'phaseUse',
				usable:1,
				filter:function(event,player){
					return player.countCards('h',lib.skill.gzyanjiaox.filterCard);
				},
				filterCard:function(card){
					return card.name=='sha'||get.type(card)=='trick';
				},
				check:function(card){return 1},
				filterTarget:lib.filter.notMe,
				discard:false,
				lose:false,
				delay:0,
				content:function(){
					'step 0'
					target.gain(cards,player,'give');
					'step 1'
					target.chooseUseTarget(cards[0],game.filterPlayer(function(current){
						return current!=player;
					}),'请使用得到的牌，或者受到一点火焰伤害');
					'step 2'
					if(!result.bool) target.damage(1,'fire',player);
					else event.finish();
					'step 3'
					game.delay();
				},
				ai:{
					order:12,
					result:{
						target:function(player,target){
							var card=ui.selected.cards[0];
							if(!card) return 0;
							var info=get.info(card);
							if(info.selectTarget==-1){
								var eff=0;
								game.countPlayer(function(current){
									if(current!=player&&target.canUse(card,current)) eff+=get.effect(current,card,target,target)>0
								});
								if(eff>0||get.value(card)<3) return eff;
								return 0;
							}
							else if(game.hasPlayer(function(current){
								return current!=player&&target.canUse(card,current)&&get.effect(current,card,target,target)>0
							})) return 1.5;
							else if(get.value(card)<3) return -1;
							return 0;
						},
					},
				},
			},
			gzxingshenx:{
				mark:true,
				locked:false,
				zhuanhuanji:true,
				audio:'xingshen',
				intro:{
					content:function(storage,player,skill){
						if(player.storage.gzxingshenx==true) return '一名角色于弃牌阶段外弃置牌时，你可以令其摸一张牌。';
						return '一名角色于摸牌阶段外获得牌时，你可以令其弃置一张牌';
					},
				},
				group:["gzxingshenx_1","gzxingshenx_2"],
				subSkill:{
					'1':{
						trigger:{
				        	global:"gainAfter",
			        	},
				        audio:'xingshen',
			        	direct:true,
	         			filter:function (event,player){
							if(event.getParent(2).name=='gzxingshenx_2') return false;
			        		if(event.parent.parent.name=='phaseDraw') return false;
			        		return event.cards&&event.cards.length>0&&player.storage.gzxingshenx!=true;
			        	},
			        	content:function (){
							'step 0'
							player.chooseBool('是否发动【省身】令'+get.translation(trigger.player)+'弃置一张牌？').set('choice',get.attitude(player,trigger.player)<0);
							'step 1'
							if(result.bool){
					        	player.logSkill('gzxingshenx',trigger.player);
								player.storage.gzxingshenx=true;
					        	trigger.player.chooseToDiscard('he',true);
				        	}
						},
					},
					'2':{
						trigger:{
				        	global:"discardAfter",
			        	},
				        audio:'xingshen',
			        	direct:true,
	         			filter:function (event,player){
							if(event.getParent(2).name=='gzxingshenx_1') return false;
			        		if(event.parent.parent.name=='phaseDiscard') return false;
			        		return event.cards&&event.cards.length>0&&player.storage.gzxingshenx==true;
			        	},
			        	content:function (){
							'step 0'
							player.chooseBool('是否发动【省身】令'+get.translation(trigger.player)+'摸一张牌？').set('choice',get.attitude(player,trigger.player)>0);
							'step 1'
							if(result.bool){
					        	player.logSkill('gzxingshenx',trigger.player);
								player.storage.gzxingshenx=false;
					        	trigger.player.draw();
				        	}
						},
					},
				},
			},
			gzzhixingx:{
				audio:'pianchong',
				trigger:{
                    global:"phaseDiscardBegin",
                },
                filter:function (event,player){
					if(player.isLinked()){
						if(event.player.isLinked()) return false;
					}
					if(!player.isLinked()){
						if(!event.player.isLinked()) return false;
					}
                    return true;
                },
　　　　　　　　group:'gzzhixingx_2',
				direct:true,
                content:function (){
                    'step 0'
                    player.chooseControl().set('choiceList',[
                        '令'+get.translation(trigger.player)+'手牌上限-1',
                        '令'+get.translation(trigger.player)+'手牌上限+1',
						'重铸一张牌',
                    ]).set('ai',function(){
                        var player=_status.event.player;
						var att=get.attitude(player,trigger.player);
						var num=trigger.player.countCards('h')-trigger.player.hp;
                        if(att<=0&&num>=0) return 0;
						if(att>0&&num>0) return 1;
                        return 2;
                    });
                    'step 1'
                    player.logSkill('gzzhixingx',trigger.player);
                    if(result.index==0){
                        trigger.player.addTempSkill('gzzhixingx_0');
						event.finish();
                    }
                    else if(result.index==1){            
                        trigger.player.addTempSkill('gzzhixingx_1');
						event.finish();
                    }
					else if(result.index==2){
                        event.goto(2);
					}
                    'step 2'
					player.chooseCard('请选择要重铸的一张牌','he',true);
                    'step 3'
					var card=result.cards[0];
				    player.logSkill('gzzhixingx');
					player.lose(card,ui.discardPile,'visible');
					player.$throw(card,1000);
					game.log(player,'将',card,'置入弃牌堆');
					player.draw();
                },
                subSkill:{
                    "0":{
                        mod:{
                            maxHandcard:function (player,num){
                                return num-1;
                            },
                        },
                        sub:true,
                    },
                    "1":{
                        mod:{
                            maxHandcard:function (player,num){
                                return num+1;
                            },
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseZhunbeiBegin",
                        },
                        forced:true,
                        filter:function (event,player){
                           return !player.isLinked();
                        },
                        content:function (){
                            player.link(true);
                        },
                        sub:true,
                    },
                },
            },
			 gzdengfengx:{
				 audio:'zunwei',
                 unique:true,
                 global:"gzdengfengx2",
             },
             gzdengfengx2:{
				audio:'zunwei',
                enable:"phaseUse",
                filterCard:function(card){
                    return get.type(card)!='basic';
　　　　　　　　},
                filter:function (event,player){
                   if(!player.isLinked()||!player.countCards('he')) return false;
                   if(player.group!='wei') return false;
                   return game.hasPlayer(function(target){
                       return target!=player&&target.hasSkill('gzdengfengx')&&target.isLinked();
                   });
                },
                discard:false,
                prepare:"give",
				position:'h',
                filterTarget:function (card,player,target){
                     return target!=player&&target.hasSkill('gzdengfengx');
                },
                check:function (card){
                     var target=game.findPlayer(function(current){
                     return current.hasSkill('gzdengfengx');
                     });
                var player=_status.event.player;
                if(ai.get.attitude(player,target)>0) return 8-ai.get.value(card);         
　　　　　　　　　return 4-ai.get.value(card);
                },
                content:function(){
                   target.gain(cards,player);
                   player.mayChangeVice();
                },
				ai:{
					order:5,
					result:{player:1},
				},
            },
                gzxiwux:{
　　　　　　　　　 mod:{
					   targetInRange:function(card,player){
						if(_status.currentPhase==player&&card.name=='sha'&&card.number>=9) return true;
					   },
				   },
				   trigger:{player:'shaBegin'},
				   forced:true,
                   audio:"ext:国战补充:1",
                   logTarget:"target",
                   filter:function (event,player){
                      if(!player.getEquip(1)) return false;
                      var cards=player.getEquip(1);
                        return get.color(event.card)==get.color(cards);
                   },
　　			   content:function(){
					  trigger.directHit=true;
				   }
                },
　　　　　　gzhongzhuangx:{
                audio:"ext:国战补充:1",
                enable:'phaseUse',
				filterTarget:function(card,player,target){
					return player.canCompare(target)&&target.countCards('e');
				},
                filter:function (event,player){
                   return game.hasPlayer(function(current){
                     return player.canCompare(current)&&current.countCards('e');
                   });
                },
				usable:1,
				content:function(){
					"step 0"
                    player.chooseToCompare(target,function(card){
						if(card.name=='du') return 20;
						var player=get.owner(card);
						var target=_status.event.getParent().target;
						if(player!=target&&get.attitude(player,target)>0){
							return -get.number(card);
						}
						return get.number(card);
					}).set('preserve','lose');
					"step 1"
					if(result.bool==true){
					if (target.countCards('e')>0){
						player.gainPlayerCard(target,'e');
   						}
					}
					else{
					    target.gain([result.player,result.target]);
						target.$gain2([result.player,result.target]);
						player.mayChangeVice();
					}
 				},
　　　　　　　　ai:{
					basic:{
						order:1
					},
					expose:0.2,
					result:{
						target:function(player,target){
							if(player.countCards('h','du')&&get.attitude(player,target)<0) return -1;
							if(player.countCards('h')<=player.hp) return 0;
							var maxnum=0;
							var cards2=target.getCards('h');
							for(var i=0;i<cards2.length;i++){
								if(cards2[i].number>maxnum){
									maxnum=cards2[i].number;
								}
							}
							if(maxnum>10) maxnum=10;
							if(maxnum<5&&cards2.length>1) maxnum=5;
							var cards=player.getCards('h');
							for(var i=0;i<cards.length;i++){
								if(cards[i].number<maxnum) return 1;
							}
							return 0;
						}
					}
				} 					 
            },
           gzyongxianx:{
			  audio:'xianzhen',
              trigger:{
    	         player:"useCardToPlayered",
              },
              filter:function(event,player){
    	         return event.card.name=="sha";
              },
              check:function(event,player){
                 return get.attitude(player,event.target)<0;
              },
              logTarget:"target",
              frequent:'check',
              content:function(){
    	        "step 0"
    	        player.chooseBool("勇陷:是否令"+get.translation(player)+"摸一张牌？",()=>Math.random()>0.5);
    	        "step 1"
    	        event.bos=[result.bool];
    	        trigger.target.chooseBool("勇陷:是否令"+get.translation(player)+"摸一张牌？",()=>Math.random()>0.5);
    	        "step 2"
    	       event.bos.push(result.bool);
    	       var str1=event.bos[0]?"摸":"不摸",str2=event.bos[1]?"摸":"不摸";
    	       player.popup(str1);
    	       trigger.target.popup(str2);
    	       game.log(player,"选择了","#g["+str1+"]","，",trigger.target,"选择了","#g["+str2+"]");
    	      "step 3"
    	       game.delay();
    	      "step 4"
    	      var num=0;
    	      if(event.bos[0])num++;
    	      if(event.bos[1])num++;
    	      player.draw(num);
    	      event.num=num;
    	      "step 5"
    	      if(event.num>1)player.loseHp();
    	      else if(event.num==1)trigger.getParent().directHit.addArray(game.players);
              },
           },
			gzbolvex:{
                audio:"ext:国战补充:1",
	            trigger:{global:'showCharacterAfter'},
				filter:function(event,player){
	if((player.name=='gz_shen_zhaoyun'||player.name2=='gz_shen_zhaoyun')&&player.storage.gzlonghunx) return false;
					if(game.hasPlayer(function(current){
						return current.identity=='unknown';
					})>0) return false;
					return !player.storage.gzbolvex;
				},
				unique:true,
				forced:true,
				mark:true,
				skillAnimation:true,
				animationColor:'orange',
				check:function(event,player){
					return true;
				},
				content:function(){
					'step 0'
					player.awakenSkill('gzbolvex');	
                    player.storage.gzbolvex=true;
					var list=[];
					for(var i=0;i<_status.characterlist.length;i++){
						var info=lib.character[_status.characterlist[i]];
						if(info[4]&&info[4].contains('jun')) continue;
							list.push(_status.characterlist[i]);
					}
        var players=game.players.concat(game.dead);
        for(var i=0;i<players.length;i++){
            list.remove(players[i].name);
            list.remove(players[i].name1);
            list.remove(players[i].name2);
        }
        var dialog=ui.create.dialog('将另一武将牌替换为一名角色','hidden');
        dialog.add([list.randomGets(3),'character']);
        player.chooseButton(dialog,true).ai=function(button){
            return get.rank(button.link,true)-lib.character[button.link][2];
        };	
					'step 1'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
				    var group=player.group;
				    var identity=player.identity;
					if(player.checkMainSkill('gzbolvex')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,result.links[0]);
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init(result.links[0],player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
			     	player.group=group;
			     	player.identity=identity;
				    player.update();
			      }
	         },
             gzyanshax:{
                audio:'mubing',
                group:['gzyanshax_convert'],
                subSkill:{
                    convert:{
                        sub:true,
                        trigger:{
                            player:'useCard',
                        },
                        forced:true,
                        init:function(player){
                            player.storage.gzyanshax=true;
                            player.storage.gzyanshax_b=true;
                        },
                        filter:function(event,player){
                            return event.isPhaseUsing(player);
                        },
                        content:function(){
                            'step 0'
                            if(player.storage.gzyanshax){
                                player.draw();
                            }else{
                                player.chooseToDiscard(1,true,'he');
                            }
　　　　　　　　　　　player.storage.gzyanshax_b=!player.storage.gzyanshax_b;
                      player.storage.gzyanshax=!player.storage.gzyanshax;
                        }
                    }
                },
            },
			gzshushenx:{
				audio:'shushen',
				trigger:{player:'recoverAfter'},
				direct:true,
				filter:function(event,player){
					return game.hasPlayer(function(current){
						return player!=current&&player.sameIdentityAs(current);
					});
				},
				content:function(){
					'step 0'
					event.num=trigger.num||1;
					"step 1"
					player.chooseTarget(get.prompt2('gzshushenx'),function(card,player,target){
						return target!=player&&player.sameIdentityAs(target);
					}).set('ai',function(target){
						return get.attitude(_status.event.player,target);
					});
					"step 2"
					if(result.bool){
						player.logSkill('gzshushenx',result.targets);
						result.targets[0].draw();
						if(event.num>1){
							event.num--;
							event.goto(1);
						}
					}
				},
				group:'gzshushenx_give',
				subSkill:{
					give:{
				trigger:{player:'loseAfter'},
				filter:function(event,player){
					if(event.type!='discard') return false;
					for(var i=0;i<event.cards2.length;i++){
						if(get.position(event.cards2[i])=='d'){
							return true;
						}
					}
					return false;
				},
				direct:true,
　　　　　　　　sub:true,
				content:function(){
					"step 0"
					if(trigger.delay==false) game.delay();
					event.cards=[];
					event.logged=false;
					for(var i=0;i<trigger.cards2.length;i++){
						if(get.position(trigger.cards2[i],true)=='d'){
							event.cards.push(trigger.cards2[i]);
							//ui.special.appendChild(trigger.cards[i]);
						}
					}
					"step 1"
					if(event.cards.length){
						var goon=false;
						for(var i=0;i<event.cards.length;i++){
							if(event.cards[i].name=='du'){
								goon=true;break;
							}
						}
						if(!goon){
							goon=game.hasPlayer(function(current){
								return player!=current&&get.attitude(player,current)>1;
							});
						}
						player.chooseCardButton(get.prompt('gzshushenx'),event.cards,1).set('ai',function(button){
							if(!_status.event.goon||ui.selected.buttons.length) return 0;
							if(button.link.name=='du') return 2;
							return 1;
						}).set('goon',goon);
					}
					else{
						event.finish();
					}
					"step 2"
					if(result.bool){
						event.togive=result.links.slice(0);
						player.chooseTarget('将'+get.translation(result.links)+'交给一名角色',true,function(card,player,target){
							return target!=player;
						}).set('ai',function(target){
							var att=get.attitude(_status.event.player,target);
							if(_status.event.enemy){
								return -att;
							}
							else{
								if(att>2) return att/Math.sqrt(1+target.countCards('h'));
								return att/Math.sqrt(1+target.countCards('h'))/5;
							}
						}).set('enemy',get.value(event.togive[0],player,'raw')<0);
					}
					else{
						//game.cardsDiscard(event.cards);
						event.finish();
					}
					"step 3"
					if(result.bool){
						if(!event.logged){
							player.logSkill('gzshushenx',result.targets);
							event.logged=true;
						}
						else player.line(result.targets,'green');
						for(var i=0;i<event.togive.length;i++){
							event.cards.remove(event.togive[i]);
						}
						result.targets[0].gain(event.togive);
						result.targets[0].$gain2(event.togive);
					}
					else{
						//game.cardsDiscard(event.cards);
						event.finish();
					}
				},
				ai:{
					expose:0.1,
					effect:{
						target:function(card,player,target,current){
							if(target.hasFriend()&&get.tag(card,'discard')){
								if(current<0) return 0;
								return [1,1];
							}
						}
					}
				}
					}
				},
			},
			gzzhilvex:{
				audio:'zhilve',
				trigger:{player:'phaseZhunbeiBegin'},
				forced:true,
				content:function(){
					'step 0'
					if(!player.canMoveCard()) event._result={index:1};
					else player.chooseControl().set('choiceList',[
						'移动场上的一张牌',
						'本回合的摸牌阶段多摸一张牌',
					]).set('ai',function(){return 1});
					'step 1'
					if(result.index==1){
						player.addTempSkill('gzzhilvex_yingzi');
						event.finish();
					}
					else player.moveCard(true);
					'step 2'
					if(result.position=='e') player.loseHp();
					else player.addTempSkill('gzzhilvex_dis');
				},
				subSkill:{
					dis:{
						mod:{
							maxHandcard:function(player,num){
								return num-1;
							},
						},
					},
					yingzi:{
						trigger:{player:'phaseDrawBegin2'},
						popup:false,
						forced:true,
						filter:function(event,player){
							return !event.numFixed;
						},
						content:function(){trigger.num++},
					},
				},
			},
             gzjixianx:{
                audio:"yuanlve",
				trigger:{player:'phaseAfter'},
                filter:function (event,player){
                    return game.hasPlayer(function(current){
                        return current!=player&&current.countCards("h");
                    });
                },
                content:function (){
                    "step 0"
                    player.chooseTarget(get.prompt2("gzjixianx"),function(card,player,target){
                        return player!=target&&target.countCards("h");
                    }).set("ai",function(target){
                        var player=get.player();
                        return -get.attitude(player,target);
                    });
                    "step 1"
                    if(result.bool){
                        event.targets=result.targets;
                        player.logSkill("gzjixianx",event.targets[0]);
                        player.gainPlayerCard(event.targets[0],"h",true);
                    }
                    else event.finish();
                    "step 2"
                    player.storage.gzjixianx=result.cards[0];
                    player.addTempSkill("gzjixianx_a",{player:'phaseBegin'});
                },
                subSkill:{
                    a:{
                        mark:true,
                        charlotte:true,
                        intro:{
                            content:function (storage,player,skill){
                                var hc=player.storage.gzjixianx;
                                var a="";
                                if(hc&&player==game.me)a="此计为<span class=yellowtext>"+get.translation(hc)+"</span><br>";
                                return a+="你已发动过【机先】";
                            },
                        },
                        init:function (player){
                            player.syncStorage("gzjixianx_a");
                        },
                        mod:{
                            cardDiscardable:function (card,player){
                                if(card==player.storage.gzjixianx)return false;
                            },
                            "cardEnabled2":function (card,player){
                                if(card==player.storage.gzjixianx)return false;
                            },
                            cardUsable:function (card,player){
                                if(card==player.storage.gzjixianx)return false;
                            },
                            cardRespondable:function (card,player){
                                if(card==player.storage.gzjixianx)return false;
                            },
                            cardSavable:function (card,player){
                                if(card==player.storage.gzjixianx)return false;
                            },
                        },
                        sub:true,
                    },
                },
            },
             gzhaogongx:{
                audio:"ext:国战补充:1",
                trigger:{
                    player:"shaBegin",
                },
                forced:true,
                logTarget:"target",
                filter:function (event,player){
        if(event.responded) return false;
        if(event.directHit)return false;
        return true;
    },
                content:function (){
        'step 0'
        event.target=trigger.target;
        var next=event.target.chooseToRespond({name:'sha'});
        next.set('ai',function(card){
            var evt=_status.event.getParent();
            if(get.damageEffect(evt.target,evt.player,evt.target)>=0) return 0;
            return 11-get.value(card);
        });
        next.autochoose=lib.filter.autoRespondSha;
        'step 1'
        if(result.bool){
            trigger.untrigger();
            trigger.responded=true;
            trigger.result=result;
            trigger.finish();
        }
        else trigger.directHit=true;
    },
            },
            gzfenglvex:{
				audio:'fenglve',
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return player.canCompare(target);
    },
                filter:function (event,player){
        return game.hasPlayer(function(current){
            return player.canCompare(current);
        });
    },
                content:function (){
        "step 0"
        player.chooseToCompare(target);
        "step 1"
        var list=[];
        if(get.position(result.player)=='d')list.push(result.player);
        if(get.position(result.target)=='d')list.push(result.target);
        if(result.tie||list.length!=2)event.finish();
        else{
            event.list=list;
            event.win=result.bool?player:target;
        }
        "step 2"
        var b=player==event.win?true:false;
        var next=event.win.chooseCardButton("请选择要获得的一张牌",event.list);
        next.set("ai",function(button){
            if(b&&button.link.name!="du")return 5+get.value(button.link);
            return get.value(button.link);
        });
        "step 3"
        if(result.bool&&result.links){
        	event.win.gain(result.links,"gain2");
        	event.list.remove(result.links[0]);
        }
        else event.finish();
        "step 4"
        if(event.list.length==1)player.gain(event.list,"gain2");
    },
                ai:{
                    order:7.6,
                    result:{
                        player:1,
                        target:-0.1,
                    },
                },
            },
             gzyanyoux:{
				audio:'mouzhi',
                trigger:{
                    player:"phaseJieshuBegin",
                },
                filter:function (event,player){
        if(!player.countCards("h"))return false;
        return game.hasPlayer(function(current){
            if(player==current)return false;
            return current.countCards("h");
        });
    },
                check:function (event,player){
        if(!player.countCards("h",function(card){
            return 6-get.value(card);
        }))return false;
        return game.hasPlayer(function(current){
            if(!current.countCards("h"))return false;
            return get.attitude(player,current)<0;
        });
    },
                content:function (){
        "step 0"
        event.hc=player.getCards("h");
        event.ts=[];
        event.i=0;
        "step 1"
        var hc=event.hc;
        var ts=event.ts;
        var fc=event.i>0?false:true;
        player.chooseCardTarget({
            prompt:"请选择要交换的手牌和目标",
            selectCard:[1,Infinity],
            filterCard:function(card){
                return hc.contains(card);
            },
            forced:fc,
            complexCard:true,
            complexTarget:true,
            complexSelect:true,
            filterTarget:function(card,player,target){
                if(player==target)return false;
                if(ts.contains(target))return false;
                return target.countCards("h")>ui.selected.cards.length-1;
            },
            ai1:function(card){
                return 6-get.value(card);
            },
            ai2:function(target){
                var player=get.player();
                return get.attitude(player,target)<0;
            },
        });
        "step 2"
        if(result.bool){
            event.cs1=result.cards;
            event.target=result.targets[0];
            player.line(event.target,"green");
            var att=get.attitude(player,event.target);
            event.target.chooseCard("请选择要交换的手牌","h",true,event.cs1.length).set("ai",function(card){
                if(att>0)return get.value(card);
                return 6-get.value(card);
            });
            event.i++;
            event.ts.push(event.target);
            for(var i=0;i<event.cs1.length;i++){
                event.hc.remove(event.cs1[i]);
            }
        }
        else event.finish();
        "step 3"
        event.cs2=result.cards;
        player.lose(event.cs1,ui.special);
        event.target.lose(event.cs2,ui.special);
        player.gain(event.cs2,event.target,"giveAuto");
        event.target.gain(event.cs1,player,"giveAuto");
        "step 4"
        if(event.hc.length){
            var ts=event.ts;
            if(game.hasPlayer(function(current){
                if(player==current)return false;
                if(ts.contains(current))return false;
                return current.countCards("h");
            }))event.goto(1);
        }
    },
            },

			gzfaenx:{
				audio:'faen',
	trigger:{global:['turnOverEnd','linkEnd','hideCharacterEnd','removeCharacterEnd','changeViceEnd']},
				check:function(event,player){
					return get.attitude(player,event.player)>0;
				},
				logTarget:'player',
				content:function(){
					trigger.player.draw();
				},
				ai:{
					expose:0.2
				}
			},
			gzdahex:{
                audio:"ext:国战补充:1",
				mod:{
                    targetInRange:function (card,player,target){
                        if(card.name=='sha'&&target.inRange(player)){
                            return true;
                        }
                    },
                }, 
			},
			gzqingxi:{
                audio:"reqingxi",
				enable:'phaseUse',
				intro:{
					content:'limited'
				},
                mainSkill:true,
				init:function(player){
					if(player.checkMainSkill('gzqingxi')){
						player.removeMaxHp();
					 }
				},
				mark:true,
				unique:true,
				skillAnimation:true,
				animationColor:'thunder',
				line:'fire',
				filter:function(event,player){
					return !player.storage.gzqingxi&&player.countCards('h')<player.hp;
				},
				content:function(){
					'step 0'
					player.removeCharacter(0);
					player.showHandcards();
					var cards=player.getCards('h');
					player.discard(cards);
					event.num=cards.length;
					'step 1'
					if(event.num){
						var targets=player.getEnemies();
						if(!targets.length){
							event.finish();
							return;
						}
						player.useCard({name:'sha',nature:'thunder'},targets);
						event.num--;
						event.redo();
					}
				},
				ai:{
					order:9,
					result:{
						player:function(player){
							if(player.countCards('h')<1) return 0;
							if(player.hasCard(function(card){
								return get.value(card)>8;
							})){
								return 0;
							}
							return 1;
						}
					}
				}
			},
			gzpojunx:{
				trigger:{global:'useCard'},
				priority:15,
				filter:function(event,player){
					return event.card.name=='sha'&&event.player!=player&&player.countCards('he')>0&&event.player.isFriendOf(player);
				},
　　　　　　　　audio:'pojun',
				direct:true,
				content:function(){
					"step 0"
	player.chooseCard('he',get.prompt('gzpojunx',trigger.player)).set('ai',function(card){
						var player=_status.event.player;
						if(player.hp<=1){
							if(get.tag(card,'save')) return 0;
								return 4-get.value(card);
						}
						return 8-get.value(card);
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzpojunx',trigger.player);
						trigger.player.gain(result.cards,player);
						if(get.position(result.cards[0])=='h'){
							player.$give(1,trigger.player);
						}
						else{
							player.$give(result.cards,trigger.player);
						}
					}
				},
			},
			gzhanzhanx:{
　　　　　　　　audio:'hanzhan',
                forced:true,
				trigger:{
　　　　　　　　    player:"phaseDiscardBefore",
　　　　　　　　},
                filter:function(event,player){
                    return !player.getStat('damage');
                },
				content:function(){
                    trigger.cancel();
				}
			},
			gznanwangx:{
                audio:"ext:国战补充:1",
				trigger:{player:'phaseAfter'},
	            intro:{
		          content:function(content,player){
			         var temp1=player.storage.gznanwangx;
			         if(!temp1.length){
				          return '未使用过任何牌';
			         }else{
				       var str='已使用：'+get.translation(temp1);
				       return str;
			         }
		           },
	            },
	            init:function(player){
                   player.storage.gznanwangx=[];
                },
	check:function (event,player){
		if(player.storage.gznanwangx.contains('nanman')&&player.storage.gznanwangx.contains('wanjian')&&player.storage.gznanwangx.contains('sha')&&player.storage.gznanwangx.contains('huoshaolianying')&&player.storage.gznanwangx.contains('juedou')&&player.storage.gznanwangx.contains('huogong')) return false;
		return true;
	},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt2('gznanwangx'),true,function(card,player,target){
						return player.canCompare(target);
					}).set('ai',function(target){
						if(!_status.event.goon) return 0;
						return -get.attitude(_status.event.player,target);
					}).set('goon',player.needsToDiscard()||player.hasCard(function(card){
						var val=get.value(card);
						if(val<0) return true;
						if(val<=5){
							return card.number>=11;
						}
						if(val<=6){
							return card.number>=12;
						}
						return false;
					}));
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						event.target=target;
						player.logSkill('gznanwangx',target);
						player.chooseToCompare(target);
					}
					"step 2"
					if(result.bool){
						event.goto(3);
					}else{
　　　　　　　　　　　　target.draw();
						event.finish();
					}
					"step 3"
		            var list=[];
		            for(var i=0;i<lib.inpile.length;i++){
			if(get.type(lib.inpile[i])!='basic'&&get.type(lib.inpile[i])!='trick') continue;
			var card={name:lib.inpile[i]};
		if(get.tag(card,'damage')&&!player.storage.gznanwangx.contains(lib.inpile[i])){
				if(lib.filter.cardEnabled(card,player)){
					list.push(['卡牌','',lib.inpile[i]]);
				}	
			}
		}
		if(list.length){
			player.chooseButton(['你可跳过弃牌阶段并视为使用1张未以此法使用过的带有伤害标签的基本牌或普通锦囊牌',[list,'vcard']]).set('ai',function(button){
				return player.getUseValue({name:button.link[2]});
			});
		}
		else event.finish();
		     "step 4"
		     if(result&&result.bool&&result.links[0]){
			    player.storage.gznanwangx.push(result.links[0][2]);
			    player.markSkill('gznanwangx');
			  player.chooseUseTarget({name:result.links[0][2],isCard:true},true);
		       }
			},
		  },
　　　　　gzkongyix:{
              audio:"ext:国战补充:1",
	          trigger:{player:'loseEnd'},
	          filter:function(event,player){
		        if(player.countCards('h')) return false;
		        for(var i=0;i<event.cards.length;i++){
			       if(event.cards[i].original=='h') return true;
			       }
			       return false;
	          },
	          intro:{
		        content:function(content,player){
			       var temp1=player.storage.gzkongyix;
			       if(!temp1.length){
				        return '未使用过任何牌';
			       }else{
				     var str='已使用：'+get.translation(temp1);
				     return str;
			       }
		        },
	         },
	         init:function(player){
                player.storage.gzkongyix=[];
             },
             content:function(){
		     "step 0"
		     var list=[];
		     for(var i=0;i<lib.inpile.length;i++){
			if(get.type(lib.inpile[i])!='basic'&&get.type(lib.inpile[i])!='trick') continue;
			var card={name:lib.inpile[i]};
		if(!get.tag(card,'damage')&&!player.storage.gzkongyix.contains(lib.inpile[i])){
				if(lib.filter.cardEnabled(card,player)){
					list.push(['卡牌','',lib.inpile[i]]);
				}	
			}
		}
		if(list.length){
			player.chooseButton(['你可跳过弃牌阶段并视为使用1张未以此法使用过的没有伤害标签的基本牌或普通锦囊牌',[list,'vcard']]).set('ai',function(button){
				return player.getUseValue({name:button.link[2]});
			});
		}
		else event.finish();
		     "step 1"
		     if(result&&result.bool&&result.links[0]){
			    player.storage.gzkongyix.push(result.links[0][2]);
			    player.markSkill('gzkongyix');
			  player.chooseUseTarget({name:result.links[0][2],isCard:true},true);
		        }
	       },
　　　},
			gzxiandengx:{
				trigger:{player:'shaMiss'},
                audio:"ext:国战补充:1",
				filter:function(event){
					return event.target.countCards('e')>0;
				},
				check:function(event,player){
					return get.attitude(player,event.target)<0;
				},
				content:function(){
					'step 0'
　　　　　　　　    player.chooseJunlingFor(trigger.target);
					'step 1'
					event.junling=result.junling;
					event.targets=result.targets;
					var choiceList=[];
					choiceList.push('执行该军令，并摸一张牌');
					choiceList.push('弃置所有装备牌');
					trigger.target.chooseJunlingControl(player,result.junling,result.targets).set('prompt','先登').set('choiceList',choiceList).set('ai',function(){
						if(get.attitude(trigger.target,player)>=0) return get.junlingEffect(player,result.junling,trigger.target,result.targets,trigger.target)>=0?0:1;
						return get.junlingEffect(player,result.junling,trigger.target,result.targets,trigger.target)>=-1?0:1;
					});
					'step 2'
					if(result.index==0){
　　　　　　　　　trigger.target.carryOutJunling(player,event.junling,targets);
						trigger.target.draw();
					}
					else trigger.target.discard(trigger.target.getCards('e'));
				}
			},
			gzjuyux:{
                audio:"ext:国战补充:1",
				unique:true,
				mark:true,
				skillAnimation:true,
				animationColor:'orange',
				trigger:{player:'phaseAfter'},
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					if(event.skill) return false;
					if(game.countPlayer(function(current){
						return current!=player&&!current.isUnseen(0);
					})<2) return false;
					return !player.storage.gzjuyux;
				},
				check:function(event,player){
					return game.roundNumber>=2&&game.countPlayer(function(current){
						return current!=player&&!current.isUnseen(0);
					})>1;
				},
				content:function(){
					'step 0'
					player.awakenSkill('gzjuyux');
                    player.storage.gzjuyux=true;				player.chooseTarget(2,get.prompt2('gzjuyux'),function(card,player,target){
						return target!=player&&!target.isUnseen(0);
					}).set('ai',function(target){
						var att=get.attitude(player,target);
						if(ui.selected.targets.length){
							if(att<0){
								return get.guozhanRank(target.name1,target)-get.guozhanRank(ui.selected.targets[0].name1,ui.selected.targets[0]);
							}
						}
						else{
							if(att>=0){
								return 1/(1+get.guozhanRank(target.name1,target));
							}
						}
						return 0;
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzjuyux',result.targets);
					}
					else{
						event.finish();
					}
					'step 2'
					var name1=result.targets[0].name;
					var name2=result.targets[1].name;
					result.targets[0].reinit(name1,name2,false);
					result.targets[1].reinit(name2,name1,false);
				},
			},
			gzzhouyanx:{
                audio:"ext:国战补充:1",
　　　　　　　　frequent:true,
				trigger:{player:'shaMiss'},
				priority:-1,
				filter:function(event){
					return event.target.countCards('h')>0;
				},
				check:function(event,player){
					return get.attitude(player,event.target)<0;
				},
				content:function(){
player.useCard({ name:'huogong',isCard:true},'nowuxie',trigger.target);			
				}
			},
			yuri_qixingx:{
                audio:"ext:国战补充:1",
				trigger:{player:'phaseUseBegin'},
				forced:true,
				content:function(){
					'step 0'
					var card=get.cardPile(function(card){
					return card.name=='sha'||get.type(card)=='trick';
					});
					if(card) player.gain(card,'gain2','log');
					'step 1'
					game.updateRoundNumber();
				},
			},
			 yuri_xingdongx:{
                audio:"ext:国战补充:1",
				enable:"phaseUse",
				usable:1,
				filterTarget:function(card,player,target){
					return target.isMajor();
				},
				content:function (){
					'step 0'
					player.chooseJunlingFor(target);
					'step 1'
					event.junling=result.junling;
					event.targets=result.targets;
					var choiceList=['执行该军令'];
					if(target!=player) choiceList.push('拒绝执行由'+get.translation(player)+'发起的军令');
					else choiceList.push('不执行该军令');
					target.chooseJunlingControl(player,result.junling,result.targets).set('prompt','行动').set('choiceList',choiceList).set('ai',function(){
						return 0;
					});
					'step 2'
					if(result.index==0){
						target.carryOutJunling(player,event.junling,targets);
						target.chooseToDiscard(true,'h');
					}
					else{
                        player.gainPlayerCard(target,'he',true);
					}

				},
				ai:{
					order:9.5,
					result:{
						player:1,
						target:-3,
					},
				},
			},
            gzchengxiangx:{
                audio:"chengxiang",
                enable:"phaseUse",
                usable:1,
			    audio:'chengxiang',
                prompt:"请弃置一张牌，否则摸一张牌",
                selectCard:[0,1],
                position:"he",
                filterCard:true,
                check:function(){return false},
                content:function(){
    	          "step 0"
    	           if(cards.length==0) player.draw();
    	          "step 1"
    	           player.chooseTarget("称象:是否和一名和你手牌数相等的其他角色交换手牌？",function(card,player,target){ 
                    return target!=player&&target.countCards('h')==player.countCards("h"); 
                }).ai=function(target){ 
                    var player=_status.event.player; 
                    var att=get.attitude(player,target); 
                        return get.attitude(_status.event.player,target)+11; 
                } 
    	         "step 2"
    	if(result&&result.bool) player.swapHandcards(result.targets[0]);
    },
                ai:{
    	            order:1,
    	            result:{
    		          player:1,
    	            },
                },
            },
            gzyouzhenx:{
                enable:"phaseUse",
                usable:1,
                audio:"ext:国战补充:1",
                filterTarget:function (card,player,target){
                    return player!=target&&target.countCards('he');
                },
                selectTarget:1,
                content:function (){
                    "step 0"
                    target.chooseToDiscard([1,Infinity],'请弃置至少一张牌','he',true).set('ai',function(card){
                        var player=_status.event.player;
                        if(player.getEquip('tengjia')||player.getEquip('bagua')) return 1-get.value(card);
                        return 6-get.value(card);
                    });
                    "step 1"
                    if(result.bool){
                        event.num1=result.cards.length;
                        player.chooseToDiscard([1,Infinity],'请弃置至少一张牌，或取消不弃置','he').set('ai',function(card){
                            var player=_status.event.player;
                            if(player.getEquip('tengjia')||player.getEquip('bagua')) return -1;
                            if(player.countCards('h','shan')&&_status.event.getParent().num1>=2) return -1;
                            if(ui.selected.cards.length>_status.event.getParent().num1) return -1;
                            return 6-get.value(card);
                        });
                    }
                    "step 2"
                    if(result.bool){
                        event.num2=result.cards.length;
                    }
                    else event.num2=0;
                    "step 3"
                    if(event.num1<event.num2){
                        player.useCard({name:'sha',isCard:true},target,false);
                    }
                    else if(event.num1>event.num2){
                        target.useCard({name:'sha',isCard:true},player,false);
                    }
                },
                ai:{
                    order:function (name,player){
                        var cards=player.getCards('he');
                        return cards.length;
                    },
                    result:{
                        player:function (player){
                            if(player.countCards('he')>2) return 0.5;
                            if(player.getEquip('tengjia')||player.getEquip('bagua')) return 10;
                            var num=player.countCards('he');
                            if(num>player.hp) return 1;
                            if(num==0&&!player.getEquip('tengjia')) return -2;
                            return -0.7;
                        },
                        target:function (player,target){
                            var player=_status.event.player;
                            var num=target.countCards('he');
                            if(num<player.countCards('he')) return -1;
                            if(num==player.countCards('he')) return -0.7;
                            return 0;
                        },
                    },
                    threaten:1.3,
                },
            },
			gzlvfengx:{
                audio:"ext:国战补充:2",
				forced:true,
				trigger:{player:'phaseUseEnd'},
				filter:function(event,player){
					return !player.countCards('e');
				},
				content:function(){
					var card=game.createCard(get.inpile('equip').randomGet());
					player.equip(card);
					player.$gain2(card);
					game.delay();
				},
			},
					 gzrangyinx:{
                        audio:"ext:国战补充:1",
						trigger:{
							player:'dieBegin'
						},
                        skillAnimation:true,
                        animationColor:"gray",
						direct:true,
						unique:true,
				        filter:function(event,player){
					    return player.getStockSkills('仲村由理','天下第一').filter(function(skill){
						var info=get.info(skill);
						return info&&!info.juexingji&&!info.hiddenSkill&&!info.unique&&!info.mainSkill&&!info.viceSkill&&!info.charlotte&&!info.limited;
					}).length>0;
				},
						content:function(){
							'step 0'
							player.chooseTarget(get.prompt('gzrangyinx'),1,function(card,player,target){
								return target!=player;
							}).ai=function(target){
　　　　　　　　　　　　　　　return get.attitude(player,target);
							};
							'step 1'
							if(result.bool){
				        var target= result.targets[0];
					    player.line(target);
					var list=player.getStockSkills('仲村由理','天下第一').filter(function(skill){
						var info=get.info(skill);
						return info&&!info.juexingji&&!info.hiddenSkill&&!info.unique&&!info.mainSkill&&!info.viceSkill&&!info.charlotte&&!info.limited;
					});
					if(list.length==1) event._result={control:list[0]};
					else player.chooseControl(list).set('prompt','选择令'+get.translation(target)+'获得一个技能').set('forceDie',true).set('ai',function(){
						return list.randomGet();
					});
                    event.current=target; 
							}else{
								event.finish();
							};
							'step 2'
					event.current.addSkillLog(result.control);
					game.broadcastAll(function(skill){
						var list=[skill];game.expandSkills(list);
						for(var i of list){
							var info=lib.skill[i];
							if(!info) continue;
						}
					},result.control);
				},
			},
			gzdanmux:{
                audio:"ext:国战补充:2",
                enable:"phaseUse",
　　　　　　　　usable:1,
　　			content:function(){
                   "step 0"
					player.damage('','nosource');
                   "step 1"
	player.chooseTarget(get.prompt('gzdanmux'),function(card,player,target){
						return player!=target;
					}).ai=function(target){
						return -get.attitude(player,target);
					};
                   "step 2"
					if(result.bool){
				        var target= result.targets[0];
						player.line(target,'green');
　　　　　　　　　　target.chooseToDiscard(2).set('ai',function(card){
						  if(card.name=='tao') return -10;
						  if(card.name=='jiu'&&_status.event.player.hp==1) return -10;
						  return get.unuseful(card)+2.5*(5-get.owner(card).hp);
					   });
                    event.current=target; 
					}
					else{
						event.finish(); 
					}
                   "step 3"
					if(result.bool){
						event.finish(); 
					}
                    else{ 
                       event.current.damage(); 
                    } 
				},
				ai:{
					basic:{
						order:1
					},
					result:{
						player:function(player){
							if(player.hasSkillTag('maixie')) return 7;
							if(player.hp<3) return -1;
							return 1;
						}
					}
				},
			},
			  gztaonix:{
				trigger:{player:'phaseDrawAfter'},
				audio:'xiansi',
				direct:true,
				filter:function(event,player){
					return player.storage.xiansi&&player.storage.xiansi.length;
				},
				content:function(){
					"step 0"
					player.chooseCard('选择任意张手牌与“逆”交换',[1,Math.min(player.countCards('h'),player.storage.xiansi.length)]).set('promptx',[player.storage.xiansi]).ai=function(card){
						var val=get.value(card);
						if(val<0) return 10;
						if(player.skipList.contains('phaseUse')){
							return val;
						}
						return -val;
					};
					"step 1"
					if(result.bool){
						player.logSkill('gztaonix');
						player.lose(result.cards,ui.special,'toStorage');
						player.storage.xiansi=player.storage.xiansi.concat(result.cards);
						player.syncStorage('xiansi');
						event.num=result.cards.length;
					}
					else{
						event.finish();
					}
					"step 2"
					player.chooseCardButton(player.storage.xiansi,'选择'+event.num+'张牌作为手牌',event.num,true).ai=function(button){
						var val=get.value(button.link);
						if(val<0) return -10;
						if(player.skipList.contains('phaseUse')){
							return -val;
						}
						return val;
					}
					if(player==game.me&&!event.isMine()){
						game.delay(0.5);
					}
					"step 3"
					player.gain(result.links,'fromStorage');
					for(var i=0;i<result.links.length;i++){
						player.storage.xiansi.remove(result.links[i]);
					}
					player.syncStorage('xiansi');
					if(player==game.me&&_status.auto){
						game.delay(0.5);
					}
				},
				mark:true,
				intro:{
					onunmark:function(storage,player){
						if(storage&&storage.length){
							player.$throw(storage,1000);
							game.cardsDiscard(storage);
							game.log(storage,'被置入了弃牌堆');
						    storage.length=0;
						}
					},
					mark:function(dialog,content,player){
						if(content&&content.length){
							if(player==game.me||player.isUnderControl()){
								dialog.addAuto(content);
							}
							else{
							  return '共有'+get.cnNumber(content.length)+'张逆';
							}
						}
					},
					content:function(content,player){
						if(content&&content.length){
							if(player==game.me||player.isUnderControl()){
								return get.translation(content);
							}
							return '共有'+get.cnNumber(content.length)+'张逆';
						}
					}
				},
				ai:{
					combo:'xiansi'
				}
			},
			gzpingkoux:{
				//group:'gzpingkoux_alka',
				audio:'pingkou',
				enable:'phaseUse',
				filter:function(event,player){
					return player.countCards('e',function(card){
						return !player.getStorage('gzpingkoux_alka').contains(get.subtype(card));
					});
				},
				filterTarget:function(card,player,target){
					return target!=player&&player.canUse({name:'sha'},target);
				},
				position:'e',
				filterCard:function(card,player){
					return !player.getStorage('gzpingkoux_alka').contains(get.subtype(card));
				},
				content:function(){
					'step 0'
					player.addTempSkill('gzpingkoux_alka');
					player.storage.gzpingkoux_alka.push(get.subtype(cards[0]));
					player.useCard({name:'sha',isCard:true},target,false);
				},
				subSkill:{
					alka:{
						charlotte:true,
						onremove:function(player){
							delete player.storage.gzpingkoux_alka;
							delete player.storage.twzhuchen;
							player.unmarkSkill('twzhuchen');
						},
						init:function(player,skill){
							if(!player.storage[skill]) player.storage[skill]=[];
							if(!player.storage.twzhuchen) player.storage.twzhuchen=[];
						},
						mod:{
							globalFrom:function(from,to,distance){
								if(from.storage.twzhuchen&&from.storage.twzhuchen.contains(to)) return -Infinity;
							}
						},
					},
				},
				check:function(card){
					return 7-get.value(card);
				},
				ai:{
					order:function(){
						return get.order({name:'sha'})-0.2;
					},
					result:{
						target:function(player,target){
							return get.effect(target,{name:'sha'},player,player);
						},
					},
				},
			},
			gzzhenlue:{
				audio:'zhenlue',
				trigger:{
					target:'useCardToTarget',
					player:'addJudgeBefore',
				},
				forced:true,
				priority:15,
				check:function(event,player){
					return event.name=='addJudge'||get.effect(event.target,event.card,event.player,player)<0;
				},
				filter:function(event,player){
					return get.type(event.card)=='delay';
				},
				content:function(){
					if(trigger.name=='addJudge'){
						trigger.cancel();
						var owner=get.owner(trigger.card);
						if(owner&&owner.getCards('hej').contains(trigger.card)) owner.lose(trigger.card,ui.discardPile);
						else game.cardsDiscard(trigger.card);
						game.log(trigger.card,'进入了弃牌堆');
					}
					else trigger.getParent().targets.remove(player);
				},
				ai:{
                  effect:{
                     target:function (card,player,target,current){
                        if(get.type(card)=='delay') return 'zeroplayertarget';
                     },
                  },
　　			},
				group:'gzzhenlue_nowuxie',
				subSkill:{
					nowuxie:{
				       trigger:{player:'useCard'},
				       forced:true,
				       filter:function(event){
					     return get.type(event.card)=='trick';
				       },
				       content:function(){
					      trigger.nowuxie=true;
				       },
					}
				},
			},
			gzzengdaox:{
				audio:'xinfu_zengdao',
				enable:'phaseUse',
				usable:1,
                filterCard:function(card){
                    return get.subtype(card)=='equip1';
　　　　　　　　},
　　			position:'he',
				filterTarget:function(card,player,target){
					return !target.hasSkill('gzzengdaox2');
				},
				mainSkill:true,
				init:function(player){
				   if(player.checkMainSkill('gzzengdaox')){
				      player.removeMaxHp();
				   }
				},
				check:function(card){
					return 6-get.value(card);
				},
				discard:false,
				prepare:'give',
				content:function(){
					target.storage.gzzengdaox2=cards[0];
					target.addSkill('gzzengdaox2');
					game.addVideo('storage',target,['gzzengdaox2',get.cardInfo(target.storage.gzzengdaox2),'card']);
				},
				ai:{
					expose:0.2,
					result:{
						target:function(player,target){
							return -target.hp;
						}
					},
					order:4,
					threaten:1.2
				}
			},
			gzzengdaox2:{
				trigger:{source:'damageBegin'},
				forced:true,
				mark:'card',
				filter:function(event){
					return event.num>0;
				},
				content:function(){
					trigger.num--;
					player.addSkill('gzzengdaox3');
					player.removeSkill('gzzengdaox2');
				},
				intro:{
					content:'card'
				}
			},
			gzzengdaox3:{
				trigger:{source:['damageEnd','damageZero']},
				forced:true,
				popup:false,
				content:function(){
					player.gain(player.storage.gzzengdaox2,'gain2','log');
					player.removeSkill('gzzengdaox3');
					delete player.storage.gzzengdaox2;
				}
			},
			gzgushex:{
                audio:"gushe",
				enable:'phaseUse',
				filter:function(event,player){
					return player.countCards('h')>0&&!player.hasSkill('gzgushex2');
				},
				filterTarget:function(card,player,target){
					return player!=target&&target.countCards('h')>0&&!target.hasSkill('gzgushex3');
				},
				filterCard:true,
				check:function(card){return 8-get.value(card)},
				content:function(){
					"step 0"
					var suit=get.suit(cards[0]);
					target.chooseToDiscard({suit:suit},'h','鼓舌：弃置一张'+get.translation(suit)+
						'牌，或令'+get.translation(player)+'获得你一张牌').ai=function(card){
						if(get.attitude(target,player)>0) return 0;
						return 9-get.value(card);
					}
					"step 1"
					if(result.bool){
						target.addTempSkill('gzgushex3');
					}
					else{
						player.gainPlayerCard(target,'he',true);
						player.addTempSkill('gzgushex2');
					}
				},
				ai:{
					order:9,
					threaten:1.5,
					result:{
						target:-2,
						player:0.5
					},
					expose:0.2
				}
			},
			gzgushex2:{},
			gzgushex3:{},
			gzjicix:{
                audio:"jici",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzjicix;
				},
				content:function(){
					'step 0'
                    player.awakenSkill('gzjicix');
                    player.storage.gzjicix=true;
                    player.addSkill('gzjinglunx');
					event.targets=game.filterPlayer().sortBySeat();
					'step 1'
					if(event.targets.length){
						event.current=event.targets.shift();
						var cards=event.current.getCards('h',{type:'basic'});
						if(cards.length){
							event.current.lose(cards)._triggered=null;
						}
						event.num=cards.length;
					}
					else{
						event.finish();
					}
					'step 2'
					var cards=[];
					for(var i=0;i<event.num;i++){
						cards.push(game.createCard('sha'));
					}
					event.current.directgain(cards);
                    if(event.current.group==player.group&&event.current!=player){
 				       event.current.mayChangeVice(true);
                    }
					event.goto(1);
				},
				ai:{
					order:4,
					value:6,
					result:{
						player:function(player){
							if(!player.hasSha()&&player.countCards('h','shan')&&game.hasPlayer(function(current){
								return player.canUse('sha',current,true,true)&&get.effect(current,{name:'sha'},player,player)>0;
							})){
								return 1;
							}
							return 0;
						}
					}
				}
			},
　　　　  　gzjinglunx:{
                audio:"ext:国战补充:1",
                enable:"phaseUse",
                usable:1,
                filterCard:{
                   name:"sha",
　　　　　　　　},
　　	        intro:{
		        content:function(content,player){
			       var temp1=player.storage.gzjinglunx;
			       if(!temp1.length){
				        return '未使用过任何牌';
			       }else{
				     var str='已使用：'+get.translation(temp1);
				     return str;
			       }
		        },
	         },
	         init:function(player){
                player.storage.gzjinglunx=[];
             },
             content:function(){
		     "step 0"
		     var list=[];
		     for(var i=0;i<lib.inpile.length;i++){
			if(get.type(lib.inpile[i])!='trick') continue;
			var card={name:lib.inpile[i]};
		if(!get.tag(card,'damage')&&!player.storage.gzjinglunx.contains(lib.inpile[i])){
				if(lib.filter.cardEnabled(card,player)){
					list.push(['卡牌','',lib.inpile[i]]);
				}	
			}
		}
		if(list.length){
			player.chooseButton(['你可跳过弃牌阶段并视为使用1张未以此法使用过的没有伤害标签的普通锦囊牌',[list,'vcard']]).set('ai',function(button){
				return player.getUseValue({name:button.link[2]});
			});
		}
		else event.finish();
		     "step 1"
		     if(result&&result.bool&&result.links[0]){
			    player.storage.gzjinglunx.push(result.links[0][2]);
			    player.markSkill('gzjinglunx');
			  player.chooseUseTarget({name:result.links[0][2],isCard:true},true);
		        }
	       },
           ai:{
              order:5,
              result:{
                 player:1,
              },
           },
　　　},
			gzxijuex:{
				audio:'xijue',
				trigger:{
　　　　　　　　　　player:'showCharacterAfter',
				},
				filter:function(event,player){
			      return event.toShow.contains('gz_zhanghuyuechen');
				},
				forced:true,
				content:function(){
					player.addMark('gzxijuex',4);
				},
				intro:{
					name2:'爵',
					content:'mark',
				},
				derivation:['retuxi','xiaoguo'],
				group:['gzxijuex_gain','gzxijuex_tuxi','gzxijuex_xiaoguo'],
			},
			gzxijuex_gain:{
				audio:'xijue',
				trigger:{player:'phaseEnd'},
				forced:true,
				filter:function(event,player){
					var stat=player.getStat();
					return stat.damage&&stat.damage>0;
				},
				content:function(){
					player.addMark('gzxijuex',player.getStat().damage);
				},
			},
			gzxijuex_tuxi:{
				audio:'xijue_tuxi',
				trigger:{
					player:"phaseDrawBegin2",
				},
				direct:true,
				filter:function(event,player){
					return event.num>0&&!event.numFixed&&player.hasMark('gzxijuex')&&game.hasPlayer(function(target){
						return player!=target&&target.countCards('h')>0;
					});
				},
				content:function (){
					"step 0"
					var num=trigger.num;
					player.chooseTarget('是否弃置一枚“爵”发动【突袭】？','获得至多'+get.translation(num)+'名角色的各一张手牌，然后少摸等量的牌',[1,num],function(card,player,target){
						return target.countCards('h')>0&&player!=target;
					},function(target){
						var att=get.attitude(_status.event.player,target);
						if(target.hasSkill('tuntian')) return att/10;
						return 1-att;
					});
					"step 1"
					if(result.bool){
						result.targets.sortBySeat();
						player.logSkill('gzxijuex_tuxi',result.targets);
						player.removeMark('gzxijuex',1);
						player.gainMultiple(result.targets);
						trigger.num-=result.targets.length;
					}
					else{
						event.finish();
					}
					"step 2"
					if(trigger.num<=0) game.delay();
				},
				ai:{
					expose:0.2,
				},
			},
			gzxijuex_xiaoguo:{
	audio:'xijue_xiaoguo',
	trigger:{global:'phaseJieshuBegin'},
				filter:function(event,player){
					return player.hasMark('gzxijuex')&&event.player.isAlive()&&event.player!=player&&player.countCards('h',function(card){
						if(_status.connectMode) return true;
						return get.type(card)=='basic';
					});
				},
				direct:true,
				content:function(){
					"step 0"
					var nono=(Math.abs(get.attitude(player,trigger.player))<3||trigger.player.hp>(player.countMark('gzxijuex')*1.5)||trigger.player.countCards('e',function(card){
						return get.value(card,trigger.player)<=0;
					}));
					if(get.damageEffect(trigger.player,player,player)<=0){
						nono=true;
					}
					var next=player.chooseToDiscard('是否弃置一枚“爵”和一张基本牌，对'+get.translation(trigger.player)+'发动【骁果】？',{type:'basic'});
					next.set('ai',function(card){
						if(_status.event.nono) return 0;
						return 8-get.useful(card);
					});
					next.set('logSkill',['gzxijuex_xiaoguo',trigger.player]);
					next.set('nono',nono);
					"step 1"
					if(result.bool){
						player.removeMark('gzxijuex',1);
						var nono=(get.damageEffect(trigger.player,player,trigger.player)>=0);
						trigger.player.chooseToDiscard('he','弃置一张装备牌并令'+get.translation(player)+'摸一张牌，或受到一点伤害',{type:'equip'}).set('ai',function(card){
							if(_status.event.nono){
								return 0;
							}
							if(_status.event.player.hp==1) return 10-get.value(card);
							return 9-get.value(card);
						}).set('nono',nono);
					}
					else{
						event.finish();
					}
					"step 2"
					if(result.bool){
						player.draw();
					}
					else{
						trigger.player.damage();
					}
				},
				ai:{
					expose:0.3,
					threaten:1.3
				}
			},
			gzzhaotaox:{
				audio:'zhaotao',
				enable:'phaseUse',
				filterTarget:function(card,player,target){
					return player!=target&&target.countCards('h');
				},
				filterCard:true,
				filter:function(event,player){
					return !player.hasSkill('gzzhaotaox2');
				},
				mainSkill:true,
				init:function(player){
				if(player.checkMainSkill('gzzhaotaox')){
				   player.removeMaxHp();
				   }
				},
				content:function(){
					"step 0"
					var card=target.getCards('h').randomGet();
					if(!card){
						event.finish();
						return;
					}
					target.showCards(card);
					if(get.color(card)==get.color(cards[0])){
						event.bool=true;
					}
					"step 1"
					if(event.bool){
						target.damage();
					}
					else if(player.countCards('he')){
						player.addTempSkill('gzzhaotaox2');
					}
				},
				check:function(card){
					return 6-get.value(card);
				},
				ai:{
					order:5,
					result:{
						target:function(player,target){
							if(target.hasSkillTag('noh')) return 0;
							return -1;
						}
					},
					threaten:1.3
				}
			},
			gzzhaotaox2:{},
//椰奶粟米棒
			gzhoufax:{
                audio:"ext:国战补充:1",
				unique:true,
				limited:true,
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
　　			animationColor:'thunder',
				skillAnimation:'legend',
				filter:function(event,player){
					return !player.storage.gzhoufax;
				},
				direct:true,
				filter:function(event,player){
					return game.hasPlayer(function(current){
						return current.identity=='unknown';
					})==0;
				},
				content:function(){
					'step 0'
					var list=[];
					if(!player.hasSkill('gzjizhix')){
						list.push('gzjizhix');
					}
					if(!player.hasSkill('new_yiji')){
						list.push('new_yiji');
					}
					if(!player.hasSkill('jiang')){
						list.push('jiang');
					}
					if(!player.hasSkill('weimu')){
						list.push('weimu');
					}
					if(!player.hasSkill('huishi')){
						list.push('huishi');
					}
					if(list.length){
						player.chooseControl(list).set('prompt','选择获得一项技能');
					}
					'step 1'
					player.awakenSkill('gzhoufax');
                    player.storage.gzhoufax=true;
					player.addSkill(result.control);
					player.popup(result.control);
					game.log(player,'获得技能','【'+get.translation(result.control)+'】');
				},
				ai:{
					threaten:1.7
				},
				derivation:['rejizhi','yiji','jiang','weimu','huishi'],
　　　　　　　　mark:true,
				intro:{
					content:"limited",
				},
				init:function (player){
					player.storage.gzhoufax=false;
				},
			},
			gzhuanyin:{
				trigger:{player:'phaseBeginStart'},
				forced:true,
				check:function(){
					return false;
				},
				init:function(player){
					player.storage.gzhuanyin='gzhuanwu';
				},
				content:function(){
					var list=['gzhuannu','gzhuanhuo','gzhuanwu'];
					var map={
						gzhuanwu:'gz_yenaisumibang',
						gzhuannu:'gz_yenaisumibang1',
						gzhuanhuo:'gz_yenaisumibang2'
					}
					list.remove(player.storage.gzhuanyin);
					if(list.length==2){
						var name=list.randomGet();
						player.removeSkill(player.storage.gzhuanyin);
						player.addSkill(name);
						player.storage.gzhuanyin=name;
						player.setAvatar('gz_yenaisumibang',map[name]);
					}
				}
			},
			gzhuannu:{
				group:'gzhuanyin',
				trigger:{player:'phaseBegin'},
				frequent:true,
				content:function(){
					'step 0'
					player.discoverCard(ui.cardPile.childNodes,function(button){
						var card=button.link;
						var player=_status.event.player;
						var value=get.value(card,player);
						if(player.countCards('h',card.name)){
							value=Math.max(value,9);
						}
						return value;
					},'nogain');
					'step 1'
					if(player.countCards('h',function(card){
						return card!=result.card&&card.name==result.card.name;
					})){
						event.current=result.card;
						player.chooseTarget('是否改为对一名角色造成一点火属性伤害？').set('ai',function(target){
							return get.damageEffect(target,null,player,player,'fire');
						});
					}
					else{
						player.gain(result.card,'draw');
						event.finish();
					}
					'step 2'
					if(result.bool){
						var target=result.targets[0];
						player.line(target,'fire');
						target.damage('fire','nocard');
						// player.discoverCard(ui.cardPile.childNodes);
					}
					else{
						player.gain(event.current,'draw');
					}
				},
			},
			gzhuanhuo:{
				group:'gzhuanyin',
				enable:'phaseUse',
				usable:1,
				filter:function(event,player){
					return player.countCards('h');
				},
				delay:false,
				content:function(){
					'step 0'
					var hs=player.getCards('h');
					player.discard(hs).set('delay',false);
					event.hs=hs;
					'step 1'
					var num1=Math.ceil(event.hs.length/2);
					player.draw(num1);
					'step 2'
					var enemies=player.getEnemies();
					for(var i=0;i<enemies.length;i++){
						var hs=enemies[i].getCards('h');
						var same=[];
						for(var j=0;j<hs.length;j++){
							for(var k=0;k<event.hs.length;k++){
								if(hs[j].name==event.hs[k].name){
									same.push(hs[j]);
									break;
								}
							}
						}
						if(same.length){
							enemies[i].discard(same.randomGet()).set('delay',false);
							event.discarded=true;
							player.line(enemies[i],'green');
						}
					}
					'step 3'
					if(event.discarded){
						game.delay();
					}
				},
				ai:{
					order:5,
					result:{
						player:1
					}
				}
			},
			gzhuanwu:{
				group:'gzhuanyin',
				trigger:{player:'phaseEnd'},
				frequent:true,
				filter:function(event,player){
					return player.countCards('h');
				},
				content:function(){
					'step 0'
					var max=1;
					var map={};
					var hs=player.getCards('h');
					for(var i=0;i<hs.length;i++){
						var name=hs[i].name;
						if(!map[name]){
							map[name]=1;
						}
						else{
							map[name]++;
							if(map[name]>max){
								max=map[name];
							}
						}
					}
					player.draw(max);
					'step 1'
					player.chooseToUse();
				}
			},
//李木子
			gzdinglanx:{
				audio:'wanlan',
	            trigger:{player:'showCharacterAfter'},
				limited:true,
				unique:true,
				frequent:true,
				init:function(player,skill){player.storage[skill]=false},
				skillAnimation:true,
				filter:function(event,player){
					return event.toShow.contains('gz_limuzi');
				},
				content:function(){
                  "step 0"
    player.chooseControl('魏','蜀','吴','群','晋').set('ai',function(event){
                  var n=[1,2,3,4].randomGet();
                  if(n==1) return '吴';
                  if(n==2) return '魏';       
                  if(n==3) return '群';  
                  if(n==4) return '蜀';    
                  });
                 "step 1"
				if(result.control=='魏'){
					player.modifyGroup('wei');
				}
				if(result.control=='蜀'){
					player.modifyGroup('shu');
				}
				if(result.control=='吴'){
					player.modifyGroup('wu');
				}
				if(result.control=='群'){
					player.modifyGroup('qun');
				}
				if(result.control=='晋'){
					player.modifyGroup('jin');
				}
                  "step 2"
                  player.awakenSkill("gzdinglanx");
                  player.storage.gzdinglanx=true;
				},
			},
			gzzhenshix:{
                audio:"ext:国战补充:1",
　　　　　　　　usable:1,
				trigger:{global:'useCard'},
				filter:function(event,player){
					return event.card&&get.tag(event.card,'damage')&&event.player.isFriendOf(player)&&(player==event.player||player.hasSkill('gzzhenshix'));
				},
				check:function(event,player){
					return get.attitude(player,event.player)>0;
				},
				logTarget:'player',
				content:function(){
					trigger.player.draw('nodelay');
				},
				ai:{
					mingzhi:false,
					threaten:2,
					expose:0.2,
				}
			},
			gzyuanzix:{
				audio:'ziyuan',
                enable:"phaseUse",
　　			direct:true,
				filterTarget:function(card,player,target){
return target!=player&&target.isFriendOf(player)&&!target.hasSkill('gzyuanziy');				        },
				content:function(){
					'step 0'
						player.logSkill('gzyuanzix',target);
                        player.gainPlayerCard(target,'he',true);
　　　　　　　　　　　　target.addTempSkill('gzyuanziy','phaseAfter');
					'step 1'
					if(event.target.countCards('h')==event.target.hp){
						target.draw();
						player.draw();
					}
					else{
						target.draw();
					}
				},
				ai:{
					order:7,
					result:{
						player:1,
						target:function(player,target){
						  var player=_status.event.player;
						  var att=get.attitude(player,target);
						  var nh=target.countCards('h');
						    if(att>0){
							  if(nh==target.hp+1){
								  if(player==target) return att+1;
								  return att+2;
							  }
							  return att;
						  }
						  else return 0;
						  }
					},
					threaten:1.9
				},
			},
			gzyuanziy:{},
			gzjimengx:{
				unique:true,
				forced:true,
				mark:true,
				skillAnimation:true,
				limited:true,
				animationColor:'orange',
                trigger:{
                  global:"phaseUseBegin",
　　　　　　　　},
				audio:'dimeng',
　　			filter:function(event,player){
			       return game.countPlayer(function(current){
            return current.identity=='key';
        })>0&&!player.storage.gzjimengx;
				},
　　			content:function(){
					'step 0'
                    player.awakenSkill('gzjimengx');
                    player.storage.gzjimengx=true;
					'step 1'
                 player.group="key";
                 game.log(player,'的势力变为键');
                 if(get.mode()=='guozhan'){
                 player.identity="key";
                 player._group="key";
        player.node.identity.firstChild.innerHTML=get.translation("key");
                 player.node.identity.dataset.color=player.identity;        
                 if(player.name) lib.character[player.name][1]="key";
                 if(player.name1) lib.character[player.name1][1]="key";
                 if(player.name2) lib.character[player.name2][1]="key";                
                 }
                 else{
                   if(player.name) lib.character[player.name][1]="key";
                   if(player.name1) lib.character[player.name1][1]="key";
                   if(player.name2) lib.character[player.name2][1]="key";            
                 }
					'step 2'
                     player.addMark('zhulianbihe_mark'); 
				  },
			},
			gzfenweix:{
                audio:"fenwei",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzfenweix;
				},
				content:function(){
					'step 0'
					player.awakenSkill('gzfenweix');
                    player.storage.gzfenweix=true;
					var num=game.countPlayer()-1;				player.chooseTarget(get.prompt('gzfenweix'),[1,num],function(card,player,target){
						return target.countCards('h')&&target!=player;
					}).ai=function(target){
						return 0.5-get.attitude(player,target);
					}
					'step 1'
					if(result.bool){
						event.cards=[];
						event.list=result.targets.slice(0);
						event.list.sort(lib.sort.seat);
						player.logSkill('gzfenweix',result.targets);
					}
					else{
						event.finish();
					}
					'step 2'
					if(event.list.length){
						event.list.shift().chooseToDiscard('h',true);
					}
					else{
						event.goto(4);
					}
					'step 3'
					if(result.bool&&result.cards.length){
						event.cards.push(result.cards[0]);
					}
					event.goto(2);
					'step 4'
					if(event.cards.length){
						player.chooseCardButton('选择一张加入手牌',event.cards).ai=function(button){
							return get.value(button.link);
						};
					}
					else{
						event.finish();
					}
					'step 5'
					if(result.bool){
						player.gain(result.links,'gain2');
					}
				},
				ai:{
					order:7,
					result:{
						player:function(player){
							if(player.hp<2) return 9;
							if(game.countPlayer(function(current){
　　　　　　　　　　　　　　　　　return current.hp==1
                               })>0&&player.countCards('h','sha')>0) 
                               return 7;
							return -1;
						},
					},
					threaten:0.9
				},
			},
			gzpozhenx:{
				zhenfa:'siege',
				trigger:{player:'phaseZhunbeiBegin'},
				filter:function(event,player){
					return player.sieged();
				},
				forced:true,
				content:function(){
					player.addTempSkill('gzpozhenx2');
				},
			},
			gzpozhenx2:{
				inherit:'qinggang_skill',
				equipSkill:false,
			},
			gzanguox:{
				audio:'anguo',
				enable:'phaseUse',
				usable:1,
				filterTarget:function(card,player,target){
					return target!=player&&(target.isMinHandcard()||target.isMinEquip());
				},
                selectTarget:1,
				content:function(){
					'step 0'
                     if(target.countCards('he')==0||target.isHealthy()) event._result={index:1};
                     else{
                        target.chooseControl().set('choiceList',[
                        '弃置一张牌，回复1点体力',
                        '摸一张牌',
                        ]);
                     }
					'step 1'
                    if(result.index==0){
					    target.chooseToDiscard(true,'he');
　　　　　　　　　　　　target.recover();
　　　　　　　　　　　　player.draw();
					}
                    else{
　　　　　　　　　　　　target.draw();
					    player.chooseToDiscard(true,'he');
　　　　　　　　　　　　player.recover();
					}
				},
				ai:{
					threaten:1.6,
					order:9,
					result:{
　　　　　　　　　　　　target:1,
						player:function(player,target){
							if(!player.hasFriend()) return -3;
							return 7;
						}
					}
				}
			},
			gzjiandex:{
				zhenfa:'siege',
				trigger:{player:'phaseZhunbeiBegin'},
				filter:function(event,player){
					return player.sieged();
				},
				forced:true,
				content:function(){
					player.addTempSkill('qixi');
				},
			},
					gzguicaix:{
						audio:"reguicai",
						trigger:{global:'judge'},
						check:function(event,player){
							var judge=event.judge(event.player.judging[0]);
							if(ai.get.attitude(player,event.player)<0) return judge>0;
							if(ai.get.attitude(player,event.player)>0) return judge<0;
							return 0;
						},
						content:function(){
							"step 0"
							player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
							get.translation(trigger.player.judging[0])+'，打出一张手牌代替之或亮出牌顶的一张牌代替之').set('ai',function(card){
								var trigger=_status.event.getParent()._trigger;
								var player=_status.event.player;
								var judging=_status.event.judging;
								var result=trigger.judge(card)-trigger.judge(judging);
								var attitude=ai.get.attitude(player,trigger.player);
								if(attitude==0||result==0) return 0;
								if(attitude>0){
									return result-ai.get.value(card)/2;
								}
								else{
									return -result-ai.get.value(card)/2;
								}
							}).set('judging',trigger.player.judging[0]);
							"step 1"
							if(result.bool){
								player.respond(result.cards,'highlight');
							}
							else{
								event.cards=get.cards();
								game.log(get.translation(player)+'亮出了牌堆顶的'+get.translation(event.cards));
								player.showCards(event.cards);
								player.respond(event.cards,'highlight');				
							}
							"step 2"
							if(result.bool){
								if(trigger.player.judging[0].clone){
									trigger.player.judging[0].clone.classList.remove('thrownhighlight');
									game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
								}
								ui.discardPile.appendChild(trigger.player.judging[0]);
								trigger.player.judging[0]=result.cards[0];
								if(!get.owner(result.cards[0],'judge')){
									trigger.position.appendChild(result.cards[0]);
								}
								game.log(trigger.player,'的判定牌改为',result.cards[0]);
								game.delay(2);
							}
							else{
								if(trigger.player.judging[0].clone){
									trigger.player.judging[0].clone.classList.remove('thrownhighlight');
									game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
								}
								ui.discardPile.appendChild(trigger.player.judging[0]);
								trigger.player.judging[0]=event.cards[0];
								if(!get.owner(event.cards[0],'judge')){
									trigger.position.appendChild(event.cards[0]);
								}
								game.log(trigger.player,'的判定牌改为',event.cards[0]);
							}
						},
						ai:{
							tag:{
								rejudge:1,
							}
						}
					},
  gzfankuix:{
    audio:"refankui",
    trigger:{
        player:"damageEnd",
    },
    direct:true,
    filter:function(event,player){
        return (event.source&&(event.source.countGainableCards(player,'he')||event.source.countDiscardableCards(player,'he'))&&event.num>0&&event.source!=player);
    },
    content:function (){
        "step 0"
        event.count=trigger.num;
        "step 1"
        event.count--;
        event.gcs=trigger.source.getGainableCards(player,'he');
        event.dcs=trigger.source.getDiscardableCards(player,'he');
        var next=player.choosePlayerCard(get.prompt('gzfankuix',trigger.source),trigger.source,get.buttonValue,'he').set("gcs",event.gcs).set("dcs",event.dcs);
        next.set("filterButton",function(button){
        	return _status.event.gcs.contains(button.link)||_status.event.dcs.contains(button.link);
        });
        "step 2"
        if(result.bool){
        	event.cards=result.links;
        	var list=[];
        	if(event.gcs.contains(event.cards[0]))list.push("获得");
        	if(event.dcs.contains(event.cards[0]))list.push("弃置");
        	player.chooseControl(list,true,function(event,player){
        		if(list.length==1)return list[0];
        		return player.countCards("he")<3?"获得":"弃置";
        	}).set("prompt","请选择一项执行");
        }
        else event.finish();
        "step 3"
        player.logSkill("gzfankuix",trigger.source);
        if(result.control=="弃置"){
        	trigger.source.discard(event.cards,"notBySelf");
        	player.chooseBool("是否摸一张牌？").ai=lib.filter.all;
        }
        else{
        	player.gain(event.cards,trigger.source);
        	trigger.source.$giveAuto(event.cards,player);
        	event.goto(5);
        }
        "step 4"
        if(result.bool)player.draw();
        "step 5"
        if(event.count>0&&(trigger.source.countGainableCards(player,'he')>0||trigger.source.countDiscardableCards(player,'he')>0)) event.goto(1);
    },
    ai:{
        "maixie_defend":true,
        effect:{
            target:function (card,player,target){
                if(player.countCards('he')>1&&get.tag(card,'damage')){
                    if(get.attitude(target,player)<0) return [1,1];
                }
            },
        },
    },
            },
			 gzjizhix:{
				audio:"jizhi",
				trigger:{
					player:"useCardToPlayered",
				},
				check:function (event,player){
					return get.attitude(player,event.target)<0;
				},
				filter:function(event,player){
				  if(event.targets&&event.targets.length>1) return false;
	              return get.type(event.card)=='trick';
				},
				group:'jizhi',
				logTarget:"target",
				content:function (){
					"step 0" 
	                trigger.target.addTempSkill('gzjizhix_disable');
					var skills=trigger.target.getSkills(null,false);
					for(var i=0;i<skills.length;i++){
						if(get.info(skills[i]).charlotte) skills.splice(i--,1);
					}
					if(skills.length){
	trigger.target.storage.gzjizhix_disable.push(skills.randomGet());
	trigger.target.disableSkill('gzjizhix_disable',trigger.target.storage.gzjizhix_disable);
					}
				},
			},
			gzjizhix_disable:{
				init:function(player,skill){
					if(!player.storage[skill]) player.storage[skill]=[];
				},
				onremove:function(player,skill){
					player.enableSkill(skill);
					delete player.storage[skill];
				},
				charlotte:true,
				locked:true,
				mark:true,
				intro:{
					content:function(storage,player,skill){
						var list=[];
						for(var i in player.disabledSkills){
							if(player.disabledSkills[i].contains(skill)){
								list.push(i)
							}
						}
						if(list.length){
							var str='失效技能：';
							for(var i=0;i<list.length;i++){
								if(lib.translate[list[i]+'_info']){
									str+=get.translation(list[i])+'、';
								}
							}
							return str.slice(0,str.length-1);
						}
					}
				}
			},
			gzhunshangx:{
				skillAnimation:true,
				animationColor:'wood',
				audio:"hunshang",
				derivation:["gzyingzix","baka_yinghun"],
				viceSkill:true,
				init:function (player){
					if(player.checkViceSkill('gzhunshangx')&&!player.viceChanged){
						player.removeMaxHp();
					}
				},
				trigger:{
					player:"phaseZhunbeiBegin",
				},
                filter:function (event,player){
                   return player.hp<=1&&(!player.hasSkill('gzyingzix')||!player.hasSkill('baka_yinghun')); 
                },
				forced:true,
				//priority:3,
				content:function (){
                'step 0'
                var skills=lib.skill.gzhunshangx.derivation;
                var list=[];
                for(var i=0;i<skills.length;i++){
                    if(!player.hasSkill(skills[i])){
                                  list.push(skills[i]);
                               }
                             }
                    if(list.length){
                        if(list.length==1){
                        player.addSkill(list[0]);
                        player.popup(list[0]);
           game.log(player,'获得技能','【'+get.translation(list[0])+'】');   
                             event.finish();
                           }
           else player.chooseControl(list).set('prompt','选择获得一项技能');
                        }
                       'step 1'
                       if(result.control){
                  player.addSkill(result.control);
                  player.popup(result.control);
            game.log(player,'获得技能','【'+get.translation(result.control)+'】');
                                    }
				},
				ai:{
					threaten:function (player,target){
						if(target.hp==1) return 2;
						return 0.5;
					},
					maixie:true,
					effect:{
						target:function (card,player,target){
							if(!target.hasFriend()) return;
							if(get.tag(card,'damage')==1&&target.hp==2&&!target.isTurnedOver()&&
							_status.currentPhase!=target&&get.distance(_status.currentPhase,target,'absolute')<=3) return [0.5,1];
						},
					},
				},
			},
			gzqiyuex:{
				audio:'souying',
	            trigger:{player:'showCharacterAfter'},
				limited:true,
				unique:true,
				init:function (player,skill){player.storage[skill]=false},
				skillAnimation:true,
				filter:function(event,player){
					return event.toShow.contains('gz_zhangweix');
				},
				changeSeat:true,
				content:function(){
					"step 0"
					player.awakenSkill('gzqiyuex');
                    player.storage.gzqiyuex=true;
　　                if(!player.isMajor()){
                       player.mayChangeVice();
　　                }
					"step 1"
					player.chooseTarget(get.prompt('gzqiyuex'),function(card,player,target){
						return player!=target;
					}).ai=function(target){
							var att=get.attitude(player,target);
							if(target==player.previous&&att>0) return att;
							if(target==player.next&&att<0) return -att;
							var att2=get.attitude(player,player.next);
							if(target==player.next.next&&att<0&&att2<0) return -att-att2;
							return 0;
					}
					"step 2"
					if(result.bool){
                        target1=result.targets[0];
					    game.swapSeat(player,target1);
					}
					else{
						event.finish();
					}
				},
			},
			gzkuangbaox:{
				audio:'baonu',
	            trigger:{player:'showCharacterAfter'},
				limited:true,
				unique:true,
				frequent:true,
				init:function (player,skill){player.storage[skill]=false},
				skillAnimation:true,
				filter:function(event,player){
					return event.toShow.contains('gz_shen_lvbu');
				},
				content:function(){
					    player.awakenSkill('gzkuangbaox');
                        player.storage.gzkuangbaox=true;
						player.gainMaxHp(true);
                        player.addMark('zhulianbihe_mark'); 
				},
			},
			gzsuohunx:{
				audio:'wuhun21',
	            trigger:{player:'showCharacterAfter'},
				limited:true,
				unique:true,
				frequent:true,
				init:function (player,skill){player.storage[skill]=false},
				skillAnimation:true,
				filter:function(event,player){
					return event.toShow.contains('gz_shen_guanyu');
				},
				content:function(){
					    player.awakenSkill('gzsuohunx');
                        player.storage.gzsuohunx=true;
						player.gainMaxHp(true);
                        player.addMark('zhulianbihe_mark'); 
				},
			},
			gzmeihuny:{
                audio:"lihun",
				trigger:{player:'phaseAfter'},
				priority:-50,
				direct:true,
				filter:function(event,player){
					if(_status.noswap){
						return false;
					}
					return !player.isTurnedOver();
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzmeihuny'),function(card,player,target){
						return target!=player&&target.group!='qun';
					}).ai=function(target){
						var att=-get.attitude(player,target);
						if(att<=0) return 0;
						if(target.needsToDiscard()) att+=3;
						else if(target.needsToDiscard(1)) att++;
						else if(target.countCards()<=3){
							return 0;
						}
						return att+target.countCards('h')+get.threaten(target);
					};
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('gzmeihuny',target);
						target.storage.gzmeihuny2=player;
						target.storage.gzmeihuny4=target.ai.shown;
						target.addSkill('gzmeihuny2');
						event.target=target;
						player.turnOver();
					}
					else{
						event.finish();
					}
					'step 2'
					game.delay();
					'step 3'
					var target=event.target;
					if(player==game.me){
						game.swapPlayerAuto(target);
						target.storage.gzmeihuny3=true;
					}
					else{
						target.addSkill('mad');
						target.unmarkSkill('mad');
					}
					player.out('gzmeihuny');
					target.insertPhase();
				},
				ai:{
					threaten:2
				}
			},
			gzmeihuny2:{
				temp:true,
				mark:'character',
				vanish:true,
				intro:{
					content:'由$控制本回合行动'
				},
				init:function(player){
					player.ai.modAttitudeFrom=function(from,to){
						return get.attitude(player.storage.gzmeihuny2,to);
					}
					player.ai.modAttitudeTo=function(from,to,att){
						if(from!=to) return 0;
						return att;
					}
				},
				onremove:function(player){
					delete player.ai.modAttitudeFrom;
					delete player.ai.modAttitudeTo;
					delete player.storage.gzmeihuny2;
					delete player.storage.gzmeihuny3;
					delete player.storage.gzmeihuny4;
				},
				trigger:{player:['phaseAfter','dieBegin']},
				forced:true,
				popup:false,
				content:function(){
					player.storage.gzmeihuny2.in('gzmeihuny');
					if(player==game.me&&player.storage.gzmeihuny3){
						game.swapPlayerAuto(player.storage.gzmeihuny2);
					}
					if(typeof player.ai.shown=='number'){
						player.ai.shown=player.storage.gzmeihuny4;
					}
					player.removeSkill('mad');
					player.removeSkill('gzmeihuny2');
				}
			},
			gzmeihuny3:{},

			gzmeihunx:{
				audio:'lihun',
				enable:'phaseUse',
				usable:1,
                filter:function(event,player){
                    return player.countCards('he',{type:'equip'})>0;
                },
				filterTarget:function(card,player,target){
					return player!=target&&target.sex=='male';
				},
                filterCard:function(card){
                    return get.type(card)=='equip';
　　　　　　　　},
　　			position:'he',
				content:function(){
					player.gain(target.getCards('h'),target,'giveAuto');
					player.turnOver();
					player.addSkill('gzmeihunx2');
					player.storage.gzmeihunx=target;
				},
				check:function(card){return 8-get.value(card)},
				ai:{
					order:10,
					result:{
						player:function(player){
							if(player.classList.contains('turnedover')) return 10;
							return 0;
						},
						target:function(player,target){
							if(target.countCards('h')>target.hp) return target.hp-target.countCards('h');
							return 0;
						}
					},
					threaten:1.5,
					effect:{
						target:function(card){
							if(card.name=='guiyoujie') return [0,2];
						}
					}
				},
			},
			gzmeihunx2:{
				trigger:{player:'phaseUseEnd'},
				forced:true,
				popup:false,
				audio:false,
				content:function(){
					"step 0"
						var cards=player.getCards('he');
					player.removeSkill('gzmeihunx2');
					if(player.storage.gzmeihunx.classList.contains('dead')||player.storage.gzmeihunx.hp<=0||cards.length==0){
						event.finish();
					}
					else{
						if(cards.length<player.storage.gzmeihunx.hp) event._result={bool:true,cards:cards};
						else player.chooseCard('he',true,player.storage.gzmeihunx.hp,'魅魂：选择要交给'+get.translation(player.storage.gzmeihunx)+'的牌');
					}
					"step 1"
					player.storage.gzmeihunx.gain(result.cards,player);
					player.$give(result.cards.length,player.storage.gzmeihunx);
				}
			},
			gzwuqinx:{
				audio:"chulao",
				trigger:{player:'phaseEnd'},
				direct:true,
				filter:function(event,player){
					return game.hasPlayer(function(current){
						return current!=player&&current.countCards('h');
					});
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzwuqinx'),function(card,player,target){
						return player!=target&&target.countCards('h')>0;
					}).ai=function(target){
						return 11-get.attitude(player,target);
					};
					'step 1'
					if(result.bool){
						player.logSkill('gzwuqinx',result.targets);
						var target=result.targets[0];
						var card=target.getCards('h').randomGet()
						player.gain(card,target);
						event.target=target;
						target.$giveAuto(card,player);
						event.target.draw();
					}
				},
				ai:{
					expose:0.1
				}
			},
					gzjishix:{
						audio:"qingnang",
						usable:1,
						enable:'phaseUse',
						filter:function(event,player){
							return player.countCards('he',{color:'red'})>0;
						},
						check:function(card){
							return 6-ai.get.value(card)
						},
						filterCard:function(card){
							return get.color(card)=='red';
						},
						filterTarget:function(card,player,target){
							return target.countCards('h')>0;
						},
						position:'he',
						content:function(){
							'step 0'
							var num=target.countCards('h');
							target.discard(target.get('h'));
							target.draw(num);
							target.showHandcards();
							'step 1'
							var num=target.countCards('h',function(card){
								return get.type(card)=='trick';
							});
							if(num==0){
								event.finish();
							}
							else{
								if(num>0){
									target.recover(num);
								}
								else event.finish();
							}
						},
						ai:{
							order:9,
							result:{
								target:function(player,target){
									var num1=target.maxHp-target.hp;
									var nh=target.countCards('h');
									if(num1>=2) return nh+num1;
									return nh;
								}
							},
							threaten:2
						}
					},
			gzhuoxinx:{
				audio:'biyue',
				trigger:{player:'damageEnd'},
				prompt:'是否发动【惑心】，将武将牌翻面？',
				filter:function(event,player){
					return player.isTurnedOver()&&event.source&&event.source.sex=='male';
				},
				content:function(){
					player.turnOver();
				},
				group:'gzhuoxinx_move',
				subSkill:{
					move:{
						trigger:{player:'turnOverEnd'},
						direct:true,
						audio:'biyue',
						filter:function(event,player){
							return !player.isTurnedOver()&&player.canMoveCard();
						},
						content:function(){
						  player.moveCard(true);
						}
					}
				}
			},
            gzsanliangx:{
                audio:"ext:国战补充:2",
                enable:"phaseUse",
                filter:function(event,player){
                   return player.getHandcardLimit()>=player.hp;
                },
                init:function (player){
                  player.storage.gzsanliangx=0;
                },
                usable:20,
                content:function (){
                  var n=ui.discardPile.childNodes.length-1;
                  var card=ui.discardPile.childNodes[n];
                    player.gain(card,'gain2','nobroadcast');
                    player.storage.gzsanliangx++;
                },
                ai:{
                    order:10,
                    result:{
                        player:function (player){
                if(player.num('h')<player.getHandcardLimit()){
                    return 1;
                }
                return 0;
                },
                    },
                },
                mod:{
                    maxHandcard:function (player,num){
                      return num-player.storage.gzsanliangx;
                },
                },
                group:["gzsanliangx2"],
            },
            gzsanliangx2:{
				audio:'bushi',
                trigger:{
                    player:"phaseAfter",
                },
                forced:true,
                popup:false,
                silent:true,
                content:function (){
                  player.storage.gzsanliangx=0;
               },
            },
			gzjiaozhux:{
                audio:"shizhi",
				trigger:{global:'dieAfter'},
　　　　　　　　forced:true,
				filter:function(event,player){
					return event.source&&event.source.isAlive()&&event.source!=player&&event.source.group!=player.group;
				},
				content:function(){
					player.draw();
					player.useCard({name:'juedou'},trigger.source);
				},
				ai:{
					threaten:1.5,
					expose:0.1
				}
			},
            gzqianzhix:{
                audio:"ext:国战补充:2",
                enable:"phaseUse",
                filter:function(event,player){
                   return player.countCards('h')>0;
                },
                filterTarget:function(card,player,target){
                   return player!=target&&!target.hasSkill('gzqianzhiy');
                },
                filterCard:true,
                check:function (card){
                   return 5-ai.get.value(card);
                },
                discard:false,
                prepare:"give",
                content:function (){
                   "step 0"
　　　　　　　　　 target.addTempSkill('gzqianzhiy','phaseAfter');
                   target.storage.gzqianzhix=cards[0];
                   target.gain(cards[0],player);
                   player.discardPlayerCard(target,'h',true);
                   "step 1"
                   if(result.links[0].name==target.storage.gzqianzhix.name){
                      target.damage('fire');
                   }
                    delete target.storage.gzqianzhix;
                },
                ai:{
                    order:5,
                    result:{
						player:function(player){
							if(player.needsToDiscard()) return 1;
							return 0;
						},
                        target:function(player,target){
                            return -target.countCards('he')-(player.countCards('h','du')?1:0);
                        },
                    },
                    threaten:0.9,
                },
            },
			gzqianzhiy:{},
            gzdaiyuanx:{
                audio:"ext:国战补充:1",
                trigger:{
                    player:"phaseDrawBegin",
                },
                check:function (event,player){
        var nh=player.num('h',{type:'trick'});
        if(nh<1) return true;
        return false;
    },
                content:function (){
        "step 0"
        trigger.num--;
        player.addTempSkill('gzdaiyuanx2','phaseAfter');
        "step 1"
        player.skip('phaseDiscard');
    },
                ai:{
                    threaten:1,
                },
            },
            gzdaiyuanx2:{
            },
            gzkuimangx:{
				audio:'kuiwei',
                trigger:{
                    player:"useCard",
                },
                filter:function (event,player){
        if(!event.cards||event.cards.length==0) return false;
        if(_status.currentPhase!=player) return false;
        if(player.storage.gzkuimangx<4*player.hp) return false;
        return event.targets&&event.targets.length;
    },
                usable:1,
                priority:-5,
                direct:true,
                content:function (){
        'step 0'
        player.chooseTarget(get.prompt('gzkuimangx'),function(card,player,target){
            if(target.num('he')==0) return false;
            return _status.event.getTrigger().targets.contains(target);
        }).set('ai',function(target){
            return -ai.get.attitude(_status.event.player,target);
        });
        'step 1'
        if(result.bool){
            player.logSkill('gzkuimangx',result.targets);
            event.target=result.targets[0];
            player.discardPlayerCard(event.target,'he',true);
        }
    },
                group:["gzkuimangx2","gzkuimangx3"],
                ai:{
                    expose:0.2,
                    threaten:1.4,
                },
            },
            gzkuimangx2:{
                trigger:{
                    player:"phaseBefore",
                },
                forced:true,
                silent:true,
                popup:false,
                priority:10,
                content:function (){
                player.storage.gzkuimangx=0;
            },
            },
            gzkuimangx3:{
                trigger:{
                    player:"useCard",
                },
                priority:-1,
                forced:true,
                popup:false,
                silent:true,
                filter:function (event,player){
        if(!event.cards||event.cards.length!=1) return false;
        if(_status.currentPhase!=player) return false;
        return true;
    },
                content:function (){
        player.storage.gzkuimangx+=get.number(trigger.cards[0]);
    },
            },
            gzxuezhux:{
                audio:"ext:国战补充:2",
                usable:1,
                trigger:{
                    player:"useCardAfter",
                },
                frequent:true,
                filter:function (event,player){
        if(!event.cards||!event.cards.length) return false;
        if(_status.currentPhase!=player) return false;
        if(get.cardCount(true,player)!=player.hp) return false;
        return true;
    },
                content:function (){
        "step 0"
        if(get.itemtype(trigger.cards)=='cards'&&get.position(trigger.cards[0])=='d'){
            player.chooseControl('摸牌','拿牌').ai=function(){
                var trigger=_status.event.getTrigger();
                if(trigger.cards.length==1&&trigger.cards[0].name=='sha') return '摸牌';
                return '拿牌';
            };
        }
        else{
            player.logSkill('gzxuezhux');
            player.draw();
            event.finish();
        }
        "step 1"
        if(result.control=='拿牌'){
            player.logSkill('gzxuezhux');
            player.gain(trigger.cards);
            player.$gain2(trigger.cards);
        }
        else if(result.control=='摸牌'){
            player.logSkill('gzxuezhux');
            player.draw();
        }
    },
            },
            gzjianchix:{
                audio:"zhenwei",
                trigger:{
                    target:"useCardToBegin",
                },
                frequent:true,
                filter:function (event,player){
        if(player==_status.currentPhase) return false;
        if(get.cardCount(true,event.player)!=1) return false;
        return true;
        },
                content:function (){
                player.draw();
               },
            },
            gzhemengx:{
                audio:"ext:国战补充:1",
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return target!=player&&target.num('h')>0;
    },
                selectTarget:function (){
        var player=_status.event.player;
        var num=player.maxHp-player.hp;
		return [1,Math.max(1,player.getDamagedHp())];
    },
                filter:function (event,player){
        return player.num('h')>0;
    },
                multitarget:true,
                multiline:true,
                filterCard:true,
                lose:false,
                discard:false,
                prepare:function (cards,player){
        player.showCards(cards);
    },
                content:function (){
        "step 0"
        event.type=get.type(cards[0],'trick');
        event.targets=targets;
        event.targets.sort(lib.sort.seat);
        "step 1"
        if(event.targets.length){
            var cur=event.targets.shift();
            var card=cur.get('h').randomGet();
            player.showCards(card);
             if(get.type(card,'trick')==event.type){
                 player.draw();
             }
            event.redo();            
        }        
    },
                ai:{
                    order:8,
                    threaten:function (player,target){
                    if(target.hp==1) return 2;
                    if(target.hp==target.maxHp) return 1;
                    if(target.hp==2) return 1.5;
                    return 1;
                },
                    result:{
                        player:1,
                    },
                },
            },
			gzshuzhengx:{
                audio:"qinzheng",
				trigger:{
					player:"useCardToPlayered",
				},
				frequent:true,
				filter:function (event,player){
					if(event.target==player) return false;
					if(!event.targets||!event.targets.length||
					event.getParent().triggeredTargets3.length>1||!event.isPhaseUsing()) return false;
					var evt=player.getLastUsed(1);
					if(!evt||!evt.targets||!evt.targets.length||!evt.isPhaseUsing()) return false;
					for(var i=0;i<event.targets.length;i++){
						if(evt.targets.contains(event.targets[i])) return true;
					}
					return false;
				},
				content:function (){
					'step 0'
					player.draw();
					'step 1'
					event.card=result[0];
					var ablers=player.getLastUsed(1).targets.slice(0);
					for(var i=0;i<ablers.length;i++){
						if(ablers[i]==player||!trigger.targets.contains(ablers[i])) ablers.splice(i--,1);
					}
					if(event.card&&get.owner(event.card)==player&&ablers.length){
						player.chooseTarget('是否将'+get.translation(event.card)+'交给其他角色？',function(card,player,target){
							return _status.event.ablers.contains(target)&&target!=player;
						}).set('ablers',ablers).ai=function(){
							return false;
						};
					}
					else event.finish();
					'step 2'
					if(result.bool){
						player.give(event.card,result.targets[0],true);
					}
				},
				locked:false,
				mod:{
					aiOrder:function(player,card,num){
						if(player.isPhaseUsing()&&(!player.storage.counttrigger||!player.storage.counttrigger.gzshuzhengx||!player.storage.counttrigger.gzshuzhengx<3)){
							var evt=player.getLastUsed();
							if(evt&&evt.targets&&evt.targets.length&&evt.isPhaseUsing()&&game.hasPlayer(function(current){
								return evt.targets.contains(current)&&player.canUse(card,current)&&get.effect(current,card,player,player)>0;
							})){
								return num+10;
							}
						}
					},
				},
				ai:{
					effect:{
						player:function(card,player,target){
							var evt=player.getLastUsed();
							if(evt&&evt.targets.contains(target)&&(!player.storage.counttrigger||!player.storage.counttrigger.gzshuzhengx||!player.storage.counttrigger.gzshuzhengx<3)&&player.isPhaseUsing()) return [1.5,0];
						}
					},
				},
			}, 
           gzlihuox:{
                audio:"relihuo",
                trigger:{
                    player:"phaseEnd",
                },
                filter:function (event,player){
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]!=player&&game.players[i].getAttackRange()>=player.getAttackRange()) return false;
        }
        return true;
    },
                direct:true,
                content:function (){
        'step 0'
        player.chooseTarget('选择一名角色视为使用一张火属性【杀】？',function(card,player,target){
                        return lib.filter.targetEnabled({name:'sha',nature:'fire'},player,target);
                    }).set('ai',function(target){
                        return ai.get.effect(target,{name:'sha',nature:'fire'},_status.event.player);
                    });
                'step 1'
                if(result.bool){
                    player.logSkill('gzlihuox',result.targets);
                    player.useCard({name:'sha',nature:'fire'},result.targets,false);
                }
    },
            },
			gzwusix:{
			    audio:'renshi',
				unique:true,
				mark:true,
				skillAnimation:true,
				animationColor:'orange',
				trigger:{player:'phaseAfter'},
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					if(event.skill) return false;
					return !player.storage.gzwusix;
				},
				content:function(){
					'step 0'
				    player.awakenSkill('gzwusix');
					var goon=false;
					if(player.countCards('he',function(card){
						return get.value(card)<8&&get.color(card)=='red';
					})){
						goon=true;
					}
					else if(game.hasPlayer(function(current){
						return current.hp==1&&player.canUse('sha',current,false)&&get.attitude(player,current)<0&&get.effect(current,{name:'sha'},player,player)>0;
					})){
						if(player.hp>1||!player.isTurnedOver()){
							goon=true;
						}
					}
					player.chooseTarget(get.prompt('gzwusix'),function(card,playe,target){
						return player.canUse('sha',target,false);
					}).set('ai',function(target){
						if(!_status.event.goon) return false;
						var player=_status.event.player;
						if(get.attitude(player,target)>=0) return false;
						if(target.hp>3) return false;
						return get.effect(target,{name:'sha'},player,player);
					}).set('goon',goon);
					'step 1'
					if(result.bool){
						event.target=result.targets[0];
						player.logSkill('gzwusix',event.target);
					}
					else{
						event.finish();
					}
					'step 2'
					if(event.target.isAlive()&&player.countCards('he',{color:'red'})){
						player.chooseToDiscard('he',{color:'red'},'是否弃置一张红色牌视为对'+get.translation(event.target)+'使用一张杀？').set('ai',function(card){
							return 8-get.value(card);
						})
					}
					else{
						event.goto(4);
					}
					'step 3'
					if(result.bool){
						player.useCard({name:'sha',isCard:true},event.target);
					}
					'step 4'
					if(event.target.isAlive()){
						player.chooseBool('是否失去一点体力并视为对'+get.translation(event.target)+'使用一张杀？').set('choice',
							player.hp>event.target.hp&&player.hp>1&&event.target.hp>0
						);
					}
					else{
						event.finish();
					}
					'step 5'
					if(result.bool){
						player.loseHp();
						player.useCard({name:'sha',isCard:true},event.target);
					}
					'step 6'
					if(event.target.isAlive()&&!player.isTurnedOver()){
						player.chooseBool('是将武将牌翻至背面并视为对'+get.translation(event.target)+'使用一张杀？').set('choice',
							event.target.hp==1
						);
					}
					else{
						event.finish();
					}
					'step 7'
					if(result.bool){
						player.turnOver(true);
						player.useCard({name:'sha',isCard:true},event.target);
					}
				},
                ai:{
                    order:3.5,
                    result:{
                        player:1,
                    },
                },
			},
			gzmengzhix:{
			    audio:"xinfu_fuhai",
                enable:'phaseUse',
                usable:1,
                unique:true,
                filter:function (event,player){
                    return game.hasPlayer(function(current){
                       return current!=player&&get.distance(player,current)<=1&&current.countCards('h');
                    });
                },
                content:function(){
                    'step 0'
                    event.toRespond=game.filterPlayer(function(current){
                        return current!=player&&get.distance(player,current)<=1&&current.countCards('h');
                    });
					player.line(event.toRespond,'green');
                    event.cards=[];
                    'step 1'
                    if(event.toRespond.length){
                        var current=event.toRespond.shift();
                        event.current=current;
                        current.chooseCard('h',true).set('ai',function(card){
							var player=_status.event.player;
                            if(card.name=='du') return 20;
							if(get.attitude(player,current)<0) return 5-get.value(card);
                            return 8-get.value(card);
                        });
                    }
                    else{
                        event.goto(3);
                    }
                    'step 2'
                    if(result.cards){
                        var card=result.cards[0];
                        event.current.showCards(card);
                        event.cards.push(card)
                    }
                    event.goto(1);
                    'step 3'
                    var list=new Object();
                    for(var i=0;i<event.cards.length;i++){
                        var t=get.type(event.cards[i],'trick');
                        if(list[t]==undefined) list[t]=1;
                        else list[t]++;
                    }
                    var max=0,maxType='';
                    for(t in list){
                        if(list[t]>max){
                            max=list[t];
                            maxType=t;
                        }
                    }
                    event.num=0;
                    for(var i=0;i<event.cards.length;i++){
                        var card=event.cards[i];
                        if(get.type(card,'trick')==maxType){
                            player.gain(card,'gain2');
                            event.num++;
                        }
                    }
                    'step 4'
                    if(event.num>=2) player.loseHp();
                },
                ai:{
                    order:10,
                    result:{
                        player:function (player,current){
							if(player.hp==1) return 0;
                            return 1;    
                        },
                    },
                    threaten:2,
                }, 
            },
			gzyuanhangx:{
				mod:{
					globalFrom:function(from,to,distance){
						return distance-from.getDamagedHp();
					}
				}
			},
				 gzguolix:{
					enable:'phaseUse',
                    usable:1,
                    audio:"ext:国战补充:1",
                    viewAsFilter:function (player){
                       return player.countCards('he',{type:'equip'})>0;
                    },
                    viewAs:{
                       name:"wuzhong",
                    },
                    position:"he",
				    filterCard:function(card){
					   return get.type(card)=='equip';
				    },
                    check:function (card){
                       return 7-get.value(card);
　　　　　　　　　　},
					ai:{
                       basic:{
                          order:7.2,
                          useful:4.5,
                          value:9.2,
                       },
                       result:{
                          target:2,
                       },
                       tag:{
                          draw:2,
                       },
					},
				},
			gzlongdex:{
                audio:"ext:国战补充:1",
				trigger:{player:'loseEnd'},
				filter:function(event,player){
					if(_status.currentPhase==player) return false;
					for(var i=0;i<event.cards.length;i++){
						if(event.cards[i].original=='e') return true;
					}
					return false;
				},
				content:function(){
					"step 0"
	player.chooseTarget(get.prompt2('gzlongdex'),function(card,player,target){
						return target.hp<target.maxHp;
					}).set('ai',function(target){
						var att=get.attitude(_status.event.player,target);
						return att>3;
					});
					"step 1"
					if(result.bool){
						player.logSkill('gzlongdex', result.targets[0]);
                        result.targets[0].recover();
					}
					 else event.finish();
				}
			},
				 gzgulianx:{
				    audio:'jimeng',
					enable:'phaseUse',
					usable:1,
					filterCard:function(card){
						return card.name=='sha';
					},
					filterTarget:function(card,player,target){
						return target!=player&&target.countCards('h')!=player.countCards('h');
					},
					content:function(){
						player.draw();
						target.draw();
						player.showCards(player.get('h').randomGet());
						target.showCards(target.get('h').randomGet());
					},
					ai:{
						order:2,
						result:{
							target:function(player,target){
								return 1;
							},
						},
						expose:0.6,
					},
				},
				 gzzuoanx:{
				    audio:'shuaiyan',
					trigger:{
						global:'loseEnd'
					},
					filter:function(event,player){
						return event.cards&&player.storage.gzzuoanx>=2&&player.storage.gzzuoanx1!=true;
					},
					direct:true,
					content:function(){
						'step 0'
						player.storage.gzzuoanx1=true;
						for(var i=0;i<trigger.cards.length;i++){
							if(trigger.cards[i].name=='sha') event.card=trigger.cards[i];
						};
						'step 1'
						player.chooseTarget(get.prompt('gzzuoanx')).ai=function(target){
							return get.attitude(player,target);
						};
						'step 2'
						if(result.bool){
							player.line(result.targets);
							player.logSkill('gzzuoanx')
							result.targets[0].gain(event.card,'gain2');
						}else{
							event.finish();
						};
					},
					group:["gzzuoanx_mark","gzzuoanx_unmark"],
					subSkill:{
						"mark":{
							trigger:{
								global:'loseBegin'
							},
							forced:true,
							popup:false,
							filter:function(event,player){
								if(!event.cards) return false;
								for(var i=0;i<event.cards.length;i++){
									if(event.cards[i].name=='sha') return event.player!=player;
								};
								return false;
							},
							content:function(){
								if(player.storage.gzzuoanx==undefined) player.storage.gzzuoanx=0;
								for(var i=0;i<trigger.cards.length;i++){
									if(trigger.cards[i].name=='sha') player.storage.gzzuoanx++;
								};
							},
						},
						"unmark":{
							trigger:{
								global:'phaseEnd'
							},
							forced:true,
							popup:false,
							content:function(){
								player.storage.gzzuoanx=0;
								delete player.storage.gzzuoanx1;
							},
						},
					},
				},
            gzjiezhuix:{
				audio:'yinbing',
                trigger:{
                    global:"phaseJieshuBegin",
                },
                direct:true,
                filter:function (event,player){
                    var num=0;
                    player.getHistory('lose',function(evt){
                        if(evt.cards2) num+=evt.cards2.length;
                    });
                    return num>=2;
                },
                content:function (){
                    "step 0"
                    player.chooseTarget(get.prompt('gzjiezhuix'),function(card,player,target){
                        return player!=target&&player.canUse({name:'sha'},target,false);
                        }).ai=function(target){
                        var player=_status.event.player;
                        return get.damageEffect(target,player,player);
                    };
                    "step 1"
                    if(result.bool){
                        player.logSkill('gzjiezhuix');
                        event.target=result.targets[0];
                        player.judge(function(card){
                             return get.color(card)=='black'?1:-1;
                        });
                    }
					else event.finish();
                    "step 2"
                    if(result.bool){
                        player.gainPlayerCard('he',event.target,true);
                        player.useCard({name:'sha',isCard:true},event.target,false);                        
                    }
                    else{
                        player.useCard({name:'sha',isCard:true},event.target,false);
                    }
                },
            },
				 gzzhongluex:{
					enable:'phaseUse',
				    audio:'yiji',
					usable:1,
					filter:function(event,player){
						return player.maxHp>player.hp;
					},
					filterTarget:function(card,player,target){
						return target!=player;
					},
					content:function(){
						target.draw(2);
						player.storage.gzzhongluex=true;
					},
					ai:{
						order:11,
						result:{
							target:function(player,target){
								if(game.countPlayer(function(current){return current!=player&&get.attitude(player,current)>0&&current.countCards('h')==0})>0) return 1;
								if(game.countPlayer(function(current){return current!=player&&get.attitude(player,current)<0&&current.isMaxHandcard()})>0&&game.countPlayer(function(current){return current!=player&&get.attitude(player,current)>0})>0) return 1;
							},
						},
						expose:0.4,
					},
				},
				 _gzzhongluex:{
					trigger:{
						player:'phaseEnd'
					},
					filter:function(event,player){
						return player.storage.gzzhongluex;
					},
					forced:true,
					content:function(){
						for(var i=0;i<game.players.length;i++){
							if(game.players[i].isMaxHandcard()) game.players[i].damage();
						};
						delete player.storage.gzzhongluex;
					},
				},
			  gzyihuax:{
				enable:"phaseUse",
                usable:1,
				audio:'yiji',
                filter:function (event,player){
                    return game.hasPlayer(function(current){
                       return current!=player&&current.countCards('h');
                    });
                },
                filterTarget:function (card,player,target){
                    return player!=target&&target.countCards('h');
                },
                content:function (){
                    'step 0'
                    event.card=target.getCards('h').randomGet();
					target.showCards(event.card);
                    'step 1'
                    if(get.type(event.card,'trick')=='basic'){
						player.chooseCard('he').ai=function(card){
					    	var att=get.attitude(player,target);
					     	var value=get.value(event.card);
					    	if(att>2) return value+6-get.value(card);
					    	return value-get.value(card);;
				     	};
					}
					if(get.type(event.card,'trick')=='equip'){
						target.damage();
						event.finish();
					}
					if(get.type(event.card,'trick')=='trick'){
						target.discard(event.card);
						player.chooseToDiscard('he',true);
						event.finish();
					}
					'step 2'
					if(!result.bool) event.finish();
					else{
						player.give(result.cards,target);
				    	target.give(event.card,player);
					}			
                },
                ai:{
					order:8,
					result:{
                        player:function (player,target){
							return 1;
						},
						target:function (player,target){
							if(target.countCards('h')==1) return -1.5;
							return -0.5;
						},
					},
				},
			},
            gzfuhux:{
				audio:'pojun',
                enable:"phaseUse",
                usable:1,
                filter:function (event,player){
                    if(player.countCards('h')==0) return false;
                    return game.hasPlayer(function(current){
                       return current!=player&&get.distance(player,current,'attack')<=1;
                    });
                },
                filterTarget:function (card,player,target){
                    if(get.distance(player,target,'attack')>1) return false;
                    return player!=target&&target.countCards('h');
                },
                check:function (card){
                    return 6-get.value(card);
                },
                filterCard:true,
                selectCard:1,
                position:"h",
                content:function (){
                    'step 0'
                    target.chooseCard('he','交给'+get.translation(player)+'一张【杀】或装备牌，否则将所有手牌移出游戏',function(card){
                            return get.type(card)=='equip'||card.name=='sha';
                    }).set('ai',function(card){
                        if(card.name=='sha') return 8;
                        return 6-get.value(card);
                    });
                    'step 1'
                    if(result.bool){
                        player.gain(result.cards,target,'giveAuto');
                    }
                    else{
                        target.addSkill('gzfuhux2');
                        event.cards=target.getCards('h');
                        target.storage.gzfuhux2.addArray(event.cards);
                        target.lose(event.cards,ui.special,'toStorage');
                        game.log(target,'失去了'+get.cnNumber(event.cards.length)+'张牌');
                        target.markSkill('gzfuhux2');
                    }
                },
                ai:{
                    order:12,
                    expose:0.3,
                    threaten:1.8,
                    result:{
                        target:function (player,target){
                            return -(target.countCards('h')+1);
                        },
                    },
                },
            },
            "gzfuhux2":{
                init:function (player,skill){
                    if(!player.storage[skill]) player.storage[skill]=[];
                },
                trigger:{
                    global:"phaseEnd",
                },
                forced:true,
                popup:false,
                charlotte:true,
                filter:function (event,player){
                    return player.storage.gzfuhux2&&player.storage.gzfuhux2.length>0;
                },
                content:function (){
                    game.log(player,'收回了'+get.cnNumber(player.gain(player.storage.gzfuhux2,'draw','fromStorage').cards.length)+'张牌');
                    player.storage.gzfuhux2.length=0;
                    player.removeSkill('gzfuhux2');
                },
                intro:{
                    onunmark:"throw",
                    content:"cardCount",
                },
            },
				 gzbeilix:{
				    audio:'baobian',
					trigger:{
						player:"phaseBegin",
					},
					direct:true,
					content:function(){
						'step 0'
						var list=['流失体力','cancel2'];
						if(player.countCards('h',function(card){return get.type(card)!='basic'})>0) var list=['流失体力','给予一名其他角色一张非基本牌','cancel2'];
						player.chooseControl(list).set('ai',function(event){
							return 'cancel2';
						});
						'step 1'
						if(result.control=='流失体力'){
							player.logSkill('gzbeilix');
							game.log(player,'跳过了判定阶段');
							player.skip('phaseJudge');
							player.loseHp();
						};
						if(result.control=='给予一名其他角色一张非基本牌'){
							game.log(player,'跳过了判定阶段');
							player.skip('phaseJudge');
							player.chooseTarget('请选择给予对象',function(card,player,target){
								return player!=target;
							},true).ai=function(target){
								return ai.get.attitude(player,target);
							};
						}else{
							event.finish();
						};
						'step 2'
						if(result.bool){
							player.line(result.targets[0]);
							player.logSkill('gzbeilix');
							event.target=result.targets[0];
							player.chooseCard('请选择给予的手牌',1,'h',function(card){
								return get.type(card)!='basic';
							},true).set('ai',function(card){
								return 1;
							});
						}else{
							event.finish();
						};
						'step 3'
						if(result.bool){
							player.$give(1,event.target);
							event.target.gain(result.cards[0],player);
						}else{
							event.finish();
						};
					},
				},
				 gzbaobianx:{
				    audio:'baobian',
					intro:{
						content:"cards",
					},
					marktext:'豹',
					enable:"phaseUse",
					usable:1,
					discard:false,
					filterCard:function(card){
						return card.name=='sha';
					},
					filterTarget:function (card,player,target){
						return target!=player;
					},
					content:function (){
						target.storage.gzbaobianx=cards[0];
						target.storage.gzbaobianx1=player;
						target.markSkill('gzbaobianx');
					},
					ai:{
						order:12,
						result:{
							target:-1,
						},
					},
				},
				"_gzbaobianx":{
					trigger:{
						player:"phaseEnd",
					},
					forced:true,
					filter:function (event,player){
						return player.storage.gzbaobianx!=undefined&&player.storage.gzbaobianx1!=undefined;
					},
					content:function(){
						var card=player.storage.gzbaobianx;
						var pl=player.storage.gzbaobianx1;
						pl.useCard(card,player);
						game.cardsDiscard(card);
						//ui.discardPile.appendChild(card);
						player.storage.gzbaobianx=undefined;
						player.storage.gzbaobianx1=undefined;
						player.unmarkSkill('gzbaobianx');
					},
				},
			gzpytianjiang:{
				audio:'pytianjiang',
				prompt:'将装备区里的一张牌移动至其他角色的装备区',
				enable:'phaseUse',
				position:'e',
				filter:function(event,player){
					return player.countCards('e')>0;
				},
				check:function(){return 1},
				filterCard:true,
				filterTarget:function(event,player,target){
					return target!=player&&target.canEquip(ui.selected.cards[0],true);
				},
				prepare:'give',
				discard:false,
				lose:false,
				content:function(){
					target.equip(cards[0]);
				},
				ai:{
					order:11,
					result:{
						target:function(player,target){
							if(ui.selected.cards.length){
								var card=ui.selected.cards[0];
								if(target.getEquip(card)||target.countCards('h',{subtype:get.subtype(card)})) return 0;
								return get.effect(target,card,player,target);
							}
							return 0;
						},
					},
				},
			},
			gzpyzhuren:{
				audio:'pyzhuren',
				enable:'phaseUse',
				usable:1,
				filterCard:true,
				selectCard:1,
				check:function(card){
　　　　　　　　　var player=_status.event.player;
　　　　　　　　　if(!player.getEquip(1)){
						if(!player.countCards('h','sha')) return 4-get.value(card);
						return 0;
					}
					return 2+card.number/2-get.value(card);
				},
				content:function(){
					var rand=get.number(cards[0])/13;
					if(get.isLuckyStar(player)) rand=1;
					if(Math.random()>rand){
						player.popup('杯具');
						game.log(player,'锻造失败');
						var card=get.cardPile(function(card){
							return card.name=='sha';
						});
						if(card) player.gain(card,'gain2');
					}
					else{
        var card=game.createCard(get.inpile('equip1').randomGet()); 
                     player.equip(card); 
                     player.$draw(card); 
                     game.delay(); 
					}
				},
				ai:{
					order:10,
					result:{
						player:1,
					},
				},
			},
            gzjinjiux:{
                trigger:{
                    source:"damageEnd",
                },
                audio:"ext:国战补充:1",
                usable:1,
                filter:function (event,player){
        return event.player.isAlive()&&(event.player.countCards('hej')>0||player.countCards('hej')>0)&&event.player!=player;
    },
                direct:true,
                content:function (){
        "step 0"
        event.num=player.countCards('hej')
        player.chooseControl('手牌','判定','装备','cancel2',function(){
            var player=_status.event.player;
            if(trigger.player.countCards('h')>player.countCards('h')){
                return '手牌';
            }
            if(trigger.player.countCards('e')>player.countCards('e')){
                return '装备';
            }
            if(trigger.player.countCards('j')<player.countCards('j')){
                return '判定';
            }
            return 'cancel2';
        }).set('prompt','请选择需要和'+get.translation(trigger.player)+'交换的区域或取消不操作')
        "step 1"
        if(result.control=='手牌'){
            player.swapHandcards(trigger.player);
            player.logSkill('gzjinjiux');
            event.goto(4);
        }
        if(result.control=='装备'){
            player.storage.gzjinjiux='e'
            player.logSkill('gzjinjiux');
        }
        if(result.control=='判定'){
            player.storage.gzjinjiux='j'
            player.logSkill('gzjinjiux');
        }
        if(result.control=='cancel2'){
            event.finish();
        }
        'step 2'
        event.cards=[player.getCards(player.storage.gzjinjiux),trigger.player.getCards(player.storage.gzjinjiux)];
        player.lose(event.cards[0],ui.special);
        trigger.player.lose(event.cards[1],ui.special);
        if(event.cards[0].length) player.$give(event.cards[0],trigger.player);
        if(event.cards[1].length) trigger.player.$give(event.cards[1],player);
        "step 3"
        if(player.storage.gzjinjiux=='j'){
            for(var i=0;i<event.cards[1].length;i++){
                if(event.cards[1][i].viewAs){
                    player.addJudge({name:event.cards[1][i].viewAs},[event.cards[1][i]]);
                }
                else{
                    player.addJudge(event.cards[1][i]);
                }                
            }
            for(var i=0;i<event.cards[0].length;i++){
                if(event.cards[0][i].viewAs){
                    trigger.player.addJudge({name:event.cards[0][i].viewAs},[event.cards[0][i]]);
                }
                else{
                    trigger.player.addJudge(event.cards[0][i]);
                }
            }
        }
        if(player.storage.gzjinjiux=='e'){
            for(var i=0;i<event.cards[1].length;i++){
                player.equip(event.cards[1][i]);
            }
            for(var i=0;i<event.cards[0].length;i++){
                trigger.player.equip(event.cards[0][i]);
            }
        }
        'step 4'
		if(event.num>player.countCards('hej')){
           player.draw();
			 player.mayChangeVice();
		}
		if(event.num<player.countCards('hej')) player.chooseToDiscard('he',true);
    },
            },
			gzliuhuanx:{
                audio:"ext:国战补充:1",
				trigger:{player:'phaseDrawBegin'},
				check:function(event,player){
					return game.hasPlayer(function(current){
						return get.attitude(player,current)<0&&current.countCards('h');
					});
				},
				content:function(){
					trigger.num--;
					player.addSkill('gzliuhuanx2');
				},
				ai:{
					threaten:1.8
				}
			},
			gzliuhuanx2:{
				trigger:{player:'phaseEnd'},
				direct:true,
				content:function(){
					"step 0"
					var num=Math.max(1,player.maxHp-player.hp);
					player.chooseTarget('瑠还：获得至多'+get.cnNumber(num)+'名角色的一张手牌',[1,num],function(card,player,target){
						return target.countCards('h')&&target!=player;
					}).ai=function(target){
						return -get.attitude(player,target);
					};
					player.removeSkill('gzliuhuanx2');
					"step 1"
					if(result.bool){
						event.targets=result.targets;
						player.logSkill('gzliuhuanx',result.targets);
					}
					else{
						event.finish();
					}
					"step 2"
					if(event.targets.length){
						player.gainMultiple(event.targets);
					}
					else{
						event.finish();
					}
					"step 3"
					game.delay();
				}
			},
			  gztuojianx:{
				audio:"longyin",
				trigger:{source:'dieAfter'},
				changeSeat:true,
				content:function(){
                "step 0" 
                player.chooseTarget('选择一名角色交换位置',function(card,player,target){ 
                   return player!=target&&player.next!=target; 
                }).ai=function(target){ 
					var att=get.attitude(player,target);
					if(target==player.previous&&att>0) return att;
					if(target==player.next&&att<0) return -att;
					var att2=get.attitude(player,player.next);
					if(target==player.next.next&&att<0&&att2<0) return -att-att2;
					  return 0;
                } 
                "step 1" 
                if(result.bool) { 
                    target1=result.targets[0]; 
					game.swapSeat(player,target1);
                    }
				},
			},
					gzsuishengx:{
						audio:"longyin",
						trigger:{target:'shaMiss'},
						filter:function(event,player){
							return get.distance(player,event.player,'attack')<=1;
						},
						direct:true,
						content:function(){
							'step 0'
							player.chooseToUse({name:'sha'},'随圣：是否对'+get.translation(trigger.player)+'使用一张杀？',trigger.player,-1).set('logSkill','gzsuishengx');							
						},
					},
gzmoshou:{
    audio:"ext:国战补充:2",  
    trigger:{
        target:"useCardToTarget",
        player:"addJudgeBefore",
    },
    forced:true,
    priority:15,
    check:function(event,player){
        return event.name=='addJudge';
    },
    filter:function(event,player){
        return event.card.name=='bingliang'||event.card.name=='lebu';
    },
    content:function(){
        if(trigger.name=='addJudge'){
            trigger.cancel();
        }
        else event.finish();
    },
    ai:{
        effect:{
            target:function(card,player,target,current){
                if(card.name=='bingliang'||card.name=='lebu') return 'zeroplayertarget';
            },
        },
    },
			},
			gzshuaiyanx:{
                audio:'shuaiyan',
                usable:1,
				trigger:{global:'recoverAfter'},
				filter:function(event,player){
					return event.player!=player&&_status.currentPhase!=player;
				},
				logTarget:'player',
				content:function(){
					"step 0"
					var att=get.attitude(trigger.player,player);
					var bool=0;
					if(att<0){
						if(trigger.player.countCards('e')==0&&trigger.player.countCards('h')>2) bool=1;
						else if(trigger.player.countCards('he')==0) bool=1;
					}
					else if(att==0&&trigger.player.countCards('he')==0){
						bool=1;
					}
					trigger.player.chooseControl(function(){
						return _status.event.bool;
					}).set('prompt','率言').set('bool',bool).set('choiceList',['令'+get.translation(player)+'摸一张牌','令'+get.translation(player)+'弃置你一张牌']);
					"step 1"
					if(result.control=='选项一'){
						player.draw();
						event.finish();
					}
					else if(trigger.player.countCards('he')){
						player.discardPlayerCard(trigger.player,true,'he');
					}
					else{
						event.finish();
					}
				},
				ai:{
					threaten:1.2
				}
			},
			gzmoshoux:{
				trigger:{global:'judgeBegin'},
				frequent:true,
                audio:'tianfu',
				filter:function(){
					return ui.cardPile.childNodes.length>1;
				},
				check:function(){
					return false;
				},
				content:function(){
					'step 0'
					var str='';
					if(trigger.card) str=get.translation(trigger.card.viewAs||trigger.card.name);
					else if(trigger.skill) str=get.translation(trigger.skill);
					else str=get.translation(trigger.parent.name);

					var cards=[ui.cardPile.childNodes[0],ui.cardPile.childNodes[1]];
					var att=get.attitude(player,trigger.player);
					var delta=trigger.judge(ui.cardPile.childNodes[1])-trigger.judge(ui.cardPile.childNodes[0]);
					player.chooseControl('调换顺序','cancel2',
					ui.create.dialog('天覆：'+get.translation(trigger.player)+'的'+str+'判定',cards,'hidden')).ai=function(){
						if(att*delta>0) return '调换顺序';
						else return 'cancel2';
					};
					'step 1'
					if(result.control=='调换顺序'){
						var card=ui.cardPile.firstChild;
						ui.cardPile.removeChild(card);
						ui.cardPile.insertBefore(card,ui.cardPile.firstChild.nextSibling);
						game.log(player,'调换了牌堆顶两张牌的顺序');
					}
				},
				ai:{
					expose:0.1,
					tag:{
						rejudge:0.5
					}
				}
			},
			gzshanquanx:{
				audio:'baonue2',
				trigger:{player:'phaseBegin'},
				direct:true,
				filter:function(event,player){
					return player.countCards('he');
				},
				content:function(){
					'step 0'
					player.chooseToDiscard('he',get.prompt('gzshanquanx')).set('ai',function(card){
						if(player.hp>=4||(player.hasSha()&&player.hasShan())){
							return 6-get.value(card);
						}
						if(player.hasSha()||player.hasShan()){
							return 3-get.value(card);
						}
						return 0;
					}).logSkill='gzshanquanx';
					'step 1'
					if(result.bool){
						var list=[];
						var list2=[];
						for(var i=0;i<6&&i<ui.cardPile.childElementCount;i++){
							list.push(ui.cardPile.childNodes[i]);
						}
						for(var i=0;i<list.length;i++){
							if(get.type(list[i])=='basic'){
								list[i].discard();
								list2.push(list[i]);
							}
						}
						player.showCards(get.translation(player)+'将'+get.cnNumber(list2.length)+'张牌移入弃牌堆',list2);
						if(list2.length>3){
							player.draw();
						}
					}
				}
			},
			gzxiongyix:{
                audio:"ext:国战补充:2",
				trigger:{source:'dieAfter'},
　　			forced:true,
				filter:function(event,player){
					return player.getHandcardLimit()>0; 
				},
                init:function (player){
                    player.storage.gzxiongyix=0;
                }, 
				content:function(){
                    player.storage.gzxiongyix++;
				},
				group:'gzxiongyix_discard',
				subSkill:{
	 			   discard:{
				        trigger:{player:'phaseDiscardBefore'},
				        audio:'jiuchi',
                        forced:true,
				        filter:function(event,player){
　　　　　　　　　　　　　　return player.getHistory('sourceDamage').length;
				        },
					    content:function(){
					        trigger.cancel();
						}
					},
				},
                mod:{
                    maxHandcard:function(player,num){
                       return num-player.storage.gzxiongyix;
                    },
                }, 
			},
			gzmoyingx:{
                audio:"ext:国战补充:2",  
				trigger:{player:'useCard'},
				frequent:true,
				filter:function(event,player){
					return _status.currentPhase==player&&player.countUsed()==1;
				},
				content:function(){
					var type=get.type(trigger.card);
					var card=get.cardPile2(function(card){
						return get.type(card)==type;
					});
					if(card){
						player.gain(card,'gain2','log');
					}
				},
				ai:{
					threaten:1.1
				}
			},
			gzjuanhuix:{
                audio:"ext:国战补充:2",
				trigger:{player:'loseEnd'},
				direct:true,
				filter:function(event,player){
					return _status.currentPhase!=player&&!player.hasSkill('gzjuanhuix2')&&player.countCards('he')>0;
				},
				content:function(){
					'step 0'
					player.addTempSkill('gzjuanhuix2');
					player.chooseToDiscard('he',get.prompt('gzjuanhuix'),function(card){
						return get.type(card)!='basic';
					}).set('ai',function(card){
						return 7-get.value(card);
					}).set('autodelay',0.5).logSkill='gzjuanhuix';
					'step 1'
					if(result.bool){
						player.draw(2);
					}
				},
				ai:{
					threaten:0.6
				}
			},
			gzjuanhuix2:{},
			gzzhenyinx:{
				trigger:{global:'judge'},
　　　　　　　　audio:'huanshi',
				usable:1,
				filter:function(event,player){
					return _status.currentPhase&&_status.currentPhase.countCards('h')>0;
				},
				logTarget:function(){
					return _status.currentPhase;
				},
				check:function(event,player){
					var target=_status.currentPhase;
					var judge=event.judge(event.player.judging[0]);
					var max=0;
					var hs=target.getCards('h',function(card){
						var mod2=game.checkMod(card,target,'unchanged','cardEnabled2',target);
						if(mod2!='unchanged') return mod2;
						var mod=game.checkMod(card,target,'unchanged','cardRespondable',target);
						if(mod!='unchanged') return mod;
						return true;
					});
					for(var i of hs){
						var num=event.judge(i)-judge;
						if(num>max) max=num;
					}
					var att=get.attitude(player,target);
					if(att>0) return max>0;
					if(att<0) return max<=0;
					return false;
				},
				content:function(){
					"step 0"
					if(!_status.currentPhase.countCards('h',function(card){
						var player=_status.currentPhase;
						var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
						if(mod2!='unchanged') return mod2;
						var mod=game.checkMod(card,player,'unchanged','cardRespondable',player);
						if(mod!='unchanged') return mod;
						return true;
					})){
						event.finish();
						return;
					};
					_status.currentPhase.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
					get.translation(trigger.player.judging[0])+'，请打出一张手牌进行改判','h',true,function(card){
						var player=_status.event.player;
						var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
						if(mod2!='unchanged') return mod2;
						var mod=game.checkMod(card,player,'unchanged','cardRespondable',player);
						if(mod!='unchanged') return mod;
						return true;
					}).set('ai',function(card){
						var trigger=_status.event.getTrigger();
						var player=_status.event.player;
						var judging=_status.event.judging;
						var result=trigger.judge(card)-trigger.judge(judging);
						var attitude=get.attitude(player,trigger.player);
						if(attitude==0||result==0) return 0;
						if(attitude>0){
							return result/Math.max(0.1,get.value(card));
						}
						else{
							return -result/Math.max(0.1,get.value(card));
						}
					}).set('judging',trigger.player.judging[0]);
					"step 1"
					if(result.bool){
						_status.currentPhase.respond(result.cards,'highlight').nopopup=true;
					}
					else{
						event.finish();
					}
					"step 2"
					if(result.bool){
						if(trigger.player.judging[0].clone){
							trigger.player.judging[0].clone.classList.remove('thrownhighlight');
							game.broadcast(function(card){
								if(card.clone){
									card.clone.classList.remove('thrownhighlight');
								}
							},trigger.player.judging[0]);
							game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
						}
						game.cardsDiscard(trigger.player.judging[0]);
						trigger.player.judging[0]=result.cards[0];
						trigger.orderingCards.addArray(result.cards);
						game.log(trigger.player,'的判定牌改为',result.cards[0]);
						game.delay(2);
					}
				},
				ai:{
					rejudge:true,
					tag:{
						rejudge:1,
					}
				}
			},
			gzlongyuex:{
				trigger:{global:'useCard'},
　　　　　　　　audio:'xinjujian',
				filter:function(event,player){
					return get.type(event.card,'trick')=='trick'&&event.player.getHistory('useCard').indexOf(event)==0;
				},
				logTarget:'player',
				check:function(event,player){
					return get.attitude(player,event.player)>0;
				},
				content:function(){
					trigger.player.draw();
				},
				ai:{
					expose:0.2,
				},
				global:'gzlongyuex_ai',
			},
			gzlongyuex_ai:{
				mod:{
					aiOrder:function(player,card,num){
						if(!player.getHistory('useCard').length&&get.type(card)=='trick'&&game.hasPlayer(function(current){
							return current.hasSkill('gzlongyuex')&&get.attitude(player,current)>=0;
						})) return num+6;
					},
				},
			},
			gzxionghuox:{
				trigger:{player:'shaBegin'},
				forced:true,
				popup:false,
                audio:'xinfu_xionghuo',
				filter:function(event,player){
					return event.target.isHealthy();
				},
				content:function(){
					trigger.directHit=true;
				}
			},
			gzshajuex:{
				audio:'xinfu_shajue',
				trigger:{source:'damageEnd'},
				filter:function(event){
					if(event._notrigger.contains(event.player)) return false;
					return event.card&&event.card.name=='sha'&&event.player.isAlive();
				},
				check:function(event,player){
					if(get.attitude(player,event.player)>=0) return false;
					if(player.hp>2) return true;
					if(player.hp<2) return false;
					return player.hp>=event.player.hp;
				},
				content:function(){
					'step 0'
					trigger.player.loseHp();
					'step 1'
					player.loseHp();
					'step 2'
					player.draw(2);
				}
			},
//繁星
             poison_in:{
                audio:"ext:国战补充:1",
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				forced:true,
				mark:true,
				init:function(player,skill){player.storage[skill]=false},
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.poison_in&&event.toShow.contains('gz_fanxing');
				},
    content:function(){ 
                    'step 0'      
                    player.awakenSkill('poison_in');
        var suitlist=['diamond','heart','spade','club']; 
        var numlist=[1,2,3,4,5,6,7,8,9,10,11,12,13]; 
        event.num1=game.countPlayer(function(current){
								return current.identity!='ye';
						});
        if(event.num1<=0) event.finish(); 
        for(var i=0;i<event.num1;i++) { 
            var card=game.createCard('du',suitlist.randomGet(),numlist.randomGet()); 
            ui.cardPile.insertBefore(card,ui.cardPile.firstChild); 
        } 
                    'step 1'
        var cards=[]; 
        for(i=0;i<ui.cardPile.childNodes.length;i++){ 
            var currentcard=ui.cardPile.childNodes[i]; 
            cards.push(currentcard); 
        } 
        cards.randomSort(); 
        for(var i=0;i<cards.length;i++){ 
            ui.cardPile.appendChild(cards[i]); 
        } 
        game.log(player,'将',event.num1,'张【毒】置入了牌堆中'); 
    },
    ai:{
        threaten:function (player,target){ 
            if(target.hp==1) return 0.2; 
        },
    },
            },
             poison_make:{
                audio:"ext:国战补充:2",
				forced:true,
	            trigger:{       
　　　　　　　　 player:"damageEnd",
                 source:"damageSource",
　　　　　　　　},
                content:function (){ 
                    'step 0'      
        var suitlist=['diamond','heart','spade','club']; 
        var numlist=[1,2,3,4,5,6,7,8,9,10,11,12,13]; 
        event.num1=Math.max(1,player.getDamagedHp());
        if(event.num1<=0) event.finish(); 
        for(var i=0;i<event.num1;i++) { 
            var card=game.createCard('du',suitlist.randomGet(),numlist.randomGet()); 
            ui.cardPile.insertBefore(card,ui.cardPile.firstChild); 
        } 
                    'step 1'
        var cards=[]; 
        for(i=0;i<ui.cardPile.childNodes.length;i++){ 
            var currentcard=ui.cardPile.childNodes[i]; 
            cards.push(currentcard); 
        } 
        cards.randomSort(); 
        for(var i=0;i<cards.length;i++){ 
            ui.cardPile.appendChild(cards[i]); 
        } 
        game.log(player,'将',event.num1,'张【毒】置入了牌堆中'); 
    },
    ai:{
        threaten:function (player,target){ 
            if(target.hp==1) return 0.2; 
        },
    },
            },
			poison_quenching:{
				trigger:{player:'duBegin'},
				forced:true,
                audio:"ext:国战补充:2",
				content:function(){
                    player.discoverCard();
				},
				ai:{
					threaten:1.2,
					nodu:true,
					usedu:true,
				},
				group:'poison_quenching_use',
				subSkill:{
					use:{
				trigger:{player:'phaseEnd'},
				direct:true,
				filter:function(event,player){
					return game.hasPlayer(function(current){
						return current!=player&&current.countCards('h');
					});
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('poison_quenching'),function(card,player,target){
						return target.countCards('h')>0&&target!=player;
					}).ai=function(target){
						if(target.hasSkillTag('nodu')) return get.attitude(player,target)*1.5;
						if(target.hasCard(function(card){
							return card.name!='du';
						})){
							return -get.attitude(player,target);
						}
						return -get.attitude(player,target)/5;
					}
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('poison_quenching',target);
						var card=target.getCards('h',function(card){
							return card.name!='du';
						}).randomGet();
						if(card){
							card.init([card.suit,card.number,'du']);
						}
						target.changeHujia();
						game.log(target,'将一张手牌转化为',{name:'du'});
					}
				},
				ai:{
					threaten:1.5
				}
					}
				}
			},
//一条咸鱼
			dalao_compare:{
                audio:"ext:国战补充:1",
				enable:"chooseCard",
				check:function(){
					return 20;
				},
				filter:function(event){
					return event.type=='compare'&&!event.directresult;
				},
				onCompare:function(player){
					return game.cardsGotoOrdering(get.bottomCards()).cards;
				},
				group:'dalao_compare_number',
				subSkill:{
	 			number:{
						trigger:{player:'compare',target:'compare'},
						filter:function(event,player){
							if(event.iwhile) return false;
							if(event.player==player){
								return get.type(event.card1)!='basic';//&&event.card1.vanishtag.contains('dalao_compare');
							}
							else{
								return get.type(event.card2)!='basic';//&&event.card2.vanishtag.contains('dalao_compare');
							}
						},
						silent:true,
						content:function(){
							game.log(player,'拼点牌点数视为','#yK');
							if(player==trigger.player){
								trigger.num1=13;
							}
							else{
								trigger.num2=13;
							}
						}
					},
				},
			},
			dalao_turnover:{
                audio:"ext:国战补充:2",
				trigger:{player:'phaseEnd'},
				direct:true,
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('dalao_turnover'),function(card,player,target){
						return player!=target&&target.countCards("he");
					}).ai=function(target){
						if(target.hasSkillTag('noturn')) return 0;
						var att=get.attitude(player,target);
						if(target.isTurnedOver()){
							if(att>0){
								return att+5;
							}
							return -1;
						}
						if(player.isTurnedOver()){
							return 5-att;
						}
						if(att<=-3){
							return -att;
						}
						return 0;
					};
					"step 1"
					if(result.bool){
                        var target=result.targets[0];
						player.logSkill('dalao_turnover',target);
                        player.gainPlayerCard(target,"he",true);
						player.turnOver();
						target.turnOver();
					}
                    else event.finish();
                    "step 2"
                    player.storage.dalao_turnover=result.cards[0];
                    player.addTempSkill("dalao_turnover_a",{player:'phaseBegin'});
				},
				group:'dalao_turnover_change',
				subSkill:{
                    a:{
                        mark:true,
                        charlotte:true,
                        intro:{
                            content:function (storage,player,skill){
                                var hc=player.storage.dalao_turnover;
                                var a="";
                                if(hc&&player==game.me)a="此计为<span class=yellowtext>"+get.translation(hc)+"</span><br>";
                                return a+="你已发动过【机先】";
                            },
                        },
                        init:function (player){
                            player.syncStorage("dalao_turnover_a");
                        },
                        mod:{
                            cardDiscardable:function (card,player){
                                if(card==player.storage.dalao_turnover)return false;
                            },
                            "cardEnabled2":function (card,player){
                                if(card==player.storage.dalao_turnover)return false;
                            },
                            cardUsable:function (card,player){
                                if(card==player.storage.dalao_turnover)return false;
                            },
                            cardRespondable:function (card,player){
                                if(card==player.storage.dalao_turnover)return false;
                            },
                            cardSavable:function (card,player){
                                if(card==player.storage.dalao_turnover)return false;
                            },
                        },
                        sub:true,
                    },
					change:{
						trigger:{player:'turnOverEnd'},
						direct:true,
						filter:function(event,player){
							return !player.isTurnedOver();
						},
						content:function(){
						  player.mayChangeVice(true);
						},
                        sub:true,
					}
				}
			},
			dalao_dying:{
                audio:"ext:国战补充:1",
                trigger:{
　　　　　　　　　 player:'dying',
　　　　　　　　},
                filter:function(event,player){
                  return event.source&&event.source.isIn()&&event.source!=player;
               },
               check:function(event,player){
                  return get.attitude(player,event.source)<=0;
               },
               logTarget:"source",
		      "prompt2":function (event,player){
			      return '是否与'+get.translation(event.source)+'拼点？若你赢，你复制其体力值与一项技能，其失去一点体力。';
		       },
               content:function(){
                  "step 0" 
                   player.chooseToCompare(trigger.source);
                  "step 1" 
                   if(result.bool){ 
                     event.num=trigger.source.hp-player.hp; 
                     player.changeHp(event.num);
                     trigger.source.loseHp(); 
                   } 
                   else{ 
                     event.finish(); 
                   } 
                  "step 2" 
					var list=trigger.source.getStockSkills('仲村由理','天下第一').filter(function(skill){
						var info=get.info(skill);
						return info&&!info.juexingji&&!info.hiddenSkill&&!info.unique&&!info.mainSkill&&!info.viceSkill&&!info.charlotte&&!info.limited;
					});
					if(list.length==1) event._result={control:list[0]};
					else player.chooseControl(list).set('prompt','选择复制一个技能').set('forceDie',true).set('ai',function(){
						return list.randomGet();
					});
					'step 3'
					player.addSkillLog(result.control);
					game.broadcastAll(function(skill){
						var list=[skill];game.expandSkills(list);
						for(var i of list){
							var info=lib.skill[i];
							if(!info) continue;
						}
					},result.control);
                },
            },

//极光
			aurora_jizhi:{
                audio:"xinfu_wuniang",
				global:'aurora_jizhi2',
				trigger:{global:'phaseDrawBegin'},
				forced:true,
				logTarget:'player',
				filter:function(event,player){
					return event.player!=player&&event.player.isFriendOf(player);
				},
				content:function(){trigger.num++},
			},
			aurora_jizhi2:{
				mod:{
					globalFrom:function(from,to,num){
						return num-game.countPlayer(function(current){
							return current!=from&&current.isFriendOf(from)&&current.hasSkill('aurora_jizhi');
						});
					},
				},
			},
			aurora_kazhan:{
                audio:"qingcheng",
　　　　　　　　usable:1,
				enable:'phaseUse',
				filter:function(event,player){
					return player.countCards('h',{type:'equip'})>0;
				},
				filterCard:function(card){
					return get.type(card)=='equip';
				},
				check:function(card){
					var player=_status.currentPhase;
					if(player.countCards('he',{subtype:get.subtype(card)})>1){
						return 11-get.equipValue(card);
					}
					return 6-get.value(card);
				},
				filterTarget:function(card,player,target){
					if(target.isMin()) return false;
					var type=get.subtype(card);
					return player!=target&&target.isEmpty(type)&&(target.hasMainCharacter()||target.hasViceCharacter());
				},
				content:function(){
					'step 0'
					target.equip(cards[0]);
					'step 1'
					if(!target.hasViceCharacter()){
						event._result={control:'主将'}
					}
					else if(!target.hasMainCharacter()){
						event._result={control:'副将'}
					}
					else{
						player.chooseControl('主将','副将',function(){
							return _status.event.choice;
						}).set('prompt','令'+get.translation(target)+'失去一张武将牌').set('choice',function(){
						var rank=get.guozhanRank(player.name1,player)-get.guozhanRank(player.name2,player);
						if(rank==0) rank=Math.random()>0.5?1:-1;
						return rank>0?'主将':'副将';
						}());
					}
					'step 2'
					if(result.control=='主将'){
						target.removeCharacter(0);
                        target.recover();
						game.log(target,'失去了主将');
					}
					else{
						target.removeCharacter(1);
                        target.recover();
						game.log(target,'失去了副将');
					}
					player.line(target,'green');
				},
				discard:false,
				prepare:function(cards,player,targets){
					player.$give(cards,targets[0],false);
				},
				ai:{
					order:10,
					result:{
　　　　　　　　　　　　player:1,
						target:-1,
					},
					threaten:1.9
				}
			},
			aurora_suyin:{
				trigger:{player:'judgeBegin'},
				forced:true,
                audio:"jizhi",
				charlotte:true,
				silent:true,
				filter:function(event,player){
					return !event.directresult;
				},
				content:function(){
					var tempcard=false,temp=-Infinity;
					for(var i=0;i<ui.cardPile.childElementCount;i++){
						var card=ui.cardPile.childNodes[i];
						var temp2=trigger.judge(card);
						if(temp2>temp){
							tempcard=card;
							temp=temp2;
						}
					}
					if(tempcard) trigger.directresult=tempcard;
				},
				ai:{luckyStar:true},
			},

//苏婆玛里奥
            supo_zhengzhuang:{
                audio:"ext:国战补充:1",
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				forced:true,
				mark:true,
				init:function(player,skill){player.storage[skill]=false},
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.supo_zhengzhuang&&event.toShow.contains('gz_spmaliao');
				},
				content:function(){
                    'step 0'      
                    player.awakenSkill('supo_zhengzhuang');
                    'step 1'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('supo_zhengzhuang')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,'gz_sp_diy_yuri');
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init('gz_sp_diy_yuri',player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
					player.removeMark('yinyang_mark',1);
                    player.addMark('yexinjia_mark'); 
				    player.update();
                    'step 2'
	player.useCard(game.createCard('supo_equip1','spade',1),player);
	player.useCard(game.createCard('supo_equip2','spade',10),player);
	player.useCard(game.createCard('supo_equip5','diamond',13),player);
	player.useCard(game.createCard('supo_equip3','diamond',7),player);
	player.useCard(game.createCard('supo_equip4','diamond',4),player);
				},
				group:'spsz_destroy',
         },
			spsz_destroy:{
				trigger:{global:['loseAfter','cardsDiscardAfter']},
				forced:true,
				filter:function(event,player){
					var cs=event.cards;
					for(var i=0;i<cs.length;i++){
						if(cs[i].name.indexOf('supo_')==0&&get.position(cs[i],true)=='d') return true;
					}
					return false;
				},
				forceDie:true,
				content:function(){
					if(!_status.supo) _status.supo={};
					var list=[];
					var cs=trigger.cards;
					for(var i=0;i<cs.length;i++){
						if(cs[i].name.indexOf('supo_')==0&&get.position(cs[i],true)=='d'){
							_status.supo[cs[i].name]=false;
							list.push(cs[i]);
						}
					}
					game.log(list,'已被移出游戏');
					game.cardsGotoSpecial(list);
				},
			},
			supo_sizhi:{
                audio:"ext:国战补充:2",
				group:['supo_jingce','supo_jizhi','supo_zhiheng'],
				count:function(player){
					var list=[];
					player.countCards('e',function(card){
						list.add(get.suit(card,player));
					});
					return list.length;
				},
			},
			supo_jingce:{
				audio:'jingce',
				trigger:{player:['phaseUseEnd','phaseJieshuBegin']},
				filter:function(event,player){
					var num=lib.skill.supo_sizhi.count(player);
					if(!num||(event.name=='phaseUse')==(num>3)) return false;
					return player.getHistory('useCard',function(evt){
						return event.name!='phaseUse'||evt.getParent('phaseUse')==event;
					}).length>=player.hp;
				},
				frequent:true,
				content:function(){
					player.draw(2);
				},
			},
			supo_jizhi:{
				audio:"jizhi",
				trigger:{
					player:"useCardToPlayered",
				},
				check:function (event,player){
					return get.attitude(player,event.target)<0;
				},
				group:'jizhi',
				filter:function(event,player){
				  if(event.targets&&event.targets.length>1) return false;
	              return get.type(event.card)=='trick'&&lib.skill.supo_sizhi.count(player)>1;
				},
				logTarget:"target",
				content:function (){
					"step 0" 
	                trigger.target.addTempSkill('gzjizhix_disable');
					var skills=trigger.target.getSkills(null,false);
					for(var i=0;i<skills.length;i++){
						if(get.info(skills[i]).charlotte) skills.splice(i--,1);
					}
					if(skills.length){
	trigger.target.storage.gzjizhix_disable.push(skills.randomGet());
	trigger.target.disableSkill('gzjizhix_disable',trigger.target.storage.gzjizhix_disable);
					}
				},
			},
			supo_zhiheng:{
				enable:'phaseUse',
				usable:1,
				audio:'zhiheng',
				position:'he',
				filter:function(event,player){
					return lib.skill.supo_sizhi.count(player)>2;
				},
				prompt:function(){
					var str='弃置任意张牌并摸等量的牌';
					if(lib.skill.supo_sizhi.count(_status.event.player)>3) str+='，若弃置了所有手牌则多摸一张牌。';
					return str;
				},
				filterCard:lib.filter.cardDiscardable,
				discard:false,
				lose:false,
				delay:false,
				selectCard:function(){
					var player=_status.event.player;
					var range1=[1,player.maxHp];
					return range1;
				},
				check:function(card){
					var player=_status.event.player;
					if(get.position(card)=='h'){
						return 8-get.value(card);
					}
					return 6-get.value(card)
				},
				content:function(){
					'step 0'
					player.discard(cards);
					event.num=1;
					var hs=player.getCards('h');
					if(!hs.length||lib.skill.supo_sizhi.count(player)<4) event.num=0;
					else for(var i=0;i<hs.length;i++){
						if(!cards.contains(hs[i])){
							event.num=0;break;
						}
					}
					'step 1'
					player.draw(event.num+cards.length);
				},
				ai:{
					order:1,
					result:{
						player:1
					},
				},
			},
			supo_chengzhi:{
                audio:"ext:国战补充:1",
				trigger:{player:['phaseZhunbeiBegin','phaseJieshuBegin']},
				frequent:true,
				content:function(){
					"step 0"
					if(player.isUnderControl()){
						game.modeSwapPlayer(player);
					}
					var num=Math.max(player.countCards('e'),1);
					var cards=get.cards(num);
					event.cards=cards;
					var switchToAuto=function(){
						_status.imchoosing=false;
						if(event.dialog) event.dialog.close();
						if(event.control) event.control.close();
						var top=[];
						var judges=player.getCards('j');
						var stopped=false;
						if(!player.hasWuxie()){
							for(var i=0;i<judges.length;i++){
								var judge=get.judge(judges[i]);
								cards.sort(function(a,b){
									return judge(b)-judge(a);
								});
								if(judge(cards[0])<0){
									stopped=true;break;
								}
								else{
									top.unshift(cards.shift());
								}
							}
						}
						var bottom;
						if(!stopped){
							cards.sort(function(a,b){
								return get.value(b,player)-get.value(a,player);
							});
							while(cards.length){
								if(get.value(cards[0],player)<=5) break;
								top.unshift(cards.shift());
							}
						}
						bottom=cards;
						for(var i=0;i<top.length;i++){
							ui.cardPile.insertBefore(top[i],ui.cardPile.firstChild);
						}
						for(i=0;i<bottom.length;i++){
							ui.cardPile.appendChild(bottom[i]);
						}
						player.popup(get.cnNumber(top.length)+'上'+get.cnNumber(bottom.length)+'下');
						game.log(player,'将'+get.cnNumber(top.length)+'张牌置于牌堆顶');
						game.delay(2);
					};
					var chooseButton=function(online,player,cards){
						var event=_status.event;
						player=player||event.player;
						cards=cards||event.cards;
						event.top=[];
						event.bottom=[];
						event.status=true;
						event.dialog=ui.create.dialog('按顺序选择置于牌堆顶的牌（先选择的在上）',cards);
						for(var i=0;i<event.dialog.buttons.length;i++){
							event.dialog.buttons[i].classList.add('pointerdiv');
						}
						event.switchToAuto=function(){
							event._result='ai';
							event.dialog.close();
							event.control.close();
							_status.imchoosing=false;
						},
						event.control=ui.create.control('ok','pileTop','pileBottom',function(link){
							var event=_status.event;
							if(link=='ok'){
								if(online){
									event._result={
										top:[],
										bottom:[]
									}
									for(var i=0;i<event.top.length;i++){
										event._result.top.push(event.top[i].link);
									}
									for(var i=0;i<event.bottom.length;i++){
										event._result.bottom.push(event.bottom[i].link);
									}
								}
								else{
									var i;
									for(i=0;i<event.top.length;i++){
										ui.cardPile.insertBefore(event.top[i].link,ui.cardPile.firstChild);
									}
									for(i=0;i<event.bottom.length;i++){
										ui.cardPile.appendChild(event.bottom[i].link);
									}
									for(i=0;i<event.dialog.buttons.length;i++){
										if(event.dialog.buttons[i].classList.contains('glow')==false&&
											event.dialog.buttons[i].classList.contains('target')==false)
										ui.cardPile.appendChild(event.dialog.buttons[i].link);
									}
									player.popup(get.cnNumber(event.top.length)+'上'+get.cnNumber(event.cards.length-event.top.length)+'下');
									game.log(player,'将'+get.cnNumber(event.top.length)+'张牌置于牌堆顶');
								}
								event.dialog.close();
								event.control.close();
								game.resume();
								_status.imchoosing=false;
							}
							else if(link=='pileTop'){
								event.status=true;
								event.dialog.content.childNodes[0].innerHTML='按顺序选择置于牌堆顶的牌';
							}
							else{
								event.status=false;
								event.dialog.content.childNodes[0].innerHTML='按顺序选择置于牌堆底的牌';
							}
						})
						for(var i=0;i<event.dialog.buttons.length;i++){
							event.dialog.buttons[i].classList.add('selectable');
						}
						event.custom.replace.button=function(link){
							var event=_status.event;
							if(link.classList.contains('target')){
								link.classList.remove('target');
								event.top.remove(link);
							}
							else if(link.classList.contains('glow')){
								link.classList.remove('glow');
								event.bottom.remove(link);
							}
							else if(event.status){
								link.classList.add('target');
								event.top.unshift(link);
							}
							else{
								link.classList.add('glow');
								event.bottom.push(link);
							}
						}
						event.custom.replace.window=function(){
							for(var i=0;i<_status.event.dialog.buttons.length;i++){
								_status.event.dialog.buttons[i].classList.remove('target');
								_status.event.dialog.buttons[i].classList.remove('glow');
								_status.event.top.length=0;
								_status.event.bottom.length=0;
							}
						}
						game.pause();
						game.countChoose();
					};
					event.switchToAuto=switchToAuto;

					if(event.isMine()){
						chooseButton();
						event.finish();
					}
					else if(event.isOnline()){
						event.player.send(chooseButton,true,event.player,event.cards);
						event.player.wait();
						game.pause();
					}
					else{
						event.switchToAuto();
						event.finish();
					}
					"step 1"
					if(event.result=='ai'||!event.result){
						event.switchToAuto();
					}
					else{
						var top=event.result.top||[];
						var bottom=event.result.bottom||[];
						for(var i=0;i<top.length;i++){
							ui.cardPile.insertBefore(top[i],ui.cardPile.firstChild);
						}
						for(i=0;i<bottom.length;i++){
							ui.cardPile.appendChild(bottom[i]);
						}
						for(i=0;i<event.cards.length;i++){
							if(!top.contains(event.cards[i])&&!bottom.contains(event.cards[i])){
								ui.cardPile.appendChild(event.cards[i]);
							}
						}
						player.popup(get.cnNumber(top.length)+'上'+get.cnNumber(event.cards.length-top.length)+'下');
						game.log(player,'将'+get.cnNumber(top.length)+'张牌置于牌堆顶');
						game.updateRoundNumber();
						game.delay(2);
					}
				},
				ai:{
					threaten:1.2
				}
			},


//诸葛小均
			gzwyqinggeng:{
				trigger:{global:'phaseUseEnd'},
                audio:"tuntian",
				filter:function(event,player){
					return event.player.isFriendOf(player)&&event.player.countCards('he')>0;
				},
                frequent:true,
				content:function(){
					'step 0'
					if(!trigger.player.countCards('he')) event.finish();
					else trigger.player.chooseCard('he','选择一张牌置于'+get.translation(player)+'的武将牌上作为「亩」');
					'step 1'
					trigger.player.lose(result.cards,ui.special,'visible','toStorage');
					trigger.player.$give(result.cards,player,false);
					game.log(trigger.player,'选择了',result.cards);
					player.markAuto('gzwyqinggeng',result.cards);
　　　　　　　　　　trigger.player.draw();
				},
				intro:{
					content:'cards',
					onunmark:'throw',
				},
			},
					gzwyyudu:{
                        audio:"zaoxian",
				        trigger:{player:'useCard2'},
　　　　　　　　　　　　usable:1,
				        direct:true,
						filter:function(event,player){
							if(!event.targets||event.targets.length!=1) return false;
							var info=get.info(event.card);
							if(info.multitarget) return false;
							if(info.allowMultiple==false) return false;
							if(info.type=='equip') return false;
							if(info.type=='delay') return false;
							return player.getStorage('gzwyqinggeng').length>0;					        },
						content:function(){
							'step 0'
							player.chooseTarget(get.prompt2('gzwyyudu'),[1,player.getStorage('gzwyqinggeng').length],function(card,player,target){
								var trigger=_status.event.getTrigger();
								return !trigger.targets.contains(target)&&lib.filter.targetEnabled2(trigger.card,player,target);
							}).set('ai',function(target){
								var player=_status.event.player;
								return get.effect(target,_status.event.getTrigger().card,player,player);
							});
							'step 1'
							if(result.bool){
								if(!event.isMine()&&!_status.connectMode) game.delayx();
								event.targets=result.targets.slice(0);
							}
							else{
								event.finish();
							}
							'step 2'
							player.logSkill('gzwyyudu',event.targets);
							trigger.targets.addArray(event.targets);
							'step 3'
					player.chooseCardButton(player.storage.gzwyqinggeng,1,true,'请选择需要弃置的“亩”',true).ai=function(button){
						return 6-get.value(button.link);
					};
					'step 4'
				    var cards=result.links;
				    for(var i=0;i<cards.length;i++){
					   player.storage.gzwyqinggeng.remove(cards[i]);
					};
				    player.syncStorage('gzwyqinggeng');
					player.$throw(cards);
					}
			},
			gzwyjutian:{
                audio:"ext:国战补充:1",
                forced:true,
				trigger:{player:'phaseUseBegin'},
                forced:true,
				filter:function(event,player){
					return player.getStorage('gzwyqinggeng').length==0;
				},
				content:function(){
                    player.addTempSkill('rexianzhen3');
				},
				mod:{
				   maxHandcard:function(player,num){
						return num+Math.floor(player.getStorage('gzwyqinggeng').length/2);
				   },
				},
			},

//染柒
            gzganhuaiy:{
               usable:1,
               audio:"ext:国战补充:2",
               trigger:{
                    global:"gainAfter",
               },
               filter:function(event,player){
                   if(!event.player.isPhaseUsing()) return false;
                   if(!event.player.isFriendOf(player)) return false;
                   return event.getParent().name=='draw'&&event.getParent(2).name!='gzganhuaiy';
　　　　　　　　},
                content:function (){
　　　　　　　　　　trigger.player.draw('nodelay');
                    if(trigger.player!=player){
                         player.draw()
　　　　　　　　　　}
                 },
                 ai:{
                     expose:0.1,
                 },
            },
			gzyirany:{
                audio:"wanlan",
				limited:true,
				enable:'phaseUse',
				filter:function(event,player){
					return !player.storage.gzyirany;
				},
				derivation:'xinfu_zhanji',
				content:function(){
					player.storage.gzyirany=true;
					player.awakenSkill('gzyirany');
                    player.removeSkill('gzlingquany'); 
                    player.removeSkill('gzyirany'); 
                    player.addSkill('xinfu_zhanji'); 
					player.gainMaxHp(true);
					player.recover();
				},
				skillAnimation:'epic',
				animationColor:'soil',
				ai:{
					order:2,
					threaten:1.4,
					result:{
                        player:function(player){
                           if(!player.hasFriend()) return 7;
                           if(player.hp==1) return 9;
                           return 0;
                        },
					}
				},
			},
			gzxunjiy:{
                audio:"ext:国战补充:2",
				trigger:{
                    player:["gainAfter","discardAfter"],
                },
                filter:function (event,player){
                    return event.getParent(2).name!='gzxunjiy';
                },
                forced:true,
                content:function (){
					if(trigger.name=='gain') player.draw();
					else player.chooseToDiscard('he',true);
                },
			},
            gzlingquany:{
                audio:"ext:国战补充:2",
                round:1,
                trigger:{
                    player:"recoverAfter",
                },
                filter:function(event,player){
                    return game.countPlayer(function(current){
						return current.isDamaged();
					});
                },
                content:function(){
                   "step 0"
                   player.chooseTarget([1,player.maxHp],get.prompt('gzlingquany'),function(card,player,target){
                           return target.isDamaged();
                       }).set('ai',function(target){
                           return get.attitude(_status.event.player,target);
                   });
                   "step 1"
                   if(result.bool){
                      player.logSkill('gzlingquany');
                      event.targets=result.targets;
                   }
                   else{
                      event.finish();
                   }
                   "step 2"
                   if(event.targets&&event.targets.length){
					  var target=event.targets.shift();
					  target.recover();
					  event.redo();
                   }
                },
                ai:{
                    expose:0.1,
                },
            },

//玄德
			gzheizheny:{
			   group:["gzheizheny1","gzheizheny2"],
			   nobracket:true,
			},
			gzheizheny2:{
			     nobracket:true,
                 audio:"ext:国战补充:1",
				 trigger:{player:'phaseEnd'},
				 filter:function(event,player,name){
					 return game.hasPlayer(function(current){
						 return current.hasMark('gzheizheny_mark');
					 })>=Math.max(1,player.hp);
				  },
				  content:function(){
					'step 0'
	player.chooseTarget(get.prompt2('gzheizheny'),function(card,player,target){
						return target.hasMark('gzheizheny_mark');
					}).set('ai',function(target){
						var player=_status.event.player;
						return get.attitude(player,target);
					})
				    'step 1'
					if(result.bool){
                        result.targets[0].damage();
					}
					else{
						event.finish();
					}
					'step 2'
					var list=game.filterPlayer();
					for(var i=0;i<list.length;i++){
					if(list[i].hasMark('gzheizheny_mark')){
					list[i].removeMark('gzheizheny_mark');
					}
				  }
			   },
			},
			gzheizheny1:{
                audio:"ext:国战补充:1",
			    nobracket:true,
				trigger:{player:'phaseBefore'},
				filter:function(event,player,name){
					return game.hasPlayer(function(current){
						return current!=player&&!current.hasMark('gzheizheny_mark');
					});
				},
				content:function(){
					'step 0'
					var targets=game.filterPlayer(function(current){
						return current!=player&&!current.hasMark('gzheizheny_mark');
					});
					if(targets.length==1){
						event._result={bool:true,targets:targets};
					}
					else{
						var next=player.chooseTarget(get.prompt('gzheizheny_mark'),'令一名'+'其他角色获得“黑棋”',function(card,player,target){
							return target!=player&&!target.hasMark('gzheizheny_mark');
						}).set('ai',function(target){
							return get.threaten(target);
						});
					}
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('gzheizheny',target);
						target.addMark('gzheizheny_mark');
						game.delayx();
					}
				},
				ai:{
					threaten:1.4
				}
			},
			gzbairuy_mark:{
				mark:true,
				intro:{
					content:"咕咕咕的白棋放在了你的头上。",
				},
			},
			gzheizheny_mark:{
				mark:true,
				intro:{
					content:"咕咕咕的黑棋放在了你的头上",
				},
			},
			gzbairuy:{
				group:["gzbairuy1","gzbairuy2"],
			    nobracket:true,
			},
			gzbairuy1:{
                audio:"ext:国战补充:1",
			    nobracket:true,
                usable:1,
				enable:'phaseUse',
				filter:function(event,player,name){
					return game.hasPlayer(function(current){
						return current!=player&&!current.hasMark('gzbairuy_mark');
					});
				},
				filterTarget:true,
				check:function (event,player){
					return game.countPlayer(function(current){return get.attitude(player,current)<=0});
				},
				content:function(){
				   target.addMark('gzbairuy_mark');
				},
				ai:{
					order:2,
					threaten:1.4,
					result:{
                        target:-1,
						player:function(player,target){
                           if(target.countCards('h')>=player.countCards('h')) return 4;
                           return 0;
                        },
					}
				},
			},
　　　　　　gzbairuy2:{
				trigger:{global:'phaseDrawBegin'},
	            forced:true,
                audio:"ext:国战补充:1",
				filter:function(event,player){
					return event.player.countCards('h')>=player.countCards('h')&&event.player.hasMark('gzbairuy_mark');
				},
	            content:function(){
					'step 0'
                   trigger.num--;
					'step 1'
　　　　　　　　　　trigger.player.addTempSkill('gzbairuy3');
　　　　　　　　　　trigger.player.addTempSkill('gzbairuy4');
               },
　　　　　　},
			gzbairuy3:{
				mod:{
					maxHandcard:function(player,num){
						return num-1;
					},
				},
				intro:{content:'手牌上限-1'},
			},
			gzbairuy4:{
				trigger:{player:'phaseEnd'},
				forced:true,
				content:function(){
					'step 0'
			        player.removeMark('gzbairuy_mark');
				}
			},
			gzshenshouy:{
                audio:"ext:国战补充:1",
				limited:true,
			    nobracket:true,
				init:function (player){
					player.storage.gzshenshouy=false;
				},
				intro:{
					content:"limited",
				},
				unique:true,
				mark:true,
				skillAnimation:true,
				animationColor:'metal',
				enable:'phaseUse',
				filter:function (event,player){
					return !player.storage.gzshenshouy&&game.hasPlayer(function(current){
						return current.hasMark('gzbairuy_mark');
					})>0&&game.hasPlayer(function(current){
						return current.hasMark('gzheizheny_mark');
					})>0;
				},
				filterTarget:true,
				changeTarget:function(player,targets){
					game.filterPlayer(function(current){
						return get.distance(targets[0],current,'pure')==1;
					},targets);
				},
				check:function (event,player){
					var num=game.countPlayer(function(current){return get.attitude(player,current)<=0});
					return num>3;
				},
				content:function(){
					'step 0'
					player.storage.gzshenshouy=true;
					player.awakenSkill('gzshenshouy');
					'step 1'
　　　　　　　　target.addTempSkill('gzshenshouy_debuff',{player:'phaseAfter'});
					'step 2'
					var list=game.filterPlayer();
					for(var i=0;i<list.length;i++){
						if(list[i].hasMark('gzheizheny_mark')||list[i].hasMark('gzbairuy_mark')){
							list[i].removeMark('gzheizheny_mark');
							list[i].removeMark('gzbairuy_mark');
							player.line(list[i],'green');
						}
					}
				},
				skillAnimation:'epic',
				animationColor:'soil',
				ai:{
					order:2,
					threaten:1.4,
					result:{
                        target:-1,
                        player:function(player){
                           if(player.hp==1) return 4;
                           return 0;
                        },
					}
				},
			},
　　　　　　gzshenshouy_debuff:{
			    mod:{
					cardEnabled:function(card){if(card.name=='sha') return false}
				},
	            trigger:{
		           player:"phaseDrawBegin",
	            },
			    unique:true,
	            forced:true,
	            content:function(){
                   trigger.untrigger();
                   trigger.finish();
               },
　　　　　　},

//辉烬贺流年
			gzdaorany:{
			   nobracket:true,
	           forced:true,
			   audio:"jiang",
	group:["gzdaorany_spade","gzdaorany_heart","gzdaorany_club","gzdaorany_diamond"],
			},
　　　　　　gzdaorany_spade:{
			   nobracket:true,
 	           trigger:{
		          player:"useCardAfter",
	           },
	           init:function (player){
                  player.storage.gzdaorany_spade=0;
               },
			   unique:true,
	           forced:true,
	           intro:{
		          content:function (storage){
			         return '已使用：'+storage+'张♠牌';
		          },
	           },
			   filter:function(event){
					return get.suit(event.card)=='spade';
				},
	           content:function(){
		          "step 0"
		          player.storage.gzdaorany_spade++;
		          "step 1"
		          if(player.storage.gzdaorany_spade%2==0){
　　　　　　　　　　　player.chooseUseTarget({name:'guohe',isCard:true},true);
		          }
		         player.markSkill('gzdaorany_spade');
                 },
　　　　　　},
　　　　　　gzdaorany_heart:{
 	           trigger:{
		          player:"useCardAfter",
	           },
			   nobracket:true,
	           init:function (player){
                  player.storage.gzdaorany_heart=0;
               },
			   unique:true,
	           forced:true,
	           intro:{
		          content:function (storage){
			         return '已使用：'+storage+'张♥牌';
		          },
	           },
				filter:function(event){
					return get.suit(event.card)=='heart';
				},
	           content:function(){
		          "step 0"
		          player.storage.gzdaorany_heart++;
		          "step 1"
		          if(player.storage.gzdaorany_heart%2==0){
　　　　　　　　　　  player.useCard({name:'tao',isCard:true},player);
		          }
		         player.markSkill('gzdaorany_heart');
                 },
　　　　　　},
　　　　　　gzdaorany_club:{
 	           trigger:{
		          player:"useCardAfter",
	           },
			   nobracket:true,
	           init:function (player){
                  player.storage.gzdaorany_club=0;
               },
			   unique:true,
	           forced:true,
	           intro:{
		          content:function (storage){
			         return '已使用：'+storage+'张♣牌';
		          },
	           },
				filter:function(event){
					return get.suit(event.card)=='club';
				},
	           content:function(){
		          "step 0"
		          player.storage.gzdaorany_club++;
		          "step 1"
		          if(player.storage.gzdaorany_club%2==0){
　　　　　　　　　　　player.chooseUseTarget({name:'tiesuo',isCard:true},true);
		          }
		         player.markSkill('gzdaorany_club');
                 },
　　　　　　},
　　　　　　gzdaorany_diamond:{
 	           trigger:{
		          player:"useCardAfter",
	           },
	           init:function (player){
                  player.storage.gzdaorany_diamond=0;
               },
			   nobracket:true,
			   unique:true,
	           forced:true,
	           intro:{
		          content:function (storage){
			         return '已使用：'+storage+'张♦牌';
		          },
	           },
               filter:function (event,player){ 
                   return get.suit(event.card)=='diamond'; 
               },
	           content:function(){
		          "step 0"
		          player.storage.gzdaorany_diamond++;
		          "step 1"
		          if(player.storage.gzdaorany_diamond%2==0){
　　　　　　　　　　player.chooseUseTarget({name:'huogong',isCard:true},true);
		          }
		         player.markSkill('gzdaorany_diamond');
                 },
　　　　　　},
//Esperanto
			gzshunshiy:{
                audio:"ext:国战补充:2",
　　　　　　　　frequent:true,
                trigger:{
                    global:"die",
                },
				filter:function(event,player){
					return event.parent.name=='damage'&&event.parent.source&&event.parent.source.isFriendOf(player);
				},
                content:function(){
                   "step 0"
					var list=[];
					var skills=player.getOriginalSkills();
					for(var i=0;i<skills.length;i++){
						if(lib.skill[skills[i]].limited&&player.awakenedSkills.contains(skills[i])){
							list.push(skills[i]);
						}
					}
　　　　　　　　　　if(list.length>0){
						player.chooseControl(list).set('prompt','选择一个限定技在回合结束后重置之');
					}
					else{
						event.finish();
					}
					'step 1'
					player.storage.gzshunshiy_restore=result.control;
					player.addTempSkill('gzshunshiy_restore','phaseZhunbeiBegin');
                },
				subSkill:{
					restore:{
						trigger:{global:'phaseAfter'},
						silent:true,
						content:function(){
							player.restoreSkill(player.storage.gzshunshiy_restore);
						}
					}
				},
            },
			gzjimouy:{
				skillAnimation:true,
				unique:true,
				mark:true,
				init:function(player){
					player.storage.gzjimouy=false;
				},
				enable:'phaseUse',
				filter:function(event,player){
					return !player.storage.gzjimouy
				},
				intro:{
					content:'limited'
				},
                filterTarget:true,
                audio:"ext:国战补充:2",
				content:function(){
					"step 0"
					player.awakenSkill('gzjimouy');
					player.storage.gzjimouy=true;
					event.targets=game.filterPlayer();
					event.targets.remove(player);
					event.targets.remove(target);
					for(var i=0;i<event.targets.length;i++){
						if(!event.targets[i].isMajor()){
							event.targets.splice(i--,1);
						}
					}
					"step 1"
					if(event.targets.length){
						event.current=event.targets.shift();
						if(event.current.countCards('he')&&target.isAlive()){
							event.current.chooseToUse({name:'sha'},target,-1);
						}
					}
					else{
						event.finish();
					}
					"step 2"
					if(result.bool==false){
						player.gainPlayerCard(event.current,true,'he');
					}
					event.goto(1);
				},
				ai:{
					order:5,
					result:{
						target:function(player,target){
							var players=game.filterPlayer();
							if(player.hp>1){
								if(game.phaseNumber<game.players.length) return 0;
								for(var i=0;i<players.length;i++){
									if(players[i].ai.shown==0) return 0;
								}
							}
							var effect=0;
							for(var i=0;i<players.length;i++){
								if(players[i].isMajor()&&players[i]!=target&&players[i]!=player&&players[i].countCards('he'))
								effect+=get.effect(target,{name:'sha'},players[i],target);
							}
							return effect;
						}
					}
				}
			},
			gzzhenlvey:{
                audio:"ext:国战补充:2",
				unique:true,
				mark:true,
				frequent:true,
				skillAnimation:true,
				animationColor:'orange',
				trigger:{global:'die'},
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
　　　　　　　　　　return !player.storage.gzzhenlvey&&!event.player.isFriendOf(player);
				},
				content:function(){
                   "step 0"    
                    player.awakenSkill('gzzhenlvey');
                    player.storage.gzzhenlvey=true;
　　　　　　　　　　player.chooseJunlingFor(player).set('prompt','选择一张军令牌，令所有其他角色选择是否执行');
                   "step 1"  
					event.junling=result.junling;
					event.targets=result.targets;
					event.players=game.filterPlayer(function(current){
　　　　　　　　　　return current!=trigger.player&&current.isFriendOf(player);
					}).sort(lib.sort.seat);
					event.num=0;
                   "step 2"  
                   event.current=event.players[num];
                   event.current.carryOutJunling(player,event.junling,targets);
				   event.num++;
				   if(event.num<event.players.length) event.goto(2);
				},
			},
			gzzhenjuey:{
				enable:'phaseUse',
				audio:"ext:国战补充:1",
				limited:true,
				skillAnimation:true,
				animationColor:'water',
				filterTarget:lib.filter.notMe,
				content:function(){
					'step 0'
					player.awakenSkill('gzzhenjuey');
                    player.storage.gzzhenjuey=true;
					var list=target.getSkills(null,false,false).filter(function(skill){
						var info=lib.skill[skill];
						return info&&info.juexingji;
					});
					if(list.length){
						target.addMark('gzzhenjuey',1,false);
						for(var i of list){
							var info=lib.skill[i];
							if(info.filter&&!info.charlotte&&!info.gzzhenjuey_filter){
								info.gzzhenjuey_filter=info.filter;
								info.filter=function(event,player){
									if(player.hasMark('gzzhenjuey')) return true;
									return this.gzzhenjuey_filter.apply(this,arguments);
								}
							}
						}
					}
					else{
                       target.addMark('zhulianbihe_mark');
                       target.mayChangeVice(true);
　　　　　　　　　　} 
				},
				intro:{content:'发动非Charlotte觉醒技时无视条件'},
				ai:{
					order:0.1,
					expose:0.2,
					result:{
						target:function(player,target){
							if(player.hasUnknown()) return 0;
							var list=target.getSkills(null,false,false).filter(function(skill){
								var info=lib.skill[skill];
								return info&&info.juexingji;
							});
							if(list.length||target.hasJudge('lebu')||target.hasSkillTag('nogain')) return 0;
							return 4;
						},
					},
				},
			},

//藏海
            gzchashiy:{
	            trigger:{
　　　　　　　　　　global:'dieBegin',
　　　　　　　　}, 
　　　　　　　　forced:true,
				audio:"xinfu_guanchao",
                content:function(){
					'step 0'
　　　　　　　　　　if(game.players.length>2&&!game.hasPlayer(function(current){
						       return current.isMajor();
					    })){
                        player.setIdentity('ye');
                        player.identity='ye';
                    }
					else{
						event.goto(5);
					}
					'step 1'
		           player.chooseTarget('选择一名其他角色执行一项军令',function(card,player,target){
			           return target!=player;
		           }).ai=function(target){
			              return -get.attitude(_status.event.player,target);
		           }
					'step 2'
					if(result.bool){
                        event.target=result.targets[0];
                        player.chooseJunlingFor(result.targets[0]);					                }
                    else event.finish();
					'step 3'
                    event.junling=result.junling;
                    event.targets=result.targets;
					'step 4'
                    target.carryOutJunling(player,event.junling,targets);
					event.finish();
					'step 5'
　　　　　　　　　　var num1=game.countPlayer(function(current){
						return current.group=='wei';
					});
　　　　　　　　　　var num2=game.countPlayer(function(current){
						return current.group=='shu';
					});
　　　　　　　　　　var num3=game.countPlayer(function(current){
						return current.group=='wu';
					});
　　　　　　　　　　var num4=game.countPlayer(function(current){
						return current.group=='qun';
					});
　　　　　　　　　　var num5=game.countPlayer(function(current){
						return current.group=='jin';
					});
					var num=Math.max(num1,num2,num3,num4,num5);
					if(num==num1){
					       player.gain(game.createCard('gz_haolingtianxia'),'gain2');
					}
					if(num==num2){
					       player.gain(game.createCard('gz_kefuzhongyuan'),'gain2');
					}
					if(num==num3){
					       player.gain(game.createCard('gz_guguoanbang'),'gain2');
					}
					if(num==num4){
					       player.gain(game.createCard('gz_wenheluanwu'),'gain2');
					}
					if(num==num5){
					       player.gain(game.createCard('huoshaolianying'),'gain2');
					}
					'step 6'
　　　　　　　　　　game.delay();
　　　　　　　　　　player.throwDice();
					'step 7'
                   if(event.num==1){
                      player.modifyGroup('jin');
                   }
                   if(event.num==2){
                      player.modifyGroup('wei');
                   }
                   if(event.num==3){
                      player.modifyGroup('shu');
                   }
                   if(event.num==4){
                      player.modifyGroup('wu');
                   }
                   if(event.num==5){
                      player.modifyGroup('key');
                   }
                   if(event.num==6){
                      player.modifyGroup('qun');
                   }
                },
                ai:{
                    threaten:2.2,
                },
            },
            gzshuzhiy:{
                mod:{
                    cardname:function (card,player,name){
                        if(card.name=='tao') return 'jiu';
                    },
                },
	            trigger:{
　　　　　　　　　　player:'showCharacterAfter',
　　　　　　　　　　global:'dieBegin',
　　　　　　　　}, 
　　　　　　　　forced:true,
				audio:"zhiyu",
				priority:-1,
                init:function(player){
                    player.removeAdditionalSkill('gzshuzhiy');
                    var list=[];
                    if(player.group=='wei'){
                        list.push('new_fangzhu');
                    }
                    if(player.group=='shu'){
                        list.push('gzjizhix');
                    }
                    if(player.group=='wu'){
                        list.push('gzxiaoji');
                    }
                    if(player.group=='qun'){
                        list.push('beige');
                    }
                    if(player.group=='jin'){
                        list.push('sanchen');
                    }
                    if(player.group=='ye'||player.identity=='ye'){
                        list.push('splanggu');
                    }
                    if(list.length){
                        player.addAdditionalSkill('gzshuzhiy',list);
                    }
                },
                derivation:["new_fangzhu","gzjizhix","gzxiaoji","beige","sanchen","splanggu"],
                content:function(){
                    player.removeAdditionalSkill('gzshuzhiy');
                    var list=[];
                    if(player.group=='wei'){
                        list.push('new_fangzhu');
                    }
                    if(player.group=='shu'){
                        list.push('gzjizhix');
                    }
                    if(player.group=='wu'){
                        list.push('gzxiaoji');
                    }
                    if(player.group=='qun'){
                        list.push('beige');
                    }
                    if(player.group=='jin'){
                        list.push('sanchen');
                    }
                    if(player.group=='ye'||player.identity=='ye'){
                        list.push('splanggu');
                    }
                    if(list.length){
                        player.logSkill('gzshuzhiy');
                        player.addAdditionalSkill('gzshuzhiy',list);
                    }
                },
                ai:{
                    threaten:1.2,
                },
            },

//方须
		     gzlunduany:{
                trigger:{
                   player:"damageBegin",
                },
　　　　　　　　forced:true,
			    audio:"ext:国战补充:2",
                content:function (){
					var list=get.gainableSkills(function(info,skill){
						return !info.notemp&&info.ai&&info.ai.maixie_hp&&!player.hasSkill(skill);
					});
					list.remove('guixin');
					if(list.length){
						var skill=list.randomGet();
						player.popup(skill);
						player.addTempSkill(skill,{player:'phaseBegin'});
					}
                },
                ai:{
					maixie:true,
					maixie_hp:true,
　　　　　　　　},
　　		},
			gzlunduanz:{
                trigger:{
                    player:"dying",
　　　　　　　　},
				usable:1,
				audio:"ext:国战补充:2",
　　　　　　　　forced:true,
				filter:function(event,player){
					return player.countCards('h');
				},
				content:function(){
					'step 0'
					event.current=player.next;
					event.upper=[];
					event.lower=[];
					event.acted=[];
					'step 1'
					event.acted.push(event.current);
					event.current.chooseControl('得道','失道').set('prompt','得道多助？失道寡助？').set('ai',function(){
					if(get.attitude(_status.event.player,player)>=0) return 0;
						return 1;
					});
					'step 2'
					if(result.control=='得道'){
						event.upper.push(event.current)
					}
					else event.lower.push(event.current);
					event.current=event.current.next;
					if(event.current!=player&&!event.acted.contains(event.current)) event.goto(1);
					'step 3'
					for(var i=0;i<event.acted.length;i++){
						var bool=event.upper.contains(event.acted[i]);
						game.log(event.acted[i],'选择了',bool?'#g得道':'#y失道');
						event.acted[i].popup(bool?'得道':'失道',bool?'wood':'orange');
					}
					game.delay(1);
					'step 4'
				    if(event.upper>=event.lower){
				        player.recover();	
　　　　　　　　　　}
				    if(event.upper<event.lower){
		                var num=player.maxHp;
					    player.addMark('yinyang_mark',num);
　　　　　　　　　　}
				},
			},
			gzsancaix:{
				trigger:{player:'phaseDiscardBefore'},
				audio:"ext:国战补充:2",
                round:1,
				filter:function(event,player){
				   return  player.countCards('he')>2;
				},
				derivation:'reguanxing',
                check:function(event,player){
                    return  player.countCards('h')-player.hp>=3;
                },
　　			content:function(){
					'step 0'
					trigger.cancel();
					player.chooseToDiscard('三才：请弃置三张牌','he',true,3);
					'step 1'
					if(result.bool){
						var type=[];
						for(var i=0;i<result.cards.length;i++){
							type.add(get.type(result.cards[i],'trick'));
						}
　　　　　　　　　　　　if(type.length==3){
							player.insertPhase();
	                        player.addTempSkill('gzsancaix_1','roundStart');
	                        player.addTempSkill('gzsancaix_2','roundStart');
	                        player.addTempSkill('gzsancaix_3','roundStart');
	                        player.addTempSkill('reguanxing','roundStart');
						}
						else event.finish();
					}
				},
				subSkill:{
					1:{
						trigger:{
							player:"useCard",
						},
				        usable:1,
				        frequent:true,
				        audio:'shelie',
						filter:function (event,player){
                            return get.type(event.card)=='basic';
						},
						content:function (){
							'step 0'
							event.cards=get.cards(3);
							player.showCards(event.cards);
							'step 1'
							var cards=[];
							for(var i=0;i<event.cards.length;i++){
								if(get.type(event.cards[i])=='basic') cards.add(event.cards[i]);
							};
							if(cards.length>0) player.gain(cards,'gain2');
							if(cards.length<3){
								for(var i=0;i<cards.length;i++){
									event.cards.remove(cards[i]);
								};
								for(var i=0;i<event.cards.length;i++){
									ui.cardPile.appendChild(event.cards[i]);
								};
							};
						},
						sub:true,
					},
					2:{
						trigger:{
							player:"useCard",
						},
				        usable:1,
				        frequent:true,
				        audio:'shelie',
						filter:function (event,player){
                            return get.type(event.card)=='trick';
						},
						content:function (){
							'step 0'
							event.cards=get.cards(3);
							player.showCards(event.cards);
							'step 1'
							var cards=[];
							for(var i=0;i<event.cards.length;i++){
								if(get.type(event.cards[i])=='trick') cards.add(event.cards[i]);
							};
							if(cards.length>0) player.gain(cards,'gain2');
							if(cards.length<3){
								for(var i=0;i<cards.length;i++){
									event.cards.remove(cards[i]);
								};
								for(var i=0;i<event.cards.length;i++){
									ui.cardPile.appendChild(event.cards[i]);
								};
							};
						},
						sub:true,
					},
					3:{
						trigger:{
							player:"useCard",
						},
						filter:function (event,player){
                            return get.type(event.card)=='equip';
						},
				        usable:1,
				        frequent:true,
				        audio:'shelie',
						content:function (){
							'step 0'
							event.cards=get.cards(3);
							player.showCards(event.cards);
							'step 1'
							var cards=[];
							for(var i=0;i<event.cards.length;i++){
								if(get.type(event.cards[i])=='equip') cards.add(event.cards[i]);
							};
							if(cards.length>0) player.gain(cards,'gain2');
							if(cards.length<3){
								for(var i=0;i<cards.length;i++){
									event.cards.remove(cards[i]);
								};
								for(var i=0;i<event.cards.length;i++){
									ui.cardPile.appendChild(event.cards[i]);
								};
							};
						},
						sub:true,
					},
				},
			},

//竹小二
             author_in:{
                audio:"luanwu",
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				forced:true,
				mark:true,
				init:function(player,skill){player.storage[skill]=false},
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.author_in&&event.toShow.contains('gz_zhuxiaoer');
				},
				content:function(){
                    'step 0'      
                    player.awakenSkill('author_in');
                    'step 1'
					player.removeSkill(player.storage.author_in);
					switch(Math.floor(Math.random()*4)){
						case 0:if(lib.skill.gzzhiheng){player.addSkill('gzzhiheng'); player.storage.author_in='gzzhiheng';player.popup('gzzhiheng');}break;
						case 1:if(lib.skill.guanxing){player.addSkill('guanxing'); player.storage.author_in='guanxing';player.popup('guanxing');}break;
						case 2:if(lib.skill.gzfankuix){player.addSkill('gzfankuix'); player.storage.author_in='gzfankuix';player.popup('gzfankuix');}break;
						case 3:if(lib.skill.wansha){player.addSkill('wansha'); player.storage.author_in='wansha';player.popup('wansha');}break;
					}
				},
				ai:{
					threaten:0.7,
			    }
            },
			author_out:{
                audio:"fencheng",
                trigger:{
                  player:"die",
                },
                forced:true,
                forceDie:true,
                skillAnimation:true,
                animationColor:"gray",　　			
　　　　　　　　content:function(){
                    var players=game.players.slice(0).sortBySeat();
                    for(var i=0;i<players.length;i++){
						var skill=players[i].getStockSkills().randomGet();
						players[i].popup(skill);
						players[i].removeSkill(skill);
                    };
				},
			},
			author_copy:{
				audio:'huashen2',
				trigger:{target:'useCardToBegin'},
				forced:true,
                usable:1,
				filter:function(event,player){
					return player==event.player&&get.type(event.card,'trick')=='trick'&&event.card.isCard;
				},
				content:function(){
					 'step 0'			    		
        event.skills=[]; 
		event.list=[];		
　　　　　　　　　　'step 1'
        for(var i in lib.characterPack['mode_guozhan']){
        for(var j=0;j<lib.character[i][3].length;j++){
           var info=lib.skill[lib.character[i][3][j]];
if(info&&(info.gainable||!info.unique||!info.mainSkill||!info.viceSkill||!info.charlotte)){                      
           event.skills.add(lib.character[i][3][j]); 
               }
           } 
        }
		event.list.remove(player.getSkills());
        var list=event.skills.randomGets(3);		
		if(event.isMine()){
		var dialog=ui.create.dialog('forcebutton');
			dialog.add('选择获得一项技能');						
			for(i=0;i<list.length;i++){
				if(lib.translate[list[i]+'_info']){
				var translation=get.translation(list[i]);
				if(translation[0]=='新'&&translation.length==3){
			    	translation=translation.slice(1,3);
				}
				else{
					translation=translation.slice(0,2);
				}
				var item=dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+translation+'】</div><div>'+lib.translate[list[i]+'_info']+'</div></div>');								
					item.firstChild.link=list[i];
				}
			}						
		}						
		player.chooseControl(list).set('prompt','请选择一个你的要获得的技能').set('ai',function(){
            return list.randomGet();
        }).dialog=dialog;
		'step 2'				
		player.popup(result.control,'thunder'); 
		player.addSkill(result.control);		                 
        player.mark(result.control,{
            name:get.translation(result.control),
            content:lib.translate[result.control+'_info']
        });                            
		game.log(player,'获得了技能','#g【'+get.translation(result.control)+'】');                                                         
     },
			},
            gzyingzunx:{
                mark:true,
                init:function(player){
                    player.storage.gzyingzunx=1;
                },
                intro:{
                    content:"<>中数值为#",
                },
                audio:'shanzhuan',
				enable:'phaseUse',
				usable:1,
                content:function (){
                    'step 0'
                    player.draw(player.storage.gzyingzunx);
                    'step 1'
                    player.storage.gzyingzunx++;
                    'step 2'
if(player.countCards('h')+player.storage.gzyingzunx>player.maxHp){
					player.loseMaxHp();
					player.addTempSkill('new_paoxiao');
					player.storage.gzyingzunx=1;
                    }
                    else event.finish();
                },
				ai:{
					order:10,
					result:{
						player:function(player,target){
                           if(player.countCards('h')+player.storage.gzyingzunx<=player.maxHp) return 8;
if(player.storage.gzyingzunx>=3&&player.maxHp>=4&&player.isDamaged()) return 6;
if(player.storage.gzyingzunx>=2&&game.players.length<=3&&player.maxHp>=3&&player.isDamaged()) return 4;
if(player.storage.gzyingzunx>=2&&game.players.length<=2&&player.maxHp>=2&&player.countCards('h','sha')>1) return 2;
                           return 0;
                        },
					}
				},
            },
			gzzhengux:{
				trigger:{
					player:"phaseEnd",
				},
                audio:'drlt_zhenggu',
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt2('gzzhengux'),function(card,player,target){
						return target.countCards('h')<target.hp;
					}).set('ai',function(target){
						return get.attitude(player,target);
					});
					"step 1"
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('gzzhengux',target);
						target.draw(target.hp-target.countCards('h'));
　　　　　　　　　　　　event.target=target
					}
					else event.finish();
					"step 2"
	                event.target.chooseCard('h' ,true,'展示一张手牌，若以此法展示的是装备牌，则你将手牌补置体力上限').ai=function(card){
                       if(get.type(card)=='equip'){
                           return 10-get.value(card);
                       }
                       return -get.value(card);
					}
					"step 3"
　　　　　　　　　　event.card=result.cards[0];
　　　　　　　　　　player.showCards(event.card); 
　　　　　　　　　　"step 4"
　　　　　　　　　　if(get.type(event.card)=='equip'&&event.target.countCards('h')<target.maxHp){
                        event.target.draw(event.target.maxHp-event.target.hp);
                        event.target.mayChangeVice();
                    }
                    else{
                        event.finish();
                    }
				},
			},
			gzlieweix:{
				shaRelated:true,
　　　　　　　　forced:true,
                audio:'liewei',
                mainSkill:true,
				init:function(player){player.checkMainSkill('gzlieweix')},
				trigger:{source:'damageSource'},
				filter:function(event,player){
					if(event._notrigger.contains(event.player)) return false;
					return (event.card&&event.card.name=='sha'&&event.getParent().name=='sha'&&
						event.player.isAlive()&&!event.player.isUnseen(0)&&
						event.player.hasMainCharacter());
				},
				content:function(){
					player.showCharacter(0);
					var name1=player.name;
					var name2=trigger.player.name;
					player.reinit(name1,name2,false);
					trigger.player.reinit(name2,name1,false);
				}
			 },
			 gzzhenjun:{
				audio:"jieyue",
				trigger:{
					player:"phaseZhunbeiBegin",
				},
				filter:function (event,player){
					return game.hasPlayer(function(current){
						return current.countCards('h')>0;
					});
				},
				direct:true,
				content:function (){
					'step 0'
					player.chooseTarget(get.prompt2('gzzhenjun')).ai=function(target){
						return -get.attitude(_status.event.player,target)*(target.countCards('e')+1);
					};
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						event.target=target;
						var num=Math.max(target.countCards('h')-target.hp,1);
						player.logSkill('gzzhenjun',target);
						player.discardPlayerCard(num,target,true);
					}
					'step 2'
					if(result.cards&&result.cards.length){
						event.num=0;
						for(var i=0;i<result.cards.length;i++){
							if(get.type(result.cards[i])!='equip'){
								event.num++;
							}
						}
						if(event.num>0){
							var prompt='弃置'+get.cnNumber(event.num)+'张牌，或令'+get.translation(event.target)+'摸'+get.cnNumber(event.num)+'张牌';
							player.chooseToDiscard(event.num,prompt,'he').ai=function(card){
								return 5-get.value(card);
							}
						}
						else event.finish();
					}
					else event.finish();
					'step 3'
					if(!result.bool){
						event.target.draw(event.num);
					}
				},
			},
            gzxinhuoy:{
				audio:false,
				trigger:{
					player:"damageEnd",
				},
				filter:function (event){
					return event.card&&(event.card.name=='juedou')&&event.notLink();
				},
				forced:true,
				content:function(){
					var num=0;
					if(trigger.source.countCards('h')) num++;
					if(trigger.source.countCards('e')) num++;
					if(trigger.source.countCards('j')) num++;
					if(num){
						player.gainPlayerCard(trigger.source,num,'hej',true).set('filterButton',function(button){
							for(var i=0;i<ui.selected.buttons.length;i++){
								if(get.position(button.link)==get.position(ui.selected.buttons[i].link)) return false;
							}
							return true;
						});
					}
				}
			},
			gzxinhuox:{
                audio:"zhidao",
				enable:"phaseUse",
                usable:1,
                filterTarget:function(card,player,target){ 
                  return target!=player&&target.countCards('hej')>0; 
                },
				group:['gzxinhuoy'],
	            selectTarget:1,
				content:function(){
	              target.useCard({name:'juedou',isCard:true},player,false);
				},
				ai:{
					order:function(name,player){
						var cards=player.getCards('h');
						if(player.countCards('h','sha')==0){
							return 1;
						}
						for(var i=0;i<cards.length;i++){
							if(cards[i].name!='sha'&&cards[i].number>11&&get.value(cards[i])<7){
								return 9;
							}
						}
						return get.order({name:'sha'})-1;
					},
					result:{
						player:function(player){
							if(player.countCards('h','sha')>0) return 0;
							var num=player.countCards('h');
							if(num>player.hp) return 0;
							if(num==1) return -2;
							if(num==2) return -1;
							return -0.7;
						},
						target:function(player,target){
							var num=target.countCards('h');
							if(num==1) return -1;
							if(num==2) return -0.7;
							return -0.5
						},
					},
					threaten:0.4
				},
			},
			gzjiliy:{
                audio:'jili',
				trigger:{global:'damageAfter'},
				forced:true,
				filter:function(event,player){
					return event.player!=player&&get.distance(player,event.player)<=1;
				},
				content:function(){
					if(player.hp==1){
						player.recover();
					}
					else{
                        player.addMark('yinyang_mark');
					}
				}
			},
			gzbiaozhaoy:{
				audio:'biaozhao',
				intro:{
					content:"cards",
				},
				trigger:{
					player:"phaseJieshuBegin",
				},
				direct:true,
				filter:function (event,player){
					return player.countCards('he')>0&&!player.storage.gzbiaozhaoy;
				},
				content:function (){
					'step 0'
					player.chooseCard('he',get.prompt2('gzbiaozhaoy')).ai=function(card){
						return 6-get.value(card);
					}
					'step 1'
					if(result.bool){
						player.addSkill('gzbiaozhaoy2');
						player.addSkill('gzbiaozhaoy3');
						player.logSkill('gzbiaozhaoy');
						player.$give(result.cards,player,false);
						player.lose(result.cards,ui.special,'toStorage','visible');
						player.storage.gzbiaozhaoy=result.cards;
						player.markSkill('gzbiaozhaoy');
					}
				},
			},
			"gzbiaozhaoy2":{
				trigger:{
					global:["loseEnd","cardsDiscardEnd"],
				},
				charlotte:true,
				forced:true,
				audio:"biaozhao",
				filter:function (event,player){
					if(!player.storage.gzbiaozhaoy) return false;
					var num=get.number(player.storage.gzbiaozhaoy[0]);
					for(var i=0;i<event.cards.length;i++){
						if(get.position(event.cards[i],true)=='d'&&get.number(event.cards[i])==num) return true;
					}
					return false;
				},
				content:function (){
					"step 0"
					var card=player.storage.gzbiaozhaoy[0];
					delete player.storage.gzbiaozhaoy;
					player.$throw(card);
					game.cardsDiscard(card);
					"step 1"
					player.unmarkSkill('gzbiaozhaoy');
					player.chooseToDiscard(true,'he');
				},
			},
			"gzbiaozhaoy3":{
				trigger:{
					player:"phaseZhunbeiBegin",
				},
				forced:true,
				charlotte:true,
				audio:"biaozhao",
				filter:function (event,player){
					return player.storage.gzbiaozhaoy!=undefined;
				},
				content:function (){
					"step 0"
					var card=player.storage.gzbiaozhaoy[0];
					delete player.storage.gzbiaozhaoy;
					player.unmarkSkill('gzbiaozhaoy');
					game.cardsDiscard(card);
					player.chooseTarget('令一名角色手牌补至体力上限或回复1点体力',true).ai=function(target){
						var num=2;
						if(target.isDamaged()) num++;
						return num*get.attitude(_status.event.player,target);
					};
					"step 1"
					if(result.bool){
						var target=result.targets[0];
						player.line(target,'green');
						player.chooseDrawRecover(player.maxHp-player.countCards('h'),true);
					}
				},
			},
			gzbiaozhaox:{
				audio:'biaozhao',
				intro:{
					content:"cards",
				},
				trigger:{
					player:"phaseJieshuBegin",
				},
				direct:true,
				filter:function (event,player){
					return player.countCards('he')>0&&!player.storage.gzbiaozhaox;
				},
				content:function (){
					'step 0'
					player.chooseCard('he',get.prompt2('gzbiaozhaox')).ai=function(card){
						return 6-get.value(card);
					}
					'step 1'
					if(result.bool){
						player.addSkill('gzbiaozhaox2');
						player.addSkill('gzbiaozhaox3');
						player.logSkill('gzbiaozhaox');
						player.$give(result.cards,player,false);
						player.lose(result.cards,ui.special,'toStorage','visible');
						player.storage.gzbiaozhaox=result.cards;
						player.markSkill('gzbiaozhaox');
					}
				},
			},
			"gzbiaozhaox2":{
				trigger:{
					global:["loseEnd","cardsDiscardEnd"],
				},
				charlotte:true,
				forced:true,
				audio:"biaozhao",
				filter:function (event,player){
					if(!player.storage.gzbiaozhaox) return false;
					var num=get.number(player.storage.gzbiaozhaox[0]);
					for(var i=0;i<event.cards.length;i++){
						if(get.position(event.cards[i],true)=='d'&&get.number(event.cards[i])==num) return true;
					}
					return false;
				},
				content:function (){
					"step 0"
					var card=player.storage.gzbiaozhaox[0];
					delete player.storage.gzbiaozhaox;
					player.$throw(card);
					game.cardsDiscard(card);
					"step 1"
					player.unmarkSkill('gzbiaozhaox');
					player.draw();
				},
			},
			"gzbiaozhaox3":{
				trigger:{
					player:"phaseZhunbeiBegin",
				},
				forced:true,
				charlotte:true,
				audio:"biaozhao",
				filter:function (event,player){
					return player.storage.gzbiaozhaox!=undefined;
				},
				content:function (){
					"step 0"
					var card=player.storage.gzbiaozhaox[0];
					delete player.storage.gzbiaozhaox;
					player.unmarkSkill('gzbiaozhaox');
					game.cardsDiscard(card);
					player.chooseTarget('令一名角色手牌补至体力上限或回复1点体力',true).ai=function(target){
						var num=2;
						if(target.isDamaged()) num++;
						return num*get.attitude(_status.event.player,target);
					};
					"step 1"
					if(result.bool){
						var target=result.targets[0];
						player.line(target,'green');
						player.chooseDrawRecover(player.maxHp-player.countCards('h'),true);
					}
				},
			},
			gzsishu:{
                audio:'sishu',
				charlotte:true,
				marktext:'思',
				intro:{
					name:'思蜀',
					content:'本局游戏内计算【乐不思蜀】的效果时反转#次',
				},
				mod:{
					judge:function(player,result){
						if(_status.event.card&&_status.event.card.name=='lebu'&&player.countMark('gzsishu')%2==1){
							if(result.bool==false){
								result.bool=true;
							}
							else{
								result.bool=false;
							}
						}
					}
				},
			},
			gzruoyu:{
				trigger:{player:'phaseZhunbeiBegin'},
				skillAnimation:true,
				animationColor:'gray',
				filter:function(event,player){
					if(!player.hasSkill('ruoyu'))return false;
					if(player.storage.ruoyu) return false;
					return player.isMinHp(true);
				},
				intro:{
					content:'limited',
				},
				audio:'ruoyu',
				mark:true,
				direct:true,
				unique:true,
				limited:true,
				content:function(){
					"step 0"
					var check=(player.hp==1||(player.hp==2&&player.countCards('h')<=1));
					player.chooseTarget(get.prompt2('gzruoyu')).set('ai',function(target){
						if(!_status.event.check) return 0;
						return get.attitude(_status.event.player,target);
					}).set('check',check);
					"step 1"
					if(result.bool){
						player.storage.gzruoyu=true;
						player.awakenSkill('gzruoyu');
						player.logSkill('gzruoyu',result.targets);
						player.recover();
						result.targets[0].draw(3);
					}
				}
			},
			gzxiangle:{
				audio:'xiangle',
				trigger:{player:'shaMiss'},
				forced:true,
				filter:function(event,player){
					return event.responded&&get.itemtype(event.responded.cards)=='cards';
				},
				content:function(){
					"step 0"
					var cards=trigger.responded.cards;
					event.cards=cards;
					player.gain(event.cards,'gain2');
					"step 1"
	trigger.target.useCard({name:'juedou',isCard:true},player,false);
				}
			},
			gzduoshix_wei:{
                audio:"hujia",
				unique:true,
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return player.group=='wei'&&!player.storage.gzduoshix_wei;
				},
                filterTarget:function(card,player,target){
if(target.identity=='unknown'||target.identity=='ye') return false;
　　　　　　　　return target!=player&&target.group!='wei';
　　　　　　　　},
	            selectTarget:1,
				content:function(){
					'step 0'
　　　　　　　　	 player.awakenSkill('gzduoshix_wei');
　　　　　　　　     player.showCharacter(0);
　　　　　　　　     target.showCharacter(1);
					'step 1'
					target.modifyGroup('wei');
					'step 2'
                    player.removeCharacter(0);
　　　　　　　　    target.removeCharacter(1);
					'step 3'
　　                if(!player.isMajor()){
                      if(player.isDamaged()){
                        player.recover();
                      }
                      else player.gainMaxHp(true);
　　                }
　                　else event.finish();	
				},
				ai:{
					order:7.5,
					result:{
						player:1,
						target:function(player,target){
					        var rank=get.rank(target,true);
					        if(!target.hasMainCharacter()) return 0;
							if(target.hp<2) return -0.5;
							if(target.isHealthy()) return -5;
							if(target.isMajor()) return -7;
							return -rank;
						}
					},
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzduoshix_shu:{
                audio:"jijiang",
				enable:"phaseUse",
				limited:true,
				unique:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return player.group=='shu'&&!player.storage.gzduoshix_shu;
				},
                filterTarget:function(card,player,target){
if(target.identity=='unknown'||target.identity=='ye') return false;
　　　　　　　　return target!=player&&target.group!='shu';
　　　　　　　　},
	            selectTarget:1,
				content:function(){
					'step 0'
					 player.awakenSkill('gzduoshix_shu');
　　　　　　　　     player.showCharacter(0);
　　　　　　　　     target.showCharacter(1);
					'step 1'
					target.modifyGroup('shu');
					'step 2'
	                player.removeCharacter(0);
　　　　　　　　    target.removeCharacter(1);
					'step 3'
　　                if(!player.isMajor()){
                      player.draw(2);
　　                }
　                　else event.finish();	
				},
				ai:{
					order:7.5,
					result:{
						player:1,
						target:function(player,target){
					        var rank=get.rank(target,true);
					        if(!target.hasMainCharacter()) return 0;
							if(target.hp<2) return -0.5;
							if(target.isHealthy()) return -5;
							if(target.isMajor()) return -7;
							return -rank;
						}
					},
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzduoshix_wu:{
                audio:"jiuyuan",
				enable:"phaseUse",
				limited:true,
				unique:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return player.group=='wu'&&!player.storage.gzduoshix_wu;
				},
                filterTarget:function(card,player,target){
if(target.identity=='unknown'||target.identity=='ye') return false;
　　　　　　　　return target!=player&&target.group!='wu';
　　　　　　　　},
	            selectTarget:1,
				content:function(){
					'step 0'
					 player.awakenSkill('gzduoshix_wu');
　　　　　　　　     player.showCharacter(0);
　　　　　　　　     target.showCharacter(1);
					'step 1'
					target.modifyGroup('wu');
					'step 2'
                    player.removeCharacter(0);
　　　　　　　　    target.removeCharacter(1);
					'step 3'
　　                if(!player.isMajor()){
						player.addTempSkill('gzzhiheng');
　　                }
　                　else event.finish();		
				},
				ai:{
					order:7.5,
					result:{
						player:1,
						target:function(player,target){
					        var rank=get.rank(target,true);
					        if(!target.hasMainCharacter()) return 0;
							if(target.hp<2) return -0.5;
							if(target.isHealthy()) return -5;
							if(target.isMajor()) return -7;
							return -rank;
						}
					},
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzduoshix_qun:{
                audio:"huangtian2",
				enable:"phaseUse",
				unique:true,
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return player.group=='qun'&&!player.storage.gzduoshix_qun;
				},
                filterTarget:function(card,player,target){
if(target.identity=='unknown'||target.identity=='ye') return false;
　　　　　　　　return target!=player&&target.group!='qun';
　　　　　　　　},
	            selectTarget:1,
				content:function(){
					'step 0'
					 player.awakenSkill('gzduoshix_qun');
　　　　　　　　     player.showCharacter(0);
　　　　　　　　     target.showCharacter(1);
					'step 1'
					target.modifyGroup('qun');
					'step 2'
                    player.removeCharacter(0);
　　　　　　　　    target.removeCharacter(1);
					'step 3'
　　                if(!player.isMajor()){
                      var players=game.players.slice(0).sortBySeat();
                      player.line(players);
                      for(var i=0;i<players.length;i++){
                        if(players[i]!=player&&players[i].isMajor())
　　　　　　　　　　　　players[i].damage('thunder');
                      };
　　                }
　                　else event.finish();	
				},
				ai:{
					order:7.5,
					result:{
						player:1,
						target:function(player,target){
					        var rank=get.rank(target,true);
					        if(!target.hasMainCharacter()) return 0;
							if(target.hp<2) return -0.5;
							if(target.isHealthy()) return -5;
							if(target.isMajor()) return -7;
							return -rank;
						}
					},
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzquanhengx:{
                mark:true,
                locked:false,
                zhuanhuanji:true,
                intro:{
                    content:function (storage,player,skill){
                        if(player.storage.gzquanhengx==true) return '出牌阶段结束时，你可以交给一名手牌数不多于你的角色一张牌。';
                        return '出牌阶段开始时，你可以获得一名手牌数不少于你的角色一张牌。';
                    },
                },
                group:["gzquanhengx_1","gzquanhengx_2"],
                subSkill:{
                    "1":{
						trigger:{
                            player:"phaseUseBegin",
                        },
				        audio:'zhiheng',
                        direct:true,
                        filter:function (event,player){
							if(player.storage.gzquanhengx==true) return false;
                            return game.hasPlayer(function(current){
                                return current!=player&&current.countCards('he')&&current.countCards('h')<=player.countCards('h');
                            });
                        },
                        content:function (){
                            'step 0'
                            player.chooseTarget('权衡：是否获得一名手牌数少于你的角色一张牌？',function(card,player,target){
                                return target.countCards('he')&&target.countCards('h')<=player.countCards('h');
                            }).set('ai',function(target){
                                var player=_status.event.player;
								return -get.attitude(player,target);
                            });
                            'step 1'
                            if(result.bool){
                                player.logSkill('gzquanhengx',result.targets);
                                player.storage.gzquanhengx=true;								
                                player.gainPlayerCard('he',result.targets[0],true);
                            }
                        },
                        sub:true,
                    },
                    "2":{
                        trigger:{
                            player:"phaseUseAfter",
                        },
                        direct:true,
				        audio:'zhiheng',
                        filter:function (event,player){
							if(!player.storage.gzquanhengx) return false;
							if(player.storage.gzquanhengx==false) return false;
							if(!player.countCards('he')) return false;
                            return game.hasPlayer(function(current){
                                return current!=player&&current.countCards('h')>=player.countCards('h');
                            });
                        },
                        content:function (){
                            'step 0'
                            player.chooseTarget('权衡：是否交给一名手牌数多于你的角色一张牌？',function(card,player,target){
                                return target.countCards('h')>=player.countCards('h');
                            }).set('ai',function(target){
                                var player=_status.event.player;
								return get.attitude(player,target);
                            });
                            'step 1'
                            if(result.bool){
								event.target=result.targets[0];
								player.storage.gzquanhengx=false;
                                player.chooseCard('he','请选择一张牌交给'+get.translation(event.target),true).set('ai',function(card){
                                    if(event.target.hp<=2) return 8-get.value(card);
                                    return 6-get.value(card);
                                });								
							}
							else event.finish();
							'step 2'
							if(result.bool){
                                player.logSkill('gzquanhengx',event.target);
                                event.target.gain(result.cards[0],player,'giveAuto');
							}
                        },
                        sub:true,
                    },
                },
            },
			gzlingfengx:{
				audio:'longnu',
				trigger:{player:'phaseDrawBefore'},
				content:function(){
					"step 0"
					trigger.cancel();
					event.cards=get.cards(2);
					player.showCards(event.cards);
					"step 1"
					if(get.color(event.cards[0])!=get.color(event.cards[1])){
						player.chooseTarget('是否令一名敌方角色失去1点体力？',function(card,player,target){
							return !target.isFriendOf(player);
						}).ai=function(target){
							return -get.attitude(player,target);
						}
					}
					"step 2"
					if(result.bool&&result.targets&&result.targets.length){
						player.line(result.targets,'green');
						result.targets[0].loseHp();
					}
					"step 3"
					player.gain(event.cards);
					player.$draw(event.cards);
					game.delay();
				},
				ai:{
					threaten:1.4
				}
			},
			gzcaiyix:{
				audio:'jianxiong',
                usable:1,
				trigger:{global:'drawAfter'},
				check:function(event,player){
					if(get.attitude(player,event.player)>=0) return false;
					if(get.effect(event.player,{name:'sha'},player,player)<=0) return false;
					if(get.effect(player,{name:'sha'},event.player,player)>=0) return true;
					return player.hasShan()&&player.hp>=event.player.hp;
				},
				filter:function(event,player){
					return player!=event.player&&Array.isArray(event.result)&&event.result.length>0;
				},
				logTarget:'player',
				content:function(){
					'step 0'
					player.viewCards(get.translation(trigger.player)+'摸到的牌',trigger.result);
					if(!event.isMine()){
						game.delayx();
					}
					'step 1'
					var list=[];
					for(var i=0;i<trigger.result.length;i++){
						if(trigger.result[i].name=='sha'){
							list.push(trigger.result[i]);
						}
					}
					if(list.length){
						player.useCard({name:'sha',isCard:true},trigger.player);
					}
					else{
						trigger.player.useCard({name:'sha',isCard:true},player);
					}
				}
			},
			gzjianxiongy:{
				trigger:{target:'useCardToBefore'},
				audio:'jianxiong',
                usable:1,
				content:function(){
					'step 0'
					player.chooseToUse(function(card){
						return !get.info(card).multitarget;
					},get.prompt('gzjianxiongy',trigger.player),trigger.player,-1);
					'step 1'
					if(event.damaged){
						trigger.cancel();
						if(get.color(trigger.card)=='black'){
							player.draw();
						}
					}
				},
				subSkill:{
					damage:{
						trigger:{source:'damageAfter'},
						silent:true,
						filter:function(event,player){
							return event.getParent(4).name=='gzjianxiongy';
						},
						content:function(){
							trigger.getParent(4).damaged=true;
						}
					}
				},
				group:'gzjianxiongy_damage',
				ai:{
					effect:{
						player:function(card,player,target){
							if(_status.currentPhase!=player) return;
							if(get.tag(card,'damage')&&!player.needsToDiscard(1)&&target.hp>1){
								return 'zeroplayertarget';
							}
						}
					}
				}
			},
			gzjidianx:{
				audio:'jidian',
				trigger:{source:'damageAfter'},
　　　　　　　　usable:1,
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gzjidianx'),function(card,player,target){
						return get.distance(trigger.player,target)<=1&&trigger.player!=target;
					}).ai=function(target){
						return get.damageEffect(target,player,player,'thunder')+0.1;
					}
					"step 1"
					if(result.bool){
                        event.target=result.targets[0];
						event.target.judge(function(card){
							return get.color(card)=='red'?0:-1;
						})
						player.logSkill('gzjidianx',event.target,false);
						trigger.player.line(event.target,'thunder');
					}
					else{
						event.finish();
					}
					"step 2"
					if(result.color=='black'){
						event.target.damage('thunder');
					}
					else{
						player.draw();
					}
				}
			},
			gzxishax:{
				audio:'beishui',
				enable:['chooseToUse','chooseToRespond'],
				viewAsFilter:function(player){
					return player.countCards('he',function(card){
						return get.type(card)!='basic';
					})>0;
				},
				viewAs:{name:'sha'},
				filterCard:function(card,player){
					return get.type(card)!='basic';
				},
				locked:false,
				position:'he',
				check:function(card){
					var val=get.value(card);
					if(val>=6) return 0;
					if(get.color(card)=='black') return 12-val;
					return 6-val;
				},
				mod:{
					targetInRange:function(card,player,target){
						if(_status.event.skill=='gzxishax') return true;
					},
				},
				group:'gzxishax_clear',
				ai:{
					respondSha:true,
					skillTagFilter:function(player){
						return player.countCards('he',function(card){
							return get.type(card)!='basic';
						})>0;
					},
				},
			},
			gzxishax_clear:{
				trigger:{player:'useCard1'},
				firstDo:true,
				silent:true,
				filter:function(event,player){
					return event.skill=='gzxishax';
				},
				content:function(){
					if(get.color(trigger.card)=='red') trigger.directHit.addArray(game.players);
					else if(trigger.addCount!==false){
						trigger.addCount=false;
						var stat=player.getStat().card;
						if(stat.sha) stat.sha--;
					}
				},
			},
			gzyongxian:{
                usable:1,
				audio:'xianzhen',
				trigger:{player:'phaseEnd'},
				filter:function(event,player){
                      return player.getStat('damage'); 
				},
				content:function(){
					'step 0'
                    player.draw();
					'step 1'
					var stat=player.getStat();
					stat.card={};
					for(var i in stat.skill){
						var bool=false;
						var info=lib.skill[i];
						if(info.enable!=undefined){
							if(typeof info.enable=='string'&&info.enable=='phaseUse') bool=true;
							else if(typeof info.enable=='object'&&info.enable.contains('phaseUse')) bool=true;
						}
						if(bool) stat.skill[i]=0;
					}
					'step 2'
					player.phaseUse();
				},
			},
			gzluyix:{
			    audio:'huisheng',
				unique:true,
				trigger:{player:'phaseAfter'},
				direct:true,
				round:2,
				filter:function(event,player){
					if(event.skill) return false;
					return true;
				},
				content:function(){
					'step 0'
					player.chooseTarget([1,2],get.prompt2('gzluyix'),function(card,player,target){
						return player!=target;
					}).set('ai',function(target){
						var player=_status.event.player;
						var att=get.attitude(player,target);
						var nh=target.countCards('h');
						if(att<0){
							for(var i=0;i<ui.selected.targets.length;i++){
								if(get.attitude(player,ui.selected.targets[i])<0) return 0;
							}
							if(target.hp==1){
								if(nh==0) return 2;
								if(nh==1) return 1;
							}
						}
						else if(att>0){
							if(target.isTurnedOver()) return 2.5;
							if(target.hp==1){
								if(nh==0) return 2;
								if(nh==1) return 0.9;
								if(ui.selected.targets.length) return 0.3;
							}
							else if(target.hp==2){
								if(nh==0) return 1.5;
								if(nh==1) return 0.5;
								if(ui.selected.targets.length) return 0.2;
							}
							else if(target.hp==3){
								if(nh==0) return 0.4;
								if(nh==1) return 0.35;
								if(ui.selected.targets.length) return 0.1;
							}
							if(!target.needsToDiscard(2)) return 0.2;
							if(ui.selected.targets.length||!player.needsToDiscard(2)) return 0.05;
						}
						return 0;
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzluyix',result.targets);
						player.insertEvent('gzluyix',lib.skill.gzluyix.content_phase);
						player.storage.gzluyix_targets=result.targets.slice(0);
						// player.storage.gzluyix--;
						// if(player.storage.gzluyix<=0){
						// 	player.unmarkSkill('gzluyix');
						// }
						game.delay();
					}
				},
				content_phase:function(){
					'step 0'
					player.addTempSkill('gzniyongx2');
					'step 1'
					event.list=[player].concat(player.storage.gzluyix_targets);
					event.exlist=[];
					event.list.sortBySeat();
					delete player.storage.gzluyix_targets;
					for(var i=0;i<game.players.length;i++){
						if(!event.list.contains(game.players[i])){
							game.players[i].out('gzluyix');
							event.exlist.push(game.players[i]);
						}
					}
					'step 2'
					if(event.list.length){
						event.list.shift().phase('gzluyix');
						event.redo();
					}
					'step 3'
					for(var i=0;i<event.exlist.length;i++){
						event.exlist[i].in('gzluyix');
					}
				},
				ai:{
					threaten:1.5
				}
			},
			gzbaolingy:{
			    audio:'baoling',
				trigger:{global:'loseAfter'},
				check:function(event,player){
					return get.damageEffect(event.player,player,player)>0;
				},
				filter:function(event,player){
					if(event.player.countCards('h')) return false;
					if(_status.currentPhase!=player) return false;
					if(event.player==player) return false;
					return event.hs&&event.hs.length>0;
				},
				content:function(){
					player.line(trigger.player,'green');
					trigger.player.damage();
				},
				ai:{
					threaten:1.1
				}
			},
			gzhengzhengy:{
				audio:'hengzheng',
                trigger:{
　　　　　　　　　　player:'phaseDrawBegin1',
                    player:"phaseUseEnd",
                },
				filter:function(event,player){
					return !event.numFixed&&!player.countCards('h');
				},
				check:function(event,player){
					var num=game.countPlayer(function(current){
						if(current.countCards('he')&&current!=player&&get.attitude(player,current)<=0){
							return true;
						}
						if(current.countCards('j')&&current!=player&&get.attitude(player,current)>0){
							return true;
						}
					});
					return num>=2;
				},
				content:function(){
					"step 0"
					var targets=game.filterPlayer();
					targets.remove(player);
					targets.sort(lib.sort.seat);
					event.targets=targets;
					event.num=0;
					trigger.changeToZero();
					player.line(targets,'green');
					"step 1"
					if(num<event.targets.length){
						if(event.targets[num].countCards('hej')){
							player.gainPlayerCard(event.targets[num],'hej',true);
						}
						event.num++;
						event.redo();
					}
				},
				ai:{
					noh:true,
					skillTagFilter:function(player,tag){
						if(tag=='noh'){
							if(player.countCards('h')!=1) return false;
						}
					},
					threaten:1,
				}
			},
            gzzhabingx:{
				audio:'lianpo',
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				mark:true,
				derivation:'lianpo',
				init:function(player,skill){player.storage[skill]=false},
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.gzzhabingx&&event.toShow.contains('gz_simayi');
				},
				check:function(event,player){
                  return !player.isMajor();
				},
				content:function(){
                    'step 0'      
                    player.awakenSkill('gzzhabingx');
                    'step 1'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzzhabingx')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,'gz_diy_spsimazhao');
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init('gz_diy_spsimazhao',player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
                    player.removeMark('xianqu_mark',1);
					player.removeMark('zhulianbihe_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
                    'step 2'
                    player.setIdentity('ye');
                    player.identity='ye';
                    'step 3'
                    player.addSkill('lianpo'); 
                    player.removeSkill('gzfankuix'); 
                    player.addMark('yinyang_mark'); 
				},
				ai:{
					threaten:0.7,
			   }
         },
			gzzhaoxinx:{
				audio:'xinfu_zhaoxin',
				trigger:{player:'phaseDrawEnd'},
				frequent:true,
                filter:function(event,player){
                  return player.countCards('h')>0;
　　　　　　　　},
　　			content:function(){
					"step 0"
					player.showHandcards();
					"step 1"
					var cards=player.getCards('h');
					for(var i=1;i<cards.length;i++){
						if(get.suit(cards[i])!=get.suit(cards[0])) return;
					}
					player.chooseUseTarget('sha',false);
				},
				group:'gzzhaoxinx_draw',
				subSkill:{
					draw:{
	                    trigger:{
                           player:"useCard",
                        },
                        frequent:true,
						trigger:{player:'damageEnd'},
						filter:function(event,player){
							var suits=['heart','club','spade','diamond'];
							var cards=player.get('h');
							for(var i=0;i<cards.length;i++){
								if(suits.contains(get.suit(cards[i])))
									suits.remove(get.suit(cards[i]));
							}
							return suits.length>0;
						},
						content:function(){
							player.showHandcards();
							var suits=['heart','club','spade','diamond'];
							event.cards=player.get('h');
							for(var i=0;i<event.cards.length;i++){
								if(suits.contains(get.suit(event.cards[i])))
									suits.remove(get.suit(event.cards[i]));
							}
							if(suits.length)
								player.draw(suits.length);
						 }
					  }
				  },
			},
					gzlanggux:{
 		      	 		audio:'splanggu',
        				enable:'phaseUse',
       	 				usable:1,
       	 				filter:function(event,player){
           	 				return player.hp>0;
      	 			 	},
						content:function(){
							player.loseHp();
							player.useCard({name:'jiu'},player);
						},
						ai:{
							order:8,
							result:{
								player:function(player){
									if(player.hp==5) return 0;
									if(player.getStat().card.sha>0) return 0;
									if(player.num('h','jiu')) return 0;	
									if(!player.num('h','sha')) return 0;
									if(player.hasSkill('jiu')) return 0;
									var att=0;
									for(var i=0;i<game.players.length;i++){
										if(game.players[i]!=player&&player.canUse({name:'sha'},game.players[i])){	
											att+=ai.get.effect(game.players[i],{name:'sha'},player,player);
										}
									}									
									if(player.hp==player.maxHp&&att>0) return 1;
									if(player.num('h','tao')&&att>0) return 1;
									return player.hp-2&&att>0;
								}			
							}
						},
					},		
			gzquanjix:{
				audio:'quanji',
				trigger:{player:['damageEnd','recoverEnd']},
				frequent:true,
				locked:false,
				notemp:true,
				init:function(player){
					if(!player.storage.gzquanjix) player.storage.gzquanjix=[];
				},
				filter:function(event){
					return event.num>0;
				},
				content:function(){
					"step 0"
					event.count=trigger.num;
					"step 1"
					event.count--;
					player.draw();
					"step 2"
					if(player.countCards('he')){
						player.chooseCard('将一张手牌置于武将牌上作为“权”',true);
					}
					else{
						event.goto(4);
					}
					"step 3"
					if(result.cards&&result.cards.length){
						player.lose(result.cards,ui.special,'toStorage');
						player.storage.gzquanjix=player.storage.gzquanjix.concat(result.cards);
						player.syncStorage('gzquanjix');
						player.markSkill('gzquanjix');
						game.log(player,'将',result.cards,'置于武将牌上作为“权”');
					}
					"step 4"
					if(event.count>0){
						player.chooseBool(get.prompt2('gzquanjix')).set('frequentSkill','gzquanjix');
					}
					else event.finish();
					"step 5"
					if(result.bool){
						player.logSkill('gzquanjix');
						event.goto(1);
					}
				},
				intro:{
					content:'cards',
					onunmark:function(storage,player){
						if(storage&&storage.length){
							player.$throw(storage,1000);
							game.cardsDiscard(storage);
							game.log(storage,'被置入了弃牌堆');
						 storage.length=0;
						}
					},
				},
				mod:{
					maxHandcard:function(player,num){
						return num+player.storage.gzquanjix.length;
					}
				},
				ai:{
					maixie:true,
					maixie_hp:true,
					threaten:0.8,
					effect:{
						target:function(card,player,target){
							if(get.tag(card,'damage')){
								if(!target.hasFriend()) return;
								if(target.hp>=4) return [0.5,get.tag(card,'damage')*2];
								if(!target.hasSkill('gzmouzuo')&&target.hp>1) return [0.5,get.tag(card,'damage')*1.5];
								if(target.hp==3) return [0.5,get.tag(card,'damage')*1.5];
								if(target.hp==2) return [1,get.tag(card,'damage')*0.5];
							}
						}
					}
				}
			},
					gzmouzuo:{
						enable:'phaseUse',
						usable:1,
						filter:function(event,player){return player.storage.gzquanjix.length>0},
						chooseButton:{
							dialog:function(event,player){
								return ui.create.dialog('谋佐<div class="center text"></br>选择一张要置入弃牌堆的“权”</br></div>',player.storage.gzquanjix,'hidden');
							},
							backup:function(links,player){return{
　　　　　　　　　　　　　　　　audio:'paiyi',
								filterCard:function(){return false},
								selectCard:-1,
								cards:links,
								discard:false,
								filterTarget:function(card,player,target){return target!=player},
								content:function(){
									player.draw();
									if(target.countCards('hej')) player.discardPlayerCard('谋佐<div class="center text"></br></br>弃置'+get.translation(target)+'区域内的一张牌</div>',target,'hej',true);
								},
								onuse:function(result,player){
									result.cards=lib.skill[result.skill].cards;
									var card=result.cards[0];
									player.$throw(card);
									player.storage.gzquanjix.remove(card);
									ui.discardPile.appendChild(card);
									player.syncStorage('gzquanjix');
									if(!player.storage.gzquanjix.length) player.unmarkSkill('gzquanjix');
									else player.updateMarks();
								},
								ai:{
									result:{
										target:function(player,target){
											var att=get.attitude(player,target);
											var es=target.getCards('e');
											var js=target.getCards('j');
											var num=0;
											if(att>0){
												if(js.length){
													var jj=js[0].viewAs?{name:js[0].viewAs}:js[0];
													if(js.length>1||get.effect(target,jj,target,player)<0) return 2;
													num=-1;
												}
												if(target.getEquip('baiyin')&&target.isDamaged()&&
													get.recoverEffect(target,player,player)>0){
													if(target.hp==1&&!target.hujia) return 1.6;
													if(target.hp==2) return 0.01;
												}
												if(es.length) num=-1;
												return num;
											}
											var noe=(es.length==0||target.hasSkillTag('noe'));
											var noe2=(es.length==1&&es[0].name=='baiyin'&&target.isDamaged());
											if(noe||noe2){
												if(js.length){
													for(var i=0;i<js.length;i++){
														var jj=js[i].viewAs?{name:js[i].viewAs}:js[i];
														if(get.effect(target,jj,target,player)>0){num=2;break;}
														num=-1;
													}
												}
											}
											return num;
										},
										player:function(player){
											if(player.countCards('h')+1>player.hp+Math.ceil(player.storage.gzquanjix.length/2-0.5)) return 0;
											return 1;
										}
									},
								}
							}},
							prompt:function(links,player){
								return '谋佐<div class="center text"></br>摸一张牌，然后弃置一名其他角色区域内的一张牌</div>'
							}
						},
						ai:{
							order:6,
							threaten:0.5,
							result:{
								player:function(player){
									if(player.countCards('h')+1>player.hp+Math.ceil(player.storage.gzquanjix.length/2-0.5)) return 0;
									return player.tempSkills.gzmouzuo4?0:1;
								}
							},
						}
					},
            gzliuwangx:{
				audio:'jili',
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				mark:true,
				init:function(player,skill){player.storage[skill]=false},
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.gzliuwangx&&event.toShow.contains('gz_xugong');
				},
				check:function(event,player){
                  return !player.isMajor();
				},
				content:function(){
                    'step 0'      
                    player.awakenSkill('gzliuwangx');
                    'step 1'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzliuwangx')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,'gz_sp_yanbaihu');
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init('gz_sp_yanbaihu',player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
                    player.removeMark('xianqu_mark',1);
					player.removeMark('zhulianbihe_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
                    'step 2'
                    player.setIdentity('ye');
                    player.identity='ye';
                    'step 3'
                    player.removeSkill('gzyechoux'); 
                    player.addSkill('gzyechouy'); 
                    player.addMark('yinyang_mark'); 
				},
				ai:{
					threaten:0.7,
			   }
         },

            gzyizhix:{
				audio:'zili',
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				mark:true,
				init:function(player,skill){player.storage[skill]=false},
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.gzyizhix&&event.toShow.contains('gz_jiangwei');
				},
				check:function(event,player){
                  return !player.isMajor();
				},
				content:function(){
                    'step 0'      
                    player.awakenSkill('gzyizhix');
                    'step 1'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzyizhix')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,'gz_re_zhonghui');
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init('gz_re_zhonghui',player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
                    player.removeMark('xianqu_mark',1);
					player.removeMark('zhulianbihe_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
                    'step 2'
                    player.setIdentity('ye');
                    player.identity='ye';
                    'step 3'
                     if(player.checkMainSkill('gzyizhix')){
					    player.addSkill('gzmoshoux');
				     	player.removeSkill('tianfu');
		             }
		             else{
					    player.removeSkill('tianfu');
			         }
                    player.addMark('yinyang_mark'); 
				},
				ai:{
					threaten:0.7,
			   }
         },
            gzhuanshoux:{
				audio:'taoluan',
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				mark:true,
				init:function(player,skill){player.storage[skill]=false},
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.gzhuanshoux&&event.toShow.contains('gz_zhangrang');
				},
				check:function(event,player){
                  return !player.isMajor();
				},
				content:function(){
                    'step 0'      
                    player.awakenSkill('gzhuanshoux');
                    player.storage.gzhuanshoux=true;
                    'step 1'
					player.modifyGroup('ye');                                                                                     					'step 2'
					player.addSkill('gzqiechong');
                    player.addMark('yinyang_mark'); 
				    player.removeSkill('gzluyix');
				},
				ai:{
					threaten:0.7,
			   }
         },
            gzhuoyingx:{
                audio:"ext:国战补充:2",
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				mark:true,
				derivation:'gzyanhuox',
				init:function(player,skill){player.storage[skill]=false},
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.gzhuoyingx&&event.toShow.contains('gz_hejin');
				},
				check:function(event,player){
                  return !player.isMajor();
				},
				content:function(){
                    'step 0'      
                    player.awakenSkill('gzhuoyingx');
                    'step 1'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzhuoyingx')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,'gz_diy_spdongzhuo');
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init('gz_diy_spdongzhuo',player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
                    player.removeMark('xianqu_mark',1);
					player.removeMark('zhulianbihe_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
                    'step 2'
                    player.setIdentity('ye');
                    player.identity='ye';
                    'step 3'
                    player.addSkill('gzyanhuox'); 
                    player.addMark('yinyang_mark'); 
				},
				ai:{
					threaten:0.7,
			   }
           },
			gzyanhuox:{
				trigger:{player:'damageEnd'},
				direct:true,
                audio:"mouzhu",
				filter:function(event,player){
					return player.countCards('h');
				},
				content:function(){
					"step 0"
					var enemy=game.countPlayer(function(current){
						return current!=player&&get.attitude(current,player,player)<0;
					});
					var next=player.chooseCardTarget({
						position:'h',
						filterTarget:function(card,player,target){
							return player!=target&&target.countCards('he');
						},
						selectCard:[1,player.countCards('h')],
						selectTarget:function(){
							if(ui.selected.targets.length>ui.selected.cards.length){
								game.uncheck('target');
							}
							return ui.selected.cards.length;
						},
						filterCard:function(card,player){
							return lib.filter.cardDiscardable(card,player);
						},
						ai1:function(card){
							if(ui.selected.cards.length>=enemy) return 0;
							return 9-get.value(card);
						},
						ai2:function(target){
							return -get.attitude(target,player,player);
						},
						prompt:get.prompt('gzyanhuox')
					});
					"step 1"
					if(result.bool){
						player.discard(result.cards);
						player.logSkill('gzyanhuox',result.targets);
						event.targets=result.targets;
						event.targets.sort(lib.sort.seat);
					}
					else{
						event.finish();
					}
					"step 2"
					if(event.targets.length){
						event.targets.shift().randomDiscard();
						event.redo();
					}
				},
				ai:{
					maixie:true,
					maixie_hp:true,
					effect:function(card,player,target){
						if(get.tag(card,'damage')){
							if(!target.hasFriend()){
								if(!player.hasFriend()) return;
							}
	if(target.countCards('h')>2||target.countCards('e')){
								return [1,0,0,-1];
							}
							return [1,-0.5];
						}
					},
				}
			},
            gzjuyix:{
                audio:"juyi",
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				mark:true,
				init:function(player,skill){player.storage[skill]=false},
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.gzjuyix&&event.toShow.contains('gz_zhugedan');
				},
				check:function(event,player){
                  return !player.isMajor();
				},
				content:function(){
                    'step 0'      
                    player.awakenSkill('gzjuyix');
                    'step 1'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzjuyix')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,'gz_sp_wenqin');
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init('gz_sp_wenqin',player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
                    player.removeMark('xianqu_mark',1);
					player.removeMark('zhulianbihe_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
                    'step 2'
                    player.setIdentity('ye');
                    player.identity='ye';
                    'step 3'
                    player.addSkill('gzshiyuanx'); 
                    player.addMark('yinyang_mark'); 
				},
				ai:{
					threaten:0.7,
			   }
         },
				 gzfuweix:{
                    audio:"gongao",
					trigger:{
						player:'damageAfter'
					},
					filter:function(event,player){
						return event.source;
					},
					check:function(event,player){
						return event.source&&get.attitude(player,event.source)<=0;
					},
					content:function(){
	 player.useCard({name:'sha',skill:'gzfuweix'},trigger.source);
					},
				},
				 _gzfuweix:{
				  	trigger:{
						source:'damageEnd'
					},
					forced:true,
					filter:function(event,player){
						return event.card&&event.card.skill=='gzfuweix';
					},
					content:function(){
						player.draw();
					},
				},
				 gzweizhongx:{
                    audio:"weizhong",
					trigger:{
						player:'phaseBegin'
					},
					frequent:true,
				    filter:function(event,player){
					  return player.isDamaged();
				    },
					content:function(){
						'step 0'
						event.num=player.getDamagedHp();
						event.cards=get.cards(event.num);
						event.chosen=[];
						if(player.countCards('he')==0) event.goto(4);
						'step 1'
						player.chooseCardButton('【威重】:请选择需要替换的牌',event.cards,[0,player.countCards('he')]).ai=function(button){
							return get.value(button.link)-5;
						};
						'step 2'
						if(result.bool){
							event.cards1=result.links;
							player.chooseCard(event.cards1.length,'he',true).set('ai',function(card){
								return 1;
							});
						}else{
							event.goto(4);
						};
						'step 3'
						if(result.bool){
							var cards=result.cards;
							var cards1=[];
							var cards2=[];
							for(var i=0;i<event.cards1.length;i++){
								var card=event.cards1[i];
								cards1.push(card);
								event.cards.remove(event.cards1[i]);
							};
							player.gain(cards1);
							for(var i=0;i<cards.length;i++){
								var card1=cards[i];
								cards2.push(card1);
								event.cards.add(game.createCard(cards[i]));
							};
							player.lose(cards2,ui.special);
						};
						'step 4'
						var js=player.getCards('j');
						var pos;
						var choice=-1;
						var getval=function(card,pos){
							if(js[pos]){
								return (get.judge(js[pos]))(card);
							}else{
								return get.value(card);
							};
						};
						for(pos=0;pos<Math.min(event.cards.length,js.length+2);pos++){
							var max=getval(event.cards[pos],pos);
							for(var j=pos+1;j<event.cards.length;j++){
								var current=getval(event.cards[j],pos);
								if(current>max){
									choice=j;
									max=current;
								};
							};
							if(choice!=-1) break;
						};
						player.chooseCardButton('【威重】:选择要移动的牌（还能移动'+event.num+'张）',event.cards).set('filterButton',function(button){
							return !_status.event.chosen.contains(button.link);
						}).set('chosen',event.chosen).set('ai',function(button){
							return button.link==_status.event.choice?1:0;
						}).set('choice',event.cards[choice]);
						event.pos=pos;
						'step 5'
						if(result.bool){
							var card=result.links[0];
							var index=event.cards.indexOf(card);
							event.card=card;
							event.chosen.push(card);
							event.cards.remove(event.card);
							var buttons=event.cards.slice(0);
							player.chooseControl(function(){
								return _status.event.controlai;
							}).set('controlai',event.pos||0).set('sortcard',buttons).set('tosort',card);
						}else{
							event.goto(7);
						}
						'step 6'
						if(typeof result.index=='number'){
							if(result.index>event.cards.length){
								ui.cardPile.appendChild(event.card);
							}else{
								event.cards.splice(result.index,0,event.card);
							};
							event.num--;
							if(event.num>0) event.goto(4);
						};
						'step 7'
						while(event.cards.length){
							ui.cardPile.insertBefore(event.cards.pop(),ui.cardPile.firstChild);
						};
					},
				},
			gzshiyuanx:{
			    audio:'juyi',
				unique:true,
				mark:true,
				skillAnimation:true,
				limited:true,
				animationColor:'orange',
				trigger:{player:'phaseUseEnd'},
				derivation:'benghuai',
				check:function(event,player){
					return player.hp<2||player.countCards('h')<=1;
				},
				filter:function(event,player){
					return !player.storage.gzshiyuanx;
				},
				content:function(){
					'step 0'
                    player.awakenSkill('gzshiyuanx');
                    player.storage.gzshiyuanx=true;
					if(player.checkMainSkill('gzjuyix')){
　　　　　　　　       player.removeCharacter(1);
					}
					else{
　　　　　　　　       player.removeCharacter(0);
					}
					'step 1'
					player.removeSkill('gzshiyuanx');
					player.gainMaxHp(3,true);
					'step 2'
					player.recover(3);
					player.addSkill('benghuai');
				},
                ai:{
                    order:4.5,
                    result:{
                        player:function(player,target){
　　　　　　　if(player.hp<2||player.countCards('h')<=2) 
                          return 5;
                        },
                    },
                    effect:{
                    threaten:0.8,
                }, 
              },
			},
				 gzwanglie:{
					trigger:{
						player:"phaseDrawBegin",
					},
				    audio:'drlt_wanglie',
					direct:true,
				    check:function(card){
					  return player.countCards('h')>=3||player.countCards('h','shan')>=1;
				    },
					filter:function(event,player){
						return game.players.length>=3;
					},
					content:function(){
						'step 0'
						player.chooseTarget(get.prompt('gzwanglie'),function(card,player,target){
							return player!=target;
						}).ai=function(target){
							return get.attitude(player,target);
						};
						'step 1'
						if(result.bool){
							player.line(result.targets);
							player.logSkill('gzwanglie');
							event.target=result.targets[0];
							trigger.untrigger();
							trigger.finish();
							event.target.phaseDraw();
							player.chooseTarget(function(card,player,target){
								return player!=target&&event.target!=target;
							},true).ai=function(target){
								return -get.attitude(player,target);
							};
						}else{
							event.finish();
						};
						'step 2'
						if(result.bool) event.target.useCard({name:'sha'},result.targets[0]);
					},
				},
			gzsijian:{
				trigger:{player:'loseAfter'},
				direct:true,
				audio:'sijian',
				filter:function(event,player){
					if(player.countCards('h')) return false;
					return event.hs&&event.hs.length>0;
				},
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gzsijian'),function(card,player,target){
						return player!=target&&target.countCards('he')>0;
					}).set('ai',function(target){
						return -get.attitude(_status.event.player,target);
					});
					"step 1"
					if(result.bool){
						player.logSkill('gzsijian',result.targets);
						event.target=result.targets[0];
　　　　　　　　　　　　player.discardPlayerCard(event.target,'he',[1,Math.max(1,player.getDamagedHp())],true);
					}
					else{
						event.finish();
					}
				},
				ai:{
					expose:0.2,
				}
			},
              gzxiongzix:{
                global:"gzxiongzix1",
            },
              gzxiongzix1:{
                audio:"yingzi",
                forceaudio:true,
                enable:"phaseUse",
                usable:1,
                filterCard:true,
                selectCard:1,
                discard:false,
                prepare:"give",
                filter:function(event,player){ 
					if(player.group!='wu') return false;
                    if(player.hasSkill('gzxiongzix')) return false;
                    return player.countCards('h')&&game.hasPlayer(function(current){
                        return current.hasSkill('gzxiongzix');
                    });
                },
                filterTarget:function(card,player,target){
                    return target!=player&&target.hasSkill('gzxiongzix');
                },
                check:function(card){
                return 8-get.value(card);
                },
                content:function(){
                target.gain(cards,player);
                },
                ai:{
                    threaten:1.2,
                    order:2,
                    result:{
                        target:1,
                    },
                },
            },
             gzlietux:{
                group:["gzlietux1","gzlietux2"],
                init:function(player){
        player.storage.gzlietux=0;
    },
                marktext:"烈",
                intro:{
                    content:function(storage){
            return '当前有'+storage+'个“烈图”标记';
        },
                },
                mark:true,
                trigger:{
                    player:"gainEnd",
                },
                forced:true,
                content:function(){
        player.storage.gzlietux++;
        player.syncStorage('gzlietux');
        game.log(player,'获得一个“烈图”标记');
    },
            },
              gzlietux1:{
                audio:"yeyan",
                trigger:{
                    player:"useCard",
                },
                filter:function(event,player){
        return player.countUsed()==3;
    },
                content:function(){
        'step 0'
        player.chooseTarget(get.prompt('gzlietux1'),'你可以对一名其他角色造成一点火焰伤害',function(card,player,target){
            return player!=target;
        }).set('ai',function(target){
            return get.damageEffect(target,_status.event.player,_status.event.player);
        });
         'step 1'
        if(result.bool){
            player.line(result.targets,'green');
            result.targets[0].damage('fire');
        }
    },
            },
              gzlietux2:{
                audio:"qinyin",
                trigger:{
                    player:"gainEnd",
                },
                direct:true,
                filter:function(event,player){
                    return player.storage.gzlietux>2
                },
                content:function(){
                    'step 0'
                    player.storage.gzlietux=0;
                    'step 1'
player.chooseTarget(get.prompt('gzlietux2'),'你可以令一名其他角色摸一张牌',function(card,player,target){
                        return target!=player;
                    }).set('ai',function(target){
                        return get.attitude(player,target);
                    });
                    'step 2'
                    if(result.bool){
                        player.logSkill('gzlietux2',result.targets);
                        result.targets[0].draw();
                    }
                },
            },
			gzyingzix:{
				audio:"yingzi",
                trigger:{
                  global:"damageEnd",
                },
				direct:true,
                group:"reyingzi",
				filter:function(event,player){
					return event.player.isIn()&&event.player.isFriendOf(player)&&player.countCards('he')>0;
				},
				content:function(){
					'step 0'
					player.chooseCard('he','是否重铸一张牌').set('ai',function(card){
						return 8-get.value(card);
					}).set('goon',function(){
						return !player.hasShan();
					}());
					'step 1'
					if(result.bool){
						var card=result.cards[0];
					    player.logSkill('gzyingzix');
						player.lose(card,ui.discardPile,'visible');
						player.$throw(card,1000);
						game.log(player,'将',card,'置入弃牌堆');
						player.draw();
					}
					else event.finish();
				},
			},
			gzlieren:{
				shaRelated:true,
				audio:'lieren',
                trigger:{
                  source:"damageBegin",
　　　　　　　　},
　　			filter:function(event,player){
					if(event._notrigger.contains(event.player)) return false;
					return (event.card&&event.card.name=='sha'&&event.getParent().name=='sha'&&
						event.player.isAlive()&&
						player.canCompare(event.player));
				},
				check:function(event,player){
					return get.attitude(player,event.player)<0&&player.countCards('h')>1;
				},
				//priority:5,
				content:function(){
					"step 0"
					player.chooseToCompare(trigger.player);
					"step 1"
					if(result.bool&&trigger.player.countGainableCards(player,'he')){
						player.gainPlayerCard(trigger.player,true,'he');
					}
				}
			},
			gzyuanhux:{
				audio:'twhuzhu',
				enable:'phaseUse',
				usable:1,
				filter:function(e,player){
					return player.countCards('e')>0;
				},
				filterTarget:function(card,player,target){
					return target!=player&&target.countCards('h')>0
				},
				content:function(){
					'step 0'
					target.chooseCard('交给'+get.translation(player)+'一张手牌','h',true);
					'step 1'
					target.give(result.cards,player);
					'step 2'
					if(player.countGainableCards(player,'e')) target.gainPlayerCard(player,'e',true);
					'step 3'
					if(target.isDamaged()&&target.hp<=player.hp){
						player.chooseBool('是否令'+get.translation(target)+'回复1点体力？').set('ai',function(){
							return get.recoverEffect(target,player,player);
						});
					}
					'step 4'
					if(result.bool) target.recover();
				},
				ai:{
					order:8,
					result:{
						target:function(player,target){
							var eff=(target.isDamaged()&&target.hp<=player.hp)?get.recoverEffect(target,player,target):0;
							if(eff<=0&&!player.countGainableCards(target,'e')) return -1;
							return eff;
						},
					},
				},
			},
			gzzhengjunx:{
				audio:'yuanlve',
				trigger:{player:'phaseEnd'},
				direct:true,
                mainSkill:true,
				init:function(player){
					if(player.checkMainSkill('gzzhengjunx')){
						player.removeMaxHp();
					 }
				},
				filter:function(event,player){
					return player.getHistory('skipped').length>0;
				},
				content:function(){
					'step 0'
					player.chooseTarget([1,player.getHistory('skipped').length],get.prompt2('gzzhengjunx'),function(card,player,target){
						return target!=player;
					}).set('ai',function(target){
　　　　　　             var att=get.attitude(_status.event.player,target);
                         return att>0;
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzzhengjunx',result.targets);
						event.targets=result.targets.slice(0).sortBySeat();
					}
					else{
						event.finish();
					}
					'step 2'
					if(event.targets&&event.targets.length){
						event.targets.shift().draw();
						event.redo();
					}
				},
			},
			yumianxiaoyao_skill:{
				audio:"zhiyi",
				trigger:{player:"phaseZhunbeiBegin"},
				direct:true,
				filter:function(event,player){
					return player.countCards('h')>0;
				},
				content:function(){
					'step 0'
					player.chooseCard('h','是否重铸一张手牌').set('ai',function(card){
						return 8-get.value(card);
					}).set('goon',function(){
						return !player.hasSha();
					}());
					'step 1'
					if(result.bool){
						player.addTempSkill('yumianxiaoyao_skill_2');
						var card=result.cards[0];
					    player.storage.yumianxiaoyao_skill=Math.floor(card.number/3);
					    player.logSkill('yumianxiaoyao_skill');
						player.lose(card,ui.discardPile,'visible');
						player.$throw(card,1000);
						game.log(player,'将',card,'置入弃牌堆');
						player.draw();
					}
					else event.finish();
				},
                subSkill:{
                    "2":{
                       mod:{
					     globalFrom:function(from,to,distance){
						   if(typeof from.storage.yumianxiaoyao_skill=='number'){
							  return distance-from.storage.yumianxiaoyao_skill;
						   }
					     }
                       },
                       sub:true,
                     },
                 },
			},
			gzshuangxiong:{
				group:"gzshuangxiong3",
				audio:"shuangxiong",
				trigger:{player:'phaseDrawBegin1'},
				check:function(event,player){
					if(player.countCards('h')>player.hp) return true;
					if(player.countCards('h')>3) return true;
					return false;
				},
				filter:function(event,player){
					return !event.numFixed;
				},
				content:function(){
					"step 0"
					player.judge(ui.special);
					"step 1"
					player.gain(result.card);
					player.$gain2(result.card);
					player.addTempSkill('gzshuangxiong2');
					player.storage.gzshuangxiong=get.color(result.card);
					trigger.changeToZero();
				}
			},
			gzshuangxiong2:{
				audio:"shuangxiong",
				enable:'phaseUse',
				prompt:function(){
					var player=_status.event.player;
					var str='将一张'+(player.storage.gzshuangxiong!='red'?'红':'黑')+'色手牌当做【决斗】使用';
					return str;
				},
				viewAs:{name:'juedou'},
				onremove:true,
				filterCard:function(card,player){
					return get.color(card)!=player.storage.gzshuangxiong;
				},
				check:function(card){
					return 8-get.value(card);
				},
				ai:{
					basic:{
						order:10
					}
				}
			},
			  gzshuangxiong3:{
				trigger:{
					player:"damageEnd",
				},
				direct:true,
				filter:function (event,player){
					var evt=event.getParent();
					return (evt&&evt.name=='juedou'&&evt[player==evt.player?'targetCards':'playerCards'].length)>0;
				},
				content:function (){
					"step 0"
					var evt=trigger.getParent();
					var cards=evt[player==evt.player?'targetCards':'playerCards'].slice(0);
					for(var i=0;i<cards.length;i++){
						if(get.position(cards[i])!='d') cards.remove(cards[i--]);
					}
					if(!cards.length) event.finish();
					else{
						event.cards=cards;
						player.chooseBool('是否发动【双雄】，获得'+get.translation(event.cards)+'?').ai=function(){
							return true;
						};
					}
					"step 1"
					if(result.bool){
						player.logSkill('gzshuangxiong');
						player.gain(cards,'gain2');
					}
				},
			},
			gzcuiku:{
			    audio:'qiangxi',
				unique:true,
				mark:true,
				skillAnimation:true,
				animationColor:'orange',
				trigger:{player:'phaseEnd'},
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzcuiku&&player.getStat('damage')>=3;
				},
				content:function(){
					'step 0'
					 player.awakenSkill('gzcuiku');
                     player.storage.gzcuiku=true;
                     player.recover();
                     player.mayChangeVice(true);
					'step 1'
        var card=game.createCard(get.inpile('equip1').randomGet()); 
                     player.equip(card); 
                     player.$draw(card); 
                     game.delay(); 
				},
				ai:{
					order:0.9,
					result:{
						player:1
					}
				}
			},
			gzmingshix:{
				audio:'mingshi',
                group:"gzmingshi",
				forced:true,
				trigger:{player:'phaseUseEnd'},
				filter:function(event,player){
					return !player.isMajor()&&game.hasPlayer(function(current){
						return current.isUnseen(2);
					})==0;
				},
				content:function(){
				   player.addSkill('gzmingshiy');
				   player.removeSkill('gzmingshix');
				},
			},
			gzmingshiy:{
				audio:'mingshi',
				trigger:{player:'damageBegin3'},
				direct:true,
				filter:function(event,player){
					return event.source&&event.source.hp>player.hp;
				},
				content:function(){
					"step 0"
					var next=player.chooseToDiscard(get.prompt2('gzmingshiy'),{color:'black'});
					next.set('ai',function(card){
						return 9-get.value(card);
					});
					next.set('logSkill','gzmingshiy');
					"step 1"
					if(result.bool){
						trigger.num--;
					}
				},
				ai:{
					threaten:0.8
				}
			},
			 gzqingchengy:{
				audio:'qingcheng',
				enable:"phaseUse",
				filter:function (event,player){
					return player.countCards('he',{color:'black'})&&game.hasPlayer(function(current){
						return current!=player&&!current.isUnseen(2);
					});
				},
				filterCard:{
					color:"black",
				},
				position:"he",
				filterTarget:function(card,player,target){
					return !target.isUnseen(2);
				},
				check:function (card){
					return 6-get.value(card,_status.event.player);
				},
				content:function(){
					'step 0'
					event.target=target;
					event.done=false;
					'step 1'
					if(get.is.jun(event.target)){
						event._result={control:'副将'};
					}
					else{
						var choice='主将';
						var skills=lib.character[event.target.name2][3];
						for(var i=0;i<skills.length;i++){
							var info=get.info(skills[i]);
							if(info&&info.ai&&info.ai.maixie){
								choice='副将';break;
							}
						}
						if(event.target.name=='gz_zhoutai'){
							choice='主将';
						}
						else if(event.target.name2=='gz_zhoutai'){
							choice='副将';
						}
						player.chooseControl('主将','副将',function(){
							return _status.event.choice;
						}).set('prompt','暗置'+get.translation(event.target)+'的一张武将牌').set('choice',choice);
					}
					'step 2'
					if(result.control=='主将'){
						event.target.hideCharacter(0);
					}
					else{
						event.target.hideCharacter(1);
					}
					event.target.addTempSkill('qingcheng_ai');
					if(get.type(cards[0])!='basic'&&!event.done){
					player.chooseTarget('是否暗置一名武将牌均为暗置的角色的一张武将牌？',function(card,player,target){
						return target!=player&&!target.isUnseen(2);
					}).set('ai',function(target){
						return -get.attitude(_status.event.player,target);
					});
					}
					else event.finish();
					'step 3'
					if(result.bool&&result.targets&&result.targets.length){
						player.line(result.targets[0],'green');
						event.done=true;
						event.target=result.targets[0];
						event.goto(1);
					}
				},
				ai:{
					order:8,
					result:{
						target:function (player,target){
							if(target.hp<=0) return -5;
							if(player.getStat().skill.qingcheng) return 0;
							if(!target.hasSkillTag('maixie')) return 0;
							if(get.attitude(player,target)>=0) return 0;
							if(player.hasCard(function(card){
								return get.tag(card,'damage')&&player.canUse(card,target,true,true);
							})){
								if(target.maxHp>3) return -0.5;
								return -1;
							}
							return 0;
						},
					},
				},
			},
			gzzhanshen:{
				audio:'zhanshen',
				trigger:{player:'phaseZhunbeiBegin'},
				forced:true,
				skillAnimation:true,
				animationColor:'gray',
				filter:function(event,player){
					return player.isDamaged()&&game.dead.filter(function(target){
						return target.isFriendOf(player);
					}).length>0
				},
				content:function(){
					player.awakenSkill('gzzhanshen');
                    player.storage.gzzhanshen=true;
					var card=player.getEquip(1);
					if(card) player.discard(card);
					player.loseMaxHp();
					player.addSkill('gzshenji');
				},
			},
		   gzshenji:{
				mod:{
					selectTarget:function(card,player,range){
						if(range[1]==-1) return;
						if(card.name=='sha'&&!player.getEquip(1)) range[1]+=2;
					},
					cardUsable:function(card,player,num){
						if(card.name=='sha'&&!player.getEquip(1)) return num+1;
					}
				},
			},
			gzshenlix:{
              audio:"ext:国战补充:2",  
              usable:1,
		      check:function(event,player){
					return player.hp>=2&&player.countCards('h','sha');
			  },
              trigger:{
                player:"shaBegin",
              },
              content:function(){ 
               "step 0" 
                player.loseHp();
               "step 1" 
                trigger.cancel();
               "step 2" 
                trigger.target.damage('thunder');
              },
　　	    },
			gzzhuiliex:{
			  audio:'zhuilie',
              usable:1,
              trigger:{
                source:"damageSource",
　　　　　　　},
　　　　　　　forced:true,
　　          content:function(){ 
              "step 0" 
               var card=get.cardPile(function(card){ 
                 return card.name=='sha'; 
               }); 
               if(card) player.gain(card,'gain2'); 
              "step 1" 
               player.addTempSkill('gzlingren_addsha','phaseUseEnd');
               },
　　	    },
　　　　gzfengpox:{
			audio:'fengpo',
	       usable:1,
	       frequent:true,
	       "prompt2":function (event,player){
		      return '是否重置你的基本牌使用次数？';
	       },
	       trigger:{
		      player:"shaMiss",
	       },
	       content:function (){
		      player.stat[player.stat.length-1].card.sha=0;
		      player.stat[player.stat.length-1].card.jiu=0;
	       }, 
　　　　},
			gzyinqiangx:{
				audio:'fengpo',
				trigger:{player:['useCard','respond']},
				filter:function(event,player){
					return event.card.name=='shan';
				},
				content:function(){
					"step 0"
player.chooseTarget(get.prompt2('gzyinqiangx'),function(card,player,target){ 
            return target!=player&&player.inRange(target); 
        }).set('ai',function(target){ 
　　　　　　var att=get.attitude(_status.event.player,target);
              return -att;
        }); 
					"step 1"
					if(result.bool){
                      var target=result.targets[0]; 
			          var nono=(get.damageEffect(target,player,target)>=0);
                      if(target.countCards('h',{type:'equip'})==0&&target.countCards('e')==0){
                        player.draw();
　　　　　　　　　　　　target.damage();
　　　　　　　　　　　}
　　　　　　　　　　　else{
　　　　　　　　　　　　target.chooseToDiscard('he','弃置一张装备牌',{type:'equip'},true).set('ai',function(card){
							if(target.nono){
								return 0;
							}
							if(target.hp==1) return 10-get.value(card);
							return 9-get.value(card);
						}).set('nono',nono);
					   }
					}
					else{
						event.finish;
					}
				},
				ai:{
					expose:0.3,
					threaten:0.7
				}
			},
			gzfujian:{
				audio:'xinfu_fujian',
                trigger:{
                  player:"phaseEnd",
                },
                filter:function(event,player){ 
                  return player.getStat('damage')>=player.hp; 
                },
				content:function(){
					"step 0"
					player.chooseControl().set('choiceList',[
					'变更一次副将',
					'观看一名角色的手牌并可以弃置其中的一张',
						]).set('ai',function(){
　　　　　　　　　　var rank=get.guozhanRank(player.name2,player);
　　　　　　　　　　if(rank<=5) return '变更一次副将';
					return '观看一名角色的手牌并可以弃置其中的一张';
					});
				   "step 1"
					if(result.index==0){
					  player.mayChangeVice();
					  event.finish();
					}
					else{
						event.goto(2);
					}
				   "step 2"
            player.chooseTarget(get.prompt2('gzfujian')).ai=function(target){
                       return -get.attitude(_status.event.player,target);
                     }
				   "step 3"
                    if(result.bool){
                      player.logSkill('gzfujian',result.targets[0])
　　　　　　　        player.discardPlayerCard(result.targets[0],'h','visible');
                      }
				},
			},
			gzfenxin:{
                audio:"fenxin",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzfenxin&&game.roundNumber>=2;
				},
				content:function(){
                'step 0' 
				 player.awakenSkill('gzfenxin');
                 player.storage.gzfenxin=true;
                'step 1' 
          player.chooseTarget(get.prompt2('gzfenxin')).ai=function(target){
            var att=get.attitude(_status.event.player,target);
                return att<0;
                }  
				'step 2'
                if(result.bool){
                        var target=result.targets[0];
                        player.logSkill('gzfenxin',target)
						target.showCharacter(0);
						target.removeCharacter(0);
				        target.loseMaxHp(target.maxHp-3);
                        target.addMark('zhulianbihe_mark'); 
                        target.addMark('xianqu_mark'); 
                        target.addMark('yinyang_mark'); 
                    }
				},
				ai:{ 	
				    order:4,
					result:{
						player:1,
					},
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzyangweix:{
				audio:'yaowu',
				trigger:{
					player:"die",
				},
                filter:function (event,player){ 
        return event.source&&event.source.isIn()&&event.source!=player; 
                },
				direct:true,
				forceDie:true,
				skillAnimation:true,
				animationColor:'wood',
				derivation:'yaowu',
				content:function(){
　　　　　　　　　trigger.source.addSkill('yaowu');
				},
				ai:{
					expose:0.5,
				},
			},
			gzshiyongx:{
              audio:"shiyong",
              forced:true,
			  trigger:{
				player:"shaMiss",
			  },
			  content:function(){
　　player.useCard({name:'juedou',isCard:true},'nowuxie',trigger.target,'noai');
			  },
		    },
			gzliehunx:{
				audio:'yinghun',
				trigger:{
				  player:'dieBegin'
				},
　　			content:function(){
					"step 0"
					player.chooseTarget(get.prompt2('gzliehunx'),function(card,player,target){
						return player!=target;
					}).set('ai',function(target){
						var player=_status.event.player;
						if(target.countCards('he')==0){
							return 0;
						}
						if(get.attitude(_status.event.player,target)>0){
							return 10+get.attitude(_status.event.player,target);
						}
						return 1;
					});
					"step 1"
					if(result.bool){
						event.num=player.getDamagedHp();
						player.logSkill(event.name,result.targets);
						event.target=result.targets[0];
						if(event.num==1){
							event.directcontrol=true;
						}
						else{
							var str1='摸'+get.cnNumber(event.num,true)+'弃一';
							var str2='摸一弃'+get.cnNumber(event.num,true);
							player.chooseControl(str1,str2,function(event,player){
								return _status.event.choice;
							}).set('choice',get.attitude(player,event.target)>0?str1:str2);
							event.str=str1;
						}
					}
					else{
						event.finish();
					}
					"step 2"
					if(event.directcontrol||result.control==event.str){
						event.target.draw(event.num);
						event.target.chooseToDiscard(true,'he');
					}
					else{
						event.target.draw();
						event.target.chooseToDiscard(event.num,true,'he');
					}
				},
				ai:{
					threaten:function(player,target){
						if(target.hp==target.maxHp) return 0.5;
						if(target.hp==1) return 2;
						if(target.hp==2) return 1.5;
						return 0.5;
					},
				}
			},
			gzxiechan:{
                audio:"ext:国战补充:1",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzxiechan&&player.countCards('h');
				},
                filterTarget:function(card,player,target){ 
                  return target!=player&&target.countCards('h'); 
                },
				content:function(){
                'step 0' 
                 player.chooseToCompare(target); 
                'step 1' 
					if(result.bool){
	player.useCard({name:'juedou',isCard:true},target,false);
					}
					else if(!result.tie){
	target.useCard({name:'juedou',isCard:true},player,false);
					}
			        else event.finish();
					'step 3'
					player.awakenSkill('gzxiechan');
                    player.storage.gzxiechan=true;
				},
				ai:{
					order:function(name,player){
						var cards=player.getCards('h');
						if(player.countCards('h','sha')==0){
							return 1;
						}
						for(var i=0;i<cards.length;i++){
							if(cards[i].name!='sha'&&cards[i].number>11&&get.value(cards[i])<7){
								return 9;
							}
						}
						return get.order({name:'sha'})-1;
					},
					result:{
						player:function(player){
							if(player.countCards('h','sha')>0) return 0;
							var num=player.countCards('h');
							if(num>player.hp) return 0;
							if(num==1) return -2;
							if(num==2) return -1;
							return -0.7;
						},
						target:function(player,target){
							var num=target.countCards('h');
							if(num==1) return -1;
							if(num==2) return -0.7;
							return -0.5
						},
					},
					threaten:0.4
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzxuanlve:{
				trigger:{player:['loseAfter','phaseDiscardEnd']},
				direct:true,
				audio:'xuanfeng',
				filter:function(event,player){
					if(event.name=='phaseDiscard'){
						var cards=[];
						player.getHistory('lose',function(evt){
							if(evt&&evt.getParent('phaseDiscard')==event&&evt.hs) cards.addArray(evt.hs);
						});
						return cards.length>1;
					}
					else return event.es&&event.es.length>0;
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzxuanlve'),'弃置一名其他角色的一张牌',function(card,player,target){
						return target!=player&&target.countDiscardableCards(player,'he');
					}).set('ai',function(target){
						return -get.attitude(_status.event.player,target);
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzxuanlve',result.targets);
						player.discardPlayerCard(result.targets[0],'he',true);
					}
				},
				ai:{
					noe:true,
					reverseEquip:true,
					effect:{
						target:function(card,player,target,current){
							if(get.type(card)=='equip') return [1,1];
						}
					}
				}
			},
			gzjianxiong:{
				audio:'rejianxiong',
				trigger:{player:'damageEnd'},
				direct:true,
				content:function(){
					"step 0"
					if(get.itemtype(trigger.cards)=='cards'&&get.position(trigger.cards[0],true)=='o'){
						player.chooseControl('摸一张牌','获得对你造成伤害的牌','cancel2').set('prompt',get.prompt('gzjianxiong')).ai=function(){
							var trigger=_status.event.getTrigger();
							if(trigger.cards.length==1&&trigger.cards[0].name=='sha') return 0;
							return 1;
						};
					}
					else{
						player.chooseControl('摸一张牌','cancel2').set('prompt',get.prompt('gzjianxiong'));
					}
					"step 1"
					if(result.control=='获得对你造成伤害的牌'){
						player.logSkill('gzjianxiong');
						player.gain(trigger.cards);
						player.$gain2(trigger.cards);
					}
					else if(result.control=='摸一张牌'){
						player.logSkill('gzjianxiong');
						player.draw();
					}
				},
				ai:{
					maixie:true,
					maixie_hp:true,
					effect:{
						target:function(card,player,target){
							if(get.tag(card,'damage')&&player!=target) return [1,0.6];
						}
					}
				}
			},
			gztunjunx:{
				skillAnimation:true,
				animationColor:'metal',
				limited:true,
				unique:true,
				enable:"phaseUse",
                audio:'xinfu_tunjun',
				filter:function (event,player){
					if(player.storage.gztunjunx) return false;
					return player.hp<player.maxHp;
				},
                filterTarget:function(card,player,target){
                    return player!=target;
                },
				selectTarget:1,
				content:function (){
					"step 0"
					player.awakenSkill('gztunjunx');
                    player.storage.gztunjunx=true;
					if(player.sameIdentityAs(target)){
                       target.mayChangeVice();
                    };
					"step 1"
					event.num=player.getDamagedHp();
					event.toequip=[];
					"step 2"
					var equip=get.cardPile(function(card){
						var bool1=true;
						for(var i=0;i<event.toequip.length;i++){
							if(get.type(card)=='equip'&&get.subtype(card)==get.subtype(event.toequip[i])) bool1=false;
						}
						return (get.type(card)=='equip'&&!event.toequip.contains(card)&&target.isEmpty(get.subtype(card))&&bool1);
					});
					if(equip) event.toequip.push(equip);
					else event.num=0;
					event.num--;
					"step 3"
					if(event.num>0) event.goto(2);
					"step 4"
					for (var i=0;i<event.toequip.length;i++){
						target.chooseUseTarget(event.toequip[i],true).set('animate',false).set('nopopup',true);
					}
				},
				ai:{
					order:1,
					result:{
						player:1,
						target:function(player,target){
							if(player.hasViceCharacter()&&!player.viceChanged) return 5;
							return 2;
						},
					},
				},
				mark:true,
				intro:{
					content:"limited",
				},
				init:function (player){
					player.storage.gztunjunx=false;
				},
			},
			gzlianhuax:{
				audio:'gxlianhua',
				trigger:{player:'useCardToBegin'},
				filter:function(event,player){
					if(player!=event.target&&player.countCards('e')==5) return false;
					return lib.skill.gzlianhuax.filterx(event.card,player)&&event.target==player;
				},
				filterx:function(card,player){
					if(!lib.inpile.contains(card.name)) return false;
					var info=get.info(card);
					if(info.type!='equip') return false;
					if(!info.subtype) return false;
					if(!player.getEquip(info.subtype)) return false;
					return true;
				},
				content:function(){
					'step 0'
					var list=['equip1','equip2','equip3','equip4','equip5'];
					for(var i=0;i<list.length;i++){
						if(player.getEquip(list[i])){
							list.splice(i--,1);
						}
					}
					list.push('cancel2');
					player.chooseControl(list,function(){
						return list.randomGet();
					}).prompt='炼化：是否改变'+get.translation(trigger.card.name)+'的装备类型？';
					'step 1'
					if(result.control&&result.control!='cancel2'){
						player.logSkill('gzlianhuax');
						var name=trigger.card.name+'_gzlianhuax_'+result.control;
						if(!lib.card[name]){
							lib.card[name]=get.copy(get.info(trigger.card));
							lib.card[name].subtype=result.control;
							lib.card[name].epic=true;
							lib.card[name].cardimage=trigger.card.name;
							lib.card[name].source=[trigger.card.name];
							lib.translate[name]=lib.translate[trigger.card.name];
							lib.translate[name+'_info']=lib.translate[trigger.card.name+'_info'];
						}
						trigger.card.name=name;
						trigger.cards[0].init([trigger.card.suit,trigger.card.number,name,trigger.card.nature]);
					}
				},
				ai:{
					effect:{
						target:function(card,player,target,current){
							if(target==player&&lib.skill.gzlianhuax.filterx(card,target)&&target.countCards('e')<5){
								return [1,3];
							}
						}
					}
				}
			},
			gzzhafux:{
				enable:'phaseUse',
                audio:"zhafu",
				filterCard:function(card){
					return get.type(card,'trick')=='trick';
				},
				usable:1,
				filter:function(event,player){
					if(player.countCards('h',{type:'trick'})) return true;
					if(player.countCards('h',{type:'delay'})) return true;
					return false;
				},
				selectCard:1,
				check:function(card){
					return 8-get.value(card);
				},
				content:function(){
					var card=game.createCard(get.inpile('equip').randomGet());
					player.equip(card);
					player.$gain2(card);
					game.delay();
				},
				ai:{
					result:{
						player:1
					},
					order:9
				}
			},
				gzlianpianx:{
					trigger:{
						player:"useCardBefore",
					},
					audio:"ext:国战补充:1",
                    usable:1,
					filter:function(event,player){
						return event.card&&event.card.name=='sha';
					},
					content:function(){
						"step 0"
						player.chooseControl(['视为【决斗】','视为【过河拆桥】','视为【水淹七军】','cancel2']).set('ai',function(event){
							if(player.countCards('h',{name:'sha'})>1&&player.hp>1) return '视为【决斗】';
							return 'cancel2';
						});
						"step 1"
						if(result.control=='视为【决斗】'){
							player.logSkill('gzlianpianx');
							trigger.card.name='juedou';
							for(var i=0;i<game.players.length;i++){
								game.players[i].addSkill('gzlianpianx1');
							};
						};
						if(result.control=='视为【水淹七军】'){
							player.logSkill('gzlianpianx');
							trigger.card.name='shuiyanqijunx';
							for(var i=0;i<game.players.length;i++){
								game.players[i].addSkill('gzlianpianx1');
							};
						};
						if(result.control=='视为【过河拆桥】'){
							player.logSkill('gzlianpianx');
							trigger.card.name='guohe';
							for(var i=0;i<game.players.length;i++){
								game.players[i].addSkill('gzlianpianx1');
							};
						};
					},
				},
				gzlianpianx1:{
					mod:{
						cardEnabled:function(card,player){
							if(card.name=='wuxie') return false;
						},
					},
					trigger:{
						global:"useCardAfter",
					},
					forced:true,
					popup:false,
					filter:function (event,player){
						return event.card&&(event.card.name=='juedou'||event.card.name=='guohe'||event.card.name=='shuiyanqijunx');
					},
					content:function(){
						for(var i=0;i<game.players.length;i++){
								game.players[i].removeSkill('gzlianpianx1');
							};
						},
					},
			gzfuhunx:{
				enable:['chooseToUse','chooseToRespond'],
				filterCard:true,
				selectCard:2,
				position:'h',
				audio:'fuhun',
				derivation:['new_paoxiao','gzwushengy'],
				viewAs:{name:'sha'},
				prompt:'将两张手牌当杀使用或打出',
				check:function(card){
					if(_status.event.player.hasSkill('gzwushengy')&&get.color(card)=='red') return 0;
					if(_status.event.name=='chooseToRespond'){
						if(card.name=='sha') return 0;
						return 6-get.useful(card);
					}
					if(_status.event.player.countCards('h')<4) return 6-get.useful(card);
					return 7-get.useful(card);
				},
				ai:{
					respondSha:true,
					order:function(item,player){
						if(player.hasSkill('gzwushengy')&&player.hasSkill('new_paoxiao')){
							return 1;
						}
						if(player.countCards('h')<4){
							return 1;
						}
						return 4;
					},
				},
				group:'gzfuhunx2'
			},
		  gzfuhunx2:{
			trigger:{source:'damageSource'},
			forced:true,
            usable:1,
            filter:function (event,player){
                                    if(player.hasSkill('new_paoxiao')&&player.hasSkill('gzwushengy')) return false;
					return event.getParent().skill=='gzfuhunx';
           },
           frequent:true,
           content:function(){
			  'step 0'
			  var list=['gzwushengy','new_paoxiao'];
			  player.chooseControl(list).set('ai',function(){
			  if(list.contains('new_paoxiao')) return 'new_paoxiao';
				   return list.randomGet();
			  }).set('prompt','选择并获得一项技能直到回合结束');
			  'step 1'
			  player.popup(result.control);
			  player.addTempSkill(result.control);
			  game.log(player,'获得了技能','#g【'+get.translation(result.control)+'】');
			  game.delay();
           },
        },
			gzhuweix:{
				trigger:{player:'phaseUseBegin'},
                audio:"ext:国战补充:1",
				content:function(){
					'step 0'
		player.chooseTarget(lib.filter.notMe,get.prompt('gzhuweix'),function(card,player,target){
	                return target.countCards('h');
					}).ai=function(){
						var player=_status.event.player;
						var att=get.attitude(player,target);
						return -att;
					};
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						event.target=target;
						player.logSkill('gzhuweix',target);
					}
					else event.finish();
					'step 2'
					player.chooseToPSS(target);
					'step 3'
					if(result.tie) event.goto(2);
					else if(result.bool){
					   player.discardPlayerCard(target,'h',true,'visible');
				    }
					else{
					   target.discardPlayerCard(player,'h',true,'visible');
				    }
				},
			},
			gzmansix:{
				audio:'hmmanyi',
				trigger:{global:'useCardAfter'},
				filter:function(event,player){
					return event.card.name=='nanman';
				},
				frequent:true,
				content:function(){
					var num=Math.ceil(game.countPlayer(function(current){
						return current.group=='shu';
					})/2);
				 player.draw(num);
				 player.addMark('gzmansix',num,false);
				},
				group:'gzmansix_cancel',
				subSkill:{
					cancel:{
				      trigger:{target:'useCardToBefore'},
				      forced:true,
				      filter:function(event,player){
					     return event.card.name=='nanman';
				      },
					  content:function(){
					     trigger.cancel();
					  }
				  },
				},
			},
			gzsouyingx:{
				trigger:{
                   player:"phaseDiscardBefore",
　　　　　　　　},
				audio:'souying',
				filter:function(event,player){
					return !player.storage.gzsouyingx;
				},
				init:function(player){
					lib.onwash.push(function(){
						delete player.storage.gzsouyingx;
					});
				},
				skillAnimation:true,
				check:function(event,player){
					return player.countCards('h')-player.hp>=2;
				},
				content:function(){
					player.storage.gzsouyingx=true;
                    trigger.cancel();
                    var targets=game.filterPlayer(function(current){
                         return player.canUse('nanman',current);
                    });
                       targets.sort(lib.sort.seat);
                       player.useCard({name:'nanman'},targets);
				},
			},
			gzxilix:{
				trigger:{global:'damageBegin2'},
				direct:true,
				audio:'hmxili',
                usable:1,
				filter:function(event,player){
					return event.getParent().name=='sha'&&event.source&&event.source.isFriendOf(player)&&event.source!=player&&event.source==_status.currentPhase&&event.source.sex=='male'&&player.countCards('he')>0&&player.countCards('he')>0;
				},
				content:function(){
					'step 0'
					player.chooseToDiscard('是否弃置一张牌，令'+get.translation(trigger.source)+'对'+get.translation(trigger.player)+'的伤害+1？','he').set('logSkill',['gzxilix',trigger.player]).ai=function(card){
						return 9-get.value(card);
					};
					'step 1'
					if(result.bool){
						trigger.num++;
					}
					else event.finish();
					'step 2'
					game.delayx();
				},
			},
            gzdanxinx:{
                audio:'danxin',
				trigger:{player:'damageEnd'},
				direct:true,
                mainSkill:true,
				init:function(player){
　　               player.checkMainSkill('gzdanxinx');
　　　　　　　　},
				filter:function(event,player){
					return player.countCards('h');
				},
                content:function (){
                "step 0"
                event.cards=player.countCards('h');
                "step 1"
                player.chooseCardTarget({
                   filterCard:true,
                   selectCard:1,
                   filterTarget:function(card,player,target){
                       return player!=target;
                   },
                   ai1:function(card){
                       return 10-get.value(card);
                   },
                   ai2:function(target){
                       var att=get.attitude(_status.event.player,target);
                       return att;
                   },
                  prompt:'请选择要送人的卡牌'
              });
              "step 2"
              if(result.bool){
                 player.logSkill('gzdanxinx',result.targets);
                 result.targets[0].gain(result.cards,player);
                 player.$give(result.cards.length,result.targets[0]);
              }
              else{
                 event.finish();
              }
              "step 3"
     player.chooseTarget(get.prompt('gzdanxinx'),function(card,player,target){
                        if(player==target) return false;
                        return player.canUse({name:'sha'},target,false);
                    }).set('ai',function(target){
　　　　　　var att=get.attitude(_status.event.player,target);
              return -att;
                    });
               "step 4"
               if(result.bool){
               player.logSkill('gzdanxinx',result.targets);
               player.line(result.targets[0],'fire');
                        player.useCard({name:'sha',isCard:true},result.targets[0],false);
                    }
                },
                ai:{
                    expose:0.3,
                },
            },
　　　　　　gzbangjun:{
                audio:"ext:国战补充:1",
				viceSkill:true,
						init:function(player){player.checkViceSkill('gzbangjun')},
                trigger:{
                  player:"damageAfter",
                },
                priority:10,
                filter:function(event,player){
		          if(!player.countCards('h')) return false;
		          if(!player.canMoveCard(false)) return false;
		          else return true;
                },
	            direct:true,
                content:function(){
		        "step 0"
		        player.chooseToDiscard(get.prompt('gzbangjun'),'你可弃置1张手牌以移动场上1张牌，若有角色因此失去了区域内最后一张牌，你可对其造成1点伤害。','h',1,false,function(card){
			       return true;
		        }).set('ai',function(card){
			       if(!player.canMoveCard(true)) return false;
			          return 6-get.value(card);
		        });
		        "step 1"
		        if(result.bool){
			      player.logSkill('gzbangjun');
			      player.moveCard();
		        }
		        else event.finish();
		       "step 2"
		        if(result.bool){
			       if(!result.targets[0].countCards(result.position)) {
				   event.tar=result.targets[0];
				   player.chooseBool('是否对'+get.translation(result.targets[0])+'造成一点伤害？').set('ai',function(){
					   return get.damageEffect(event.tar,player,player)>0;
				   });
			    }
			      else event.goto(4);
	        	}
		        else event.goto(4);
		       "step 3"
		       if(result.bool){
			       event.tar.damage(1,player,'nocard');
		       }
           },
				ai:{
					maixie:true,
					maixie_hp:true,
					threaten:0.8,
					effect:{
						target:function(card,player,target){
							if(get.tag(card,'damage')){
								if(!target.hasFriend()) return;
								if(target.hp>=4) return [0.5,get.tag(card,'damage')*2];
								if(target.hp>1) return [0.5,get.tag(card,'damage')*1.5];
								if(target.hp==3) return [0.5,get.tag(card,'damage')*1.5];
								if(target.hp==2) return [1,get.tag(card,'damage')*0.5];
							}
						}
					}
				},
　　　},
			  gzyechoux:{
				audio:'yechou',
				trigger:{
					player:"dying",
				},
				direct:true,
				derivation:'benghuai',
				content:function (){
					"step 0"
					player.chooseTarget(get.prompt2('gzyechoux'),function(card,player,target){
						return player!=target&&target.getDamagedHp()>=1; 					    }).set('ai',function(target){
　　　　　　　　　　　　if(target.hasSkill('benghuai')) return false;
						return -get.attitude(_status.event.player,target);
					});
					"step 1"
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('gzyechoux',target);
						player.line(target,'green');
						target.addSkill('benghuai');
					}
				},
				ai:{
					expose:0.5,
				},
			},
			  gzyechouy:{
				audio:'yechou',
				trigger:{
					player:"dying",
				},
				direct:true,
				derivation:'chanyuan',
				content:function (){
					"step 0"
					player.chooseTarget(get.prompt2('gzyechouy'),function(card,player,target){
						return player!=target&&target.getDamagedHp()>=1; 					    }).set('ai',function(target){
　　　　　　　　　　　　if(target.hasSkill('chanyuan')) return false;
						return -get.attitude(_status.event.player,target);
					});
					"step 1"
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('gzyechouy',target);
						player.line(target,'green');
						target.addSkill('chanyuan');
					}
				},
				ai:{
					expose:0.5,
				},
			},
             gzxiaojiex:{
                audio:"manzhong",
                trigger:{
                    player:"useCard",
                },
                filter:function (event,player){
        if(get.type(event.card)!="basic")return false;
        var t=lib.skill.gzxiaojiex.get(player);
        return t.countCards("he");
    },
                get:function (player){
        var num=player.countMark("gzxiaojiex");
        var t=player.next;
        while(num){
            t=t.next;
            num--
        }
        return t;
    },
                intro:{
                    content:function (num,player,skill){
            return "你下次发动"+get.translation(skill)+"的角色为"+get.translation(lib.skill[skill].get(player));
        },
                    nocount:true,
                },
                direct:true,
                content:function (){
        "step 0"
        var t=lib.skill.gzxiaojiex.get(player);
        var ne=player.discardPlayerCard(get.prompt2("gzxiaojiex",t),"he",t);
        ne.logSkill=["gzxiaojiex",t];
        ne.set("target",t);
        ne.set("ai",function(button){
            var t=_status.event.target;
            var player=get.player();
            if(player==t)return 1-get.value(button.link)/13;
            if(get.attitude(player,t)>0)return 0;
            return 1;
        });
        event.t=t;
        "step 1"
        if(result.bool){
            if(event.t==player){
                player.draw(2);
                var num=player.storage.gzxiaojiex;
                player.removeMark("gzxiaojiex",num,false);
            }
            else player.addMark("gzxiaojiex",1,false);
        }
    },
            },
             gzluanzhanx:{
                audio:"luanzhan",
                enable:"phaseUse",
                usable:1,
                filter:function (event,player){
        var hs=player.getCards('h');
        if(hs.length<2) return false;
        for(var i=0;i<hs.length;i++){
            var mod2=game.checkMod(hs[i],player,'unchanged','cardEnabled2',player);
            if(mod2===false) return false;
        }
        return true;
    },
                chooseButton:{
                    dialog:function (event,player){
            var list=[];
            list.push(['基本','','sha']);
            list.push(['锦囊','','nanman']);
            return ui.create.dialog("乱战",[list,"vcard"],"hidden");
        },
                    check:function (button){
            var player=get.player();
            return player.getUseValue({name:button.link[2]});
        },
                    filter:function (button,player){
            return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    backup:function (links,player){
            return {
                selectCard:-1,
                filterCard:true,
                popname:true,
                viewAs:{
                    name:links[0][2],
                },
                onuse:function(result,player){
                    player.logSkill("gzluanzhanx");
                },
            };
        },
                    prompt:function (links,player){
            return "将所有手牌当"+get.translation(links[0][2])+"使用";
        },
                },
                group:"gzluanzhanx_a",
                subSkill:{
                    a:{
                        charlotte:true,
                        silent:true,
                        trigger:{
                            player:["useCardAfter","useCardCancelled"],
                        },
                        filter:function (event,player){
                return event.skill=="gzluanzhanx_backup"&&!game.hasPlayer2(function(current){
                    return current.getHistory('damage',function(evt){
                        return evt.getParent(2).skill=="gzluanzhanx_backup";
                    }).length>0;
                })&&event.cards&&event.cards.length;
            },
                        content:function (){
                "step 0"
                player.draw(trigger.cards.length);
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                },
                ai:{
                    order:1,
                    result:{
                        player:function (player){
                var num=0;
                var cards=player.getCards('h');
                if(cards.length>=3&&player.hp>=3) return 0;
                for(var i=0;i<cards.length;i++){
                    num+=Math.max(0,get.value(cards[i],player,'raw'));
                }
                num/=cards.length;
                num*=Math.min(cards.length,player.hp);
                return 12-num;
            },
                    },
                },
            },
            gzfuyinx:{
                enable:"phaseUse",
                audio:"xinfu_fuyin",
                filter:function (event,player){
                  return !player.hasSkill('gzfuyinx_1');
                },
                content:function (){
                'step 0'
                 player.draw();
                'step 1'
				if(player.getEquip('liulongyuling')||player.getEquip('baiyin')){
                  player.chooseCard('h','父荫：将一张手牌置于牌堆顶，否则你本回合不能在发动此技能');
				}
			    else{
                  player.chooseCard('he','父荫：将一张牌置于牌堆顶，否则你本回合不能在发动此技能');
				}
                'step 2'
                 if(result.bool){
                 player.lose(result.cards,ui.special);
                 player.$throw(result.cards);
                 event.card=result.cards[0];
                 }
                 else{
                   player.addSkill('gzfuyinx_1');
                   event.finish();
                 }
                 'step 3'
                  if(event.card){
                  event.card.fix();
                  ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
                  }
                },
                subSkill:{
                    "1":{
                        trigger:{
                            global:"phaseEnd",
                        },
                        forced:true,
                        silent:true,
                        filter:function(event,player){
                          return true;
                        },
                        content:function (){
                          player.removeSkill('gzfuyinx_1');
                        },
                        sub:true,
                        popup:false,
                    },
                },
            },
			gzzuilunx:{
				enable:"phaseUse",
				usable:1,
                audio:"xinfu_zuilun",
				filterTarget:function (card,player,target){
					return player.sameIdentityAs(target)&&target!=player;
				},
				content:function (){
					'step 0'
					player.chooseJunlingFor(target);
					'step 1'
					event.junling=result.junling;
					event.targets=result.targets;
					var choiceList=['执行该军令'];
					if(target!=player) choiceList.push('拒绝执行由'+get.translation(player)+'发起的军令');
					else choiceList.push('不执行该军令');
					target.chooseJunlingControl(player,result.junling,result.targets).set('prompt','行动').set('choiceList',choiceList).set('ai',function(){
						return 0;
					});
					'step 2'
					if(result.index==0) {
						target.carryOutJunling(player,event.junling,targets);
						target.chooseDrawRecover(2,true);
					}
					else event.finish();
				},
				ai:{
					order:9.5,
					result:{
						player:1,
						target:3,
					},
				},
			},
			gzbenyux:{
				audio:'benyu',
				trigger:{player:'damageEnd'},
				filter:function(event,player){
					return						event.source.isAlive()&&player.canCompare(event.source);
				},
				check:function(event,player){
					return get.attitude(player,event.source)<0&&player.countCards('h')>1;
				},
				//priority:5,
				content:function(){
					"step 0"
					player.chooseToCompare(trigger.source);
					"step 1"
					if(result.bool&&trigger.source.countCards('he')){
						event.num=trigger.source.countCards('he');
						player.gain(trigger.source.getCards('he'),trigger.source,'giveAuto');
						player.chooseCard('交给'+get.translation(trigger.source)+get.cnNumber(event.num)+'张牌','he',event.num,true).set('ai',function(card){
							return -get.value(card);
						});
					}
					else event.finish();
					"step 2"
					if(result.cards){
						trigger.source.gain(result.cards,player,'giveAuto');
					}
				}
			},
			gzshefux:{
				trigger:{global:'useCard'},
				direct:true,
				priority:5.5,
				audio:'shefu',
				round:1,
				filter:function(event,player){
					if(get.type(event.card)=='trick'&&event.card.isCard){
						if(event.player==player) return false;
						if(!player.countCards('he',{suit:get.suit(event.card)})) return false;
						return true;
					}
					return false;
				},
				content:function(){
					'step 0'
					var att=get.attitude(player,trigger.player);
					var suit=get.suit(trigger.card);
					player.chooseToDiscard('he',get.prompt2('gzshefux',trigger.player),function(card){
						return get.suit(card)==suit;
					}).set('autodelay',true).set('logSkill',['gzshefux',trigger.player]).ai=function(card){
						if(att<0){
							return 8-get.value(card);
						}
						return 0;
					};
					'step 1'
					if(result.bool){
						trigger.cancel();
						player.chooseUseTarget(true,trigger.card);
					}
				}
			},
			gzqiechong:{
				audio:"qinqing",
				enable:'phaseUse',
				usable:1,
				filterTarget:true,
				selectTarget:[1,2],
				content:function(){
					'step 0'
					if(target==targets[0]){
						game.asyncDraw(targets);
					}
					'step 1'
					if(target==targets[0]){
						game.delay();
					}
					'step 2'
	                target.discardPlayerCard(target,'hej',true);
				},
				ai:{
					order:10,
					result:{
						target:function(player,target){
							if(target.countCards('j')) return 2;
							switch(target.countCards('he')){
								case 0:return 0;
								case 1:return 0.5;
								case 2:return 0.8;
								default:return 1;
							}
						}
					},
					threaten:1.2
				}
			},
			gztaoluanx:{
				audio:"taoluan",
				trigger:{player:'useCard'},
				filter:function(event,player){
					// if(get.is.converted(event)) return false;
					if(!player.countCards('he')) return false;
					// if(!event.targets||!event.targets.contains(player)) return false;
					var info=get.info(event.card);
					if(info.type!='trick'&&info.type!='basic') return false;
					if(info.multitarget) return false;
					if(event.targets.length>1) return true;
					return game.hasPlayer(function(current){
						return !event.targets.contains(current)&&lib.filter.targetEnabled2(event.card,event.player,current);
					});
				},
				direct:true,
				content:function(){
					'step 0'
					var bool1=(trigger.targets.length>1);
					var bool2=game.hasPlayer(function(current){
						return !trigger.targets.contains(current)&&lib.filter.targetEnabled2(trigger.card,trigger.player,current);
					});
					if(bool1&&bool2){
						player.chooseControlList(true,get.prompt('gztaoluanx'),[
							'弃置任意张牌 ，并为'+get.translation(trigger.card)+'增加等量的目标',
							'弃置任意张牌 ，并为'+get.translation(trigger.card)+'减少等量的目标'],function(event,player){
							if(_status.event.add) return 0;
							return 1;
						}).set('add',get.effect(player,trigger.card,trigger.player,player)>=0);
					}
					else if(bool2){
						event.type='add';
						event.goto(2);
						event.unchosen=true;
					}
					else{
						event.type='remove';
						event.goto(2);
						event.unchosen=true;
					}
					'step 1'
					if(result.control=='cancel2'){
						event.finish();
					}
					else if(result.index==1){
						event.type='remove';
					}
					else{
						event.type='add';
					}
					'step 2'
					if(event.type=='add'){
						var num=game.countPlayer(function(current){
							return !trigger.targets.contains(current)&&lib.filter.targetEnabled2(trigger.card,trigger.player,current);
						});
						var num2=game.countPlayer(function(current){
							if(!trigger.targets.contains(current)&&lib.filter.targetEnabled2(trigger.card,trigger.player,current)){
								return get.effect(current,trigger.card,player,player)>0;
							}
							return false;
						});
						if(num2>2) num2=2;
						player.chooseCardTarget({
							selectCard:[1,num],
							selectTarget:function(){
								return ui.selected.cards.length;
							},
							position:'he',
							prompt:event.unchosen?get.prompt('gztaoluanx'):null,
							prompt2:'弃置任意张牌，并为'+get.translation(trigger.card)+'增加等量的目标',
							filterTarget:function(card,player,target){
								return !trigger.targets.contains(target)&&lib.filter.targetEnabled2(trigger.card,trigger.player,target);
							},
							ai1:function(card){
								if(ui.selected.cards.length>=num2) return 0;
								return get.value(trigger.card)-get.value(card)-1;
							},
							ai2:function(target){
								var trigger=_status.event.getTrigger();
								return get.effect(target,trigger.card,trigger.player,_status.event.player);
							}
						});
					}
					else{
						var num=trigger.targets.length-1;
						var num2=game.countPlayer(function(current){
							if(trigger.targets.contains(current)){
								return get.effect(current,trigger.card,player,player)<0;
							}
							return false;
						});
						if(num2>2) num2=2;
						player.chooseCardTarget({
							selectCard:[1,num],
							selectTarget:function(){
								return ui.selected.cards.length;
							},
							prompt:event.unchosen?get.prompt('gztaoluanx'):null,
							prompt2:'弃置任意张牌，并为'+get.translation(trigger.card)+'减少等量的目标',
							filterTarget:function(card,player,target){
								return trigger.targets.contains(target);
							},
							ai1:function(card){
								if(!player.needsToDiscard(ui.selected.cards.length)) return 0;
								if(ui.selected.cards.length>=num2) return 0;
								return Math.max(5,get.value(trigger.card))-get.value(card)-1;
							},
							ai2:function(target){
								var trigger=_status.event.getTrigger();
								return -get.effect(target,trigger.card,trigger.player,_status.event.player);
							}
						});
					}
					'step 3'
					if(result.bool){
						if(!event.isMine()) game.delayx();
						event.targets=result.targets.slice(0);
						event.cards=result.cards.slice(0);
					}
					else{
						event.finish();
					}
					'step 4'
					player.logSkill('gztaoluanx',event.targets);
					player.discard(event.cards).delay=false;
					if(event.type=='add'){
						for(var i=0;i<event.targets.length;i++){
							trigger.targets.push(event.targets[i]);
						}
					}
					else{
						for(var i=0;i<event.targets.length;i++){
							trigger.targets.remove(event.targets[i]);
						}
					}
				},
				ai:{
					expose:0.2
				}
			},
			gzguanchaox:{
                mark:true,
                locked:true,
                marktext:"潮",
				audio:"xinfu_guanchao",
                intro:{
                    content:function(storage,player,skill){
                        if(player.storage.gzguanchaox==true) return '本回合当你使用牌时，若你此阶段使用过的所有牌的点数为递增，你摸一张牌';
                        return '本回合当你使用牌时，若你此阶段使用过的所有牌的点数为递减，你摸一张牌';
                    },
                },
                trigger:{
                    player:"phaseUseBegin",
                },
                forced:true,
                content:function(){
                    if(player.storage.gzguanchaox==true){
                        player.storage.gzguanchaox=false;
                        player.addTempSkill('gzguanchaox_2',{player:'phaseAfter'});
                    }else{
                        player.storage.gzguanchaox=true;
                        player.addTempSkill('gzguanchaox_1',{player:'phaseAfter'});
                    };
                },
				subSkill:{
					1:{
						mark:true,
						marktext:"增",
						intro:{
							content:"单调递增",
						},
						trigger:{
							player:"useCard",
						},
						audio:"xinfu_guanchao",
						forced:true,
						mod:{
							aiOrder:function(player,card,num){
								if(typeof card.number!='number') return;
								var history=player.getHistory('useCard',function(evt){
 								return evt.isPhaseUsing();
 							});
 							if(history.length==0) return num+10*(14-card.number);
 							var num=get.number(history[0].card);
 							if(!num) return;
 							for(var i=1;i<history.length;i++){
 								var num2=get.number(history[i].card);
 								if(!num2||num2<=num) return;
 								num=num2;
 							}
 							if(card.number>num) return num+10*(14-card.number);
							},
						},
						filter:function (event,player){
							var history=player.getHistory('useCard',function(evt){
								return evt.isPhaseUsing();
							});
							if(history.length<2) return false;
							var num=get.number(history[0].card);
							if(!num) return false;
							for(var i=1;i<history.length;i++){
								var num2=get.number(history[i].card);
								if(!num2||num2<=num) return false;
								num=num2;
							}
							return true;
						},
						content:function (){
							player.draw();
						},
						sub:true,
					},
					2:{
						mark:true,
						marktext:"减",
						intro:{
							content:"单调递减",
						},
						init:function (player){
							player.storage.guanchao=0;
						},
						onremove:function (player){
							delete player.storage.guanchao;
						},
						trigger:{
							player:"useCard",
						},
						audio:"xinfu_guanchao",
						forced:true,
						mod:{
							aiOrder:function(player,card,num){
								if(typeof card.number!='number') return;
								var history=player.getHistory('useCard',function(evt){
 								return evt.isPhaseUsing();
 							});
 							if(history.length==0) return num+10*card.number;
 							var num=get.number(history[0].card);
 							if(!num) return;
 							for(var i=1;i<history.length;i++){
 								var num2=get.number(history[i].card);
 								if(!num2||num2>=num) return;
 								num=num2;
 							}
 							if(card.number<num) return num+10*card.number;
							},
						},
						filter:function (event,player){
							var history=player.getHistory('useCard',function(evt){
								return evt.isPhaseUsing();
							});
							if(history.length<2) return false;
							var num=get.number(history[0].card);
							if(!num) return false;
							for(var i=1;i<history.length;i++){
								var num2=get.number(history[i].card);
								if(!num2||num2>=num) return false;
								num=num2;
							}
							return true;
						},
						content:function (){
							player.draw();
						},
						sub:true,
					},
				},
			},
			gzlonghunx:{
			    audio:'longhun1',
				mark:true,
				limited:true,
				enable:'chooseToUse',
				skillAnimation:true,
				animationColor:'fire',
				filter:function(event,player){
					return !player.storage.gzlonghunx&&player.hp<=0;
				},
				content:function(){
                    "step 0"
                     var cards=player.getCards('hej');
                     player.discard(cards);
					"step 1"
					if(player.isLinked()) player.link();
					"step 2"
					if(player.isTurnedOver()) player.turnOver();
                    "step 3"
                     player.draw(3);
					"step 4"
				    var hp=player.hp;
				    var maxhp=player.maxHp;
				    var group=player.group;
					if(player.checkMainSkill('gzlonghunx')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,'gz_diy_spliushan');
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init('gz_diy_spliushan',player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
                    player.group=group;
                    player.removeMark('xianqu_mark',1);
					player.removeMark('zhulianbihe_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
					"step 5"
                    player.awakenSkill('gzlonghunx');
                    player.storage.gzlonghunx=true;
					player.recover(1-player.hp);
					player.removeSkill('gzchongzhenx');
					player.addSkill('gzchixin');
					player.addSkill('gzjuejing');
					player.addMark('yinyang_mark');
				},
				ai:{
					save:true,
					skillTagFilter:function(player){
						if(player.hp>0) return false;
					},
					result:{
						player:3
					}
				}
			},
			gzjuejing:{
				unique:true,
				locked:true,
			    audio:'juejing',
				group:['gzjuejing1','gzjuejing2','gzjuejing3'],
				intro:{
					content:'time'
				},
				ai:{
					noh:true,
					threaten:0.8,
					effect:{
						target:function(card,player,target){
							if(card.name=='bingliang') return 0;
							if(card.name=='lebu') return 1.5;
							if(card.name=='guohe'){
								if(!target.countCards('e')) return 0;
								return 0.5;
							}
						}
					}
				}
			},
			gzjuejing1:{
				trigger:{player:['phaseDrawBefore','phaseDiscardBefore']},
				priority:10,
				forced:true,
				popup:false,
				check:function(){
					return false;
				},
				content:function(){
					trigger.cancel();
				}
			},
			gzjuejing2:{
				trigger:{player:['loseEnd','drawEnd'],global:'gameDrawAfter'},
				check:function(event,player){
					return player.countCards('h')<2;
				},
				priority:10,
				forced:true,
				filter:function(event,player){
					return player.countCards('h')<3;
				},
				content:function(){
					player.draw(3-player.countCards('h'));
				}
			},
			gzjuejing3:{
				trigger:{player:'gainEnd'},
				priority:10,
				forced:true,
				filter:function(event,player){
					return player.countCards('h')>3;
				},
				check:function(event,player){
					return player.countCards('h')<2;
				},
				content:function(){
					player.chooseToDiscard(true,player.countCards('h')-3);
				}
			},
			gzchixin:{
				group:['gzchixin1','gzchixin2'],
			    audio:'longdan_sha',
			},
			gzchixin1:{
				enable:['chooseToRespond','chooseToUse'],
				filterCard:{suit:'diamond'},
				position:'he',
				viewAs:{name:'sha'},
				prompt:'将一张♦牌当杀使用或打出',
				check:function(card){return 5-get.value(card)},
				ai:{
					respondSha:true,
				}
			},
			gzchixin2:{
				enable:['chooseToUse','chooseToRespond'],
				filterCard:{suit:'diamond'},
				viewAs:{name:'shan'},
				position:'he',
				prompt:'将一张♦牌当闪使用或打出',
				check:function(card){return 5-get.value(card)},
				ai:{
					respondShan:true,
					effect:{
						target:function(card,player,target,current){
							if(get.tag(card,'respondShan')&&current<0) return 0.8
						}
					},
				}
			},
			gzchongzhenx:{
			    audio:'chongzhen2',
                forced:true,
				trigger:{player:'phaseJieshuBegin'},
				content:function(){
                "step 0"
player.chooseTarget('请选择〖冲阵〗的目标',1,function(card,player,target){
					return target!=player;
                 },true).set('ai',function(target){
                    return -ai.get.attitude(_status.event.player,target);
                 });
                "step 1"
				player.line(result.targets[0]);
				result.targets[0].damage(player);
				player.loseHp();
			    },
			},
			gzduoruiy:{
				trigger:{player:'phaseUseBegin'},
				forced:true,
			    audio:'drlt_duorui',
				filter:function(event,player){
					return player.storage.gzduoruiy>0;
				},
				content:function(){
					'step 0'
					var list=get.gainableSkills(function(info){
						if(typeof info.enable=='string') return info.enable=='phaseUse';
						if(Array.isArray(info.enable)) return info.enable.contains('phaseUse');
					},player);
					list.remove(player.getSkills());
					list=list.randomGets(2);
					event.skillai=function(){
						return get.max(list,get.skillRank,'item');
					};
					if(event.isMine()){
						var dialog=ui.create.dialog('forcebutton');
						dialog.add('夺锐：选择获得一项技能');
						var clickItem=function(){
							_status.event._result=this.link;
							dialog.close();
							game.resume();
						};
						for(var i=0;i<list.length;i++){
							if(lib.translate[list[i]+'_info']){
								var translation=get.translation(list[i]);
								if(translation[0]=='新'&&translation.length==2){
									translation=translation.slice(1,2);
								}
								else{
									translation=translation.slice(0,2);
								}
								var item=dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+
								translation+'】</div><div>'+lib.translate[list[i]+'_info']+'</div></div>');
								item.firstChild.addEventListener('click',clickItem);
								item.firstChild.link=list[i];
							}
						}
						dialog.add(ui.create.div('.placeholder'));
						event.switchToAuto=function(){
							event._result=event.skillai();
							dialog.close();
							game.resume();
						};
						_status.imchoosing=true;
						game.pause();
					}
					else{
						event._result=event.skillai();
					}
					'step 1'
					_status.imchoosing=false;
					var link=result;
					player.addTempSkill(link,'phaseUseAfter');
					player.popup(link);
					player.flashAvatar('gzduoruiy',link);
					game.log(player,'获得了技能','【'+get.translation(link)+'】');
					game.delay();
					'step 2'
                    player.removeMark('gzduoruiy',1);
				},
				intro:{
					content:'mark'
				},
				group:'gzduoruiy_init',
				subSkill:{
					init:{
	                    trigger:{player:'showCharacterAfter'},
						forced:true,
						popup:false,
						content:function(){
							player.storage.gzduoruiy=game.countPlayer(function(current){
								return current.group!='wei';
							});
							player.markSkill('gzduoruiy');
						}
					},
				},
				ai:{
					threaten:1.5
				}
			},
			gzguixinx:{
				trigger:{player:'phaseBeginStart'},
			    audio:'guixin',
				direct:true,
				init:function(player){
					if(player.storage.gzguixinx>0) {
						player.markSkill('gzguixinx');
					}
				},
				filter:function(event,player){
					return player.storage.gzguixinx>0;
				},
				content:function(){
					'step 0'
					player.chooseTarget(function(card,player,target){
						return player!=target;
					},get.prompt2('gzguixinx')).set('pskill',trigger.skill).set('ai',function(target){
						if(_status.event.pskill) return 0;
						var player=_status.event.player;
						var nh=player.countCards('h');
						var nh2=target.countCards('h');
						var num=nh2-nh;
						if(player.hp==1){
							return num;
						}
						if(get.threaten(target)>=1.5){
							if(num<2) return 0;
						}
						else{
							if(num<3) return 0;
						}
						return num+Math.sqrt(get.threaten(target));
					});
					'step 1'
					if(result.bool){
						player.storage.gzguixinx--;
						if(player.storage.gzguixinx<=0){
							player.unmarkSkill('gzguixinx');
						}
						else{
							player.updateMarks();
						}
						var target=result.targets[0];
						player.logSkill('gzguixinx',target);
						var clone=function(pos){
							var cloned=[];
							var cards=target.getCards(pos);
							for(var i=0;i<cards.length;i++){
								cloned.push(game.createCard(cards[i]));
							}
							return cloned;
						}
						var tag=player.addSubPlayer({
							name:target.name,
							skills:target.getStockSkills().concat('gzguixinx_exit'),
							hs:clone('h'),
							es:clone('e'),
							hp:target.hp,
							maxHp:target.maxHp,
							intro:'回合结束后切换回主武将'
						});
						player.callSubPlayer(tag);
					}
				},
				intro:{
					content:'mark'
				},
				group:'gzguixinx_init',
				subSkill:{
					init:{
	                    trigger:{player:'showCharacterAfter'},
						forced:true,
						popup:false,
						content:function(){
					'step 0'
                     if(player.checkMainSkill('gzguixinx')){
			            player.removeCharacter(1);
		             }
		             else{
			           player.removeCharacter(0);
			         }
					'step 1'
							player.storage.gzguixinx=game.countPlayer(function(current){
								return current.group!='wei';
							});
							player.markSkill('gzguixinx');
						}
					},
					exit:{
						trigger:{player:'phaseAfter'},
						silent:true,
						content:function(){
							player.exitSubPlayer(true);
						}
					}
				},
				ai:{
					threaten:1.5
				}
			},
			gzqiluanx:{
				audio:'qiluan2',
				trigger:{global:'phaseEnd'},
				frequent:true,
				filter:function(event,player){
					return player.getStat('kill')>0;
				},
				content:function(){
						player.draw(3);
				}
			},
			gzqiluanx2:{
				audio:'qiluan2',
			},
			gzroulinx:{
				audio:'roulin',
				trigger:{player:'useCardToPlayered'},
　　　　　　　　forced:true,
				viceSkill:true,
						init:function(player){player.checkViceSkill('gzroulinx')},
				filter:function(event,player){
					if(event.card.name!='sha') return false;
					if(player.sex=='male'&&event.target.sex=='female') return true;
					if(player.sex=='female'&&event.target.sex=='male') return true;
					return false;
				},
				content:function(){
                   player.viewHandcards(trigger.target);
                   trigger.target.link(true);
				}
			},
			gzbaolingx:{
			    audio:'baoling',
				unique:true,
				mark:true,
				skillAnimation:true,
				animationStr:'暴凌',
				limited:true,
				animationColor:'orange',
				trigger:{player:'phaseUseEnd'},
				init:function(player){
					player.checkMainSkill('gzbaolingx');
				},
				derivation:'benghuai',
				mainSkill:true,
				check:function(event,player){
					return player.hp<2||player.countCards('h')<=1;
				},
				filter:function(event,player){
					return !player.storage.gzbaolingx;
				},
				content:function(){
					'step 0'
                    player.awakenSkill('gzbaolingx');
                    player.storage.gzbaolingx=true;
					player.removeCharacter(1);
					'step 1'
					player.removeSkill('gzbaolingx');
					player.gainMaxHp(3,true);
					'step 2'
					player.recover(3);
					player.addSkill('benghuai');
				},
             ai:{
                    order:4.5,
                    result:{
                        player:function(player,target){
　　　　　　　if(player.hp<2||player.countCards('h')<=2) 
                          return 5;
                        },
                    },
                    effect:{
                    threaten:0.8,
                }, 
              },
			},
			gzchenqingx:{
				audio:"chenqing",
				trigger:{global:'dying'},
				//priority:6,
				filter:function(event,player){
					return event.player.hp<=0&&!player.hasSkill('gzchenqingx2');
				},
				direct:true,
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt2('gzchenqingx'),function(card,player,target){
						return target!=player&&target!=_status.event.getTrigger().player;
					}).set('ai',function(target){
						var player=_status.event.player;
						var trigger=_status.event.getTrigger();
						if(get.attitude(player,trigger.player)>0){
							var att1=get.attitude(target,player);
							var att2=get.attitude(target,trigger.player);
							var att3=get.attitude(player,target);
							if(att3<0) return 0;
							return att1/2+att2+att3;
						}
						else{
							return 0;
							// return get.attitude(player,target);
						}
					});
					'step 1'
					if(result.bool){
						player.addTempSkill('gzchenqingx2','roundStart');
						event.target=result.targets[0];
						event.target.draw(3);
						player.logSkill('gzchenqingx',event.target);
					}
					else{
						event.finish();
					}
					'step 2'
					var target=event.target;
					var tosave=trigger.player;
					var att=get.attitude(target,tosave);
					var hastao=target.countCards('h','tao');
					target.chooseToDiscard(3,true,'he').set('ai',function(card){
						var hastao=_status.event.hastao;
						var att=_status.event.att;
						if(!hastao&&att>0){
							var type=get.type(card);
							for(var i=0;i<ui.selected.cards.length;i++){
								if(get.type(ui.selected.cards[i])==type){
									return -4-get.value(card);
								}
							}
						}
						if(att<0&&ui.selected.cards.length==3){
							var type=get.type(card);
							for(var i=0;i<ui.selected.cards.length;i++){
								if(get.type(ui.selected.cards[i])==type){
									return -get.value(card);
								}
							}
							return -10-get.value(card);
						}
						return -get.value(card);
					}).set('hastao',hastao).set('att',att);
					'step 3'
					if(result.cards&&result.cards.length==3){
						var types=[];
						for(var i=0;i<result.cards.length;i++){
							types.add(get.type(result.cards[i]));
						}
						if(types.length==3&&game.checkMod({name:'tao',isCard:true},player,trigger.player,'unchanged','cardSavable',player)){
							event.target.useCard({name:'tao',isCard:true},trigger.player);
						}
					}
				},
				ai:{
					expose:0.2,
					threaten:1.5,
				}
			},
			gzchenqingx2:{},
			gzmozhix:{
				audio:'mozhi',
				enable:'phaseUse',
				usable:1,
				init:function(player){
					player.storage.gzmozhix=[];
				},
				filter:function(event,player){
					return !player.hasSkill('trick_used')&&get.inpile('trick').length>player.storage.gzmozhix.length;
				},
				delay:0,
				content:function(){
					var list=get.inpile('trick');
					for(var i=0;i<player.storage.gzmozhix.length;i++){
						list.remove(player.storage.gzmozhix[i]);
					}
					player.discoverCard(list,'use');
				},
				ai:{
					order:6,
					threaten:1.2,
					result:{
						player:1
					}
				},
				group:'gzmozhix_count',
				subSkill:{
					count:{
						trigger:{player:'useCard'},
						silent:true,
						filter:function(event,player){
							return get.type(event.card)=='trick';
						},
						content:function(){
							player.storage.gzmozhix.add(trigger.card.name);
						}
					}
				}
			},
            trick_used:{},
			gzchongdianx:{
				audio:"xinfu_jianji",
	            trigger:{player:'showCharacterAfter'},
				forced:true,
				filter:function(event,player){
			      return event.toShow.contains('gz_xf_yiji');
				},
				content:function (){
					'step 0'
					player.chooseTarget('选择【重典】的目标',lib.translate.gzchongdianx_info,true,function(card,player,target){
						return target!=player&&!target.hasSkill('gzchongdianx2');
					}).set('ai',function(target){
						var att=get.attitude(_status.event.player,target);
						if(att<0) return -att+3;
						return Math.random();
					});
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						player.line(target,'green');
						game.log(target,'成为了','【重典】','的目标');
						target.storage.gzchongdianx2=player;
						target.addSkill('gzchongdianx2');
					}
				},
			},
			"gzchongdianx2":{
				mark:"character",
				intro:{
					content:"当你受到来自$的伤害或回复体力后，$摸一张牌",
				},
				nopop:true,
				trigger:{
					player:["damageAfter","recoverAfter"],
				},
				forced:true,
				popup:false,
				filter:function (event,player){
					if(player.storage.gzchongdianx2&&player.storage.gzchongdianx2.isIn()){
						if(event.name=='damage') return event.source==player.storage.gzchongdianx2;
						return true;
					};
				},
				content:function (){
					'step 0'
					var target=player.storage.gzchongdianx2;
					target.logSkill('gzchongdianx');
					target.draw();
				},
				onremove:true,
			},
			gzfangtongy:{
				trigger:{global:'judgeBegin'},
				audio:"xinfu_fangtong",
				priority:11,
				filter:function(event,player){
					return event.player!=player;
				},
				content:function(){
					"step 0"
					if(event.isMine()){
						event.dialog=ui.create.dialog('方统：预言'+get.translation(trigger.player)+'的'+trigger.judgestr+'判定');
					}
					player.chooseControl('heart2','diamond2','club2','spade2','cancel').ai=function(event){
						switch(Math.floor(Math.random()*4)){
							case 0:return 'heart2';
							case 1:return 'diamond2';
							case 2:return 'club2';
							case 3:return 'spade2';
						}
					};
					"step 1"
					if(event.dialog){
						event.dialog.close();
					}
					if(result.control!='cancel'){
						game.log(player,'预言判定结果为'+get.translation(result.control));
						player.storage.gzfangtongy=result.control.slice(0,result.control.length-1);
						player.popup(result.control);
						game.delay();
					}
				},
				group:'gzfangtongy2'
			},
			gzfangtongy2:{
				trigger:{global:'judgeEnd'},
				forced:true,
				popup:false,
				content:function(){
					if(player.storage.gzfangtongy==trigger.result.suit){
						game.log(player,'预言成功');
						player.popup('洗具');
						player.draw(2);
					}
					else if(get.color({suit:player.storage.gzfangtongy})==trigger.result.color){
						player.popup('洗具');
						player.draw();
					}
					delete player.storage.gzfangtongy;
				}
			},
				gzfangtongx:{
					trigger:{
						global:'dyingBegin'
					},
				    audio:"xinfu_fangtong",
					direct:true,
					content:function(){
						'step 0'
						player.chooseCard(get.prompt('gzfangtongx'),1,{name:['tao','jiu']}).set('ai',function(card){
							if(trigger.player.hp>=0) return -get.attitude(player,trigger.player);
							return 0;
						});
						'step 1'
						if(result.bool){
							player.logSkill('gzfangtongx');
							player.line(trigger.player);
							player.discard(result.cards[0]);
							trigger.player.die();
						};
					},
				},
			gzgudaox:{
				audio:"xinfu_jijun",
				trigger:{player:'damageEnd'},
				filter:function(event,player){
					return (event.source!=undefined);
				},
				check:function(event,player){
					return (get.attitude(player,event.source)<=0);
				},
				logTarget:'source',
				content:function(){
					player.logSkill('gzgudaox',trigger.source);
					trigger.source.addTempSkill('fengyin');	
					trigger.source.gain(trigger.source.getCards('e'),'gain2');           
					trigger.source.phaseDiscard();
				},
				ai:{
					maixie_defend:true,
					effect:{
						target:function(card,player,target){
							return 0.8;
						}
					}
				}
			},
			gzjijunx:{
				audio:"xinfu_jijun",
				trigger:{player:['useCard','respondEnd']},
				filter:function(event){
					return get.suit(event.card)=='spade';
				},
				content:function(){
					"step 0";
					player.chooseTarget(get.prompt('gzjijunx')).ai=function(target){
						return get.damageEffect(target,player,player,'thunder')-1;
					};
					"step 1"
					if(result.bool){
						player.logSkill('gzjijunx',result.targets,'thunder');
						event.target=result.targets[0];
						event.target.judge();
					}
					else{
						event.finish();
					}
					"step 2"
					if(result.suit=='heart'){
						event.target.damage('fire');
					}
					if(result.suit=='club'){
						event.target.damage('thunder');
					}
					else{
						var cs=event.target.getCards('he');
						if(cs.length){
							event.target.discard(cs.randomGet());
						}
						cs=player.getCards('he');
						if(cs.length){
							player.discard(cs.randomGet());
						}
					}
				},
				ai:{
					expose:0.2,
					threaten:0.7,
					effect:{
						target:function(card,player,target){
							if(get.tag(card,'respondShan')){
								var hastarget=game.hasPlayer(function(current){
									return get.attitude(player,current)<0;
								});
								var ns=target.countCards('h','shan');
								var nh=target.countCards('h');
								if(ns>1){
									return [0,hastarget?1:0];
								}
								if(ns&&nh>=2){
									return [0,0];
								}
								if(nh>3){
									return [0,0];
								}
								if(nh==0){
									return 1.5;
								}
								return [1,0.05];
							}
						}
					}
				}
			},
			gzjiexunx:{
				audio:"jiexun",
				trigger:{player:'phaseEnd'},
				filter:function(event,player){
					var nh=player.countCards('h');
					var nm=1;
					return game.hasPlayer(function(current){
						if(current!=player&&Math.abs(current.countCards('h')-nh)<=nm){
							return true;
						}
					});
				},
				content:function(){
					'step 0'
					var nh=player.countCards('h');
					var nm=1;
					var check=true;
					if(player.countCards('h','tao')){
						check=false;
					}
					else if(player.countCards('h','shan')&&player.countCards('h','wuxie')){
						check=false;
					}
					player.chooseTarget(get.prompt('kuixin'),function(card,player,target){
						return target!=player&&Math.abs(target.countCards('h')-nh)<=nm;
					}).ai=function(target){
						if(!check) return 0;
						if(get.attitude(player,target)<0){
							return target.countCards('h')-nh;
						}
						return 0;
					};
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('kuixin',result.targets);
						var cards0=target.getCards('h');
						var cards1=player.getCards('h');
						target.gain(cards1,player);
						player.gain(cards0,target);
						target.$give(cards0.length,player);
						player.$give(cards1.length,target);
					}
				},
				ai:{
					expose:0.2,
					threaten:1.5
				}
			},
			gzwuhunx:{
				audio:"wuhun2",
				changeSeat:true,
				trigger:{player:'shaHit'},
				filter:function(event,player){
					return event.target!=player.previous;
				},
				content:function(){
					game.swapSeat(trigger.target,player,true,true);
				}
			},
			gzqixianx:{
                audio:"qingcheng",
				trigger:{player:'drawBegin'},
				priority:-5,
				filter:function(event,player){
					if(game.fixedPile) return false;
					if(event.num<=0) return false;
					if(ui.cardPile.childNodes.length==0) return false;
					if(get.color(ui.cardPile.firstChild)=='red') return false;
					return true;
				},
				forced:true,
				popup:false,
				content:function(){
					var card=ui.cardPile.firstChild;
					if(lib.inpile.contains(card.name)){
						for(var i=1;i<ui.cardPile.childElementCount;i++){
							var card2=ui.cardPile.childNodes[i];
							if(get.color(card2)=='red'){
								ui.cardPile.insertBefore(card2,card);
								break;
							}
						}
					}
					else{
						card.init([['heart','diamond'].randomGet(),card.number,card.name,card.nature]);
					}
				}
			},
			gzjiwux:{
                audio:"jiwu",
				mod:{
					selectTarget:function(card,player,range){
						if(range[0]!=1||range[1]!=1) return;
						var range2=get.select(get.info(card).selectTarget);
						if(range2[0]!=1&&range2[1]!=1) return;
						if(card.name=='sha') range[1]=Infinity;
					},
				},
				trigger:{player:'useCardToBefore'},
				priority:6,
				forced:true,
				popup:false,
				filter:function(event,player){
					if(event.targets.length<=1) return false;
					if(event.card.name=='sha') return true;
					return false;
				},
				content:function(){
					if(Math.random()>(1.3+trigger.targets.length/5)/trigger.targets.length){
						trigger.target.popup('失误');
						trigger.cancel();
					}
				}
			},
			gzshenfenx:{
				audio:'shenfen',
				forced:true,
				trigger:{player:'dying'},
				filter:function(event,player){
					return event.player.isDying();
				},
				content:function(){
					"step 0"
					event.targets=game.filterPlayer();
					event.targets.remove(player);
					event.targets.sort(lib.sort.seat);
					event.targets2=event.targets.slice(0);
					player.line(event.targets,'green');
					"step 1"
					if(event.targets.length){
						event.targets.shift().damage();
						event.redo();
					}
				},
			},
			gzshenfux:{
				audio:'shenfu',
				enable:'phaseUse',
				usable:1,
				filterTarget:function(card,player,target){
					return player!=target&&target.countCards('h');
				},
				filterCard:true,
				filter:function(event,player){
					return player.countCards("h");
				},
				content:function(){
					"step 0"
					var card=target.getCards('h').randomGet();
					if(!card){
						event.finish();
						return;
					}
					target.discard(card);
					if(get.color(card)==get.color(cards[0])){
						event.bool=true;
					}
					"step 1"
					if(event.bool){
						player.draw();
					}
					else if(player.countCards('he')){
						target.draw();
					}
				},
				check:function(card){
					return 7-get.value(card);
				},
				ai:{
					order:5,
					result:{
						target:function(player,target){
							if(target.hasSkillTag('noh')) return 0;
							return -1;
						}
					},
					threaten:1.3
				}
			},
			gzliufengx:{
				audio:'luoshen',
				trigger:{player:'phaseEnd'},
				frequent:true,
				content:function(){
					"step 0"
					if(event.cards==undefined) event.cards=[];
					player.judge(function(card){
						if(get.color(card)=='red') return 1.5;
						return -1.5;
					},ui.special);
					"step 1"
					if(result.judge>0){
						event.cards.push(result.card);
						if(event.cards.length==5){
							player.gain(event.cards);
							if(event.cards.length){
								player.$draw(event.cards);
							}
							event.finish();
						}
						else if(lib.config.autoskilllist.contains('gzliufengx')){
							player.chooseBool('是否再次发动【流风】？');
						}
						else{
							event._result={bool:true};
						}
					}
					else{
						player.gain(event.cards);
						if(event.cards.length){
							player.$draw(event.cards);
						}
						event.finish();
					}
					"step 2"
					if(result.bool){
						event.goto(0);
					}
					else{
						player.gain(event.cards);
						if(event.cards.length){
							player.$draw(event.cards);
						}
					}
				},
				ai:{
					threaten:1.4
				}
			},

			gzyuanchoux:{
				audio:'gongsun',
				trigger:{source:'damageBefore'},
				check:function(event,player){
					player.disableSkill('tmp','gzyuanchoux');
					var eff=get.damageEffect(event.player,player,player);
					var att=get.attitude(player,event.player);
					var bool=false;
					if(att>0){
						if(eff<=0||event.player.hp<event.player.maxHp){
							bool=true;
						}
					}
					else{
						if(eff<0&&event.player.hp==event.player.maxHp){
							bool=true;
						}
					}
					player.enableSkill('tmp','gzyuanchoux');
					return bool;
				},
				logTarget:'player',
				filter:function(event,player){
					return event.num>0;
				},
				content:function(){
					trigger.cancel();
					trigger.player.recover(trigger.num);
				},
				ai:{
					effect:{
						player:function(card,player,target){
							if(get.tag(card,'damage')&&get.attitude(player,target)>0){
								if(target.hp==target.maxHp||get.recoverEffect(target,player,player)<=0) return 'zeroplayertarget';
								return [0,0,0,1];
							}
						}
					}
				}
			},

			gzduoduanx:{
				trigger:{source:'damageEnd'},
				direct:true,
				audio:'duoduan',
　　　　　　　　usable:1,
				filter:function(event,player){
					if(event.parent.name=='gzduoduanx') return false;
					return game.hasPlayer(function(current){
						return current!=event.player&&current!=player&&current.hp>=event.player.hp;
					});
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt2('gzduoduanx'),function(card,player,target){
						return target!=trigger.player&&target!=player&&target.hp>=trigger.player.hp;
					}).set('ai',function(target){
						return get.damageEffect(target,player,player);
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzduoduanx',result.targets);
						result.targets[0].damage(player);
					}
				},
				ai:{
					threaten:1.5
				}
			},
			gzxiuzhenx:{
				audio:'guhuo',
				trigger:{player:'dyingAfter'},
				forced:true,
				filter:function(event,player){
					return event.source;
				},
				logTarget:'source',
				content:function(){
					player.mayChangeVice(true);
				},
			},
			gzhuanxianx:{
				audio:'xinsheng',
				enable:'phaseUse',
				filter:function(event,player){
					return !player.hasSkill('subplayer')&&player.getSubPlayers('gzhuanxianx_get').length>0;
				},
				nosub:true,
				group:'gzhuanxianx_get',
				direct:true,
				delay:0,
				skillAnimation:true,
				animationColor:'thunder',
				content:function(){
					player.callSubPlayer().set('tag','gzhuanxianx_get');
				},
				ai:{
					order:1,
					result:{
						player:function(player,target){
							return 1;
							// if(player.hp<=1) return 1;
							// if(!player.needsToDiscard(player.hp-1)) return 1;
							// return 0;
						}
					}
				},
				subSkill:{
					get:{
						trigger:{global:'dieAfter'},
						forced:true,
						filter:function(event,player){
							return !event.player.isMin()&&![player.name,player.name1,player.name2].contains(event.player.name);
						},
						content:function(){
							var skills=lib.character[trigger.player.name][3].slice(0);
							for(var i=0;i<skills.length;i++){
								if(lib.skill[skills[i]].nosub){
									skills.splice(i--,1);
								}
							}
							player.addSubPlayer({
								name:trigger.player.name,
								skills:skills,
								hs:get.cards(2),
								intro:'出牌阶段，你可以调遣此随从（直到随从死亡不可再次切换）'
							});
						}
					}
				}
			},
			gztianwenx:{
				audio:'sibian',
				trigger:{player:'useCard'},
				filter:function(event,player){
					if(_status.currentPhase!=player) return false;
					var evt=player.getLastUsed(1);
					if(!evt) return false;
					var type1=get.type(evt.card);
					var type2=get.type(event.card);
					return type1&&type2&&type1!='none'&&type2!='none'&&type1!=type2;
				},
				check:function(event,player){
					var hs=player.getCards('h');
					if(player.needsToDiscard()) return true;
					for(var i=0;i<hs.length;i++){
					var val=get.value(hs[0]);
					if(hs[i].number>=10&&val<=6) return true;
					if(hs[i].number>=8&&val<=3) return true;
					}
					return false;
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt2('gztianwenx'),function(card,player,target){
						return player.canCompare(target)&&target!=player;
					}).set('ai',function(target){
						if(!_status.event.goon) return 0;
						return -get.attitude(_status.event.player,target);
					}).set('goon',player.needsToDiscard()||player.hasCard(function(card){
						var val=get.value(card);
						if(val<0) return true;
						if(val<=5){
							return card.number>=11;
						}
						if(val<=6){
							return card.number>=12;
						}
						return false;
					}));
					'step 1'
					if(result.bool){
						player.logSkill('gztianwenx',result.targets);
						event.target=result.targets[0];
						player.chooseToCompare(event.target);
					}
					else{
						event.finish();
					}
					'step 2'
					if(result.bool){
						var card1=result.player;
						var card2=result.target;
						if(get.position(card2)=='d') player.gain(card2,'gain2');
					}
					else{
						var card1=result.player;
						var card2=result.target;
						if(get.position(card1)=='d') event.target.gain(card1,'gain2');
					}
				},
			},
			gztianlunx:{
				audio:'songshu',
				trigger:{player:['phaseBegin','phaseEnd']},
				filter:function(event,player){
					return game.hasPlayer(function(current){
						return !current.isUnderControl(true,player)&&current!=player.storage.gztianlunx&&current.countCards('h');
					});
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gztianlunx'),function(card,player,target){
						return !target.isUnderControl(true,player)&&target!=player.storage.gztianlunx&&target.countCards('h');
					}).ai=function(){
						return 1;
					}
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('gztianlunx',target);
						if(event.triggername=='phaseBegin'){
							player.storage.gztianlunx=target;
						}
						var hs=target.getCards('h').randomSort();
						if(hs.length){
							var list2=[];
							for(var i=0;i<hs.length;i++){
								if(list2.contains(hs[i].name)){
									hs.splice(i--,1);
								}
								else{
									list2.push(hs[i].name);
								}
							}
							var card=hs.randomGet();
							var list=[];
							for(var i=0;i<lib.inpile.length;i++){
								if(!list2.contains(lib.inpile[i])&&
									(get.type(lib.inpile[i])!='equip'||Math.random()<0.5)){
									list.push(lib.inpile[i]);
								}
							}
							event.card=card;
							player.chooseCardButton(true,'猜测哪张牌为'+get.translation(target)+'的手牌',
							[card,game.createCard(list.randomRemove()),game.createCard(list.randomRemove())].randomSort()).ai=function(button){
								if(get.value(button.link)<0) return -10;
								if(_status.event.getRand()<0.7){
									return button.link==card?1:-1;
								}
								else{
									return button.link==card?-1:1;
								}
							};
						}
						else{
							event.finish();
						}
					}
					else{
						event.finish();
					}
					if(event.triggername=='phaseEnd'){
						delete player.storage.gztianlunx;
					}
					'step 2'
					if(result.bool&&result.links){
						if(result.links[0]==event.card){
							player.gain(game.createCard(event.card),'draw');
						}
						else{
							player.viewCards('正确答案',[event.card]);
						}
					}
				},
				ai:{
					threaten:1.5
				}
			},
			gzrenjiex:{
				audio:'renjie',
				trigger:{target:'useCardToBefore'},
				forced:true,
				priority:5.9,
				filter:function(event,player){
					return event.player!=player;
				},
				content:function(){
					"step 0"
					var effect=get.effect(player,trigger.card,trigger.player,player);
					player.judge(function(card){
						switch(get.suit(card)){
							case 'spade':return -effect;
							case 'heart':return 1;
							default:return 0;
						}
					});
					"step 1"
					switch(result.suit){
						case 'spade':{
							trigger.cancel();
							break;
						}
						case 'heart':{
							player.draw();
							break;
						}
					}
				},
				ai:{
					effect:{
						target:function(card,player,target){
							return 0.7
						}
					},
					threaten:0.8
				}
			},
			gzbaiyinx:{
			    audio:'sbaiyin',
				unique:true,
				mark:true,
				skillAnimation:true,
				animationColor:'orange',
				trigger:{player:'phaseAfter'},
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					if(event.skill) return false;
					return !player.storage.gzbaiyinx;
				},
				trigger:{player:'phaseEnd'},
				content:function(){
					'step 0'
					 player.awakenSkill('gzbaiyinx');
                     player.storage.gzbaiyinx=true;
					'step 1'
					player.chooseTarget(get.prompt('gzbaiyinx'),lib.filter.notMe,[1,2]).ai=function(target){
						if(get.attitude(player,target)<0){
							return get.effect(target,{name:'sha'},player,player);
						}
						return 0;
					}
					'step 2'
					if(result.bool){
						player.logSkill('gzbaiyinx',result.targets);
						var list=[player].concat(result.targets);
						for(var i=0;i<list.length;i++){
							list[i].storage.gzbaiyinx2=list.slice(0);
							list[i].addSkill('gzbaiyinx2');
						}
					}
				},
			},
			gzbaiyinx2:{
				mark:true,
				intro:{
					content:'players'
				},
				trigger:{global:'useCard'},
				forced:true,
				popup:false,
				onremove:function(player){
					delete player.storage.gzbaiyinx2;
					for(var i=0;i<game.players.length;i++){
						var current=game.players[i];
						if(Array.isArray(current.storage.gzbaiyinx2)&&current.storage.gzbaiyinx2.contains(player)){
							current.storage.gzbaiyinx2.remove(player);
							current.updateMarks();
						}
					}
				},
				filter:function(event,player){
					if(event.card.name!='sha') return false;
					if(!event.targets.contains(player)) return false;
					if(!player.storage.gzbaiyinx2) return false;
					for(var i=0;i<player.storage.gzbaiyinx2.length;i++){
						var current=player.storage.gzbaiyinx2[i];
						if(current.isIn()&&event.player!=current&&!event.targets.contains(current)){
							return true;
						}
					}
					return false;
				},
				content:function(){
					'step 0'
					game.delayx();
					'step 1'
					var list=[];
					for(var i=0;i<player.storage.gzbaiyinx2.length;i++){
						var current=player.storage.gzbaiyinx2[i];
						if(current.isIn()&&trigger.player!=current&&!trigger.targets.contains(current)){
							list.push(current);
						}
					}
					player.logSkill('gzbaiyinx2',list);
					trigger.targets.addArray(list);
				},
				ai:{
					effect:{
						target:function(card,player,target){
							if(_status.gzbaiyinx2_temp) return;
							if(card.name=='sha'&&target.storage.gzbaiyinx2){
								_status.gzbaiyinx2_temp=true;
								var num=game.countPlayer(function(current){
									if(current!=player&&current!=target&&target.storage.gzbaiyinx2.contains(current)){
										return get.sgn(get.effect(current,card,player,target));
									}
								});
								delete _status.gzbaiyinx2_temp;
								if(target.hasSkill('qianggu2')&&get.attitude(player,target)>0){
									return [0,num];
								}
								if(target.hp==1&&!target.hasShan()) return;
								return [1,num];
							}
						}
					}
				}
			},
			gzqixingx:{
				audio:'qixing',
				trigger:{player:'phaseZhunbeiBegin'},
				forced:true,
				filter:function(event,player){
					return !player.storage.gzqixingx||player.storage.gzqixingx.length==0;
				},
				content:function(){
					"step 0"
	     var num1=5+Math.floor(game.countPlayer(function(current){
						return current.group=='shu';
					})/2);
	player.storage.gzqixingx=game.cardsGotoSpecial(get.cards(num1)).cards;
					player.markSkill('gzqixingx');
					game.addVideo('storage',player,['gzqixingx',get.cardsInfo(player.storage.gzqixingx),'cards']);
					"step 1"
					player.chooseCard('选择任意张手牌与“星”交换',[1,Math.min(player.countCards('h'),player.storage.gzqixingx.length)]).set('promptx',[player.storage.gzqixingx]).ai=function(card){
						var val=get.value(card);
						if(val<0) return 10;
						if(player.skipList.contains('phaseUse')){
							return val;
						}
						return -val;
					};
					"step 2"
					if(result.bool){
						player.logSkill('gzqixingx');
						player.lose(result.cards,ui.special,'toStorage');
						player.storage.gzqixingx=player.storage.gzqixingx.concat(result.cards);
						player.syncStorage('gzqixingx');
						event.num=result.cards.length;
					}
					else{
						event.finish();
					}
					"step 3"
					player.chooseCardButton(player.storage.gzqixingx,'选择'+event.num+'张牌作为手牌',event.num,true).ai=function(button){
						var val=get.value(button.link);
						if(val<0) return -10;
						if(player.skipList.contains('phaseUse')){
							return -val;
						}
						return val;
					}
					if(player==game.me&&!event.isMine()){
						game.delay(0.5);
					}
					"step 4"
					player.gain(result.links,'fromStorage');
					for(var i=0;i<result.links.length;i++){
						player.storage.gzqixingx.remove(result.links[i]);
					}
					player.syncStorage('gzqixingx');
					if(player==game.me&&_status.auto){
						game.delay(0.5);
					}
				},
				mark:true,
				intro:{
					onunmark:function(storage,player){
						if(storage&&storage.length){
							player.$throw(storage,1000);
							game.cardsDiscard(storage);
							game.log(storage,'被置入了弃牌堆');
						 storage.length=0;
						}
					},
					mark:function(dialog,content,player){
						if(content&&content.length){
							if(player==game.me||player.isUnderControl()){
								dialog.addAuto(content);
							}
							else{
								return '共有'+get.cnNumber(content.length)+'张星';
							}
						}
					},
					content:function(content,player){
						if(content&&content.length){
							if(player==game.me||player.isUnderControl()){
								return get.translation(content);
							}
							return '共有'+get.cnNumber(content.length)+'张星';
						}
					}
				},
				group:['gzqixingx2'],
			},
			gzqixingx2:{
				trigger:{player:['phaseZhunbeiBegin','phaseEnd']},
				direct:true,
				filter:function(event,player){
					return player.storage.gzqixingx&&player.storage.gzqixingx.length&&player.countCards('h');
				},
				content:function(){
					"step 0"
					player.chooseCard('选择任意张手牌与“星”交换',[1,Math.min(player.countCards('h'),player.storage.gzqixingx.length)]).set('promptx',[player.storage.gzqixingx]).ai=function(card){
						var val=get.value(card);
						if(val<0) return 10;
						if(player.skipList.contains('phaseUse')){
							return val;
						}
						return -val;
					};
					"step 1"
					if(result.bool){
						player.logSkill('gzqixingx');
						player.lose(result.cards,ui.special,'toStorage');
						player.storage.gzqixingx=player.storage.gzqixingx.concat(result.cards);
						player.syncStorage('gzqixingx');
						event.num=result.cards.length;
					}
					else{
						event.finish();
					}
					"step 2"
					player.chooseCardButton(player.storage.gzqixingx,'选择'+event.num+'张牌作为手牌',event.num,true).ai=function(button){
						var val=get.value(button.link);
						if(val<0) return -10;
						if(player.skipList.contains('phaseUse')){
							return -val;
						}
						return val;
					}
					if(player==game.me&&!event.isMine()){
						game.delay(0.5);
					}
					"step 3"
					player.gain(result.links,'fromStorage');
					for(var i=0;i<result.links.length;i++){
						player.storage.gzqixingx.remove(result.links[i]);
					}
					player.syncStorage('gzqixingx');
					if(player==game.me&&_status.auto){
						game.delay(0.5);
					}
				}
			},
			gzdawux:{
                audio:"dawu",
				unique:true,
				mark:true,
				skillAnimation:true,
				animationColor:'orange',
				init:function(player,skill){player.storage[skill]=false},
				enable:'phaseUse',
				filterTarget:function(card,player,target){
					return target!=player&&!target.hasSkill('gzdawux2');
				},
				filter:function(event,player){
					return !player.storage.gzdawux&&player.countCards('h',{color:'red'});
				},
				filterCard:{color:'red'},
				check:function(card){
					return 7-get.value(card);
				},
				content:function(){
                  "step 0" 
                   player.awakenSkill('gzdawux');
                   player.storage.gzdawux=true;
                  "step 1" 
					var current=game.findPlayer(function(player){
						return player.hasSkill('gzdawux2');
					});
					if(current){
						current.removeSkill('gzdawux2');
					}
					target.addSkill('gzdawux2');
					target.storage.gzdawux='now';
					target.storage.gzdawux2=player;
				},
				ai:{
					expose:0.2,
					order:9.1,
					threaten:2,
					result:{
						target:function(player,target){
							var current=game.findPlayer(function(player){
								return player.hasSkill('gzdawux2');
							});
							if(current&&get.recoverEffect(current,player,player)>0){
								return 0;
							}
							return get.recoverEffect(target,player,target);
						}
					}
				}
			},
			gzdawux2:{
				mark:true,
				trigger:{global:'phaseEnd'},
				forced:true,
				filter:function(event,player){
					if(player.storage.gzdawux=='now'){
						return event.player==player;
					}
					var num=game.phaseNumber-player.storage.gzdawux;
					return num&&num%8==0;
				},
				content:function(){
					if(player.storage.gzdawux=='now'){
						player.storage.gzdawux=game.phaseNumber;
					}
					player.recover();
				},
				intro:{
					content:function(storage,player){
						var str='每隔8回合回复一点体力，直到'+get.translation(storage)+'死亡';
						if(typeof player.storage.gzdawux=='number'){
							var num=game.phaseNumber-player.storage.gzdawux;
							num=num%8;
							if(num==0){
								str+='（下次生效于本回合）'
							}
							else{
								str+='（下次生效于'+(8-num)+'回合后）'
							}
						}
						return str;
					},
					onunmark:function(storage,player){
						delete player.storage.gzdawux;
						delete player.storage.gzdawux2;
					}
				},
				group:['gzdawux3','gzdawux4']
			},
			gzdawux3:{
				trigger:{global:'phaseBegin'},
				forced:true,
				popup:false,
				content:function(){
					var num=game.phaseNumber-player.storage.gzdawux;
					num=num%8;
					if(num){
						num=8-num;
					}
					player.storage.gzdawux2_markcount=num;
					player.updateMarks();
				}
			},
			gzdawux4:{
				trigger:{global:'dieAfter'},
				forced:true,
				popup:false,
				filter:function(event,player){
					return event.player==player.storage.gzdawux2;
				},
				content:function(){
					game.log(player,'解除了','【雾】');
					player.removeSkill('gzdawux2');
				}
			},
			gzcuikex:{
				unique:true,
				enable:'phaseUse',
				audio:'nzry_cuike',
				animationColor:'metal',
				skillAnimation:'legend',
				limited:true,
                mark:true,
				line:'fire',
                intro:{
                    content:"limited",
                },
				check:function (){return -1},
                filter:function (event,player){
                  return !player.storage.gzcuikex;
                },
				notarget:true,
				content:function (){
					'step 0'
					var enemies=player.getEnemies();
					var target=get.max(enemies,'hp','list').randomGet();
					if(target){
						player.line(target,'fire');
						target.damage('fire');
						game.delay();
					}
					'step 1'
					event.targets=game.filterPlayer(function(current){
						return current.isMaxHp();
					}).sortBySeat();
					player.line(event.targets,'fire');
					'step 2'
					if(event.targets.length){
						var target=event.targets.shift();
						player.line(target,'fire');
						target.damage('fire');
						event.redo();
					}
					"step 3"
					player.awakenSkill('gzcuikex');
                    player.storage.gzcuikex=true;
				},
				ai:{
					result:{
						player:function(player){
							var enemies=player.getEnemies();
							var players=game.filterPlayer();
							var func=function(current){
								if(current) return current.hp;
								return 0;
							};
							var max1=get.max(enemies,func);
							for(var i=0;i<players.length;i++){
								if(players[i].hp==max1){
									players.splice(i,1);break;
								}
							}
							var max2=get.max(players,func);
							if(max1-1>max2){
								return get.damageEffect(get.max(enemies,func,'item'),player,player,'fire');
							}
							else{
								var num;
								if(max1>max2){
									num=get.sgn(get.damageEffect(get.max(enemies,func,'item'),player,player,'fire'));
								}
								else if(max1==max2){
									num=0;
								}
								else{
									num=1;
								}
								return num+game.countPlayer(function(current){
									if(current.hp>=max2){
										return get.sgn(get.damageEffect(current,player,player,'fire'));
									}
								});
							}
						}
					},
					order:0.7,
				}
			},
			gzzhanhuox:{
				audio:'nzry_dinghuo',
						trigger:{global:"damageAfter"},
						direct:true,
						filter:function(event,player){
						  return event.nature&&player.countCards('he',{color:'red'})>0;						             },
						content:function (){
							"step 0"
							player.chooseCardTarget({
								filterCard:function(card){
									return get.color(card)=='red';
								},
								filterTarget:function(card,player,target){
									return get.distance(trigger.player,target)<=1&&trigger.player!=target;
								},
								ai1:function(card){
									return 6-ai.get.value(card);
								},
								ai2:function(target){
									return ai.get.damageEffect(target,player,player);
								},
								position:'he',
								prompt:'绽火：弃置一张红色牌对与其距离为1的其他角色造成等量火焰伤害'
							});
							"step 1"
							if(result.bool){
								player.logSkill('gzzhanhuox',result.targets[0],'fire');
								player.discard(result.cards[0]);
								result.targets[0].damage('fire',trigger.num);
							}
						}
					},
			gzduodao:{
				trigger:{player:'damageEnd'},
				filter:function(event,player){
					return player.countCards('he')>0&&event.source&&
						event.card&&event.card.name=='sha';
				},
				direct:true,
				//priority:5,
				audio:'duodao',
				content:function(){
					'step 0'
					var prompt='弃置一张牌'
					if(trigger.source.getEquip(1)) prompt+=('，然后获得'+get.translation(trigger.source)+'装备区中的'+get.translation(trigger.source.getEquip(1)));
					var next=player.chooseToDiscard('he',get.prompt('gzduodao',trigger.source),prompt);
					next.logSkill=['gzduodao',trigger.source];
					next.set('ai',function(card){
						if(!_status.event.getTrigger().source.getEquip(1)) return 0;
						if(get.attitude(_status.event.player,_status.event.getTrigger().source)<=0){
							return 6-get.value(card);
						}
						return 0;
					});
					'step 1'
					if(result.bool&&trigger.source.getEquip(1)){
						player.gain(trigger.source.getEquip(1),trigger.source,'give');
					}
				},
				ai:{
					maixie_defend:true,
				}
			},
			gzanjian:{
				audio:'anjian',
				trigger:{source:'damageBegin1'},
				check:function(event,player){
					return get.attitude(player,event.player)<=0;
				},
				forced:true,
				filter:function(event,player){
					return event.getParent().name=='sha'&&!event.player.inRange(player);
				},
				content:function(){
					trigger.num++;
				}
			},
			xinpojun:{
				shaRelated:true,
				trigger:{player:'useCardToPlayered'},
				direct:true,
				filter:function(event,player){
					return event.card.name=='sha'&&player.isPhaseUsing()&&event.target.hp>0&&event.target.countCards('he')>0;
				},
				audio:2,
				content:function(){
					'step 0'
					player.choosePlayerCard(trigger.target,'he',
						[1,Math.min(trigger.target.countCards('he'),trigger.target.hp)],get.prompt('xinpojun',trigger.target));
					'step 1'
					if(result.bool&&result.links.length){
						player.logSkill('xinpojun',trigger.target);
						if(trigger.target.storage.xinpojun2){
							trigger.target.storage.xinpojun2=trigger.target.storage.xinpojun2.concat(result.links);
						}
						else{
							trigger.target.storage.xinpojun2=result.links.slice(0);
						}
						game.addVideo('storage',trigger.target,['xinpojun2',get.cardsInfo(trigger.target.storage.xinpojun2),'cards']);
						trigger.target.addSkill('xinpojun2');
						trigger.target.lose(result.links,ui.special,'toStorage');
					}
				},
				ai:{
					unequip_ai:true,
					skillTagFilter:function(player,tag,arg){
						if(arg&&arg.name=='sha'&&arg.target.getEquip(2)) return true;
						return false;
					}
				},
			},
			gzyingbinx:{
		        audio:'yingbin',
				trigger:{player:'phaseEnd'},
				direct:true,
				content:function(){
					'step 0'
					player.chooseTarget(lib.filter.notMe,get.prompt2('gzyingbinx')).set('ai',function(target){
						var player=_status.event.player;
						if(get.damageEffect(target,player,player)<0) return 0;
						var att=get.attitude(player,target);
						if(att>0) return 0;
						if(att==0) return 0.1;
						var eff=0;
						var hs=player.getCards('h');
						for(var i=0;i<hs.length;i++){
							if(player.canUse(hs[i],target)){
								var eff2=get.effect(target,hs[i],player,player);
								if(eff2>0) eff+=eff2;
							}
						}
						return -att/(1+eff);
					});
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						event.target=target;
						player.logSkill('gzyingbinx',target);
						player.draw();
					}
					else event.finish();
					'step 2'
					player.chooseToPSS(target);
					'step 3'
					if(result.tie) event.goto(2);
					else if(result.bool) target.damage();
					else target.mayChangeVice();
				},
			},
			gzzhoufux:{
				audio:"zhoufu",
				trigger:{source:'damageEnd'},
				check:function(event,player){
					return get.attitude(player,event.player)<0;
				},
				filter:function(event,player){
					if(event._notrigger.contains(event.player)) return false;
					return event.player!=player&&event.player.isIn()&&!event.player.hasSkill('gzzhoufux2');
				},
				logTarget:'player',
				content:function(){
					trigger.player.addSkill('gzzhoufux2');
				}
			},
			gzzhoufux2:{
				mod:{
					cardEnabled:function(card,player){
						if(_status.currentPhase!=player) return;
						if(player.countUsed()>=player.storage.gzzhoufux2) return false;
					},
				},
				mark:true,
				intro:{
					content:'每回合最多使用$张牌（剩余$回合）'
				},
				init:function(player){
					player.storage.gzzhoufux2=3;
				},
				trigger:{player:'phaseAfter'},
				silent:true,
				onremove:true,
				content:function(){
					player.storage.gzzhoufux2--;
					if(player.storage.gzzhoufux2<=0){
						// player.loseHp();
						player.removeSkill('gzzhoufux2');
					}
					else{
						player.updateMarks();
					}
				}
			},
			gzshangyix:{
				audio:'shangyi',
                group:"gzshangyi",
				trigger:{player:'damageEnd'},
				filter:function(event,player){
					return event.source.countCards('h')>0&&event.source!=player&&event.source!=undefined;
				},
				content:function(){
					"step 0"
					trigger.source.viewHandcards(player);
					"step 1"
					if(!trigger.source.countCards('h')){
						event._result={index:1};
					}
					else if(!trigger.source.isUnseen(2)){
						event._result={index:0};
					}
					else{
						player.chooseControl().set('choiceList',[
							'观看'+get.translation(trigger.source)+'的手牌并可以弃置其中的一张黑色牌',
							'观看'+get.translation(trigger.source)+'的所有暗置的武将牌',
						]);
					}
					"step 2"
					if(result.index==0){
						player.discardPlayerCard(trigger.source,'h').set('filterButton',function(button){
							return get.color(button.link)=='black';
						}).set('visible',true);
					}
					else{
						player.viewCharacter(trigger.source,2);
					}
				},
				ai:{
					maixie_defend:true,
				}
			},
			gzxuefux:{
				trigger:{source:'damageSource'},
				direct:true,
				audio:'kuangfu',
				filter:function(event){
					if(event._notrigger.contains(event.player)) return false;
					return event.player.countCards('e');
				},
				content:function(){
					"step 0"
					var neg=get.attitude(player,trigger.player)<=0;
					player.choosePlayerCard('e',trigger.player).set('ai',function(button){
						if(_status.event.neg){
							return get.buttonValue(button);
						}
						return 0;
					}).set('neg',neg);
					"step 1"
					if(result.bool){
						player.logSkill('gzxuefux');
						event.card=result.links[0];
						if(player.isEmpty(get.subtype(event.card))){
							player.chooseBool('是否将'+get.translation(event.card)+'置入自己的装备区？').ai=function(){
								return true;
							};
						}
						else event._result={bool:false};
					}
					else event.finish();
					"step 2"
					if(result.bool){
						trigger.player.$give(event.card,player,false);
						player.equip(event.card);
					}
					else trigger.player.discard(event.card);
				}
			},
			gzluofengx:{
				audio:'chuanxin',
				trigger:{source:'damageBegin1'},
				filter:function(event,player){
					return event.card&&(event.card.name=='sha'||event.card.name=='juedou')&&!event.player.hasViceCharacter();
				},
				forced:true,
				content:function(){
					trigger.num++;
				},
				ai:{
					damageBonus:true
				}
			},
			gzkeshou:{
				audio:'keshou',
				trigger:{player:'damageBegin3'},
				direct:true,
				filter:function(event,player){
					return event.num>0;
				},
				content:function(){
					'step 0'
					var check=(player.countCards('h')>1);
					player.chooseCard(get.prompt2('gzkeshou'),'he',2,function(card){
						return true;
					}).set('complexCard',true).set('ai',function(card){
						if(!_status.event.check) return 0;
						var player=_status.event.player;
						if(player.hp==1){
							if(!player.countCards('h',function(card){return get.tag(card,'save')})&&!player.hasSkillTag('save',true)) return 10-get.value(card);
							return 7-get.value(card);
						}
						return 6-get.value(card);
					}).set('check',check);
					'step 1'
					if(result.cards){
						player.logSkill('gzkeshou');
						player.discard(result.cards);
						trigger.num--;
						if(trigger.num<=0) trigger.cancel();
						if(!player.isMajor()) player.judge(function(card){
							if(get.color(card)=='red') return 1;
							return 0;
						});
					}
					else event.finish();
					'step 2'
					if(result.judge>0) player.draw();
				}
			},
			gzzhuwei:{
				audio:'zhuwei',
				trigger:{player:'judgeEnd'},
				filter:function(event){
					if(get.owner(event.result.card)) return false;
					if(event.nogain&&event.nogain(event.result.card)) return false;
					return event.result.card.name=='sha'||event.result.card.name=='juedou';
				},
				content:function(){
					'step 0'
					player.gain(trigger.result.card,'gain2');
					player.chooseBool('是否令当前回合角色获得【筑围】的加成效果？').ai=function(){
						return get.attitude(player,_status.currentPhase)>0;
					};
					'step 1'
					if(result.bool){
						var target=_status.currentPhase;
						if(!target.hasSkill('gzzhuwei_eff')){
							target.addTempSkill('gzzhuwei_eff');
							target.storage.gzzhuwei_eff=1;
						}
						else target.storage.gzzhuwei_eff++;
						target.updateMarks();
					}
				},
				subSkill:{
					eff:{
						sub:true,
						mod:{
							cardUsable:function(card,player,num){
								if(card.name=='sha') return num+player.storage.gzzhuwei_eff;
							},
							maxHandcard:function(player,num){return num+player.storage.gzzhuwei_eff}
						},
						mark:true,
						intro:{
							content:function(storage){if(storage) return '使用【杀】的次数上限+'+storage+'，手牌上限+'+storage}
						}
					}
				}
			},
			gzsidi:{
				audio:'sidi',
				trigger:{player:['loseEnd']},
				filter:function(event,player){
					if(!player.equiping) return false;
					for(var i=0;i<event.cards.length;i++){
						if(event.cards[i].original=='e'&&get.subtype(event.cards[i])=='equip1') return true;
					}
					return false;
				},
				content:function(){
					var card;
					for(var i=0;i<trigger.cards.length;i++){
						if(trigger.cards[i].original=='e'&&get.subtype(trigger.cards[i])=='equip1'){
							card=trigger.cards[i];
						}
					}
					if(card){
						if(player.storage.gzsidi){
							player.unmark(player.storage.gzsidi,'gzsidi');
							player.discard(player.storage.gzsidi);
							game.addVideo('unmarkId',player,[get.cardInfo(player.storage.gzsidi),'gzsidi']);
						}
						if(card.clone){
							card.clone.moveDelete(player);
							game.addVideo('gain2',player,get.cardsInfo([card.clone]));
							player.mark(card,'gzsidi');
							game.addVideo('markId',player,[get.cardInfo(card),'gzsidi']);
						}
						ui.special.appendChild(card);
						player.storage.gzsidi=card;
						var info=get.info(card);
						if(info.skills){
							player.addAdditionalSkill('gzsidi',info.skills);
						}
						else{
							player.removeAdditionalSkill('gzsidi');
						}
					}

				},
				ai:{
					effect:{
						target:function(card,player,target,current){
							if(get.subtype(card)=='equip1') return [1,3];
						}
					}
				},
				intro:{
					content:'card'
				},
				group:'gzsidi2'
			},
			gzsidi2:{
				trigger:{player:'dieBegin'},
				silent:true,
				unique:true,
				filter:function(event,player){
					return player.storage.gzsidi?true:false;
				},
				content:function(){
					if(player.storage.gzsidi){
						player.storage.gzsidi.discard();
						player.$throw(player.storage.gzsidi);
					}
				}
			},
			gzyicheng:{
				audio:'yicheng',
				trigger:{global:'useCardToTargeted'},
				filter:function(event,player){
					return event.card.name=='sha'&&event.target.isFriendOf(player);
				},
				logTarget:'target',
				content:function(){
					'step 0'
					trigger.target.draw();
					'step 1'
					trigger.target.chooseCard('h',true,'弃置一张手牌，若以此法弃置的是装备牌，则你改为使用之').set('ai',function(card){
						if(get.type(card)=='equip'){
							return 5-get.value(card);
						}
						return -get.value(card);
					}).set('filterCard',lib.filter.cardDiscardable);
					'step 2'
					if(result.bool&&result.cards.length){
						if(get.type(result.cards[0])=='equip'&&!trigger.target.isDisabled(get.subtype(result.cards[0]))){
							trigger.target.chooseUseTarget(result.cards[0],true,'nopopup');
						}
						else{
							trigger.target.discard(result.cards[0]);
						}
					}
				},
				ai:{
					effect:{
						target:function(card,player,target){
							if(card.name=='guiyoujie') return [0,1];
						}
					}
				},
			},
			gzwanwei:{
				trigger:{target:['rewriteGainResult','rewriteDiscardResult']},
				direct:true,
				filter:function(event,player){
					return event.player!=player;
				},
				audio:'wanwei',
				content:function(){
					'step 0'
					var prompt='即将失去'+get.translation(trigger.result.cards)+'，是否发动【挽危】？';
					var next=player.choosePlayerCard(player,prompt,trigger.position);
					next.set('ai',function(button){
						return 20-get.value(button.link);
					});
					next.filterButton=trigger.filterButton;
					next.selectButton=trigger.result.cards.length;
					'step 1'
					if(result.bool){
						player.logSkill('gzwanwei');
						trigger.result.cards=result.links.slice(0);
						trigger.result.links=result.links.slice(0);
						trigger.cards=result.links.slice(0);
						trigger.untrigger();
					}
					'step 2'
                    if(get.type(result.cards[0])=='equip'){
                      player.mayChangeVice();
                    }
                    else{
                      event.finish();
                    }
				}
			},
			gzyuejianx:{
				trigger:{global:'phaseDiscardBegin'},
				audio:'yuejian',
				filter:function(event,player){
					if(player.sameIdentityAs(event.player)){
						return event.player.getHistory('useCard',function(evt){
							if(evt.targets){
								var targets=evt.targets.slice(0);
								while(targets.contains(event.player)) targets.remove(event.player);
								return targets.length!=0;
							}
							return false;
						})==0;
					}
					return false;
				},
				content:function(){
					trigger.player.draw();
					trigger.player.addTempSkill('gzyuejian_num');
				},
				logTarget:'player',
				forced:true,
				subSkill:{
					num:{
						mod:{
							maxHandcard:function(player,num){
								return num+player.maxHp-player.hp;
							}
						}
					},
				}
			},
			gzduanxie:{
				enable:'phaseUse',
				usable:1,
				audio:'duanxie',
				filterTarget:function(card,player,target){
					return player!=target&&!target.isLinked();
				},
				content:function(){
					"step 0"
					if(!target.isLinked()) target.link();
					"step 1"
					if(!player.isLinked()) player.link();
				},
				ai:{
					result:{
						target:-1,
						player:function(player){
							return player.isLinked()?0:-0.8;
						}
					},
					order:2,
					expose:0.3,
					effect:{
						target:function(card){
							if(card.name=='tiesuo'){
								return 0.5;
							}
						}
					}
				},
                group:["gzduanxie_1"],
                subSkill:{
                    "1":{
                            audio:"duanxie",
				            forced:true,
                            trigger:{
                              player:"phaseEnd",
　　　　　　　　　　　　　　},
							content:function(){
                              if(player.isLinked()){
                                 player.draw();
                               }
							},
                            sub:true,
					},
                },
            },
			gzqiangqix:{
                audio:"ext:国战补充:1",
				enable:'phaseUse',
				mark:true,
				unique:true,
				forceunique:true,
				skillAnimation:true,
				filter:function(event,player){
					if(event.skill) return false;
					return !player.storage.gzqiangqix;
				},
				filterTarget:function(card,player,target){
					if(target.hp<=1) return false;
					return player!=target;
				},
				content:function(){
					player.storage.gzqiangqix=true;
					player.awakenSkill('gzqiangqix');
					var evt=_status.event;
					for(var i=0;i<10;i++){
						if(evt&&evt.getParent){
							evt=evt.getParent();
						}
						if(evt.name=='phaseUse'){
							evt.skipped=true;
							break;
						}
					}
					player.storage.gzqiangqix3=target;
					player.addSkill('gzqiangqix3');
				},
				gzqiangqixLoop:function(){
					'step 0'
					targets[0].phase('gzqiangqix');
					'step 1'
					ui.gzqiangqixLoop.round--;
					ui.gzqiangqixLoop.innerHTML=get.cnNumber(ui.gzqiangqixLoop.round)+'回合';
					if(targets[0].isDead()||targets[1].isDead()||ui.gzqiangqixLoop.round==0){
						event.goto(3);
					}
					else{
						targets[1].phase('gzqiangqix');
					}
					'step 2'
					ui.gzqiangqixLoop.round--;
					ui.gzqiangqixLoop.innerHTML=get.cnNumber(ui.gzqiangqixLoop.round)+'回合';
					if(targets[0].isDead()||targets[1].isDead()||ui.gzqiangqixLoop.round==0){
						event.goto(3);
					}
					else{
						event.goto(0);
					}
					'step 3'
					for(var i=0;i<event.backup.length;i++){
						event.backup[i].in('gzqiangqix');
					}
					if(ui.gzqiangqixLoop){
						ui.gzqiangqixLoop.remove();
						delete ui.gzqiangqixLoop;
					}
				},
				init:function(player){
					player.storage.gzqiangqix=false;
				},
				intro:{
					content:'limited'
				},
				ai:{
					order:1,
					result:{
						target:function(player,target){
							if(target.hp==1&&player.hp>=3) return -1;
							if(target.hp<player.hp&&target.countCards('h')<=player.countCards('h')) return -1;
							return 0;
						}
					}
				}
			},
			gzqiangqix3:{
				trigger:{player:'phaseAfter'},
				forced:true,
				popup:false,
				priority:-50,
				content:function(){
					var target=player.storage.gzqiangqix3;
					delete player.storage.gzqiangqix3;
					player.removeSkill('gzqiangqix3');
					if(!target.isAlive()){
						event.finish();
						return;
					}
					var next=player.insertEvent('gzqiangqixLoop',lib.skill.gzqiangqix.gzqiangqixLoop,{
						targets:[target,player],
						num:0,
						backup:[],
						source:player,
					});
					next.forceDie=true;
					for(var i=0;i<game.players.length;i++){
						if(game.players[i]!=player&&game.players[i]!=target){
							game.players[i].out('gzqiangqix');
							next.backup.push(game.players[i]);
						}
					}
					if(!ui.gzqiangqixLoop){
						ui.gzqiangqixLoop=ui.create.system('六回合',null,true);
						lib.setPopped(ui.gzqiangqixLoop,function(){
							var uiintro=ui.create.dialog('hidden');
							uiintro.add('羌骑');
							uiintro.addText(get.cnNumber(ui.gzqiangqixLoop.round)+'回合后结束');
							uiintro.add(ui.create.div('.placeholder.slim'));
							return uiintro;
						},180);
						ui.gzqiangqixLoop.round=6;
					}
				}
			},
			gzqiangqix2:{
				mod:{
					cardEnabled:function(){
						return false;
					},
					cardSavable:function(){
						return false;
					},
					targetEnabled:function(){
						return false;
					}
				},
				init:function(player){
					player.classList.add('transparent');
				},
				onremove:function(player){
					player.classList.remove('transparent');
				},
				intro:{
					content:'不计入距离的计算且不能使用牌且不是牌的合法目标'
				},
				group:'undist',
				trigger:{global:'dieAfter'},
				forced:true,
				popup:false,
				content:function(){
					player.removeSkill('gzqiangqix2');
				}
			},
		   gzshenduan:{
			  audio:'shenduan',
              trigger:{
                player:"damageEnd",
              },
              filter:function (event,player){
                return event.source&&event.source.isIn()&&event.source!=player&&!event.source.hasJudge('bingliang');
              },
              check:function (event,player){
                return get.attitude(player,event.source)<=0;
              },
              logTarget:"source",
              content:function (){
                var card=game.createCard('bingliang');
                trigger.source.addJudge(card);
                trigger.source.$draw(card);
                game.delay();
              },
              ai:{
                 "maixie_defend":true,
　　　　　　　　},
　　		},
		    gzyonglvex:{
			  audio:'yonglve',
              shaRelated:true,
              forced:true,
			  derivation:'tiaoxin',
              trigger:{
                source:"damageSource",
              },
              filter:function (event,player){
                if(event._notrigger.contains(event.player)) return false;
                  return(event.card&&event.card.name=='sha'&&
　　　　　　　　　event.getParent().name=='sha'&&event.player.isAlive()&&
                  player.canCompare(event.player));
              },
              content:function (){
				  player.addTempSkill('tiaoxin');
              },
　　		},
            gzdingzhong:{
                audio:"huomo",
                trigger:{
                    player:"phaseUseBegin",
                },
                direct:true,
                content:function (){
                "step 0"
                 player.chooseTarget('是否发动【定中】？',function(card,player,target){
            if(target.identity=='unknown'||target.identity=='ye'||target.identity==player.identity) return false;

            return player!=target;
        })
        "step 1"
        if(result.bool){
            player.logSkill('gzdingzhong',result.targets);
            event.target=result.targets[0];
                    var num=0;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].group==event.target.group){
                num++;
            }
        }
            var controls=['对你造成伤害'];
        if(player.countCards('h')>=num){
            controls.push('造成伤害');
        }
        controls.push('cancel');
            player.chooseControl(controls,function(event,player){
                if(ai.get.attitude(player,event.target)>0) return '对你造成伤害';
                if(ai.get.attitude(player,event.target)<0&&num>=2) return '对你造成伤害';
                return '造成伤害';
            })
        }
        else{
            event.finish();
        }
        "step 2"
        var num=0;
        for(var i=0;i<game.players.length;i++){
            if(game.players[i].group==event.target.group){
                num++;
            }
        }
		var num2=Math.min(num,player.maxHp);
        if(result.control=='造成伤害'){
            if(player.countCards('h')>=num2){
            player.chooseToDiscard(num2,true,'h');
            event.target.damage(player);
            }
            else{
            event.finish();
        }
        }
        else{
            player.damage(target);
            player.draw(num2);
        }
    },
                ai:{
                    threaten:2,
                },
            },
             gzjunlvex:{
                audio:"nzry_junlve",
				trigger:{source:'dieAfter'},
				forced:true,
                popup:false,
                onremove:true,
                content:function (){   
                'step 0'
                 game.delayx();
                'step 1'
                 player.restoreSkill('gzcuikex');                  
               //player.addSkill('gzcuikex');
                 player.update();
                },
             },
            gzchoulue:{
                audio:"refanjian",
                enable:"phaseUse",
                usable:1,
                prompt:"请选择要交换的手牌和交换的对象",
                selectCard:1,
                filterCard:true,
                discard:false,
				check:function(card){
					return 4-get.value(card);
				},
				filterTarget:function(card,player,target){
					return target!=player&&target.countCards("h");
				},
				filter:function(event,player){
					return player.countCards("h");
				},
                content:function(){
                   "step 0"
                   target.chooseCard("请选择要交换的手牌","h",true);
                   "step 1"
                   event.card=result.cards[0];
                   target.lose(event.card,ui.special);
                   "step 2"
                   player.$compare(cards[0],target,event.card);
                   game.delay(3);
                   "step 3"
                   player.gain(event.card,"gain2");
                   target.gain(cards,"gain2");
                   "step 4"
                   var s1=get.color(event.card);
                   var s2=get.color(cards[0]);
				   if(s1!=s2){
　　　　　　　　　　　target.damage("fire","nocard");
				   }else{
                      player.discoverCard();
				   }
                 },
                 ai:{order:4,result:{target:-2}},
            },
			gzyeyan:{
                audio:"yeyan",
				trigger:{source:'damageBegin'},
				skillAnimation:true,
				animationColor:'fire',
				filter:function(event,player){
					return !player.storage.gzyeyan&&event.nature=='fire';
				},
				intro:{
					content:'limited'
				},
				mark:true,
				logTarget:'player',
				init:function(player){
					player.storage.gzyeyan=false;
				},
				check:function(event,player){
					if(get.attitude(player,event.player)>=0) return 0;
					if(player.hasUnknown()) return 0;
					var num=0,players=game.filterPlayer();
					for(var i=0;i<players.length;i++){
						if(players[i]!=player&&
							players[i]!=event.player&&
							get.distance(event.player,players[i])<=1){
							var eff=get.damageEffect(players[i],player,player,'fire');
							if(eff>0){
								num++;
							}
							else if(eff<0){
								num--;
							}
						}
					}
					return num>0;
				},
				content:function(){
					trigger.num++;
					player.addSkill('gzyeyan2');
					player.storage.gzyeyan=true;
					player.awakenSkill('gzyeyan');
					player.storage.gzyeyan2=[];
					var players=game.filterPlayer();
					for(var i=0;i<players.length;i++){
						if(players[i]!=player&&
							players[i]!=trigger.player&&
							get.distance(trigger.player,players[i])<=1){
							player.storage.gzyeyan2.push(players[i]);
						}
					}
					player.storage.gzyeyan2.sort(lib.sort.seat);
				}
			},
			gzyeyan2:{
				trigger:{global:'damageAfter'},
				forced:true,
				popup:false,
				content:function(){
					'step 0'
					if(player.storage.gzyeyan2&&player.storage.gzyeyan2.length){
						var target=player.storage.gzyeyan2.shift();
						player.line(target,'fire');
						target.damage('fire');
						event.redo();
					}
					'step 1'
					delete player.storage.gzyeyan2;
					player.removeSkill('gzyeyan2');
				}
			},
			gzhuawu:{
               audio:"zhengnan",
			   trigger:{global:'die'},
			   unique:true,
			   mark:true,
			   skillAnimation:true,
			   animationColor:'orange',
			   init:function(player,skill){player.storage[skill]=false},
			   filter:function(event,player){
					if(event.skill) return false;
	return !player.storage.gzhuawu&&event.player.hasMainCharacter();
				},
			   check:function(event,player){
				  return get.guozhanRank(player.name1,player)-get.guozhanRank(event.player.name1,event.player);
			   },
			   content:function(){
				  player.awakenSkill('gzhuawu');
                  player.storage.gzhuawu=true;
	　　　　　　　player.showCharacter(0);
				  var name1=player.name;
				  var name2=trigger.player.name;
				  player.reinit(name1,name2,false);
				  trigger.player.reinit(name2,name1,false);
			   },
            },
			gzxiefangx:{
				enable:"phaseUse",
				usable:1,
				audio:'xinfu_wuniang',
				delay:0,
				filter:function(event,player){
					return 0<game.countPlayer(function(current){
						return current.sex=='female';
					});
				},
				selectTarget:function (){
					return game.countPlayer(function(current){
						return current.sex=='female';
					});
				},
				selectCard:function (){
					return game.countPlayer(function(current){
						return current.sex=='female';
					});
				},
				filterTarget:function (card,player,target){
					return target.countGainableCards(player,'he')>0;
				},
				filterCard:true,
				multitarget:true,
				multiline:true,
				content:function (){
					'step 0' 
					targets.sort(lib.sort.seat);
					event.gained=targets.length;
					'step 1'
					if(event.targets.length){
						player.gainPlayerCard(event.targets.shift(),'he',true);
						event.redo();
					}
					'step 2'
					if(event.gained>=2){
						player.loseHp();
					}
					player.mayChangeVice();
				},
				ai:{
					order:8,
					result:{
						target:-1,
					},
				},
			},
			gzwuniangx:{
				trigger:{
					player:["useCard","respond"],
				},
				audio:'xinfu_wuniang',
				direct:true,
				filter:function (event,player){
					return event.card.name=='sha';
				},
				content:function (){
					'step 0'
					player.chooseTarget(get.prompt2('gzwuniangx'),function(card,player,target){
						if(player==target) return false;
						return target.countGainableCards(player,'he')>0;
					}).set('ai',function(target){
						return 10-get.attitude(_status.event.player,target);
					});
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						player.logSkill('gzwuniangx',target);
						player.line(target,'fire');
						player.gainPlayerCard(target,'he',true);
						target.draw();
						if(!player.storage.gzxushenx) event.finish();
					}
					else event.finish();
					'step 2'
					var list=game.filterPlayer(function(current){
						return current.name=='gz_guansuo'||current.name2=='gz_guansuo';
					});
					if(list.length) game.asyncDraw(list);
					else event.finish();
					'step 3'
					game.delayx();
				},
			},
			gzxushenx:{
				audio:'xinfu_xushen',
				trigger:{player:'dying'},
				limited:true,
				skillAnimation:true,
				animationColor:'orange',
				filter:function(event,player){
					return player.hp<1;
				},
				content:function(){
					player.awakenSkill('gzxushenx');
					player.recover(1-player.hp);
					player.addTempSkill('gzxushenx2');
					trigger.gzxushenx=true;
				},
			},
			gzxushenx2:{
				trigger:{player:'dyingAfter'},
				forced:true,
				popup:false,
				filter:function(event,player){
					return event.gzxushenx==true&&!game.hasPlayer(function(current){
						return current.name=='gz_guansuo'||current.name2=='gz_guansuo';
					});
				},
				content:function(){
					'step 0'
					player.chooseTarget(lib.filter.notMe,'许身：是否令一名其他角色选择是否将其武将牌替换为“关索”？').set('ai',function(target){
						return get.attitude(_status.event.player,target)-4;
					});
					'step 1'
					if(!result.bool){
						event.finish();
						return;
					}
					var target=result.targets[0];
					event.target=target;
					player.line(target,'fire');
　　　　　　　　　　target.chooseBool('许身：是否将自己的一张武将牌替换为“关索”？');
					'step 2'
					if(result.bool){
						if(target.name2!=undefined){
							target.chooseControl(target.name,target.name2).set('prompt','请选择要更换的武将牌');
						}
						else event._result={control:target.name};
					}
					else event.finish();
					'step 3'
					target.reinit(result.control,'gz_guansuo');
					if(_status.characterlist){
						_status.characterlist.add(result.control);
						_status.characterlist.remove('gz_guansuo');
					}
				},
			},
			gzshuijingx:{
				audio:"xinfu_pingcai",
                usable:1,
				trigger:{player:'useCardToBegin'},
				init:function(player){
					player.storage.gzshuijingx=[];
				},
				filter:function(event,player){
					if(event.target!=player&&event.targets&&event.targets.length==1){
						if(player.storage.gzshuijingx.contains(event.target)) return false;
						return event.target.countCards('e',function(card){
							return !player.countCards('he',card.name);
						});
					}
					return false;
				},
				forced:true,
				content:function(){
					'step 0'
					player.choosePlayerCard(trigger.target,'e',get.prompt('gzshuijingx')).set('ai',get.buttonValue).set('filterButton',function(button){
						return !player.countCards('he',button.link.name);
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzshuijingx');
						var card=result.links[0];
						player.equip(game.createCard(card),true);
						player.storage.gzshuijingx.add(trigger.target);
					}
				},
				group:'gzshuijingx_clear',
				subSkill:{
					clear:{
						trigger:{global:'phaseAfter'},
						silent:true,
						content:function(){
							player.storage.gzshuijingx.length=0;
						}
					}
				}
			},
			gzfengchux:{
				zhenfa:'inline',
				trigger:{player:'phaseZhunbeiBegin'},
				filter:function(event,player){
					return player.inline();
				},
				forced:true,
				content:function(){
					player.addTempSkill('xinlianhuan');
				},
			},
			gzwolongx:{
				zhenfa:'siege',
				trigger:{player:'phaseZhunbeiBegin'},
				filter:function(event,player){
					return player.siege();
				},
				forced:true,
				content:function(){
					player.addTempSkill('rehuoji');
				},
			},
			gzshuijing:{
				zhenfa:'siege',
				trigger:{player:'phaseZhunbeiBegin'},
				filter:function(event,player){
					return player.sieged();
				},
				forced:true,
				content:function(){
					player.addTempSkill('gzshuijingx');
				},
			},
			gzyuanzhi:{
				audio:'xinfu_pdgyingshi',
				trigger:{global:'dying'},
				check:function(event,player){
					return event.player.isFriendOf(player);
				},
				limited:true,
				unique:true,
				filter:function(event,player){
					return event.player.hp<=0;
				},
				skillAnimation:true,
				animationColor:'thunder',
				logTarget:'player',
				derivation:'xinfu_pingcai',
				content:function(){
					'step 0'
					player.awakenSkill('gzyuanzhi');
                    player.storage.gzyuanzhi=true;
                    player.loseHp();
　　　　　　　　　　trigger.player.recover(1-trigger.player.hp);
					'step 1'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzyuanzhi')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,'gz_xushux');
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init('gz_xushux',player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
                    player.removeMark('xianqu_mark',1);
					player.removeMark('zhulianbihe_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
                    'step 2'
                    player.addSkill('xinfu_pingcai'); 
                    player.removeSkill('gzfengchux'); 
                    player.removeSkill('gzwolongx'); 
                    player.removeSkill('gzshuijing'); 
                    player.addMark('yinyang_mark'); 
				},
			},
			gzzhidao:{
				enable:'phaseUse',
				round:2,
                audio:"zhidao",
				filterTarget:function(card,player,target){
					return target!=player&&target.countCards('h');
				},
				content:function(){
					'step 0'
					player.gainPlayerCard(target,'h',true,'visible').set('ai',function(button){
						return get.value(button.link);
					});
					'step 1'
					target.gain(game.createCard('sha'),'gain2');
				},
				ai:{
					order:6,
					result:{
						target:function(player,target){
							if(target.getEquip(4)) return -2;
							return -1;
						}
					},
				},
　　		},
			gzzhenxiangx:{
                audio:"ext:国战补充:1",
				trigger:{target:'useCardToTarget'},
				filter:function(event,player){
					return event.card.name=='sha'&& player.countCards('h');;
				},
				content:function(){
					"step 0"
                     player.chooseCardButton('你可重铸任意张手牌',player.getCards('h'),[1,Infinity],false).ai=function(button){ 
                        return 5-get.value(button.link); 
                     }
					"step 1"
                     if(result.bool){ 
                        var cards=result.links; 
                        player.lose(cards,ui.discardPile); 
                        player.$throw(cards,1000); 
                        game.log(player,'将',cards,'置入了弃牌堆'); 
                        event.draw={bool:true,num:cards.length} 
                     }  
                     else event.finish();
					"step 2"
                     if(event.draw&&event.draw.bool){ 
                        player.draw(event.draw.num); 
                     }
				},
			},
			gzlongyux:{
                audio:"ext:国战补充:1",
				limited:true,
				enable:'phaseUse',
                mainSkill:true,
				init:function(player){
					if(player.checkMainSkill('gzlongyux')){
						player.removeMaxHp();
					 }
				},
				filter:function(event,player){
					return !player.storage.gzlongyux&&game.roundNumber>=3;
				},
				content:function(){
                  "step 0"  
				   player.removeCharacter(0);
                  "step 1"  
					var list=player.getEnemies();
					for(var i=0;i<list.length;i++){
						if(list[i].isMin()||!list[i].getStockSkills().length){
							list.splice(i--,1);
						}
					}
					if(list.length){
						var target=list.randomGet();
						target.addExpose(0.1);
						player.line(target);
						var skill=target.getStockSkills().randomGet();
						target.popup(skill);
						player.addSkill(skill);
						target.removeSkill(skill);
						target.gainMaxHp(true);
						target.recover();
					}
				},
				ai:{ 	
				    order:9,
					result:{
						player:1,
					},
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzhanliex:{
                audio:"zhengjian",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				changeSeat:true,
				filterTarget:function(card,player,target){
					return player!=target&&player.next!=target;
				},
				filterCard:true,
				filter:function(event,player){
　　　　　　　　　return !player.storage.gzhanliex;
				},
				check:function(card){
					return 4-get.value(card);
				},
				content:function (){
					'step 0'
					while(player.next!=target){
						game.swapSeat(player,player.next);
					}
					'step 1'
					player.awakenSkill('gzhanliex');
                    player.storage.gzhanliex=true;
				},
				ai:{
					order:5,
					result:{
						player:function(player,target){
							var att=get.attitude(player,target);
							if(target==player.previous&&att>0) return 1;
							if(target==player.next.next&&get.attitude(player,player.next)<0) return 1;
							return 0;
						}
					}
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzshangdao:{
				mod:{
					maxHandcard:function(player,num){
						return num+game.countPlayer(function(current){
							return current.isFriendOf(player);
						});
					}
				},
			},
			gzjugu:{
                audio:"jugu",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzjugu;
				},
				filterTarget:function(card,player,target){
					return target==player;
				},
				selectTarget:-1,
				content:function (){
					'step 0'
					event.num=game.countPlayer();
					player.draw(event.num+1);
					'step 1'
					player.chooseToDiscard(true,event.num,'he');
					'step 2'
					player.awakenSkill('gzjugu');
                    player.storage.gzjugu=true;
				},
				ai:{
					result:{
						player:function(player){
							var num=player.countCards('he');
							if(num<=1) return 0;
							if(num<=3&&!player.needsToDiscard()) return 0;
							return 1;
						}
					},
					order:7,
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzziyuan:{
                audio:"ziyuan",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzziyuan;
				},
				content:function(){
					'step 0'
					var target=get.max(game.filterPlayer(function(current){
						return !current.isUnseen(0);
					},'list').randomSort(),function(current){
						var att=get.attitude(player,current);
						if(att<0&&current.isDamaged()&&current.hp<=3){
							return -10;
						}
						var rank=get.guozhanRank(current.name1,current);
						if(current.maxHp>=3){
							if(current.hp<=1){
								if(att>0) return att*3+2;
								return att*3;
							}
							else if(current.hp==2){
								if(att>0){
									att*=1.5;
								}
								else{
									att/=1.5;
								}
							}
						}
						if(rank>=7){
							if(att>0){
								return att/10;
							}
							return -att/5;
						}
						else if(rank<=4){
							if(att<0){
								return -att/10;
							}
							return att;
						}
						return Math.abs(att/2);
					},'item');
					event.aitarget=target;
					var list=[];
					for(var i=0;i<_status.characterlist.length;i++){
						var info=lib.character[_status.characterlist[i]];
						if(info[4]&&info[4].contains('jun')) continue;
							list.push(_status.characterlist[i]);
					}
					var players=game.players.concat(game.dead);
					for(var i=0;i<players.length;i++){
						list.remove(players[i].name);
						list.remove(players[i].name1);
						list.remove(players[i].name2);
					}
					var dialog=ui.create.dialog('选择一张武将牌','hidden');
					dialog.add([list.randomGets(3),'character']);
					player.chooseButton(dialog,true).ai=function(button){
						if(get.attitude(player,event.aitarget)>0){
							return get.rank(button.link,true);
						}
						else{
							return -get.rank(button.link,true);
						}
					};
					'step 1'
					event.nametarget=result.links[0];
					player.chooseTarget(true,'使用'+get.translation(event.nametarget)+'替换一名角色的武将牌',function(card,player,target){
						return !target.isUnseen(0)&&!target.isMin();
					}).ai=function(target){
						if(target==event.aitarget){
							return 1;
						}
						else{
							return 0;
						}
					}
					'step 2'
					var target=result.targets[0];
					var hp=target.hp;
　　　　　　　　    target.showCharacter(0);
					target.reinit(target.name,event.nametarget);
					target.update();
					player.line(target,'green');
					'step 3'
					game.triggerEnter(target);
					'step 4'
					player.awakenSkill('gzziyuan');
                    player.storage.gzziyuan=true;
				},
				ai:{
					result:{
						player:1
					},
					order:4.5,
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzweizhong:{
                audio:"weizhong",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzweizhong;
				},
				filterTarget:function(card,player,target){
					return !target.hasSkill('fengyin');
				},
				content:function (){
					'step 0'
					target.addTempSkill('fengyin');
					'step 1'
					player.awakenSkill('gzweizhong');
                    player.storage.gzweizhong=true;
				},
				ai:{
					result:{
						target:function(player,target){
							var threaten=get.threaten(target,player,true);
							if(target.hasSkill('fengyin')){
								return 0;
							}
							if(target.hasSkillTag('maixie_hp')){
								threaten*=1.5;
							}
							return -threaten;
						}
					},
					order:4.5,
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
			gzfenglve:{
				audio:"fenglve",
				trigger:{
					player:"phaseUseBegin",
				},
				direct:true,
				content:function (){
					'step 0'
					var goon=player.hasCard(function(card){
						if(get.position(card)!="h") return false;
						var val=get.value(card);
						if(val<0) return true;
						if(val<=5){
							return card.number>=12;
						}
						if(val<=6){
							return card.number>=13;
						}
						return false;
					});
					player.chooseTarget(get.prompt2('gzfenglve'),function(card,player,target){
						return player.canCompare(target);
					}).set('ai',function(target){
						if(!_status.event.goon) return 0;
						return -get.attitude(player,target)*(1+target.countCards('e'))/(1+target.countCards('j'));
					}).set('goon',goon);
					'step 1'
					if(result.bool){
						var target=result.targets[0];
						event.target=target;
						player.logSkill('gzfenglve',target);
						player.chooseToCompare(target);
					}
					else{
						event.finish();
					}
					'step 2'
					if(result.bool){
						var num=0;
						if(target.countCards('h')) num++;
						if(target.countCards('e')) num++;
						if(target.countCards('j')) num++;
						if(num){
							event.gainner=player;
							event.giver=target;
							target.choosePlayerCard(target,num,'hej',true).set('filterButton',function(button){
								for(var i=0;i<ui.selected.buttons.length;i++){
									if(get.position(button.link)==get.position(ui.selected.buttons[i].link)) return false;
								}
								return true;
							}).set('prompt','选择交给'+get.translation(event.gainner)+'的牌');
						}
						else event.finish();
					}
					else{
						if(player.countCards('he')){
							event.gainner=target;
							event.giver=player;
							player.choosePlayerCard(player,true,'he').set('prompt','选择交给'+get.translation(event.gainner)+'的牌');
						}
						else event.finish();
					}
					'step 3'
					event.gainner.gain(result.links,'giveAuto',event.giver)
				},
			},

            gzchoujuex:{
                audio:"choujue",
                trigger:{
                    global:"phaseEnd",
                },
                filter:function (event,player){
                  return player.getHistory('damage').length>0||player.getHistory('sourceDamage').length>0
                },
                frequent:true,
                init:function (player){
                  player.storage.gzchoujuex=[];
                },
                content:function (){
                  var card=get.cards()[0];
                  player.storage.gzchoujuex.push(card);
                  player.$draw(card);
                  player.markSkill('gzchoujuex');
        game.addVideo('storage',player,['gzchoujuex',get.cardsInfo(player.storage.gzchoujuex),'cards']);    
                  },
                  intro:{
                    content:"cards",
                  },
                  group:"gzchoujuex2",
                  ai:{
                    threaten:1.3,
                  },
            },
            gzchoujuex2:{
                enable:"phaseUse",
                usable:1,
                audio:"choujue",
                unique:true,
				changeSeat:true,
				filter:function(event,player){
					var min=Math.max(1,player.maxHp-player.hp);
　　　　　　　　　　if(!player.storage.gzchoujuex) return false;
　　　　　　　　　　if(player.storage.gzchoujuex.length<2) return false;
					return lib.filter.filterCard({name:'sha'},player);
				},
				filterTarget:function(card,player,target){
					return player!=target&&player.next!=target&&player.canUse('sha',target,false);
				},
                prompt:"移去两张“仇”，移动到任意一名角色的前一位，视为对其使用了一张不计入次数的【杀】",
                content:function (){
        'step 0'
        player.chooseCardButton(2,'仇诀',player.storage.gzchoujuex,true);
        'step 1'
        if(result.bool){
            player.$throw(result.links);
            for(var i=0;i<result.links.length;i++){
                player.storage.gzchoujuex.remove(result.links[i]);
                ui.discardPile.appendChild(result.links[i]);
            }
            player.syncStorage('gzchoujuex');
			game.swapSeat(player,target,true,true);
			player.useCard({name:'sha',isCard:true},target,false);
        }
    },
                ai:{
                    order:8,
                    result:{
                        target:function (player,target){
                          return get.effect(target,{name:'sha'},player,target);
                        },
                    },
                },
            },
					"gzqiangzhi":{
				        audio:'qiangzhi',
						enable:'phaseUse',
						usable:1,
						content:function(){
							"step 0"
							player.chooseTarget(get.prompt('gzqiangzhi'),1,function(card,player,target){
								return target!=player;
							}).ai=function(target){
								if(target.countCards('h')>0) return get.attitude(player,target);
							};
							"step 1"
							if(result.bool){
								event.target=result.targets[0];
								event.target.draw();
								event.target.chooseCard(1,'h',true);
							}else{
								event.finish();
							};
							"step 2"
							if(result.bool){
								event.target.$give(result.cards[0],player);
								event.target.line(player);
								player.gain(result.cards[0],event.target);
							}else{
								event.finish();
							};
						},
				ai:{
					result:{
						target:1
					},
					order:6
				}
			},
			gzzhongyongx:{
				trigger:{player:'useCardAfter'},
				audio:'zhongyong',
				direct:true,
				filter:function(event,player){
					return event.card.name=='sha';
				},
				content:function(){
					"step 0"
					event.sha=trigger.cards.slice(0).filterInD();
					event.shan=[];
					game.countPlayer2(function(current){
						current.getHistory('useCard',function(evt){
							if(evt.card.name=='shan'&&evt.getParent(3)==trigger) event.shan.addArray(evt.cards);
						});
					});
					event.shan.filterInD('d');
					if(!event.sha.length&&!event.shan.length) event.finish();
					player.chooseTarget(get.prompt2('gzzhongyongx'),function(card,player,target){
						return !_status.event.source.contains(target)&&target!=player;
					}).set('ai',function(target){
						return get.attitude(_status.event.player,target);
					}).set('source',trigger.targets);
					"step 1"
					if(result.bool){
						var target=result.targets[0];
						event.target=target;
						player.logSkill('gzzhongyongx',target);
						if(event.sha.length&&event.shan.length){
							player.chooseControl().set('choiceList',[
								'将'+get.translation(event.sha)+'交给'+get.translation(target),
								'将'+get.translation(event.shan)+'交给'+get.translation(target),
							]).set('ai',function(){
								return _status.event.choice;
							}).set('choice',function(){
								if(get.color(event.sha)!='black') return 0;
								return 1;
							}());
						}
						else event._result={index:event.sha.length?0:1};
					}
					else{
						event.finish();
					}
					"step 2"
					var cards=result.index==0?event.sha:event.shan;
					target.gain(cards,'gain2');
				}
			},
				gzyanjux:{
                    audio:"ext:国战补充:1",
　　　　　　　　    round:1,
					trigger:{
						global:'damageAfter'
					},
					filter:function(event,player){
						return event.card&&event.card.name=='sha'&&event.source&&_status.currentPhase==event.source;
					},
					check:function(event,player){
						if(event.source==undefined) return false;
						return (player.countCards('h')>player.maxHp+1&&get.attitude(player,event.source)<0)||
						(player.countCards('h')<=2&&get.attitude(player,event.source)>=0);
					},
					content:function(){
						player.draw();
						trigger.source.draw();
						var evt=_status.event;
						for(var i=0;i<10;i++){
							if(evt&&evt.getParent) evt=evt.getParent();
							if(evt.name=='phaseUse'){
								evt.skipped=true;
								break;
							};
						};
					},
				},
        gzxiyingx:{
		  audio:'xiying',
          trigger:{player:'phaseUseBegin'},
          filter:function(event,player){
            return player.countCards('he');
          },
          direct:true,
          content:function(){
            'step 0'
            player.chooseCardTarget({
              selectCard:1,
              filterCard:true,
              position:'he',
              selectTarget:-1,
              filterTarget:function(card,player,target){
                return target!=player&&player.inRange(target);
              },
              ai1:function(card){
                var player=_status.event.player
                var hs=player.getCards('h');
                if(hs<3&&player.countCards('e')==0) return 0;
                for(var i=0;i<hs.length;i++){
                  if(get.tag(hs[i],'damage')){
                    var val=8-get.value(card);
                    if(get.tag(card,'damage'))val -= 3;
                    return val;
                  }
                }
                return 0;
              },
              ai2:function(card,player,target){
                return 1;
              },
              prompt:'是否发动袭营？<p style="text-algin:left;font-size:80%">'+get.translation('gzxiyingx_info')+'</p>',
            });
            'step 1'
            if(result.bool){
              player.discard(result.cards[0]);
              result.targets.sort(lib.sort.seat);
              player.logSkill('gzxiyingx',result.targets);
              event.targets = result.targets;
            }
            else {
              event.finish();
            }
            'step 2'
            event.target=event.targets.shift();
            event.target.chooseToDiscard('袭营：请选择弃置一张牌或本回合不能使用牌','he').ai=function(card){
              var target=event.target;
              if(get.attitude(target,player)>0) return 0;
              var h=target.countCards('h'),e=target.countCards('e');
              var tao=target.countCards('h',{name:'tao'}),
                  jiu=target.countCards('h',{name:'jiu'});
              if(h==0) return 0;
              if(tao&&game.hasPlayer(function(current){
                return get.attitude(target,current)>2&&current.hp==1;
              })) return 7-get.value(card);
              if(jiu&&target.hp==1)return 7-get.value(card);
              if(target.hasWuxie())return 5-get.value(card);
              if(target.hasShan()){
                if(player.inRange(target)&&get.damageEffect(target,player,target)<0) return 5 - get.value(card);
                return 0;
              }
              return 0;
            };
            'step 3'
            if(!result.bool){
              event.target.addTempSkill('gzxiyingx_ban');
              event.target.markSkillCharacter('gzxiyingx',player,'袭营','本回合内不能使用或打出牌');
            }
            if(event.targets.length)event.goto(2);
          },
          subSkill:{
            ban:{
              mod:{
                cardEnabled:function(card,player){
                  return false;
                },
                cardUsable:function(card,player){
                  return false;
                },
                cardRespondable:function(card,player){
                  return false;
                },
                cardSavable:function(card,player){
                  return false;
                }
              },
              onremove:function(player){
                player.unmarkSkill('gzxiyingx');
              }
            },
          },
        },
			  gzfuhanx:{
				audio:'fuhan',
				trigger:{player:'phaseBegin'},
				unique:true,
				limited:true,
				skillAnimation:true,
				animationColor:'orange',
				forceunique:true,
				filter:function(event,player){
			 	  return player.storage.gzfanghunx>0;
				},
				check:function(event,player){
					var num=Math.floor(player.storage.gzfanghunx/2);
					if(num==0) return false;
					if(!game.dead.length) return false;
 					   return true;
				},
				content:function(){
					'step 0'
					player.awakenSkill('gzfuhanx');
                    player.storage.gzfuhanx=true;
					if(!game.dead.length) event.finish();
					'step 1'
					var chara=[];
					var skills=[];
					for(var i=0;i<game.dead.length;i++){
						var name=game.dead[i].name;
						var name2=game.dead[i].name2;
						var skill=[];
						if(name&&lib.character[name]) skill.addArray(lib.character[name][3]);
						if(name2&&lib.character[name2]) skill.addArray(lib.character[name2][3]);
						if(skill.length){
							chara.push(game.dead[i]);
							skills.push(skill);
						}
					}
					if(!chara.length) event.finish();
					event.chara=chara;
					event.skills=skills;
					event.chosen=[];
					'step 2'
					var next=player.chooseTarget('是否获得一名已死亡角色的一个技能？');
					next.set('chara',event.chara);
					next.set('skills',event.skills);
					next.set('chosen',event.chosen);
					next.set('filterTarget',function(card,player,target){
						if(target.isAlive()) return false;
						var evt=_status.event;
						if(!evt.chosen.length) return true;
						var skills=evt.skills[evt.chara.indexOf(target)];
						if(skills.length==1&&skills[0]==evt.chosen[0]) return false;
						return true;
					});
					next.set('deadTarget',true);
					next.set('ai',function(){return Math.random()});
					'step 3'
					if(!result.bool) event.finish();
					else{
						event.temp=result.targets[0];
						var list=event.skills[event.chara.indexOf(result.targets[0])];
						result.targets[0].line(player,{color:[251, 193, 217]})
						list.removeArray(event.chosen);
						player.chooseControl(list).set('prompt','选择获得一个技能');
					}
					'step 4'
					player.addSkill(result.control,get.groupnature(event.temp.group)||'shu');
					player.addSkill(result.control);
					var info=get.info(result.control);
					event.chosen.push(result.control);
					if(event.chosen.length<2) event.goto(2);
					'step 5'
					if(player.checkMainSkill('gzfuhanx')){
						player.removeCharacter(1);
					}
					else{
						player.removeCharacter(0);
					}
					'step 6'
                     player.draw(Math.floor(player.storage.gzfanghunx/2));
                     player.storage.gzfanghunx=0; 
　				}
			},
              gzfanghunx:{
                audio:"fanghun",
                unique:true,
                init:function (player){
                   player.storage.gzfanghunx=0;
                },
                mark:true,
                intro:{
                    content:"已累计获得#个芳魂标记",
                },
				trigger:{
                  player:"damageBegin",
　　　　　　　　},
                forced:true,
                popup:false,
                content:function(){
                  player.storage.gzfanghunx+=trigger.num;                      
                },
                group:["gzfanghunx_1","gzfanghunx_2"],
                subSkill:{
                    "1":{
                        trigger:{
                            player:"damageAfter",
                        },
                        forced:true,
                        content:function(){      
                        "step 0"
				        player.draw();
                        "step 1"
				        player.chooseToDiscard(1,'he',true);
                        },
                        sub:true,
                    },
                    "2":{
						mod:{
							maxHandcard:function(player,num){
								return num+Math.ceil(player.storage.gzfanghunx/2);
							}
						},
                        sub:true,
                    },
                },
            },
            gzqianchongx:{
                mark:true,
                locked:true,
                marktext:"谦",
                intro:{
                    content:function(storage,player,skill){
                        if(player.storage.gzqianchongx==true) return '出牌阶段限一次，你可以交给一名角色一张牌，然后你可观看其手牌。';
                        return '出牌阶段限一次，你可以获得一名角色一张牌，然后其可以观看你的手牌。';
                    },
                },
                trigger:{
                    player:"phaseUseBegin",
                },
                forced:true,
                content:function(){
                    if(player.storage.gzqianchongx==true){
                        player.storage.gzqianchongx=false;
                        player.addTempSkill('gzqianchongx_2',{player:'phaseAfter'});
                    }else{
                        player.storage.gzqianchongx=true;
                        player.addTempSkill('gzqianchongx_1',{player:'phaseAfter'});
                    };
                },
                subSkill:{
                    "1":{
                        audio:"xinu_qianchong",
						prompt:'出牌阶段限一次，你可以交给一名角色一张牌，然后你可观看其手牌',
                        enable:'phaseUse',
                        usable:1,
                        filter:function(event,player){
                            return player.countCards('h')>0;
                        },
                        discard:false,
                        line:true,
                        prepare:"give",
                        position:"he",
                        filterCard:true,
                        filterTarget:function(card,player,target){
                            return target!=player;
                        },
                        check:function(card){
                            return 5-get.value(card);
                        },
                        content:function(){
                            player.storage.gzqianchongx=true;
                            target.gain(cards,player);
                            player.viewHandcards(target);
                        },
                        ai:{
                            order:11,
                            result:{
                                target:function(player,target){
                                    return 1;
                                },
                            },
                        },
                    },
                    "2":{
                        audio:"xinfu_qianchong",
                        prompt:'出牌阶段限一次，你可以获得一名角色一张牌，然后其可以观看你的手牌',
                        enable:'phaseUse',
                        usable:1,
                	       filterTarget:function(card,player,target){
					                    return player!=target&&target.countCards('he')>0;
				                     },
                        content:function(){
                        player.storage.gzqianchongx=false;
                        var card=target.getCards('he').randomGet();
					                    player.gain(card,target);
					                    target.$giveAuto(card,player);
					                    target.viewHandcards(player);
                       },
                       ai:{
					                   order:8,
					                   result:{
						                  target:-1,
						                  player:0.1
					                  }
			                  	},
                    },
                },
            },
              gzshangjianx:{
                audio:"xinfu_shangjian",
				trigger:{global:'useCardAfter'},
				filter:function(event,player){
					return player.sameIdentityAs(event.player)&&event.player!=player&&get.suit(event.card)=='spade';
				},
				check:function(event,player){
					return get.attitude(player,event.player)>=0;
				},
				priority:-5,
				logTarget:'player',
				usable:1,
				content:function(){
					game.asyncDraw([trigger.player,player]);
				},
				ai:{
					expose:0.1,
					threaten:1.8,
				}
			},	
			gzwurongx:{
				audio:'wurong',
				trigger:{player:'phaseUseBegin'},
				frequent:true,
				content:function(){
					'step 0'
					event.num=Math.max(1,player.maxHp-player.hp);
					player.draw(event.num);
					'step 1'
					player.chooseToDiscard('he',event.num,true);
					'step 2'
					var useCard=false;
					if(result.bool&&result.cards){
						for(var i=0;i<result.cards.length;i++){
							if(result.cards[i].name=='sha'){
								useCard=true;break;
							}
						}
					}
					if(useCard){
						player.chooseTarget('是否视为使用一张决斗？',function(card,player,target){
							return lib.filter.targetEnabled({name:'juedou'},player,target);
						}).set('ai',function(target){
							return get.effect(target,{name:'juedou'},_status.event.player);
						});
					}
					else{
						event.finish();
					}
					'step 3'
					if(result.bool){
						player.useCard({name:'juedou'},result.targets);
					}
				},
				ai:{
					threaten:function(player,target){
						return Math.sqrt(Math.max(1,target.maxHp-target.hp));
					}
				}
			},
			gzzishux:{
				audio:'zishu',
				enable:'phaseUse',
				filter:function(event,player){
					return player.countCards('he',{type:'equip'})>0;
				},
				usable:1,
				filterCard:{ 
　　　　　　　　　　type:"equip",
　　　　　　　　　　color:"red",
　　　　　　　　},
				discard:false,
				prepare:'give',
				filterTarget:function(card,player,target){
					return target!=player&&!target.hasSkill('gzzishux2');
				},
				check:function(card){
					if(_status.event.player.hp>=3) return 8-get.value(card);
					return 7-get.value(card);
				},
				content:function(){
					target.storage.gzzishux2=cards[0];
					target.storage.gzzishux3=player;
					game.addVideo('storage',target,['gzzishux2',get.cardInfo(cards[0]),'card']);
					target.addSkill('gzzishux2');
				},
				ai:{
					order:2,
					result:{
						target:function(player,target){
							var att=get.attitude(player,target);
							if(att>=0) return 0;
							return get.damageEffect(target,player,target,'fire');
						}
					},
					expose:0.2
				}
			},
			gzzishux2:{
				audio:'zishu',
				trigger:{source:'damageAfter'},
				forced:true,
				mark:'card',
				filter:function(event,player){
					return player.storage.gzzishux2&&player.storage.gzzishux3;
				},
				content:function(){
					"step 0"
					if(player.storage.gzzishux3&&player.storage.gzzishux3.isAlive()){
						player.damage(player.storage.gzzishux3);
						player.storage.gzzishux3.line(player,'fire');
					}
					else{
						player.damage('nosource');
					}
					"step 1"
					var he=player.getCards('he');
					if(he.length){
						player.discard(he.randomGet());
					}
					"step 2"
					player.$throw(player.storage.gzzishux2);
					player.storage.gzzishux2.discard();
					delete player.storage.gzzishux2;
					delete player.storage.gzzishux3;
					player.removeSkill('gzzishux2');
				},
				group:'gzzishux3',
				intro:{
					content:'card'
				}
			},
			gzzishux3:{
				trigger:{player:'dieBegin'},
				forced:true,
				popup:false,
				content:function(){
					player.storage.gzzishux2.discard();
					delete player.storage.gzzishux2;
					delete player.storage.gzzishux3;
					player.removeSkill('gzzishux2');
				}
			},
			gzchoucex:{
				audio:'chouce',
				trigger:{player:'changeHp'},
				filter:function(event){
					return event.num!=0;
				},
				frequent:true,
				content:function(){
				   player.draw(Math.abs(trigger.num));
				},
				ai:{
					effect:{
						target:function(card){
							if(get.tag(card,'damage')||get.tag(card,'recover')){
								return [1,0.2];
							}
						}
					}
				},
				group:'gzchoucex2'
			},
			gzchoucex2:{
				trigger:{source:'dieAfter'},
				frequent:true,
				content:function(){
				 "step 0"
				  player.recover();
				 "step 1"
                  player.mayChangeVice(true);
				}
			},
			gzzaoshang:{
				unique:true,
				enable:'phaseUse',
				audio:'tiandu',
				animationColor:'metal',
				skillAnimation:'legend',
				limited:true,
                mark:true,
				line:'thunder',
                intro:{
                    content:"limited",
                },
				filterTarget:function(card,player,target){
					return target.isMinHp();
				},
				selectTarget:-1,
                filter:function (event,player){
                  return !player.storage.gzzaoshang;
                },
				content:function (){
					"step 0"
					if(target.countCards('h')){
						target.randomDiscard('h');
					}
					else{
						target.damage();
					}
					"step 1"
					player.awakenSkill('gzzaoshang');
                    player.storage.gzzaoshangx=true;
				},
				ai:{
					order:1,
					result:{
						player:function(player){
							var num=0;
							var players=game.filterPlayer();
							for(var i=0;i<players.length;i++){
								var att=get.attitude(player,players[i]);
								if(att>0) att=1;
								if(att<0) att=-1;
								if(players[i]!=player&&players[i].hp<=3){
									if(players[i].countCards('h')==0) num+=att/players[i].hp;
									else if(players[i].countCards('h')==1) num+=att/2/players[i].hp;
								}
								if(players[i].hp==1) num+=att*1.5;
							}
							if(player.hp==1){
								return -num;
							}
							if(player.hp==2){
								return -game.players.length/4-num;
							}
							return -game.players.length/3-num;
						}
					}
				}
			},
			gzmeibux:{
				audio:'meibu',
				trigger:{global:'phaseDrawBegin'},
				filter:function(event,player){
					return event.player!=player&&event.player.countCards('h')>0&&player.countCards('h')>0;
				},
				check:function(event,player){
					if(player.isUnseen()) return false;
					if(get.attitude(player,event.player)>=0) return false;
					var hs=player.getCards('h');
					if(hs.length<event.player.countCards('h')) return false;
					for(var i=0;i<hs.length;i++){
						var val=get.value(hs[0]);
						if(hs[i].number>=10&&val<=6) return true;
						if(hs[i].number>=8&&val<=3) return true;
					}
					return false;
				},
				logTarget:'player',
				content:function(){
					'step 0'
					player.chooseToCompare(trigger.player);
					'step 1'
					if(result.bool){
						player.draw(2);
					}
					else{
						event.finish();
					}
					'step 2'
					player.chooseCard('将两张牌置于牌堆顶（先选择的在上）',2,'he',true);
					'step 3'
					if(result.bool){
						player.lose(result.cards,ui.special);
						event.cards=result.cards;
					}
					else{
						event.finish();
					}
					'step 4'
					game.delay();
					var nodes=[];
					for(var i=0;i<event.cards.length;i++){
						var cardx=ui.create.card();
						cardx.classList.add('infohidden');
						cardx.classList.add('infoflip');
						nodes.push(cardx);
					}
					player.$throw(nodes,700,'nobroadcast');
					game.log(player,'将'+get.cnNumber(event.cards.length)+'张牌置于牌堆顶');
					'step 5'
					for(var i=event.cards.length-1;i>=0;i--){
						ui.cardPile.insertBefore(event.cards[i],ui.cardPile.firstChild);
					}
				},
				ai:{
					mingzhi:false,
					expose:0.2
				}
			},
			gzxianfux:{
				audio:'xianfu',
				trigger:{player:'dieBegin'},
				direct:true,
				unique:true,
				derivation:'gzxianfux2',
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gzxianfux'),function(card,player,target){
						return player!=target;
					}).ai=function(target){
						return get.attitude(player,target);
					};
					"step 1"
					if(result.bool){
						var cards=player.getCards('hej');
						var target=result.targets[0];
						player.$give(cards,target);
						target.gain(cards);
						target.addSkill('gzxianfux2');
						player.logSkill('gzxianfux',target);
						target.marks.gzxianfux=target.markCharacter(player,{
							name:'先辅',
							content:'<div class="skill">【追思】</div><div>锁定技，结束阶段，你摸一张牌</div>'
						});
						game.addVideo('markCharacter',target,{
							name:'先辅',
							content:'<div class="skill">【追思】</div><div>锁定技，结束阶段，你摸一张牌</div>',
							id:'gzxianfux',
							target:player.dataset.position
						});
					}
				},
				ai:{
					threaten:0.8
				}
			},
			gzxianfux2:{
				audio:'xianfu',
				forced:true,
                mod:{
                   maxHandcard:function (player,num){
                     if(player.hp<player.maxHp) return num+player.getDamagedHp();
                   },
　　　　　　　　},	
　　		},
					"gzranshangx":{
				       audio:'ranshang',
						group:["gzranshangx_huo","gzranshangx_nanman","gzranshangx_wanjian"],
						subSkill:{
							"huo":{
								trigger:{
									target:'huogongEnd',
                          			target:'huoshaolianyingEnd',
								},
								forced:true,
								filter:function(event,player){
									return player.countCards('he')>0;
								},
								content:function(){
									player.chooseToDiscard(1,'he',true);
								},
                                sub:true,
							},
							"nanman":{
                                trigger:{
                                  target:"useCardToBefore",
                                },
                                forced:true,
                                filter:function (event,player){
                                  return event.card.name=='nanman';
                                },
                                content:function (){
                                  trigger.cancel();
                                },
								ai:{
									effect:{
										target:function(card,player,target){
											if(card.name=='nanman') return 0;
										},
									},
								},
                                sub:true,
							},
							"wanjian":{
                                trigger:{
                                  target:"useCardToBefore",
                                },
                                forced:true,
                                filter:function (event,player){
                                  return event.card.name=='wanjian';
                                },
                                content:function (){
                                  trigger.cancel();
                                },
								ai:{
									effect:{
										target:function(card,player,target){
											if(card.name=='wanjian') return 0;
										},
									},
								},
                                sub:true,
							},
						},
					},
			gzdangxian:{
				trigger:{player:'phaseBegin'},
				forced:true,
				audio:'dangxian',
				content:function(){
					'step 0'
					player.chooseBool('是否失去1点体力并获得一张【杀】？').ai=function(){
					return player.hp>2&&!player.hasSha();
					};
					'step 1'
					if(result.bool){
						player.loseHp();
						var card=get.cardPile(function(card){
						return card.name=='sha';
						});
						if(card) player.gain(card,'gain2');
					}
					else event.goto(2);
					'step 2'
					player.phaseUse();
					'step 3'
					var stat=player.getStat();
					stat.card={};
					for(var i in stat.skill){
						var bool=false;
						var info=lib.skill[i];
						if(info.enable!=undefined){
							if(typeof info.enable=='string'&&info.enable=='phaseUse') bool=true;
							else if(typeof info.enable=='object'&&info.enable.contains('phaseUse')) bool=true;
						}
						if(bool) stat.skill[i]=0;
					}
				}
			},
			gzbenxi:{
                audio:"benxi",
				trigger:{player:'useCardToBegin'},
				filter:function(event,player){
					return event.target&&event.target!=player&&event.target.countCards('he')&&get.color(event.card)=='black';
				},
				init:function(player){
					player.storage.gzbenxi=0;
				},
				forced:true,
				content:function(){
					trigger.target.randomDiscard();
					player.storage.gzbenxi++;
					if(player.storage.gzbenxi%4==0){
						player.draw();
					}
				}
			},
			gzbenxi2:{},
			gzrangyi:{
				audio:'zishu',
				enable:'phaseUse',
				usable:1,
				filter:function(event,player){
					return player.countCards('h')>0;
				},
				filterTarget:lib.filter.notMe,
				delay:0,
				content:function(){
					'step 0'
					event.cards=player.getCards('h');
					target.gain(event.cards,player,'giveAuto').gaintag.add('gzrangyi');
					target.addTempSkill('gzrangyi2');
					'step 1'
					target.chooseToUse({
						prompt:'请使用得到的一张牌，或者受到来自'+get.translation(player)+'的一点伤害',
						filterCard:function(card,player){
							if(get.itemtype(card)!='card'||!card.hasGaintag('gzrangyi')) return false;
							return lib.filter.filterCard(card,player,event);
						},
						cards:cards,
					});
					'step 2'
					target.removeSkill('gzrangyi');
					if(!result.bool) target.damage('nocard');
				},
				ai:{
					order:1,
					result:{
						target:function(player,target){
							var hs=player.getCards('h');
							for(var i=0;i<hs.length;i++){
								var hi=hs[i];
								if(hi.name=='tao'||game.hasPlayer(function(current){
									return target.canUse(hi,current)&&get.effect(current,hi,target,target);
								})) return 1;
							}
							return get.damageEffect(target,player,target);
						},
					},
				},
			},
			gzrangyi2:{
				trigger:{player:'useCard'},
				forced:true,
				popup:false,
				filter:function(event,player){
					var evt=event.getParent(2);
					return evt.name=='gzrangyi'&&evt.player.isAlive()&&player.countCards('h',function(card){
						return card.hasGaintag('gzrangyi');
					})>0;
				},
				content:function(){
					var cards=player.getCards('h',function(card){
						return card.hasGaintag('gzrangyi');
					});
					trigger.getParent(2).player.gain(cards,player,'giveAuto');
				},
				onremove:function(player){
					player.removeGaintag('gzrangyi');
				},
			},
            gzsijunx:{
                audio:"ext:国战补充:1",
                unique:true,
                mainSkill:true,
                init:function (player){
                   player.storage.gzsijunx=0;
                },
                mark:true,
                intro:{
                    content:"已累计受到#点伤害",
                },
				trigger:{
                  player:"damageBegin",
　　　　　　　　},
                forced:true,
                popup:false,
                content:function(){
                  player.storage.gzsijunx+=trigger.num;                      
                },
                group:["gzsijunx_1"],
                subSkill:{
                    "1":{
                        skillAnimation:true,
                        trigger:{
                            player:"phaseBegin",
                        },
                        filter:function (event,player){
					       return player.storage.gzsijunx>=4;
                        },
                        forced:true,
                        unique:true,
                        content:function (){      
                        "step 0"
                        player.awakenSkill('gzsijunx');
                        player.storage.gzsijunx=true;
	player.chooseTarget(2,get.prompt2('gzsijunx'),function(card,player,target){
						return target!=player&&!target.isUnseen(0);
					}).set('ai',function(target){
						var att=get.attitude(player,target);
						if(ui.selected.targets.length){
							if(att<0){
								return get.guozhanRank(target.name1,target)-get.guozhanRank(ui.selected.targets[0].name1,ui.selected.targets[0]);
							}
						}
						else{
							if(att>=0){
								return 1/(1+get.guozhanRank(target.name1,target));
							}
						}
						return 0;
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzsijunx',result.targets);
					}
					else{
						event.finish();
					}
					'step 2'
					var name1=result.targets[0].name;
					var name2=result.targets[1].name;
					result.targets[0].reinit(name1,name2,false);
					result.targets[1].reinit(name2,name1,false);
                        },
                        sub:true,
                    },
                },
            },
            gzsheyan:{
　　　　　　　　audio:'sheyan',
                trigger:{
                    global:"useCard",
                },
                filter:function (event,player){
                var num=player.getDamagedHp();
                if(event.player==player) return false;
                if(get.type(event.card)=='equip') return false;
                if(_status.currentPhase!=event.player) return false;
                if(get.cardCount(true,event.player)!=num) return false;
                   return true;
                },
                direct:true,
                content:function (){
                    "step 0"
                     var save=false;
                       if(trigger.targets.length==1){
                      if(ai.get.attitude(player,trigger.target)>2){
                      if(trigger.card.name=='sha'){
                      if( trigger.target.hp==1||player.hp>trigger.target.hp+1){
                    if(!trigger.target.num('h','shan')||trigger.target.num('h')<player.num('h')){
                        save=true;
                    }
                }
            }
            else if(trigger.card.name=='juedou'&&trigger.target.hp==1){
                save=true;
            }
            else if(ai.get.attitude(player,trigger.player)<0){
                save=true;
            }
          }
        }
        else{
            if(ai.get.attitude(player,trigger.player)<0){
                save=true;
            }
        }
        var next=player.chooseToDiscard('是否弃置一张手牌令'+get.translation(trigger.card.name)+'无效');
        next.logSkill=['gzsheyan',trigger.player];
        next.set('ai',function(card){
            if(_status.event.aisave){
                return 7-ai.get.value(card);
            }
            return 0;
        });
        next.set('aisave',save);
        "step 1"
        if(result.bool){
        trigger.untrigger();
        trigger.finish();
        if(get.type(result.cards[0])!='basic') player.draw();
        }
    },
                ai:{
                    threaten:1.1,
                },
            },
			gzmumux:{
　　　　　　　　audio:'mumux',
				trigger:{player:'phaseEnd'},
				direct:true,
				filter:function(event,player){
					var stat=player.getStat('card');
					for(var i in stat){
						if(typeof stat[i]=='number'&&get.type(i,'trick')=='trick'){
							return false;
						}
					}
					return true;
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzmumux'),function(card,player,target){
						return target!=player;
					}).ai=function(target){
						return -get.attitude(player,target)*Math.sqrt(target.countCards('h'));
					}
					'step 1'
					if(result.bool){
						player.logSkill('gzmumux',result.targets);
						result.targets[0].addTempSkill('gzmumux2',{player:'phaseAfter'});
					}
				}
			},
			gzmumux2:{
				mod:{
					cardEnabled:function(card){
						if(get.type(card,'trick')=='trick') return false;
					}
				},
				mark:true,
				marktext:'穆',
				intro:{
					content:'下个回合无法使用锦囊牌'
				}
			},
              gzdanshou:{
                group:["gzdanshou_discard","gzdanshou_swap","gzdanshou_draw"],
　　　　　　　　subSkill:{
　　　　　　　    draw:{
　　　　　　　　    audio:'danshou',
                    enable:'phaseUse',
                    usable:1,
				    filter:function(event,player){
					  return player.countCards('h')<2;
				    },
				    filterTarget:function(card,player,target){
					  if(target==player) return false;
					    return target.countCards('h')<2&&player.inRange(target);
				    },
				    prompt:function(event){
					  return  '选择一名攻击范围内手牌数小于2的其他角色，观看牌堆顶的两张牌，你获得一张并交给其另一张';
			      	},
				    content:function(){
					  'step 0'
					  event.cards=get.cards(2);
					  player.chooseCardButton(event.cards,'获得一张牌并交给'+get.translation(target)+'另一张牌',true);
					  'step 1'
					  player.gain(result.links,false);
					  event.cards.remove(result.links[0]);
					  target.gain(event.cards,false);
					  player.$drawAuto(result.links);
					  target.$drawAuto(event.cards);
					  'step 2'
					  game.delay();
				  },
                  ai:{
                    order:10,
                    result:{
                      target:function(player,target){
					    return 1;
                      },
　                  },
                    threaten:0.7,
                  }, 
                  sub:true,
			  },
　　　　　　　discard:{
　　　　　　　　audio:'danshou',
                enable:'phaseUse',
                usable:1,
				filter:function(event,player){
					return player.countCards('h')>2;
				},
				filterTarget:function(card,player,target){
					if(target==player) return false;
					return target.countCards('h')>2&&target.countDiscardableCards(player,'h')&&player.inRange(target);
				},
				prompt:function(event){
					return  '选择一名攻击范围内手牌数大于2的其他角色，你弃置一张手牌，然后观看并弃置其一张手牌';
				},
				content:function(){
					'step 0'
					player.chooseToDiscard('h',true).delay=false;
					event.discard=true;
					'step 1'
					player.discardPlayerCard(target,'h',true,'visible');
					'step 2'
					game.delay();
				},
                  ai:{
                    order:6,
                    result:{
                      target:function(player,target){
					    return -1;
                      },
　                  },
                    threaten:0.7,
                  }, 
                  sub:true,
			  },
　　　　　　　swap:{
　　　　　　　　audio:'danshou',
                enable:'phaseUse',
                usable:1,
				filter:function(event,player){
					return player.countCards('h')==2;
				},
				filterTarget:function(card,player,target){
					if(target==player) return false;
					return target.countCards('h')==2&&target.countDiscardableCards(player,'h')&&player.inRange(target);
				},
				prompt:function(event){
					return  '选择一名攻击范围内手牌数等于2的其他角色，你与其交换手牌';
				},
				content:function(){
					'step 0'
                    player.swapHandcards(target);
					'step 1'
					game.delay();
				    },
                  ai:{
					  order:function(){
					  var player=_status.event.player;
if(player.hp==1&&player.countCards("h",{name:['tao','shan','jiu']})==0) return 11;
　　　　　　　　　　　if(player.countCards("h",{name:'tao'})>0) return 0;
					  return 6;
					  },
　                    result:{
                      target:function(player,target){
					    return -1;
                      },
　                  },
                    threaten:0.7,
                  }, 
                  sub:true,
			},
	     },
	  },
            gzyishuai:{
                unique:true,
                init:function (player){
                   player.storage.gzyishuai=0;
                },
                mark:true,
                intro:{
                    content:"已累计造成#点伤害",
                },
                trigger:{
　　　　　　　　　source:'damageEnd'
                },
                forced:true,
                popup:false,
                content:function(){
                  player.storage.gzyishuai+=trigger.num;                      
                },
                group:["gzyishuai_1"],
                subSkill:{
                    "1":{
                        skillAnimation:true,
                        trigger:{
                            player:"phaseBegin",
                        },
                        filter:function (event,player){
                           if(player.storage.gzyishuai>=4) return true;
                              return false;
                        },
                        audio:"yicong",
                        forced:true,
                        unique:true,
                        content:function (){      
					      player.addSkill('gzqiaomeng');
                          player.awakenSkill('gzyishuai');
                          player.storage.gzyishuaix=true;
                        },
                        sub:true,
                    },
                },
            },
			gzqiaomeng:{
                audio:"qiaomeng",
				trigger:{source:'damageBegin1'},
				direct:true,
				filter:function(event,player){
					if(event.getParent().name!='sha') return false;
					if(_status.connectMode) return player.countCards('he')>0;
					return player.countCards('he',this.filterCard)>0;
				},
				filterCard:function(card){
					return get.subtype(card)=='equip3'||get.subtype(card)=='equip4'||get.subtype(card)=='equip6';
				},
				content:function(){
					'step 0'
					var next=player.chooseToDiscard('he',lib.skill.gzqiaomeng.filterCard,get.prompt(event.name,trigger.player),'弃置一张坐骑牌，令即将对其造成的伤害+1');
					next.ai=function(card){
						if(_status.event.goon) return 6-get.value(card);
						return -1;
					};
					next.set('goon',get.attitude(player,trigger.player)<0&&!trigger.player.hasSkillTag('filterDamage',null,{
						player:player,
						card:trigger.card,
					}));
					next.logSkill=[event.name,trigger.player];
					'step 1'
					if(result.bool) trigger.num++;
				},
			},
         gzhunjix:{
           trigger:{
              player:"phaseZhunbeiBefore",
           },
           audio:"ext:国战补充:1",
           filter:function (event,player){
                                    if(player.hasSkill('lijian')||player.hasSkill('wushuang')) return false;
           return true; 
           },
           frequent:true,
           derivation:["gzlijianx","gzshenjix"],
           content:function(){
                'step 0'
                var skills=lib.skill.gzhunjix.derivation;
                var list=[];
                for(var i=0;i<skills.length;i++){
                    if(!player.hasSkill(skills[i])){
                                  list.push(skills[i]);
                               }
                             }
                    if(list.length){
                        if(list.length==1){
                        player.addTempSkill(list[0]);
                        player.popup(list[0]);
           game.log(player,'获得技能','【'+get.translation(list[0])+'】');   
                             event.finish();
                           }
           else player.chooseControl(list).set('prompt','选择获得一项技能');
                        }
                       'step 1'
                       if(result.control){
                       player.addTempSkill(result.control);
                       player.popup(result.control);
            game.log(player,'获得技能','【'+get.translation(result.control)+'】');
                                    }
                                },
                            },
			gzlijianx:{
                audio:"ext:国战补充:1",
				enable:'phaseUse',
				usable:1,
				filter:function(event,player){
					return game.countPlayer(function(current){
						return current!=player&&current.sex=='male';
					})>1;
				},
				check:function(card){return 10-get.value(card)},
				filterCard:true,
				position:'he',
				filterTarget:function(card,player,target){
					if(player==target) return false;
					if(target.sex!='male') return false;
					if(ui.selected.targets.length==1){
						return target.canUse({name:'juedou'},ui.selected.targets[0]);
					}
					return true;
				},
				targetprompt:['先出杀','后出杀'],
				selectTarget:2,
				multitarget:true,
				content:function(){
					targets[1].useCard({name:'juedou',isCard:true},'nowuxie',targets[0],'noai').animate=false;
					game.delay(0.5);
				},
				ai:{
					order:8,
					result:{
						target:function(player,target){
							if(ui.selected.targets.length==0){
								return -3;
							}
							else{
								return get.effect(target,{name:'juedou'},ui.selected.targets[0],target);
							}
						}
					},
					expose:0.4,
					threaten:3,
				}
			},
			gzshenjix:{
                audio:"ext:国战补充:1",
				unique:true,
				mod:{
					selectTarget:function(card,player,range){
						if(range[1]==-1) return;
						//if(player.getEquip(1)) return;
						if(card.name=='sha') range[1]+=1;
					},
					cardUsable:function(card,player,num){
						//if(player.getEquip(1)) return;
						if(card.name=='sha') return num+1;
					}
				},
			},
			gzzongshi:{
				audio:'jyzongshi',
				trigger:{target:'useCardToBegin'},
				filter:function(event,player){
					if(event.targets&&event.targets.length>1) return false;
					return event.card&&get.type(event.card)=='trick'&&event.player!=player;
				},
				frequent:true,
				content:function(){
					player.draw();
				},
				ai:{
					effect:function(card,player,target){
						if(get.type(card)=='trick') return [1,1];
					},
				}
			},
					gzjilei:{
				        audio:'jilei',
						trigger:{player:'damageAfter'},
						filter:function(event,player){
							return player.countCards('he')>0;
						},
						content:function(){
							"step 0"
							player.chooseToDiscard(get.prompt('gzjilei'),1,'he').ai=function(card){
								if(trigger.card&&get.suit(trigger.card)==get.suit(card)) return 1;
								return 0;
							};
							"step 1"
							if(result.bool){
								if(trigger.card&&get.suit(trigger.card)==get.suit(result.cards[0])) player.recover();
							};
						},
				group:'gzjilei_cancel',
				subSkill:{
					cancel:{
						trigger:{player:'damageBegin4'},
						priority:-11,
						forced:true,
						filter:function(event){
							return event.num>1;
						},
						content:function(){
							trigger.num=0;
                            player.loseHp();
						}
					}
				}
			},
			gznuzhanx:{
				trigger:{player:'useCard'},
				forced:true,
				popup:false,
				audio:'nuzhan',
				filter:function(event,player){
					return _status.currentPhase==player&&[2,3,4].contains(player.countUsed());
				},
				derivation:['gzhuxiao','gzdanjix','gzhuweiz'],
				content:function(){
					var skill;
					switch(player.countUsed()){
						case 2:skill='gzhuxiao';break;
						case 3:skill='gzdanjix';break;
						case 4:skill='gzhuweiz';break;
					}
					if(skill&&!player.hasSkill(skill)){
						player.addTempSkill(skill);
						player.popup(skill);
						game.log(player,'获得了','【'+get.translation(skill)+'】');
						if(skill=='gzdanjix'){
							var nh=player.countCards('h');
							if(nh<2){
								player.draw(2-nh);
								player.addSkill('counttrigger');
								if(!player.storage.counttrigger){
									player.storage.counttrigger={};
								}
								player.storage.counttrigger.gzdanjix=1;
							}
						}
					}
				},
				ai:{
					effect:{
						player:function(card,player){
							if(_status.currentPhase!=player) return;
							if(get.type(card)=='basic') return;
							if(get.tag(card,'gain')) return;
							if(get.value(card,player,'raw')>=7) return;
							if(player.hp<=2) return;
							if(player.needsToDiscard()) return;
							if(player.countUsed()>=2) return;
							return 'zeroplayertarget';
						}
					}
				}
			},
			gzhuweiz:{
				audio:'wushen',
				enable:'phaseUse',
				filter:function(event,player){
					return player.countCards('h',{color:'red'})>0;
				},
				usable:1,
				content:function(){
					'step 0'
                    var cards=player.getCards('h');
                    for(var i=0;i<cards.length;i++){
                       if(get.color(cards[i])!='red'){
                           cards.splice(i,1);i--;
                       }
                    }
                    cards.sort(lib.sort.random);
                    player.discard(cards);
					'step 1'
				    var targets=game.filterPlayer(function(current){
					   return player.canUse('wanjian',current);
				    });
				    targets.sort(lib.sort.seat);
				    player.useCard({name:'wanjian'},targets);
			     }
			},
			gzdanjix:{
				trigger:{player:'loseEnd'},
				forced:true,
				audio:'danji',
				filter:function(event,player){
					for(var i=0;i<event.cards.length;i++){
						if(event.cards[i].original=='h') return player.countCards('h')<2;
					}
					return false;
				},
				content:function(){
					player.draw(2-player.countCards('h'));
				},
				ai:{
					noh:true,
					skillTagFilter:function(player,tag){
						var nh=player.countCards('h');
						if(tag=='noh'&&(nh>2||nh==0)){
							return false;
						}
					}
				}
			},
			gzguijix:{
				audio:'danji',
				trigger:{global:'dying'},
				forced:true,
				check:function(){
					return false;
				},
				filter:function(event,player){
					return event.player!=player&&event.parent.name=='damage'&&event.player.group=='wei'&&event.parent.source&&event.parent.source==player;
				},
				content:function(){
					'step 0'
                     var cards=player.getCards('hej');
                     player.discard(cards);
					'step 1'
					player.modifyGroup('shu');
					'step 1'
					'step 2'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzguijix')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,'gz_sp_guanping');
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init('gz_sp_guanping',player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
                    player.removeMark('xianqu_mark',1);
					player.removeMark('zhulianbihe_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
					'step 3'
					player.addSkill('yijue');
					player.addMark('zhulianbihe_mark');
					player.removeSkill('gzguijix');
				},
			},
			gzjiqiao:{
				audio:'jiqiao',
				trigger:{player:'phaseUseBegin'},
				direct:true,
				filter:function(event,player){
					return player.countCards('he',{type:'equip'})>0;
				},
				content:function(){
					'step 0'
					player.chooseToDiscard(get.prompt2('gzjiqiao'),[1,player.countCards('he',{type:'equip'})],'he',function(card){
						return get.type(card)=='equip';
					}).set('ai',function(card){
						if(card.name=='bagua') return 10;
						return 7-get.value(card);
					}).logSkill='gzjiqiao';
					'step 1'
					if(result.bool){
						event.cards=get.cards(result.cards.length+game.countGroup());
						player.showCards(event.cards);
					}
					else{
						event.finish();
					}
					'step 2'
					var gained=[];
					var tothrow=[];
					for(var i=0;i<event.cards.length;i++){
						if(get.type(event.cards[i],'trick')=='trick'){
							gained.push(event.cards[i]);
						}
						else{
							tothrow.push(event.cards[i]);
						}
					}
					player.gain(gained,'gain2');
					game.cardsDiscard(tothrow);
				},
				ai:{
					threaten:1.5
				}
			},
            gzxiaoxi:{
                audio:"ext:国战补充:2",
                trigger:{
                    global:"dieAfter",
                },
                direct:true,
                content:function (){
					var next=player.chooseToUse();
					next.logSkill='gzxiaoxi';
					next.set('openskilldialog',get.prompt2('gzxiaoxi'));
					next.set('norestore',true);
					next.set('_backupevent','gzxiaoxix');
					next.backup('gzxiaoxix');
                },
            },
			gzxiaoxix:{
				viewAs:{name:'sha'},
				filterCard:{color:'black'},
				position:'he',
				check:function(card){return 5-get.value(card)},
			},
			gzniluan:{
				audio:'niluan',
				trigger:{global:'phaseJieshuBegin'},
				direct:true,
				filter:function(event,player){
					return event.player.isAlive()&&event.player.hp>=player.hp&&lib.filter.targetEnabled({name:'sha'},player,event.player)&&player.hasSha();
				},
				content:function(){
					player.chooseToUse({name:'sha'},'逆乱：是否对'+get.translation(trigger.player)+'使用一张杀？').set('logSkill','gzniluan').set('complexSelect',true).set('filterTarget',function(card,player,target){
						if(target!=_status.event.sourcex&&!ui.selected.targets.contains(_status.event.sourcex)) return false;
						return lib.filter.targetEnabled.apply(this,arguments);
					}).set('sourcex',trigger.player);
				}
			},
            gzxiashu:{
                audio:"xiashu",
                enable:"phaseUse",
                usable:1,
                selectCard:1,
                filterCard:true,
                position:"he",
                selectTarget:1,
                filterTarget:function(card,player,target){
                   return player!=target
                },
                check:function(card){
        var player = _status.event.player;
        var targets = game.filterPlayer(function(target){
          return get.attitude(player,target)>0;
        });
        var eff = 0;
        for(var i=0;i<targets.length;i++){
          var tgs = game.filterPlayer(function(target){
            return targets[0].canUse(card,target);
          });
          for(var k=0;k<tgs.length;k++){
            eff = Math.max(eff,get.effect(tgs[k],card,targets[i],player));
          }
        }
        return eff;
      },
                discard:false,
                lose:true,
                content:function (){
        'step 0'
        player.$give(cards.length,target);
        target.gain(cards,player);
        'step 1'
        event.target=target;
        target.chooseToUse({
          prompt:'下书：是否使用'+get.translation(cards[0]),
            filterCard:function(card){
            return card == cards[0];
          },
          filter:function (card,player){
            var evt=_status.event.getParent();
            if(evt&&evt.filterCard){
                return evt.filterCard(card,player,evt);
            }
            return false;
        },
        });
        'step 2'
        if(result.bool){
          player.draw();
        }
      },
            },
					"gzkuanshi":{
						group:["gzkuanshi_attack","gzkuanshi_defend"],
						subSkill:{
							"attack":{
						        audio:'kuanshi',
								trigger:{
									player:'shaBegin'
								},
								filter:function(event,player){
									return event.target.hp<player.hp;
								},
								content:function(){
								    player.draw();															    },
								ai:{
									expose:0.3,
								},
							},
							"defend":{
						        audio:'kuanshi',
								trigger:{
									target:'shaBegin'
								},
								filter:function(event,player){
									return event.player.countCards('h')>player.countCards('h');
								},
								content:function(){
								    player.draw();									                            },
								ai:{
									expose:0.3,
								},
							},
						},
					},
			gzshanxi:{
              audio:"shanxi",
              usable:1,
              trigger:{
                global:"useCardAfter",
              },
              priority:15,
              filter:function (event,player){
				 if(!player.countCards('h')) return false;
                 return event.player!=player&&get.type(event.card)=='equip';
              },
              content:function(){ 
              "step 0" 
               var next=player.chooseToDiscard('h','闪袭：是否弃置一张手牌视为对'+get.translation(trigger.player)+'使用一张杀？'); 
               next.logSkill=['gzshanxi',trigger.player]; 
               var eff=get.effect(trigger.player,{name:'sha'},player,player); 
                 next.ai=function(card){ 
                   if(eff>0){ 
                     return 6-get.value(card); 
                   } 
                   return 0; 
               } 
              "step 1" 
               if(result.bool){ 
                 player.useCard({name:'sha',isCard:true},trigger.player).animate=false; 
                 }  
               },
　　　　　     group:["gzshanxi_discard"],
               subSkill:{
                 discard:{
                   trigger:{
                     source:"damageAfter",
                  },
                  audio:"shanxi",
                  filter:function(event){ 
                    return event.parent.parent.parent.name=='gzshanxi'; 
                  },
                  content:function (){ 
                   'step 0'
                    player.discardPlayerCard(trigger.player,'he',true);
                   'step 1'
					if(result.bool&&result.cards.length){
						if(get.type(result.cards[0])=='equip'&&!trigger.player.isDisabled(get.subtype(result.cards[0]))){
							player.chooseUseTarget(result.cards[0]);
						}
						else{
							trigger.player.discard(result.cards[0]);
						}
					 }
				  },
                  sub:true,
                  },
               },
		    },
			    gzqizhou:{
				   viceSkill:true,
				   init:function(player){					  if(player.checkViceSkill('gzqizhou')&&!player.viceChanged){
				   player.removeMaxHp();
				   }
				},
                audio:"ext:国战补充:3",
				trigger:{player:['loseEnd']},
				direct:true,
				filter:function(event,player){
					if(player.equiping) return false;
					if(player.countCards('e')) return false;
					for(var i=0;i<event.cards.length;i++){
						if(event.cards[i].original=='e') return true;
					}
					return false;
				},
				content:function(){
					"step 0"
					player.chooseTarget([1,1],get.prompt('gzqizhou'),function(card,player,target){
						if(player==target) return false;
						return target.countCards('he')>0;
					}).ai=function(target){
						var att=get.attitude(player,target);
						if(att<=0){
							return 1-att+(target.countCards('e')?2:0);
						}
						return 0;
					};
					"step 1"
					if(result.bool){
						event.target=result.targets[0];
						player.logSkill('gzqizhou',event.target);
						player.choosePlayerCard(event.target,'he',true).ai=function(button){
							var card=button.link;
							if(get.position(card)=='e') return get.equipValue(card);
							return 5;
						};
					}
					"step 2"
					if(result.bool){
						player.gain(result.buttons[0].link,event.target);
						event.target.$giveAuto(result.buttons[0].link,player);
					}
				},
			},
            gzcaishi:{
                audio:"caishi",
                enable:"phaseUse",
                usable:1,
                filterTarget:function(card,player,target){
        return target!=player&&target.num('h');
    },
                content:function (){
        'step 0'
        if(player.num('h')){
            player.chooseCardButton('才识',target.get('h')).ai=function(button){
                return ai.get.value(button.link)-5;
            }
        }
        else{
            player.viewCards('才识',target.get('h'));
            event.finish();
        }
        'step 1'
        if(result.bool){
            event.card=result.links[[0]];
            player.chooseCard('h',true,'用一张手牌替换'+get.translation(event.card)).ai=function(card){
                return -ai.get.value(card);
            };
        }
        else{
            event.finish();
        }
        'step 2'
        if(result.bool){
            player.gain(event.card);
            target.gain(result.cards);
            player.$give(1,target);
            target.$give(1,player);
            game.log(player,'与',target,'交换了一张手牌');
        }
    },
                ai:{
                    threaten:1.3,
                    result:{
                        target:function (player,target){
                          return -target.num('h');
                        },
                    },
                    order:10,
                    expose:0.2,
                },
            },
			gzzhongjianx:{
				audio:'zhongjian',
				enable:'phaseUse',
				usable:1,
				filter:function(event,player){
					var nh=player.countCards('h');
					return nh&&nh<=player.maxHp;
				},
				content:function(){
					'step 0'
					player.showHandcards();
					event.num=player.countCards('h');
					'step 1'
					player.directgain(get.cards(event.num));
					player.chooseCard('将'+get.cnNumber(event.num)+'张手牌以按顺序置于牌堆顶（先选择的在上）',event.num,true).set('ai',function(card){
						return -get.value(card);
					});
					'step 2'
					if(result.bool){
						player.lose(result.cards,ui.special)._triggered=null;
						event.cards=result.cards.slice(0);
					}
					else{
						event.finish();
					}
					'step 3'
					if(player==game.me&&_status.auto){
						game.delay();
					}
					'step 4'
					while(event.cards.length){
						var current=event.cards.pop();
						current.fix();
						ui.cardPile.insertBefore(current,ui.cardPile.firstChild);
					}
				},
				ai:{
					order:10,
					result:{
						player:1
					}
				}
			},
			gzzhongjian:{
				audio:'zhongjian',
				enable:'phaseUse',
				usable:1,
				filter:function(event,player){
					return player.countCards('h')>0;
				},
				filterTarget:function(event,player,target){
					return target!=player&&target.countCards('h')>0;
				},
				filterCard:true,
				selectCard:function(){
					return 1;
				},
				discard:false,
				lose:false,
				content:function(){
					'step 0'
					event.suits=[];
					event.nums=[];
					for(var i=0;i<cards.length;i++){
						event.suits.push(get.suit(cards[i]));
						event.nums.push(get.number(cards[i]));
					}
					player.showCards(cards);
					'step 1'
					player.choosePlayerCard(target,'h',1,'请选择要展示的牌').ai=function(){return Math.random()};
					'step 2'
					event.cards2=result.cards.slice(0);
					target.showCards(event.cards2);
					'step 3'
					var card=event.cards2.shift();
					var bool=false;
					if(event.suits.contains(get.suit(card))){
						bool=true;
	        player.addTempSkill('jieming',{player:'phaseBegin'});	
	        player.addTempSkill('zuoding',{player:'phaseBegin'});					        }
					if(event.nums.contains(get.number(card))){
						bool=true;
	        player.addTempSkill('splanggu',{player:'phaseBegin'});
	        player.addTempSkill('zquanji',{player:'phaseBegin'});
					}
					if(!bool&&player.countCards('h')){
　　　　　　　　　　target.draw();
					target.chooseToDiscard('he',true);
					}
					'step 4'
					if(event.cards2.length) event.goto(3);
				},
				ai:{
                    order:7,
					result:{
						target:function(player,target){
							return -target.countCards('h');
						},
                        player:function(player,target){
　　　　　　　            return target.countCards('h')<=2;
                        },
					},
				},
			},
            gzkongsheng:{
                audio:"kongsheng",
                trigger:{
                    player:"discardAfter",
                },
                direct:true,
                filter:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].original=='e'&&get.color(event.cards[i])=='red'&&get.position(event.cards[i])=='d') return true;
        }
        return false;
    },
                content:function (){
        "step 0"
        event.num=0;
        for(var i=0;i<trigger.cards.length;i++){
            if(trigger.cards[i].original=='e'&&get.color(trigger.cards[i])=='red'&&get.position(trigger.cards[i])=='d') event.num++;
        }
        "step 1"
       player.chooseTarget(get.prompt('gzkongsheng')).set('ai',function(target){
            return ai.get.damageEffect(target,_status.event.player,_status.event.player,'fire');
        });
        "step 2"
        if(result.bool){
            player.logSkill('gzkongsheng',result.targets);
            event.target=result.targets[0];
            event.target.damage('fire');
        }
        else{
            event.finish();
        }
        "step 3"
        event.num--;
        if(event.num) event.goto(1);
    },
            },
			gzliangyin:{
				audio:'liangyin',
				trigger:{player:'useCard'},
				forced:true,
				filter:function(event,player){
					return get.type(event.card)!='equip'&&player.countCards('h',{color:get.color(event.card)})>0;
				},
				content:function(){
					'step 0'
					var cards=player.getCards('h',{suit:get.suit(trigger.card)});
					if(!cards.length){
						cards=player.getCards('h',{color:get.color(trigger.card)});
					}
					if(!cards.length){
						event.finish();
						return;
					}
					event.chosen=cards.randomGet();
					game.delay(0.5)
					'step 1'
					var card=event.chosen;
					player.lose(card,ui.discardPile);
					player.$throw(card,1000);
					game.delay(0.5);
					game.log(player,'重铸了',card);
					'step 2'
					player.draw().log=false;
				},
				ai:{
					pretao:true
				}
			},
			gztuifeng:{
				audio:'tuifeng',
				trigger:{player:'damageEnd'},
				direct:true,
				notemp:true,
				filter:function(event,player){
					return player.countCards('he')>0;
				},
				init:function(player){
					if(!player.storage.gztuifeng) player.storage.gztuifeng=[];
				},
				content:function(){
					'step 0'
					player.chooseCard(get.prompt2('gztuifeng'),'he',[1,trigger.num]).set('ai',function(card){
						if(card.name=='du') return 20;
						return 7-get.useful(card);
					});
					'step 1'
					if(result.bool){
						player.logSkill('gztuifeng');
						player.lose(result.cards,ui.special,'toStorage');
						player.$give(result.cards,player,false);
						for(var i=0;i<result.cards.length;i++){
							player.storage.gztuifeng.push(result.cards[i]);
						}
						player.markSkill('gztuifeng');
					}
				},
				marktext:'锋',
				intro:{
					content:'cards',
					onunmark:function(storage,player){
						if(storage&&storage.length){
							player.$throw(storage,1000);
							game.cardsDiscard(storage);
							game.log(storage,'被置入了弃牌堆');
						 storage.length=0;
						}
					},
				},
				group:'gztuifeng2',
				ai:{
					threaten:0.8,
					maixie:true,
					maixie_hp:true
				}
			},
			gztuifeng2:{
				audio:'tuifeng',
				trigger:{player:'phaseZhunbeiBegin'},
				forced:true,
				filter:function(event,player){
					return player.storage.gztuifeng&&player.storage.gztuifeng.length>0;
				},
				content:function(){
					player.draw(1+player.storage.gztuifeng.length);
					player.addTempSkill('gztuifeng3');
					player.storage.gztuifeng3=player.storage.gztuifeng.length;
					player.unmarkSkill('gztuifeng');
				}
			},
			gztuifeng3:{
				mod:{
					cardUsable:function(card,player,num){
						if(card.name=='sha'&&player.storage.gztuifeng3) return num+player.storage.gztuifeng3;
					}
				},
				onremove:true
			},
			gzjianying:{
                mark:true,
                locked:true,
                marktext:"渐",
                intro:{
                    content:function(storage,player,skill){
                        if(player.storage.gzjianying==true) return '当你于出牌阶段内使用与此阶段你使用的上一张牌点数相同的牌时，你可以摸一张牌';
                        return '当你于出牌阶段内使用与此阶段你使用的上一张牌花色相同的牌时，你可以摸一张牌';
                    },
                },
                trigger:{
                    player:"phaseUseBegin",
                },
                forced:true,
                content:function(){
                    if(player.storage.gzjianying==true){
                        player.storage.gzjianying=false;
                        player.addTempSkill('gzjianying_2',{player:'phaseAfter'});
                    }else{
                        player.storage.gzjianying=true;
                        player.addTempSkill('gzjianying_1',{player:'phaseAfter'});
                    };
                },
				subSkill:{
					1:{
						mark:true,
						marktext:"数",
						intro:{
							content:"点数相同",
						},
						audio:"jianying",
						forced:true,
				mod:{
					aiOrder:function(player,card,num){
						if(typeof card=='object'&&player.isPhaseUsing()){
							var evt=player.getLastUsed();
							if(evt&&evt.card&&(evt.card.number&&evt.card.number==card.number)){
								return num+10;
							}
						}
					},
				},
				trigger:{player:'useCard'},
				frequent:true,
				filter:function(event,player){
					var evt=player.getLastUsed(1);
					if(!evt||!evt.card) return false;
					if(!player.isPhaseUsing()) return false;
					var evt2=evt.getParent('phaseUse');
					if(!evt2||evt2.name!='phaseUse'||evt2.player!=player) return false;
					return evt.card.number&&evt.card.number==event.card.number;
				},
				content:function(){
					player.draw();
				},
						sub:true,
					},
					2:{
						mark:true,
						marktext:"色",
						intro:{
							content:"花色相同",
						},
						audio:"jianying",
						forced:true,
				mod:{
					aiOrder:function(player,card,num){
						if(typeof card=='object'&&player.isPhaseUsing()){
							var evt=player.getLastUsed();
							if(evt&&evt.card&&(get.suit(evt.card)&&get.suit(evt.card)==get.suit(card))){
								return num+10;
							}
						}
					},
				},
				trigger:{player:'useCard'},
				frequent:true,
				filter:function(event,player){
					var evt=player.getLastUsed(1);
					if(!evt||!evt.card) return false;
					if(!player.isPhaseUsing()) return false;
					var evt2=evt.getParent('phaseUse');
					if(!evt2||evt2.name!='phaseUse'||evt2.player!=player) return false;
					return get.suit(evt.card)&&get.suit(evt.card)==get.suit(event.card);
				},
				content:function(){
					player.draw();
				},
						sub:true,
					},
				},
			},
			gzhusix:{
                audio:"ext:国战补充:1",
				enable:'chooseToUse',
				filterCard:function(card){
					return get.color(card)=='red';
				},
				position:'he',
				viewAs:{name:'sha'},
				viewAsFilter:function(player){
					if(!player.countCards('he',{color:'red'})) return false;
				},
				prompt:'将一张红色牌当【杀】使用',
				check:function(card){return 5-get.value(card)},
				ai:{
					order:function(){
						return get.order({name:'sha'})+0.1;
					},
					respondSha:true,
					skillTagFilter:function(player,tag,arg){
						if(arg!='use') return false;
						if(!player.countCards('he',{color:'red'})) return false;
					},
				},
				group:['gzhusix_expire','gzhusix_draw','gzhusix_gain'],
				subSkill:{
					expire:{
						trigger:{source:'damageAfter'},
						forced:true,
						popup:false,
						filter:function(event){
							return event.parent.skill=='gzhusix';
						},
						content:function(){
							player.storage.gzhusix=true;
						}
					},
					draw:{
						trigger:{player:'shaAfter'},
						forced:true,
						popup:false,
						content:function(){
							if(trigger.parent.skill=='gzhusix'){
								var card=trigger.cards[0];
								if(get.itemtype(card)=='card'&&get.position(card)=='d'&&!player.storage.gzhusix){
									ui.special.appendChild(card);
									if(!player.storage.gzhusix_draw){
										player.storage.gzhusix_draw=[];
									}
									player.storage.gzhusix_draw.push(card);
								}
							}
							delete player.storage.gzhusix;
						}
					},
					gain:{
						trigger:{player:'phaseEnd'},
						forced:true,
						filter:function(event,player){
							return player.storage.gzhusix_draw;
						},
						content:function(){
							player.gain(player.storage.gzhusix_draw,'gain2');
							delete player.storage.gzhusix_draw;
						}
					}
				}
			},
			gzlongyin:{
				audio:'longyin',
				usable:1,
				shaRelated:true,
				trigger:{global:'useCard'},
				direct:true,
				filter:function(event,player){
					return event.card.name=='sha'&&player.countCards('he')>0&&event.player.isPhaseUsing();
				},
				content:function(){
					'step 0'
					var go=false;
					if(get.attitude(player,trigger.player)>0){
						if(get.color(trigger.card)=='red'){
							go=true;
						}
						else if(!trigger.player.hasSkill('new_paoxiao')&&!trigger.player.getEquip('zhuge')){
							var nh=trigger.player.countCards('h');
							if(player==trigger.player){
								go=(player.countCards('h','sha')>0);
							}
							else if(nh>=4){
								go=true;
							}
							else if(player.countCards('h','sha')){
								if(nh==3){
									go=Math.random()<0.8;
								}
								else if(nh==2){
									go=Math.random()<0.5;
								}
							}
							else if(nh>=3){
								if(nh==3){
									go=Math.random()<0.5;
								}
								else if(nh==2){
									go=Math.random()<0.2;
								}
							}
						}
					}
					var next=player.chooseToDiscard(get.prompt('gzlongyin'),'弃置一张牌'+(get.color(trigger.card)=='red'?'并摸一张牌':'')+'，令'+get.translation(trigger.player)+'本次使用的【杀】不计入使用次数','he');
					next.logSkill=['gzlongyin',trigger.player];
					next.set('ai',function(card){
						if(_status.event.go){
							return 6-get.value(card);
						}
						return 0;
					});
					next.set('go',go);
					'step 1'
					if(result.bool){
						trigger.player.getStat().card.sha--;
						if(get.color(trigger.card)=='red'){
							player.draw();
						}
						// player.logSkill('gzlongyin',trigger.player);
					}
				},
				ai:{
					expose:0.2
				}
			},
			gzfuji:{
                audio:"ext:国战补充:1",
				trigger:{global:'damageBegin1'},
				filter:function(event){
					return event.source&&event.nature;
				},
				check:function(event,player){
					return get.attitude(player,event.source)>0&&get.attitude(player,event.player)<0;
				},
				prompt:function(event){
					return get.translation(event.source)+'即将对'+get.translation(event.player)+'造成伤害，'+get.prompt('gzfuji');
				},
				logTarget:'source',
				content:function(){
					trigger.source.judge().callback=lib.skill.gzfuji.callback;
				},
				callback:function(){
					var evt=event.getParent(2);
					if(event.judgeResult.color=='black'){
						//game.cardsDiscard(card);
						evt._trigger.num++;
					}
					else{
						evt._trigger.source.gain(card,'gain2');
					}
				},
			},
			gzfulu:{
				trigger:{player:'useCard1'},
				filter:function(event,player){
					if(event.card.name=='sha'&&!event.card.nature) return true;
				},
                audio:"ext:国战补充:1",
				check:function(event,player){
					var eff=0;
					for(var i=0;i<event.targets.length;i++){
						var target=event.targets[i];
						var eff1=get.damageEffect(target,player,player);
						var eff2=get.damageEffect(target,player,player,'thunder');
						eff+=eff2;
						eff-=eff1;
					}
					return eff>=0;
				},
				content:function(){
					trigger.card.nature='thunder';
					if(get.itemtype(trigger.card)=='card'){
						var next=game.createEvent('gzfulu_clear');
						next.card=trigger.card;
						event.next.remove(next);
						trigger.after.push(next);
						next.setContent(function(){
							delete card.nature;
						});
					}
				}
			},
			gzzongshix:{
                audio:"zongshi",
				trigger:{player:'phaseUseEnd'},
				filter:function(event,player){
					return !player.getStat('damage');
				},
				content:function(){
					'step 0'
                    player.addTempSkill('gzzongshix1');					
　　　　　　　　　　player.throwDice();
					'step 1'
					event.cards=get.cards(event.num);
                    player.showCards(event.cards); 
                    player.chooseCardButton('宗室：获得其中一张牌',true,event.cards).set('ai',function(button){
                    return get.useful(button.link);
                    });
					'step 2'
                    if(result.bool){
                       var card=result.links[0];
                       card.fix();
                       player.gain(card,'draw');
                       event.cards.remove(card);
                    }
					'step 3'
                    while(event.cards.length){
　ui.cardPile.insertBefore(event.cards.pop(),ui.cardPile.firstChild);
                    }
				},
			},
			gzzongshix1:{
				mod:{
					maxHandcard:function(player,num){
						return num+2;
				    },
				},
			},
			 gzzishoux:{
                audio:"zishou",
				trigger:{global:'phaseUseBegin'},
				filter:function(event,player){
					return event.player!=player&&event.player.isFriendOf(player)&&event.player.countCards('h');
				},
				logTarget:'player',
				check:function(event,player){
                    if(player.hasSkill('feiying')) return false;
					return event.player.countCards('h')-event.player.hp>=3||event.player.countCards('h')-player.countCards('h')>=3||player.hp==1;
				},
				content:function(){
					'step 0'
					trigger.player.chooseCard('将一张手牌交给'+get.translation(player),true).ai=function(card){
						if(get.type(card)=='trick') return 8-get.value(card);
						return 6-get.value(card);
					}
					'step 1'
					if(result.bool&&result.cards.length){
						player.gain(result.cards,trigger.player,'give');
						if(get.type(result.cards[0])!='basic'){
                           trigger.player.mayChangeVice();
	                       player.addTempSkill('feiying',{player:'phaseBegin'});
						}
					}
				},
　　　　	},
			gzkangyin:{
				trigger:{player:'phaseUseBefore'},
                audio:'fenyin',
				check:function(event,player){
					return player.countCards('h')+2<=player.hp;
				},
				content:function(){
					'step 0'
					event.cards=get.cards(3);
					trigger.cancel();
					player.$draw(event.cards.slice(0));
					for(var i=0;i<event.cards.length;i++){
						if(get.type(event.cards[i])=='equip'){
							player.equip(event.cards[i]);
							event.cards.splice(i--,1);
						}
					}
					player.gain(event.cards);
					'step 1'
					if(player.countCards('h','sha')){
						player.chooseToUse('亢音：使用一张杀').filterCard=function(card){
							return card.name=='sha'&&get.itemtype(card)=='card';
						}
					}
					else{
						event.finish();
					}
					'step 2'
					if(result.bool){
						event.goto(1);
					}
				}
			},
　　　　　　"gzshenxian":{
                audio:'shenxian',
				trigger:{player:'phaseEnd'},
				filter:function(event,player){					
　　　　　　　　　return player.getStat('damage')>=player.hp;
				},
				content:function(){
				  player.draw(player.maxHp-player.countCards('h'));
                  player.mayChangeVice();
				}
　　　　　　  },
			gzjingce:{
				trigger:{player:'phaseJieshuBegin'},
				frequent:true,
				filter:function(event,player){
					return player.countUsed(null,true)>=player.hp;
				},
				content:function(){
					player.draw(2);
				},
				audio:'jingce',
			},
			gzjingcex:{
				audio:'jingce',
				trigger:{player:'phaseUseEnd'},
				frequent:true,
				filter:function(event,player){
					return player.getHistory('useCard',function(evt){
						return evt.getParent('phaseUse')==event;
					}).length>0;
				},
				content:function(){
					var list=[];
					player.getHistory('useCard',function(evt){
						if(evt.getParent('phaseUse')==trigger) list.add(get.type2(evt.card));
					});
					player.draw(list.length);
				},
				group:'gzjingcex_change',
				subSkill:{
					change:{
				        trigger:{player:'phaseJieshuBegin'},
                        frequent:true,
				        filter:function(event,player){
					       return player.countUsed(null,true)>=player.hp*2;
				        },
						content:function(){
                              player.mayChangeVice();
						},
					}
				},
			},
			gzsheliex:{
				enable:'phaseUse',
				usable:1,
				onChooseToUse:function(event){
					var cards=[];
					var num=Math.max(1,game.countGroup());
					if(ui.cardPile.childNodes.length<num){
						var discardcards=get.cards(num);
						for(var i=0;i<discardcards.length;i++){
							discardcards[i].discard();
						}
					}
					for(var i=0;i<num;i++){
						cards.push(ui.cardPile.childNodes[i]);
					}
					event.set('gzsheliexcards',cards);
				},
				chooseButton:{
					dialog:function(event,player){
						return ui.create.dialog('选择一张牌使用',event.gzsheliexcards);
					},
					filter:function(button,player){
						var evt=_status.event.getParent();
						if(evt&&evt.filterCard){
							var type=get.type(button.link,'trick');
							return evt.filterCard(button.link,player,evt);
						}
						return false;
					},
					check:function(button){
						return get.value(button.link);
					},
					backup:function(links,player){
						return {
				            audio:'shelie',
							filterCard:function(){return false},
							selectCard:-1,
							viewAs:links[0],
						}
					},
					prompt:function(links,player){
						return '选择'+get.translation(links)+'的目标';
					}
				},
				ai:{
					order:10,
					result:{
						player:1
					},
					threaten:1.5
				}
			},
			gzjiaozhao:{
                skillAnimation:"epic",
                audio:"jiaozhao",
                unique:true,
                mark:true,
                init:function(player){
                  player.storage.gzjiaozhao=false;
                },
                enable:"phaseUse",
                filter:function (event,player){
                  return !player.storage.gzjiaozhao;
                },
                intro:{
                    content:"limited",
                },
				enable:'phaseUse',
				filterTarget:function(card,player,target){
					var names=[];
					if(target.name&&!target.isUnseen(0)) names.add(target.name);
					if(target.name1&&!target.isUnseen(0)) names.add(target.name1);
					if(target.name2&&!target.isUnseen(1)) names.add(target.name2);
					var pss=player.getSkills();
					for(var i=0;i<names.length;i++){
						var info=lib.character[names[i]];
						if(info){
							var skills=info[3];
							for(var j=0;j<skills.length;j++){
								if(lib.translate[skills[j]+'_info']&&lib.skill[skills[j]]&&
									!lib.skill[skills[j]].unique&&!pss.contains(skills[j])){
									return true;
								}
							}
						}
						return false;
					}
				},
				createDialog:function(player,target,onlylist){
					var names=[];
					var list=[];
					if(target.name&&!target.isUnseen(0)) names.add(target.name);
					if(target.name1&&!target.isUnseen(0)) names.add(target.name1);
					if(target.name2&&!target.isUnseen(1)) names.add(target.name2);
					var pss=player.getSkills();
					for(var i=0;i<names.length;i++){
						var info=lib.character[names[i]];
						if(info){
							var skills=info[3];
							for(var j=0;j<skills.length;j++){
								if(lib.translate[skills[j]+'_info']&&lib.skill[skills[j]]&&
									!lib.skill[skills[j]].unique&&
									!pss.contains(skills[j])){
									list.push(skills[j]);
								}
							}
						}
					}
					if(onlylist) return list;
					var dialog=ui.create.dialog('forcebutton');
					dialog.add('选择获得一项技能');
					_status.event.list=list;
					var clickItem=function(){
						_status.event._result=this.link;
						game.resume();
					};
					for(i=0;i<list.length;i++){
						if(lib.translate[list[i]+'_info']){
							var translation=get.translation(list[i]);
							if(translation[0]=='新'&&translation.length==3){
								translation=translation.slice(1,3);
							}
							else{
								translation=translation.slice(0,2);
							}
							var item=dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+
							translation+'】</div><div>'+lib.translate[list[i]+'_info']+'</div></div>');
							item.firstChild.addEventListener('click',clickItem);
							item.firstChild.link=list[i];
						}
					}
					dialog.add(ui.create.div('.placeholder'));
					return dialog;
				},
				check:function(card){
					return 5-get.value(card);
				},
				content:function(){
					"step 0"
					// target.gain(cards,player);
					event.skillai=function(list){
						return get.max(list,get.skillRank,'item');
					};
					if(event.isMine()){
						event.dialog=lib.skill.gzjiaozhao.createDialog(player,target);
						event.switchToAuto=function(){
							event._result=event.skillai(event.list);
							game.resume();
						};
						_status.imchoosing=true;
						game.pause();
					}
					else{
						event._result=event.skillai(lib.skill.gzjiaozhao.createDialog(player,target,true));
					}
					"step 1"
					_status.imchoosing=false;
					if(event.dialog){
						event.dialog.close();
					}
					var link=result;
					player.addAdditionalSkill('gzjiaozhao',link);
					player.popup(link);
					player.markSkillCharacter('gzjiaozhao',target,get.translation(link),lib.translate[link+'_info']);
					player.storage.gzjiaozhao=target;
					player.checkMarks();
					game.log(player,'获得了技能','【'+get.translation(link)+'】');
					"step 2"
                     player.storage.gzjiaozhao=true;
					 player.awakenSkill('gzjiaozhao');
				},
				ai:{
					order:1,
					result:{
						player:function(player,target){
							if(player.countCards('h')>player.hp) return 1;
							return 0;
						}
					}
				}
			},
			"gzlingren":{
				usable:1,
				audio:"xinfu_lingren",
				trigger:{
					player:"useCardToPlayered",
				},
				direct:true,
				filter:function (event,player){
					if(event.getParent().triggeredTargets3.length>1) return false;
					if(!player.isPhaseUsing()) return false;
					if(!['basic','trick'].contains(get.type(event.card))) return false;
					if(get.tag(event.card,'damage')) return true;
					return false;
				},
				content:function (){
					'step 0'
					player.chooseTarget(get.prompt2('gzlingren'),function(card,player,target){
						return _status.event.targets.contains(target);
					}).set('ai',function(target){
						return 2-get.attitude(_status.event.player,target);
					}).set('targets',trigger.targets);
					'step 1'
					if(result.bool){
						player.logSkill('gzlingren',result.targets);
						var target=result.targets[0];
						event.target=target;
						player.line('water',target);
						event.choice={
							basic:false,
							trick:false,
							equip:false,
						}
						player.chooseBool('是否押基本牌？').ai=function(event,player){
							var rand=0.7;
							if(!target.countCards('h',{type:['basic']})) rand=0.05;
							return Math.random()<rand?true:false;
						};
					}
					else{
						player.storage.counttrigger.gzlingren--;
						event.finish();
					}
					'step 2'
					if(result.bool){
						event.choice.basic=true;
					}
					player.chooseBool('是否押锦囊牌？').ai=function(event,player){
						var rand=0.6;
							if(!target.countCards('h',{type:['trick','delay']})) rand=0.1;
							return Math.random()<rand?true:false;
					};
					'step 3'
					if(result.bool){
						event.choice.trick=true;
					}
					player.chooseBool('是否押装备牌？').ai=function(event,player){
						var rand=0.5;
							if(!target.countCards('h',{type:['equip']})) rand=0.25;
							return Math.random()<rand?true:false;
					};
					'step 4'
					if(result.bool){
						event.choice.equip=true;
					}
					game.delay();
					var reality={
						basic:false,
						trick:false,
						equip:false,
					}
					var he=target.getCards('h');
					for(var i=0;i<he.length;i++){
						reality[get.type(he[i],'trick')]=true;
					}
					event.num=0;
					var tl=['basic','trick','equip'];
					for(var i=0;i<tl.length;i++){
						if(event.choice[tl[i]]==reality[tl[i]]) event.num++;
					}
					'step 5'
					player.popup('猜对'+get.cnNumber(event.num)+'项');
					game.log(player,'猜对了'+get.cnNumber(event.num)+'项');
　　　　　　　　　　if(event.num>0){
                       player.draw();					
		            }
			         if(event.num>1){
                       player.draw();	
					}
					if(event.num>2){
                       player.draw();	
					   player.addTempSkill('gzlingren_addsha','phaseUseEnd');
					}
				},
				ai:{
					threaten:2.2,
				},
			},
　　　　　　gzlingren_addsha:{
				mod:{
					cardUsable:function(card,player,num){
						if(card.name=='sha') return num+1;
					}
				}
			},
			gzhuituox:{
                audio:"huituo",
				trigger:{player:'damageEnd'},
				frequent:true,
				filter:function(event,player){
					return _status.currentPhase!=player;
				},
				content:function(){
					"step 0"
					player.draw();
					"step 1"
					player.chooseToUse('是否使用一张牌？');
				},
				ai:{
					effect:{
						target:function(card,player,target){
							if(get.tag(card,'damage')&&_status.currentPhase!=target){
								return [1,0.5];
							}
						}
					}
				}
			},
         gzguoshangx:{
           trigger:{
              player:"phaseZhunbeiBefore",
           },
           audio:"fujian",
           filter:function (event,player){
                                    if(player.hasSkill('gzxingshangx')||player.hasSkill('gzqingguox')) return false;
           return true; 
           },
           frequent:true,
           derivation:["gzqingguox","gzxingshangx"],
           content:function(){
                'step 0'
                var skills=lib.skill.gzguoshangx.derivation;
                var list=[];
                for(var i=0;i<skills.length;i++){
                    if(!player.hasSkill(skills[i])){
                                  list.push(skills[i]);
                               }
                             }
                    if(list.length){
                        if(list.length==1){
                        player.addTempSkill(list[0],{player:'phaseBegin'});
                        player.popup(list[0]);
           game.log(player,'获得技能','【'+get.translation(list[0])+'】');   
                             event.finish();
                           }
           else player.chooseControl(list).set('prompt','选择获得一项技能');
                        }
                       'step 1'
                       if(result.control){
                  player.addTempSkill(result.control,{player:'phaseBegin'});
                  player.popup(result.control);
            game.log(player,'获得技能','【'+get.translation(result.control)+'】');
                                    }
                                },
                            },
			gzxingshangx:{
                audio:"ext:国战补充:1",
				//unique:true,
				//gainable:true,
				trigger:{global:'die'},
				//priority:5,
				filter:function(event){
					return event.player.countCards('he')>0;
				},
				content:function(){
					"step 0"
					event.togain=trigger.player.getCards('he');
					player.gain(event.togain,trigger.player,'giveAuto');
				},
			},
			gzqingguox:{
                audio:"ext:国战补充:1",
				enable:['chooseToRespond','chooseToUse'],
				filterCard:function(card){
					return get.color(card)=='black';
				},
				viewAs:{name:'shan'},
				viewAsFilter:function(player){
					if(!player.countCards('h',{color:'black'})) return false;
				},
				prompt:'将一张黑色手牌当闪使用或打出',
				check:function(){return 1},
				ai:{
					respondShan:true,
					skillTagFilter:function(player){
						if(!player.countCards('h',{color:'black'})) return false;
					},
					effect:{
						target:function(card,player,target,current){
							if(get.tag(card,'respondShan')&&current<0) return 0.6
						}
					}
				}
			},
			gzyingjian:{
				trigger:{player:'phaseZhunbeiBegin'},
				direct:true,
				audio:'qingyi',
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gzyingjian'),function(card,player,target){
						return lib.filter.targetEnabled({name:'sha'},player,target);
					}).ai=function(target){
						return get.effect(target,{name:'sha'},player);
					}
					"step 1"
					if(result.bool){
						player.logSkill('gzyingjian');
						player.useCard({name:'sha',isCard:true},result.targets,false);
					}
				},
				ai:{
					threaten:function(player,target){
						return 1.6;
					}
				},
				group:['gzyingjian_discard'],
				subSkill:{
					discard:{
				       trigger:{source:'damageEnd'},
				       forced:true,
				        popup:false,
				        filter:function(event){
						  return event.parent.parent.parent.name=='gzyingjian';
				        },
						content:function(){
		                   player.chooseToDiscard(true,'he');
						}
					}
				}
			},
			gzmingjian:{
				audio:'mingjian',  
				trigger:{player:'phaseUseBefore'},
				direct:true,
				filter:function(event,player){
					return player.countCards('h')>0;
				},
				content:function(){
					'step 0'
					var go=Math.random()<0.5;
					player.chooseTarget(get.prompt('gzmingjian'),function(card,player,target){
						return player!=target
					}).ai=function(target){
						var att=get.attitude(player,target);
						if(att>3){
							if(player.countCards('h')>player.hp) return att;
							if(go) return att;
						}
						return 0;
					}
					'step 1'
					if(result.bool){
						player.logSkill('gzmingjian',result.targets);
						trigger.cancel();
						var target=result.targets[0];
						target.addSkill('gzmingjian2');
						var hs=player.getCards('h');
						target.gain(hs,player);
						player.$give(hs.length,target);
					}
				}
			},
			gzmingjian2:{
				audio:false,
				trigger:{global:'phaseAfter'},
				forced:true,
				popup:false,
				charlotte:true,
				content:function(){
					if(lib.config.glow_phase){
						if(_status.currentPhase){
							_status.currentPhase.classList.remove('glow_phase');
						}
						player.classList.add('glow_phase');
					}
					game.addVideo('phaseChange',player);
					_status.currentPhase=player;
					player.ai.tempIgnore=[];
					player.stat.push({card:{},skill:{}});
					player.phaseUse();
					player.removeSkill('gzmingjian2');
				}
			},
			gzqinwang:{
                audio:"qinwang1",
				trigger:{global:'dying'},
				check:function(event,player){
					return event.player.isFriendOf(player);
				},
				limited:true,
				unique:true,
				filter:function(event,player){
					return event.player.hp<=0;
				},
				skillAnimation:true,
				animationColor:'thunder',
				logTarget:'player',
				content:function(){
					'step 0'
					player.awakenSkill('gzqinwang');
                    player.storage.gzqinwang=true;
					var hs=player.getCards('h')
					if(hs.length) player.discard(hs);
					'step 1'
					var num=1-trigger.player.hp;
					if(num) trigger.player.recover(num);
					'step 2'
                     player.addMark('zhulianbihe_mark'); 
				},
			},
			gzmouzhu:{
				audio:'mouzhu',
				enable:'phaseUse',
				usable:1,
				filterTarget:function(card,player,target){
					return target!=player&&target.countCards('he')>0;
				},
				content:function(){
					'step 0'
					target.chooseCard('he','交给'+get.translation(player)+'一张牌',true);
					'step 1'
					player.gain(result.cards,target,'giveAuto');
					'step 2'
					if(player.countCards('h')<=target.countCards('h')){
					    if(player.identity!='ye'){
                           player.mayChangeVice();
						   event.finish();
						   return;
					    }
					    else event.finish();
						   return;
					    }
					var list=[];
					if(target.canUse('sha',player,false)) list.push('sha');
					if(target.canUse('juedou',player,false)) list.push('juedou');
					if(!list.length) event.finish();
					else if(list.length==1) event._result={control:list[0]};
					else target.chooseControl(list).set('prompt','对'+get.translation(player)+'使用一张【杀】或【决斗】').ai=function(){
						return get.effect(player,{name:'sha'},target,target)>=get.effect(player,{name:'juedou'},target,target)?'sha':'juedou';
					};
					'step 3'
					target.useCard({name:result.control,isCard:true},player);
				},
				ai:{
					order:7,
					result:{
						target:-1.2,
						player:function(player,target){
							if(target.countCards('h')-player.countCards('h')>1) return 1;
							if(get.damageEffect(target,player,player,player)>0) return 1;
							if(player.hp>3||player.countCards('h','sha')&&player.countCards('h','shan')) return 0;
							if(player.hp>2) return -1.1;
							return -2;
						},
					},
				},
			},
			gzxiehui:{
				mod:{
					ignoredHandcard:function(card,player){
						if(get.color(card)=='black'){
							return true;
						}
					},
					cardDiscardable:function(card,player,name){
						if(name=='phaseDiscard'&&get.color(card)=='black') return false;
					}
				},
				trigger:{global:'gainBegin'},
				forced:true,
				popup:false,
				filter:function(event,player){
					if(event.source==player&&event.player!=player){
						for(var i=0;i<event.cards.length;i++){
							if(get.color(event.cards[i])=='black') return true;
						}
					}
					return false;
				},
				content:function(){					trigger.player.addTempSkill('gzxiehui2',{player:'phaseBegin'});
					if(!trigger.player.storage.gzxiehui2){
						trigger.player.storage.gzxiehui2=[];
					}
					for(var i=0;i<trigger.cards.length;i++){
						if(get.color(trigger.cards[i])=='black'){
							trigger.player.storage.gzxiehui2.add(trigger.cards[i]);
						}
					}
				}
			},
			gzxiehui2:{
				mark:true,
				intro:{
					content:'不能使用、打出或弃置获得的黑色牌',
					nocount:true
				},
				mod:{
					cardDiscardable:function(card,player){
						if(player.storage.gzxiehui2&&player.storage.gzxiehui2.contains(card)) return false;
					},
					cardEnabled2:function(card,player){
						if(player.storage.gzxiehui2&&player.storage.gzxiehui2.contains(card)) return false;
					},
				},
			},
            gztianbian:{
				audio:'tianbian',
                trigger:{
                    global:'loseAsyncAfter',
                },
                logTarget:function(event,player){
                    var evt = event.getParent();
                    return [evt.player,evt.target];
                },
                filter:function(event,player){
                    var evt = event.getParent();
                    if(evt && evt.name == 'chooseToCompare'){
                        return true;
                    }
                    return false;
                },
                check:function(event,player){
                    var evt = event.getParent();
                    if(evt && evt.name == 'chooseToCompare'){
                        if(evt.player == player || evt.target == player){
                            var card = evt.player == player ? evt.card1 : evt.card2;
                            if(card && get.number(card) < 10 && get.attitude(evt.player,evt.target) < 0){
                                return true;
                            }
                        }
                    }
                    return Math.random() > 0.5;
                },
                content:function(){
                    'step 0'
                    player.addTempSkill('gztianbian_end');
                    var evt = trigger.getParent();
                    var c = evt.card1;
                    evt.card1 = evt.card2;
                    evt.card2 = c;
                    game.log(player,"交换了",evt.player,"与",evt.target,"的拼点牌，将展示被交换后的拼点结果。");
                },
                subSkill:{
                    end:{
                        sub:true,
                        charlotte:true,
                    }
                }
            },
			gzjianzheng:{
				audio:'jianzheng',
				enable:'phaseUse',
				usable:1,
				direct:true,
				delay:0,
				filter:function(event,player){
					return game.hasPlayer(function(current){
						return current.countCards('h');
					})
				},
				content:function(){
					'step 0'
					var targets=game.filterPlayer(function(current){
						return current.countCards('h');
					});
					var num=targets.length;
					for(var i=0;i<targets.length;i++){
						targets[i]=[targets[i],targets[i].countCards('h',{color:'black'})];
					}
					targets.sort(function(a,b){
						return b[1]-a[1];
					});
					for(var i=1;i<targets.length;i++){
						if(targets[i][1]<targets[0][1]){
							targets.splice(i);break;
						}
					}
					for(var i=0;i<targets.length;i++){
						targets[i]=targets[i][0];
					}
					event.targets=targets;
					var rand=Math.random();
					var choice=targets.randomGet();
					player.chooseTarget('猜测手牌中黑色牌最多的角色',true,function(card,player,target){
						return target.countCards('h');
					}).set('ai',function(target){
						if(rand<0.6||player==game.me){
							return target.isMaxHandcard()?1:0;
						}
						else if(rand<0.8){
							return target==choice?1:0;
						}
						else{
							return Math.random();
						}
					});
					'step 1'
					if(event.targets.contains(result.targets[0])){
						player.popup('成功');
						game.log(player,'发动','【诱敌】','成功');
						var dialog=ui.create.dialog('hidden');
						dialog.add('获得任意一名角色的一张手牌');
						var list=game.filterPlayer(function(current){
							return current!=player&&current.countCards('h');
						}).sortBySeat();
						for(var i=0;i<list.length;i++){
							dialog.addText(get.translation(list[i]));
							dialog.add(list[i].getCards('h'));
						}
						player.chooseButton(dialog,true).set('ai',function(button){
							if(get.attitude(player,get.owner(button.link))>0) return -1;
							return get.value(button.link);
						});
					}
					else{
						player.popup('失败');
						game.log(player,'发动','【诱敌】','失败');
						event.finish();
					}
					'step 2'
					if(result.bool&&result.links&&result.links.length){
						var owner=get.owner(result.links[0]);
						if(owner){
							owner.give(result.links,player);
							player.line(owner);
						}
						else{
							player.gain(result.links,'gain2');
						}
					}
				},
				ai:{
					order:10,
					result:{
						player:10
					}
				}
			},
			gzzhenlie:{
				audio:'zhenlie',
				filter:function(event,player){
					return event.player!=player&&event.card&&(event.card.name=='sha'||get.type(event.card)=='trick');
				},
				logTarget:'player',
				check:function(event,player){
					if(event.getParent().excluded.contains(player)) return false;
					if(get.attitude(player,event.player)>0){
						return false;
					}
					if(get.tag(event.card,'respondSha')){
						if(player.countCards('h',{name:'sha'})==0){
							return true;
						}
					}
					else if(get.tag(event.card,'respondShan')){
						if(player.countCards('h',{name:'shan'})==0){
							return true;
						}
					}
					else if(event.card.name=='huoshaolianying'){
						    return true;
					}
					else if(get.tag(event.card,'damage')){
						if(player.countCards('h')<2) return true;
					}
					else if(get.tag(event.card,'damage')){
						if(player.hasSkill('yiji')&&player.hp>=2) return true;
					}
					else if(get.tag(event.card,'damage')){
						if(player.hasSkill('gztuifeng')&&player.hp>=2) return true;
					}
					else if(event.card.name=='shunshou'&&player.hp>2){
						return true;
					}
					else if(get.tag(event.card,'damage')){
						if(player.hasSkill('reganglie')&&player.hp>=2) return false;
					}
					else if(get.tag(event.card,'damage')){
						if(player.hasSkill('xinfu_weilu')&&player.hp>=2) return false;
					}
					else if(get.tag(event.card,'damage')){
						if(player.hasSkill('gzjianxiong')&&player.hp>=2) return false;
					}
					return false;
				},
				trigger:{target:'useCardToTargeted'},
				content:function(){
					"step 0"
					player.damage('','nosource')
					"step 1"
					trigger.getParent().excluded.add(player);
					"step 2"
					if(trigger.player.countCards('he')){
						player.discardPlayerCard(trigger.player,'he',true);
					}
				},
				ai:{
					expose:0.3
				}
			},
            gzgetingx:{
                audio:"qieting",
                enable:"phaseUse",
                usable:1,
                selectTarget:1,
                filterTarget:function (card,player,target){
                   return player!=target&&target.countCards("h");
                },
                filter:function (event,player){
                   return game.hasPlayer(function(current){
                      return player!=current&&current.countCards("h");
                      });
                },
                content:function (){
                "step 0"
                event.cards=target.getCards("h");
                event.att=get.attitude(player,target);
                var next=player.chooseCardButton("隔听:请选择要展示或置于牌堆顶的一张牌",event.cards,true);
                next.set("ai",function(button){
                   var card=button.link;
                   var player=get.player();
                   var target=_status.event.target;
                   var att=_status.event.att;
                   if(att<0&&player.hasSkill("gzhuiyux")){
                      var su=get.suit(card);
                      if(game.hasPlayer(function(current){
                      var at=get.attitude(player,current);
                      if(current.countDiscardableCards(player,'ej',function(c){
                          return get.suit(c)==su;
                      })>0){
                        if(at>0){
                          return current.countDiscardableCards(player,'j',function(c){
                                return get.suit(c)==su;
                            })>0;
                        }
                        return at<=0;
                    }
                    return false;
                }))return 2+get.value(card)/20;
                return 1+get.value(card)/20;
            }
            else return get.value(card);
        }).set("target",target).set("att",event.att);
        "step 1"
        event.cards=result.links;
        event.t=get.translation(target);
        player.chooseBool(function(event,player){
            return event.att<0;
        }).set("createDialog",["隔听:是否将此牌置于牌堆顶？",event.cards]);
        "step 2"
        if(!result.bool){
            player.showCards(event.cards,event.t+"的一张手牌");
            player.draw();
            event.finish();
        }
        "step 3"
        target.lose(event.cards,ui.special);
        game.broadcastAll(function(player){
            var cardx=ui.create.card();
            cardx.classList.add('infohidden');
            cardx.classList.add('infoflip');
            player.$throw([cardx],1000,'nobroadcast');
        },target);
        target.update();
        game.log(target,"的一张牌被置于牌堆顶");
        "step 4"
        event.cards[0].fix();
        ui.cardPile.insertBefore(event.cards[0],ui.cardPile.firstChild);
        game.updateRoundNumber();
    },
                ai:{
                    order:4,
                    result:{
                        player:function (player,target){
                var att=get.attitude(player,target);
                if(att<0)return 0;
                return 1;
            },
                        target:function (player,target){
                var att=get.attitude(player,target);
                if(att<0)return -1;
                return 0;
            },
                    },
                },
            },
            gzhuiyux:{
                audio:"xianzhou",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                frequent:true,
                content:function (){
        "step 0"
        event.cards=get.cards();
        player.showCards(event.cards,"牌堆顶的牌");
        "step 1"
        event.s=get.suit(event.cards);
        var suit=event.s;
        ui.cardPile.insertBefore(event.cards[0],ui.cardPile.firstChild);
        game.updateRoundNumber();
        event.p="一张"+get.translation(suit+"2")+"牌？";
        var pro="是否弃置场上"+event.p;
        if(game.hasPlayer(function(current){
            return current.countDiscardableCards(player,'ej',function(card){
                return get.suit(card)==suit;
            })>0;
        }))player.chooseTarget(pro,function(card,player,target){
            return target.countDiscardableCards(player,'ej',function(card){
                return get.suit(card)==suit;
            })>0;
        }).set("ai",function(target){
            var player=get.player();
            var att=get.attitude(player,target);
            if(target.countDiscardableCards(player,'j',function(card){
                return get.suit(card)==suit;
            })>0)return att;
            return -att;
        });
        else event.finish();
        "step 2"
        if(result.bool){
            var suit=event.s;
            player.line(result.targets[0],"green");
            var pro="请弃置"+get.translation(result.targets[0])+event.p;
            player.discardPlayerCard(pro,result.targets[0],"ej",true).set("filterButton",function(button){
                return get.suit(button.link)==suit;
            });
        }
    },
            },
			gzxianzhou:{
				skillAnimation:true,
				animationColor:'gray',
				audio:'xianzhou',
				unique:true,
				limited:true,
				enable:'phaseUse',
				mark:true,
				init:function(player){
					player.storage.gzxianzhou=false;
				},
				filter:function(event,player){
					return !player.storage.gzxianzhou;
				},
				filterTarget:function(card,player,target){
					return target.sex=='male'&&target!=player;
				},
				content:function(){
					player.awakenSkill('gzxianzhou');
					player.addSkill('gzxianzhou2');
					target.addSkill('gzxianzhou2');
					target.marks.gzxianzhou=target.markCharacter(player,{
						name:'献州',
						content:'摸牌阶段摸牌数+1'
					});
					if(player.sameIdentityAs(target)){
                       target.mayChangeVice();
                    };
					game.addVideo('markCharacter',target,{
						name:'投诚',
						content:'摸牌阶段摸牌数+1',
						id:'gzxianzhou',
						target:player.dataset.position
					});
					player.storage.gzxianzhou=target;
					target.storage.gzxianzhou=player;
					player.marks.gzxianzhou=player.markCharacter(target,{
						name:'和亲',
						content:'摸牌阶段摸牌数+1'
					});
					game.addVideo('markCharacter',player,{
						name:'放权',
						content:'摸牌阶段摸牌数+1',
						id:'gzxianzhou',
						target:target.dataset.position
					});
				},
				ai:{
					order:1,
					result:{
						target:1
					}
				}
			},
			gzxianzhou2:{
				trigger:{player:'phaseDrawBegin'},
				forced:true,
				content:function(){
					trigger.num++;
				},
				group:'gzxianzhou3'
			},
			gzxianzhou3:{
				trigger:{player:'dieBegin'},
				forced:true,
				popup:false,
				content:function(){
					player.removeSkill('gzxianzhou2');
					player.unmarkSkill('gzxianzhou');
					if(player.storage.gzxianzhou){
						player.storage.gzxianzhou.removeSkill('gzxianzhou2');
						player.storage.gzxianzhou.unmarkSkill('gzxianzhou');
					}
				}
			},
			gzlixianx:{
				trigger:{player:'phaseEnd'},
				filter:function(event,player){
					var cards=player.getCards('h');
					if(cards.length<1) return false;
					var color=get.color(cards[0]);
					for(var i=1;i<cards.length;i++){
						if(get.color(cards[i])!=color) return false;
					}
					if(player.isDamaged()) return true;
					return game.hasPlayer(function(current){
						return current.countCards('j');
					});
				},
				check:function(event,player){
					return game.countPlayer(function(current){
						if(current.countCards('j')) return get.sgn(get.attitude(player,current));
					})>0;
				},
				content:function(){
					'step 0'
					player.showHandcards();
					'step 1'
					event.targets=game.filterPlayer(function(current){
						return current.countCards('j');
					});
					event.targets.sortBySeat();
					'step 2'
					if(event.targets.length){
						var current=event.targets.shift();
						var js=current.getCards('j');
						if(js.length){
							current.discard(js);
							player.line(current,'green');
						}
						event.redo();
					}
				},
				ai:{
					expose:0.1,
				}
			},
			gzkuangbi:{
                audio:"kuangbi",
                enable:"phaseUse",
                usable:1,
                filterTarget:function(card,player,target){ 
                   return target!=player&&target.countCards('h')&&target.isFriendOf(player); 
                },
                filter:function(event,player){ 
                  return game.hasPlayer(function(current){ 
                    return current!=player&&current.countCards('h')&&current.isFriendOf(player);
                  }); 
                 },
                 selectTarget:1,
　　             content:function(){
					'step 0'
                    player.chooseCardButton('止戈：你可重铸'+get.translation(target)+'至多2张手牌，若重铸了2张同类型的手牌，其变更副将。',target.getCards('h'),[1,2],false).ai=function(button){ 
                    var type=get.type(button.link); 
                    if(ui.selected.buttons.length==0){ 
                         if(type=='basic') return 7-get.value(button.link); 
                             else return 5.5-get.value(button.link); 
                         } 
                     }
                    'step 1'            
		            if(result.bool){
			           var cards=result.links;
if(cards.length==2&&get.type(cards[0])==get.type(cards[1])) event.rec=true;
			           target.lose(cards,ui.discardPile);
			           target.$throw(cards,1000);
			           game.log(target,'将',cards,'置入了弃牌堆');
			           event.draw={bool:true,num:cards.length};
		             }
		             else event.finish();
                    'step 2'
		            if(event.draw&&event.draw.bool){
			           target.draw(event.draw.num);
		            }
		            if(event.rec){
			           target.mayChangeVice();
		            }
					else event.finish();      
				},
                ai:{
                    order:9,
                    expose:0.2,
                    result:{
                      player:1,
                      target:1,
                    },
                },
		    },
			 gzzhanjue:{
				audio:"zhanjue",
				enable:"phaseUse",
　　　　　　　　usable:1,
				viewAs:{name:"juedou"},
				group:['gzzhanjue2'],
				filterCard:function (card,player){
					if(ui.selected.cards.length){
						return get.type(card)==get.type(ui.selected.cards[0]);
					}
					var cards=player.getCards('h');
					for(var i=0;i<cards.length;i++){
						if(card!=cards[i]){
							if(get.type(card)==get.type(cards[i])) return true;
						}
					}
					return false;
				},
				selectCard:2,
				complexCard:true,
				check:function(card){
					return 6-get.value(card);
				},
				ai:{
					damage:true,
					order:4,
					effect:{
						player:function(card,player,target){
							if(_status.event.skill=='gzzhanjue'){
								if(player.countCards('h')<=2||target.countCards('h')>=3) return 0;
	if(target.hasSkill('gzjianxiong'))	return 0;
　　if(target.countCards('h','sha')>2) return 0;
							}
						}
					}
				}
			},
			gzzhanjue2:{
				audio:"zhanjue",
				trigger:{
					source:"damageSource",
					player:"damageEnd",
				},
				filter:function (event){
					return event.card&&(event.card.name=='juedou')&&event.notLink();
				},
				forced:true,
				content:function (){
					trigger.source.draw();
				},
			},
			"gzjiefan":{
                audio:"jiefan",
                usable:1,
				mainSkill:true,
				init:function(player){
					if(player.checkMainSkill('gzjiefan')){
						player.removeMaxHp();
					 }
				  },
				trigger:{
					source:"damageSource",
				},
				filter:function (event,player){
					if(get.itemtype(event.cards)!='cards') return false;
					for(var i=0;i<event.cards.length;i++){
						if(event.cards[i].isInPile()){
							return true;
						}
					}
					return false;
				},
				direct:true,
				content:function (){
					'step 0'
					player.chooseTarget(get.prompt2('gzjiefan'),function(card,player,target){
						return target!=player;
					}).set('ai',function(target){
						var att=get.attitude(_status.event.player,target);
						if(att<3) return 0;
						if(target.hasJudge('lebu')){
							att/=5;
						}
						if(target.hasSha()&&_status.event.sha){
							att/=5;
						}
						if(event.wuxie&&target.needsToDiscard(1)){
							att/=5;
						}
						return att/(1+get.distance(player,target,'absolute'));
					}).set('sha',trigger.cards[0].name=='sha').set('wuxie',trigger.cards[0].name=='wuxie');
					'step 1'
					if(result.bool){
						var list=[];
						for(var i=0;i<trigger.cards.length;i++){
							if(trigger.cards[i].isInPile()){
								list.push(trigger.cards[i]);
							}
						}
						player.logSkill('gzjiefan',result.targets[0]);
						result.targets[0].gain(list,'gain2');
						player.draw();
					}
				},
			},
			"gzgongjix":{
                audio:"gongji",
                usable:1,
				mod:{
					targetInRange:function (card){
						if(_status.event.skill=='gzgongjix') return true;
					},
				},
				locked:false,
				enable:["chooseToUse","chooseToRespond"],
				position:'he',
				filterCard:function (card){
					return get.type(card,"equip")=="equip";
				},
				viewAs:{
					name:"sha",
				},
				check:function(card){
					return 4.5-get.value(card);
				},
			},
				  gzshibei:{
				     audio:'shibei',
						trigger:{
　　　　　　　　　　　　player:'damageAfter'
						},
						filter:function(event,player){
							return get.type(event.card)!='basic';
						},
						frequent:true,
						content:function(){
							'step 0'
					var num=2+Math.ceil(game.countPlayer(function(current){
						return current.group=='qun';
					})/2);
							event.cards=get.cards(num);
							player.showCards(event.cards);
							'step 1'
							var cards=[];
							for(var i=0;i<event.cards.length;i++){
								if(get.type(event.cards[i])!='basic') cards.add(event.cards[i]);
							};
							if(cards.length>0) player.gain(cards,'gain2');
							if(cards.length<3){
								for(var i=0;i<cards.length;i++){
									event.cards.remove(cards[i]);
								};
								for(var i=0;i<event.cards.length;i++){
									ui.cardPile.appendChild(event.cards[i]);
								};
							};
						},
					},
			gzquji:{
				audio:"quji",
				trigger:{player:'phaseEnd'},
				check:function(event,player){
					return player.hasFriend();
				},
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gzquji'),function(card,player,target){
						if(player==target) return false;
						if(target.isLinked()) return true;
						if(target.isTurnedOver()) return true;
						if(target.countCards('j')) return true;
						if(target.isMinHp()&&target.isDamaged()) return true;
						return false;
					}).ai=function(target){
						var num=0;
						var att=get.attitude(player,target);
						if(att>0){
							if(target.isMinHp()){
								num+=5;
							}
							if(target.isTurnedOver()){
								num+=5;
							}
							if(target.countCards('j')){
								num+=2;
							}
							if(target.isLinked()){
								num++;
							}
							if(num>0){
								return num+att;
							}
						}
						return num;
					}
					"step 1"
					if(result.bool){
						event.target=result.targets[0];
						player.logSkill('gzquji',event.target);
					}
					else{
						event.finish();
					}
					"step 2"
					if(event.target.isLinked()){
						event.target.link();
					}
					"step 3"
					if(event.target.isTurnedOver()){
						event.target.turnOver();
					}
					"step 4"
					var cards=event.target.getCards('j');
					if(cards.length){
						event.target.discard(cards);
					}
					"step 5"
					if(event.target.isMinHp()){
						event.target.recover();
					}
				},
				ai:{
					expose:0.2,
					threaten:1.3
				}
			},
		    gzjunbing:{
				audio:"junbing",
				trigger:{global:'phaseJieshuBegin'},
				filter:function(event,player){
					return player.sameIdentityAs(event.player)&&event.player.countCards('h')<=1;
				},
				direct:true,
				checkx:function(target,player){
					if(target){
						var num=target.countCards('h');
						var att=get.attitude(player,target);
						if(num==0) return true;
						if(num==1) return att>-1;
						if(num==2) return att>0;
						return att>1;
					}
					return false;
				},
				content:function(){
					"step 0"
					event.target=player;
					event.player=trigger.player;
					event.player.chooseBool('是否对'+get.translation(event.target)+'发动【郡兵】？',event.player==event.target?'摸一张牌':'摸一张牌，将所有手牌交给该角色，然后该角色交给你等量的手牌').set('choice',lib.skill.gzjunbing.checkx(event.target,event.player));
					"step 1"
					if(!result.bool){event.finish();return}
					target.logSkill('gzjunbing',player);
					if(player==target) event.finish();
					player.draw();
					"step 2"
					var cards=player.getCards('h');
					target.gain(cards,player,'giveAuto');
					event.num=cards.length;
					game.delay();
					"step 3"
					target.chooseCard('选择还给'+get.translation(player)+'的牌',true,event.num);
					game.delay(0.2);
					"step 4"
					player.gain(result.cards,target,'giveAuto');
					game.delay();
				},
				audio:"junbing",
			},
		    gzlianzhu:{
              audio:"lianzhu",
              enable:"phaseUse",
              usable:1,
              filterCard:true,
              position:"h",
              filterTarget:function(card,player,target){
                 return target!=player;
              },
             check:function(card){
                var num=get.value(card);
                 if(get.color(card)=='black'){
                   if(num>=6) return 0;
                      return 20-num;
                }
                 else{
                   if(_status.event.player.needsToDiscard()){
                      return 7-num;
                 }
               }
                  return 0;
             },
              discard:false,
              prepare:"give",
              content:function(){
              'step 0'
               if(player.sameIdentityAs(target)){
                 target.mayChangeVice();
               };
               target.gain(cards,player);
               if(get.color(cards[0])=='black'){
            target.chooseToDiscard(2,'he','弃置两张牌，或令'+get.translation(player)+'摸两张牌').set('ai',function(card){
                if(_status.event.goon) return 7-get.value(card);
                return 0;
              }).set('goon',get.attitude(target,player)<0);
            }
            else{
              event.finish();
             }
            'step 1'
             if(!result.bool){
                player.draw(2);
             }
          },
          ai:{
            order:8,
            expose:0.2,
            result:{
              target:function(player,target){
                if(ui.selected.cards.length&&get.color(ui.selected.cards[0])=='red'){
                    if(target.countCards('h')<player.countCards('h')) return 1;
                    return 0.5;
                    }
                    return -1;
                 },
              },
           },
　　　　},
			gzyexi:{
				audio:'nzry_chenglve',
				trigger:{player:['useCardAfter','respondAfter']},
				filter:function(event,player){
					if(_status.currentPhase!=player&&!_status.currentPhase.hasSkill('gzyexi2')){
						return true;
					}
					return false;
				},
				check:function(event,player){
					return get.attitude(player,_status.currentPhase)<0;
				},
				logTarget:function(){
					return _status.currentPhase;
				},
				content:function(){
					player.useCard({name:'huogong'},_status.currentPhase).animate=false;
               _status.currentPhase.addTempSkill('gzyexi2');
				},
				ai:{
					threaten:0.9
				}
			},
			gzyexi2:{},
			gzchenglve:{
				limited:true,
				enable:'phaseUse',
                viceSkill:true,
				audio:'nzry_chenglve',
				init:function(player){player.checkViceSkill('gzchenglve')},
				prepare:function(cards,player){
					var targets=game.filterPlayer(function(current){
						return current.isFriendOf(player)||current.isUnseen();
					});
					player.line(targets,'fire');
				},
				content:function(){
					'step 0'
					player.awakenSkill('gzchenglve');
					player.chooseJunlingFor(player).set('prompt','选择一张军令牌，令与你势力相同的其他角色选择是否执行');
					'step 1'
					event.junling=result.junling;
					event.targets=result.targets;
					event.players=game.filterPlayer(function(current){
						if(current==player) return false;
						return current.isFriendOf(player)||current.isUnseen();
					}).sort(lib.sort.seat);
					event.num=0;
					'step 2'
					if(num<event.players.length) event.current=event.players[num];
					if(event.current&&event.current.isAlive()){
						event.showCharacter=false;
						var choiceList=['执行该军令，获得【狂言】','不执行该军令'];
						if(event.current.isFriendOf(player)) event.current.chooseJunlingControl(player,event.junling,targets).set('prompt','成略').set('choiceList',choiceList).set('ai',function(){return 0});
						else if(event.current._group==player.identity&&event.current.wontYe()){
							event.showCharacter=true;
							choiceList[0]='明置一张武将牌以'+choiceList[0];
							choiceList[1]='不明置武将牌且'+choiceList[1];
							event.current.chooseJunlingControl(player,event.junling,targets).set('prompt','成略').set('choiceList',choiceList).set('ai',function(){return 0});
						}
						else event.current.chooseJunlingControl(player,event.junling,targets).set('prompt','成略').set('controls',['ok']);
					}
					else event.goto(4);
					'step 3'
					event.carry=false;
					if(result.index==0&&result.control!='ok'){
						event.carry=true;
						if(event.showCharacter) event.current.chooseControl(['主将','副将']).set('ai',function(){return Math.round()>0.5?0:1;}).prompt='选择并展示一张武将牌，然后执行军令';
					}
					'step 4'
					if(!event.list) event.list=[player];
					if(event.carry){
						if(event.showCharacter) event.current.showCharacter(result.index);
						event.current.carryOutJunling(player,event.junling,targets);
						event.list.push(event.current);
					}
					event.num++;
					if(event.num<event.players.length) event.goto(2);
					'step 5'
					event.num=0;
					player.storage.gzchenglve_count=0;
					'step 6'
					if(event.list[num].isAlive()){
						event.list[num].addSkill('gzkuangyan');
						event.list[num].recover();
					}
					event.num++;
					'step 7'
					if(event.num<event.list.length) event.goto(6);
					else if(player.storage.gzchenglve_count>0) player.draw(player.storage.gzchenglve_count);
				},
				marktext:'略',
				skillAnimation:'epic',
				animationColor:'soil',
				ai:{
					order:4,
					result:{
						player:function(player){
							if(player.isUnseen()&&player.wontYe()){
								if(get.population(player._group)>=game.players.length/4) return 1;
								return Math.random()>0.7?1:0;
							}
							else return 1;
						}
					}
				},
			},
			gzkuangyan:{
                audio:"ext:国战补充:2",
				trigger:{player:'phaseJieshuBegin'},
				frequent:true,
				content:function(){
					player.draw();
				},
			},
			gzchuji:{
                audio:"fuman",
				limited:true,
				enable:'phaseUse',
                viceSkill:true,
				init:function(player){player.checkViceSkill('gzchuji')},
				prepare:function(cards,player){
					var targets=game.filterPlayer(function(current){
						return current.isFriendOf(player)||current.isUnseen();
					});
					player.line(targets,'fire');
				},
				content:function(){
					'step 0'
					player.awakenSkill('gzchuji');
					player.chooseJunlingFor(player).set('prompt','选择一张军令牌，令与你势力相同的其他角色选择是否执行');
					'step 1'
					event.junling=result.junling;
					event.targets=result.targets;
					event.players=game.filterPlayer(function(current){
						if(current==player) return false;
						return current.isFriendOf(player)||current.isUnseen();
					}).sort(lib.sort.seat);
					event.num=0;
					'step 2'
					if(num<event.players.length) event.current=event.players[num];
					if(event.current&&event.current.isAlive()){
						event.showCharacter=false;
						var choiceList=['执行该军令，获得【帷幄】','不执行该军令'];
						if(event.current.isFriendOf(player)) event.current.chooseJunlingControl(player,event.junling,targets).set('prompt','平夷').set('choiceList',choiceList).set('ai',function(){return 0});
						else if(event.current._group==player.identity&&event.current.wontYe()){
							event.showCharacter=true;
							choiceList[0]='明置一张武将牌以'+choiceList[0];
							choiceList[1]='不明置武将牌且'+choiceList[1];
							event.current.chooseJunlingControl(player,event.junling,targets).set('prompt','平夷').set('choiceList',choiceList).set('ai',function(){return 0});
						}
						else event.current.chooseJunlingControl(player,event.junling,targets).set('prompt','平夷').set('controls',['ok']);
					}
					else event.goto(4);
					'step 3'
					event.carry=false;
					if(result.index==0&&result.control!='ok'){
						event.carry=true;
						if(event.showCharacter) event.current.chooseControl(['主将','副将']).set('ai',function(){return Math.round()>0.5?0:1;}).prompt='选择并展示一张武将牌，然后执行军令';
					}
					'step 4'
					if(!event.list) event.list=[player];
					if(event.carry){
						if(event.showCharacter) event.current.showCharacter(result.index);
						event.current.carryOutJunling(player,event.junling,targets);
						event.list.push(event.current);
					}
					event.num++;
					if(event.num<event.players.length) event.goto(2);
					'step 5'
					event.num=0;
					player.storage.gzchuji_count=0;
					'step 6'
					if(event.list[num].isAlive()){
						event.list[num].addSkill('gzweiwox');
						event.list[num].recover();
					}
					event.num++;
					'step 7'
					if(event.num<event.list.length) event.goto(6);
					else if(player.storage.gzchuji_count>0) player.draw(player.storage.gzchuji_count);
				},
				marktext:'夷',
				skillAnimation:'epic',
				animationColor:'soil',
				ai:{
					order:4,
					result:{
						player:function(player){
							if(player.isUnseen()&&player.wontYe()){
								if(get.population(player._group)>=game.players.length/4) return 1;
								return Math.random()>0.7?1:0;
							}
							else return 1;
						}
					}
				},
			},
			gzweiwox:{
                audio:"ext:国战补充:2",
				trigger:{player:'phaseDrawBegin2'},
				frequent:true,
				filter:function(event,player){
					return !event.numFixed;
				},
				content:function(){
					trigger.num++;
				},
				ai:{
					threaten:1.3
				}
			},
			gztiansuo:{
                audio:"xinlianhuan",
				enable:'phaseUse',
				usable:1,
				filterCard:true,
				position:'he',
				filterTarget:true,
				content:function(){
					'step 0'
					if(target.isLinked()){
						target.link();
					}
					else{
						target.link();
						target.draw();
						event.finish();
					}
					'step 1'
					if(target.countCards('h')){
						target.chooseToDiscard('h',true);
					}
				},
				check:function(card){
					return 8-get.value(card);
				},
				ai:{
					order:1,
					result:{
						player:function(player,target){
							if(target.isLinked()) return 0;
							if(game.hasPlayer(function(current){
								return current.isLinked();
							})){
								return 0;
							}
							return 1;
						}
					}
				},
				mod:{
					globalTo:function(from,to,distance){
						if(to.isLinked()) return distance+1;
					},
				}
			},
            "gzkunfen":{
                audio:"kunfen",
                group:["gzkunfen_a","gzkunfen_b"],
                subSkill:{
                    a:{
                        audio:"kunfen",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                check:function(event,player){
                    if(player.hp>3) return true;
                if(player.hp==3&&player.countCards('h')<3) return true;
                if(player.hp==2&&player.countCards('h')==0) return true;
                return false;
                },
                content:function(){
                player.loseHp();
                player.draw(2);
                },
                ai:{
                    threaten:1.5,
                },
                        sub:true,
                    },
                    b:{
                        audio:"kunfen",
                trigger:{
                    player:"loseHpEnd",
                },
                forced:true,
                priority:-5,
                filter:function (event){
        return (event.num>0)
    },
                content:function (){
                "step 0"
                player.chooseTarget(get.prompt('困奋'),function(card,player,target){
                    return player!=target;
                }).set('ai',function(target){
                    return -ai.get.attitude(_status.event.player,target);
                });
                "step 1"
                if(result.bool){
                    game.delay();
                    player.logSkill('gzkunfen',result.targets);
                    event.target=result.targets[0];
                    event.target.draw();
                    event.target.damage();
                }
　      　},
　　            ai:{
　　                order:1,
　　                result:{
　　                    target:function (player,target){
　　                        return -1;
　　                    },
　　                },
　　            },
                        sub:true,
                    },
                },
            },
		 gzkundun:{
                audio:"kunfen",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                check:function(event,player){
                    if(player.hp>3) return true;
                if(player.hp==3&&player.countCards('h')<3) return true;
                if(player.hp==2&&player.countCards('h')==0) return true;
                return false;
                },
                content:function(){
                   player.loseHp();
                   player.draw(2);
                },
                ai:{
                    threaten:1.5,
                },
            },	
            gzgongqing:{
                group:["gzgongqing_trick","gzgongqing_delay"],
　　　　　　　　subSkill:{
                  trick:{
                  enable:"phaseUse",
                  usable:1,
				  audio:"xinfu_gongqing",
                    filter:function (event,player){
                      return player.num('h',{type:'trick'})>0
                   },
                  chooseButton:{
                    dialog:function (){
            var list=['taoyuan','wugu','juedou','huogong','jiedao','tiesuo','guohe','shunshou','wuzhong','wanjian','nanman','yuanjiao','zhibi','yiyi','lianjunshengyan','diaohulishan','huoshaolianying','lulitongxin','shuiyanqijunx','xietianzi'];
            for(var i=0;i<list.length;i++){
                list[i]=['普通锦囊','',list[i]];
            }
            return ui.create.dialog([list,'vcard']);
        },
                    filter:function (button,player){
            return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function (button){
            var player=_status.event.player;
            var recover=0,lose=1,players=game.filterPlayer();
            for(var i=0;i<players.length;i++){
                if(!players[i].isOut()){
                    if(players[i].hp<players[i].maxHp){
                        if(ai.get.attitude(player,players[i])>0){
                            if(players[i].hp<2){
                                lose--;
                                recover+=0.5;
                            }
                            lose--;
                            recover++;
                        }
                        else if(ai.get.attitude(player,players[i])<0){
                            if(players[i].hp<2){
                                lose++;
                                recover-=0.5;
                            }
                            lose++;
                            recover--;
                        }
                    }
                    else{
                        if(ai.get.attitude(player,players[i])>0){
                            lose--;
                        }
                        else if(ai.get.attitude(player,players[i])<0){
                            lose++;
                        }
                    }
                }
            }
            if(lose>recover&&lose>0) return (button.link[2]=='nanman')?1:-1;
            if(lose<recover&&recover>0) return (button.link[2]=='taoyuan')?1:-1;
            return (button.link[2]=='wuzhong')?1:-1;
        },
                    backup:function (links,player){
            return {
                filterCard:function(card){
                    return get.type(card)=='trick';
                },
                selectCard:1,
                audio:false,
                popname:true,
                popup:false,
                ai:function(card){
                    return 6-ai.get.value(card);
                },
                viewAs:{name:links[0][2]},
            }
        },
                    prompt:function (links,player){
            return '将一张普通锦囊牌当作'+get.translation(links[0][2])+'使用';
        },
                },
                  sub:true,
            },
            delay:{
                enable:"phaseUse",
                usable:1,
				audio:"xinfu_gongqing",
                filter:function (event,player){
        return player.num('h',{type:'delay'})>0
    },
                chooseButton:{
                    dialog:function (){
            var list=['lebu','bingliang','shandian','yangjingxurui'];
            for(var i=0;i<list.length;i++){
                list[i]=['延时锦囊','',list[i]];
            }
            return ui.create.dialog([list,'vcard']);
        },
                    filter:function (button,player){
            return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
        },
                    check:function (button){
            if(button.link[2]=='lebu'||button.link[2]=='bingliang') return 1;
            return 0;
        },
                    backup:function (links,player){
            return {
                filterCard:function(card){
                    return get.type(card)=='delay';
                },
                selectCard:1,
                audio:false,
                popname:true,
                popup:false,
                ai:function(card){
                    return 8-ai.get.value(card);
                },
                viewAs:{name:links[0][2]},
            }
        },
                    prompt:function (links,player){
            return '将一张延时锦囊牌当作'+get.translation(links[0][2])+'使用';
        },
                },
                  sub:true,
            },
         },
      },
			gzhuace:{
                audio:"ext:国战补充:2",
				unique:true,
				mark:true,
				skillAnimation:true,
				animationColor:'orange',
			    trigger:{global:'die'},
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzhuace;
				},
				check:function(event,player){
					return !player.hasFriend()||player.hp==1;
				},
                content:function(){
					'step 0'
					player.modifyGroup('wu');
					'step 1'
					if(player.checkMainSkill('gzhuace')){
						player.removeCharacter(1);
					}
					else{
						player.removeCharacter(0);
					}
                   'step 2'  
                   player.addSkill('gzpingyi');
                   player.recover(player.maxHp-player.hp);
                   player.awakenSkill('gzhuace');
                   player.storage.gzhuace=true;  
                },
            },
			gzpingyi:{
                audio:"xinfu_guanwei",
				trigger:{player:'phaseEnd'},
				direct:true,
				filter:function(event,player){
					return player.countCards('he',{suit:'heart'})>0;
				},
				content:function(){
					"step 0"
					var next=player.chooseToDiscard(get.prompt('gzpingyi'),'he',{suit:'heart'});
					next.logSkill='gzpingyi';
					next.ai=function(card){
						return 6-get.value(card);
					};
					"step 1"
					if(result.bool){
						player.addSkill('gzpingyi2');
					}
				},
			},
			gzpingyi2:{
                audio:"xinfu_guanwei",
				trigger:{player:'phaseBegin'},
				direct:true,
				mark:true,
				intro:{
					content:'下个准备阶段令一名距离1以内的角色回复一点体力或摸两张牌'
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzpingyi'),function(card,player,target){
						return get.distance(player,target)<=1;
					}).ai=function(target){
						var att=get.attitude(player,target);
						if(att>0){
							if(target.hp==1&&target.maxHp>1) return att*2;
						}
						return att;
					};
					player.removeSkill('gzpingyi2');
					'step 1'
					if(result.bool){
						player.logSkill('gzpingyi',result.targets);
						result.targets[0].chooseDrawRecover(2,true);
					}
				}
			},
			gzwengua:{
				enable:'phaseUse',
				usable:1,
				audio:'wengua',
				content:function(){
					'step 0'
					player.draw();
					'step 1'
					player.chooseToDiscard('he',2,true).ai=function(card){
						var val=-get.value(card);
						if(ui.selected.cards.length){
							if(get.suit(card)==get.suit(ui.selected.cards[0])) val++;
							if(get.number(card)==get.number(ui.selected.cards[0])) val+=3;
						}
						return val;
					}
					'step 2'
					if(result.cards.length==2){
						var list=[];
						if(get.suit(result.cards[0])==get.suit(result.cards[1])){
        var list=get.inpile('equip');
        player.gain(game.createCard(list.randomGet()),'draw')
						}
						if(get.number(result.cards[0])==get.number(result.cards[1])){
        var list=get.inpile('trick');
        player.gain(game.createCard(list.randomGet()),'draw')
						}
						if(list.length){
							player.gain(list,'gain2');
						}
					}
				},
				ai:{
					order:4,
					result:{
　                     player:function(player,target){
　　                     if(player.countCards('h')>=2) return 5;
　　                        return 1;
　　                   },
					}
				}
			},
			gzfuzhu:{
				skillAnimation:true,
				animationColor:'gray',
				audio:'fuzhu',
				unique:true,
				limited:true,
				enable:'phaseUse',
				mark:true,
				filter:function(event,player){
					return !player.storage.gzfuzhu&&player.countCards('h')>0;
				},
				init:function(player){
					player.storage.gzfuzhu=false;
				},
				filterTarget:function(card,player,target){
					return player!=target&&target.countCards('he')>0;
				},
				filterCard:function(card){
					var color=get.color(card);
					for(var i=0;i<ui.selected.cards.length;i++){
						if(get.color(ui.selected.cards[i])==color) return false;
					}
					return true;
				},
				complexCard:true,
				selectCard:[1,2],
				check:function(card){
					return 7-get.value(card)
				},
				content:function(){
					"step 0"
					var colors=[];
					event.colors=colors;
					for(var i=0;i<cards.length;i++){
						colors.push(get.color(cards[i]));
					}
					var hs=target.getCards('he');
					var hss={
						red:[],
						black:[],
					}
					var choice=[];
					for(var i=0;i<hs.length;i++){
						var colory=get.color(hs[i]);
						if(hss[colory]){
							hss[colory].push(hs[i]);
						}
					}
					for(var i in hss){
						if(!colors.contains(i)){
							choice=choice.concat(hss[i]);
							delete hss[i];
						}
					}
					if(choice.length<cards.length){
						choice.length=0;
					}
					target.chooseToDiscard(cards.length,true,'he').ai=function(card){
						var num=choice.contains(card)?20:0;
						return num-get.value(card);
					}
					"step 1"
					var damage=false;
					for(var i=0;i<result.cards.length;i++){
						if(event.colors.contains(get.color(result.cards[i]))){
							damage=true;break;
						}
					}
					if(damage){
						target.damage('fire');
                        player.draw(2); 
				     }
				     player.awakenSkill('gzfuzhu');
					 player.storage.gzfuzhu=true;
				},
				ai:{
					order:6,
					result:{
						player:function(player){
							var num=player.countCards('he');
							if(num==1) return -2;
							if(num==2) return 3;
							return 7;
						},
						target:function(player,target){
							var eff=get.damageEffect(target,player);
							var num=target.countCards('he');
							var length=ui.selected.cards.length;
							if(num==length) return -2+eff;
							if(num>length) return -1.5+eff;
							return -1+eff;
						}
					},
					expose:0.2
				}
			},
             gzjishoux:{
                audio:"zhenlie",
                trigger:{
                    global:"dieAfter",
                },
                filter:function(event,player){
                    return event.player.group=="wu";
                },
				forced:true,
                popup:false,
                onremove:true,
                content:function (){   
                'step 0'
                 game.delayx();
                'step 1'
                 player.restoreSkill('gzfuzhu');                  
               //player.addSkill('gzfuzhu');
                 player.update();
                },
             },
			gzzezhu:{ 
				audio:'nzry_chenglve',
				unique:true,
				mark:true,
				skillAnimation:true,
				animationColor:'orange',
				trigger:{player:'phaseDrawBegin1'},
				derivation:'spshicai',
				filter:function(event,player){
					return !player.storage.gzzezhu&&!player.isMajor()&&!player.hasUnknown();
				},
				check:function(event,player){
					return player.hp==1||player.countCards('h')<=2;
				},
				content:function(){
					'step 0'
					player.modifyGroup('wei');
					'step 1'
					if(player.checkMainSkill('gzzezhu')){
						player.removeCharacter(1);
					}
					else{
						player.removeCharacter(0);
					}
                   'step 2'  
                   player.addSkill('spshicai');
                   player.removeSkill('gzyexi');
                   player.recover(player.maxHp-player.hp);  
                   player.awakenSkill('gzzezhu');
                   player.storage.gzzezhu=true;
                },
             ai:{
                    order:4.5,
                    result:{
                        player:function(player,target){
　　　　　　　if(player.hp<2||player.countCards('h')<=2) 
                          return 5;
                        },
                    },
                    effect:{
                    threaten:0.8,
                }, 
              },
            },
        gzchenggong:{
          audio:"ext:国战补充:2",
          trigger:{global:'useCard'},
          filter:function(event,player){
            return event.targets&&event.targets.length >= 2;
          },
          logTarget:'player',
          check:function(event,player){
            return get.attitude(player,event.player) > 0;
          },
          content:function(){
            trigger.player.draw();
          },
        },
			gztiaoxin:{
				audio:'tiaoxin',
				enable:'phaseUse',
				usable:1,
                viceSkill:true,
	            init:function(player){player.checkViceSkill('gztiaoxin')},
				filterTarget:function(card,player,target){
					return target!=player&&target.inRange(player)&&target.countCards('he')>0;
				},
				content:function(){
					"step 0"
					target.chooseToUse({name:'sha'},'挑衅：对'+get.translation(player)+'使用一张杀，或令其弃置你的一张牌').set('targetRequired',true).set('complexSelect',true).set('filterTarget',function(card,player,target){
						if(target!=_status.event.sourcex&&!ui.selected.targets.contains(_status.event.sourcex)) return false;
						return lib.filter.filterTarget.apply(this,arguments);
					}).set('sourcex',player);
					"step 1"
					if(result.bool==false&&target.countCards('he')>0){
						player.discardPlayerCard(target,'he',true);
					}
					else{
						event.finish();
					}
				},
				ai:{
					order:4,
					expose:0.2,
					result:{
						target:-1,
						player:function(player,target){
							if(target.countCards('h')==0) return 0;
							if(target.countCards('h')==1) return -0.1;
							if(player.hp<=2) return -2;
							if(player.countCards('h','shan')==0) return -1;
							return -0.5;
						}
					},
					threaten:1.1
				}
			},
            gzfengliang:{
                trigger:{
                    global:"phaseBegin",
                },
                unique:true,
				limited:true,
				mark:true,
                animationColor:"metal",
                skillAnimation:true,
				animationColor:'gray',
				audio:'fengliang',
				init:function(player,skill){player.storage[skill]=false},
                filter:function (event,player){
                    if(event.player==player) return false;
                    if(player.countCards('h')<=0)return false;
                    if(player.storage.gzfengliang)return false;
                  return !player.storage.gzfengliang &&event.player.group=='shu';
                },
				check:function(event,player){
					return player.hp==1||player.countCards('h')<=2;
				},
                logTarget:"player",
                content:function (){             
					'step 0'
					player.modifyGroup('shu');
					'step 1'
					if(player.checkMainSkill('gzfengliang')){
						player.removeCharacter(1);
					}
					else{
						player.removeCharacter(0);
					}
                   "step 2"
                    var cards1=player.getCards('h');
                    trigger.player.gain(cards1,player);
                   'step 3'  
                   player.addSkill('gzchengzhi');
                   player.recover(player.maxHp-player.hp);  
                   player.awakenSkill('gzfengliang');
                   player.storage.gzfengliang=true;
             },
             ai:{
                    order:function(skill,player){
                        if(player.hp<2||player.countCards('h')<=2){
                            return 10;
                        }
                        return 1;
                    },
                    result:{
                        player:function(player,target){
　　　　　　　if(player.hp<2||player.countCards('h')<=2) 
                          return 5;
                        },
                    },
                    effect:{
                    threaten:0.8,
                }, 
              },
            },
			gzchengzhi:{
				audio:'zhiji',
				unique:true,
				enable:'phaseUse',
				derivation:['new_longdan','new_paoxiao','gzwushengy'],
				filter:function(event,player){
					return !player.storage.gzchengzhi;
				},
				// alter:true,
				init:function(player){
					player.storage.gzchengzhi=false;
				},
				mark:true,
				intro:{
					content:'limited'
				},
				skillAnimation:true,
				animationColor:'fire',
				content:function(){
					'step 0'
					player.awakenSkill('gzchengzhi');
					player.storage.gzchengzhi=true;
					if(!get.is.altered('gzchengzhi')){
						var targets=game.filterPlayer(function(current){
							return player.canUse('wanjian',current);
						});
						targets.sort(lib.sort.seat);
						player.useCard({name:'wanjian'},targets);
					}
					'step 1'
                    player.draw(2);
					player.addSkill('new_longdan');
					player.addSkill('new_paoxiao');
					player.addSkill('gzchengzhi2');
				},
				ai:{
					order:2,
					result:{
						player:function(player){
							if(player.identity=='ye') return 0;
							if(player.isUnseen()) return 0;
							if(player.hp==1) return 1;
							if(player.hasUnknown()) return 0;
							if(!player.hasFriend()) return 0;
							var enemies=player.getEnemies();
							if(enemies.length+1==game.players.length) return 0;
							var num=player.hasCard(function(card){
								return card.name=='sha'||card.name=='shan'||get.color(card)=='red';
							});
							if(num<2) return 0;
							for(var i=0;i<enemies.length;i++){
								if(player.canUse('sha',enemies[i])&&
								get.effect(enemies[i],{name:'sha'},player,player)>0&&
								!enemies[i].getEquip(2)&&num>enemies[i].hp&&enemies[i].hp<=2){
									return 1;
								}
							}
							return 0;
						}
					}
				}
			},
			gzchengzhi2:{
				trigger:{player:'phaseUseEnd'},
				forced:true,
				popup:false,
                audio:"ext:国战补充:true",
				content:function(){
					player.removeSkill('gzchengzhi2');
					player.die();
				}
			},
			gzyongdi:{
                audio:"ext:国战补充:2",
				unique:true,
				limited:true,
	            trigger:{player:'phaseDrawBegin1'},	
　　			animationColor:'thunder',
				skillAnimation:'legend',
				filter:function(event,player){
					return !player.storage.gzyongdi;
				},
				direct:true,
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt2('gzyongdi'),function(card,player,target){
						return target.sex=='male'&&target!=player;
					}).set('ai',function(target){
						if(!_status.event.goon) return 0;
						var player=_status.event.player;
						var att=get.attitude(player,target);
						if(att<=1) return 0;
						var mode=get.mode();
						return att;
					}).set('goon',!player.hasUnknown());
					'step 1'
					if(result.bool){
						player.awakenSkill('gzyongdi');
						player.storage.gzyongdi=true;
						player.logSkill('gzyongdi',result.targets);
						var target=result.targets[0];
			         if(player.sameIdentityAs(target)){
                        target.mayChangeVice();
				        player.draw();
                        target.draw();
                        };
						target.gainMaxHp(true);
						target.recover();
						var mode=get.mode();
					}
				},
				ai:{
					order:1, 
					result:{ 
　　　　　　　　　　　target:0,
　　　　　　　　　　},
　　　　　　　　},
　　　　　　　　mark:true,
				intro:{
					content:"limited",
				},
				init:function (player){
					player.storage.gzyongdi=false;
				},
			},
			gzjuedi:{
				audio:'juedi',
                viceSkill:true,
	init:function(player){player.checkViceSkill('gzjuedi')},
				trigger:{player:'loseEnd'},
                usable:3,
				filter:function(event,player){
					if(player.countCards('h')) return false;
					for(var i=0;i<event.cards.length;i++){
						if(event.cards[i].original=='h') return true;
					}
					return false;
				},
				direct:true,
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gzjuedi'),function(card,player,target){
						return lib.filter.targetEnabled({name:'sha'},player,target);
					}).ai=function(target){
						return get.effect(target,{name:'sha'},player);
					}
					"step 1"
					if(result.bool){
						player.logSkill('gzjuedi');
						player.useCard({name:'sha',isCard:true},result.targets,false);
					}
				},
				ai:{
					noh:true,
					skillTagFilter:function(player,tag){
						if(tag=='noh'){
							if(player.countCards('h')!=1) return false;
						}
					},
					expose:0.2,
				},
				group:['gzjuedi_draw'],
				subSkill:{
					draw:{
						trigger:{source:'damageAfter'},
						forced:true,
						popup:false,
						filter:function(event){
							return event.parent.parent.parent.name=='gzjuedi';
						},
						content:function(){
							player.draw();
						}
					}
				}
			},
			gztijinx:{
                audio:"yinbing",
				trigger:{player:"damageEnd"},
　　　　　　　　forced:true,
                mainSkill:true,
	init:function(player){player.checkMainSkill('gztijinx')},
				filter:function(event,player){
					if(event.skill) return false;
                    return event.card&&event.card.name=='sha'&&event.source&&event.source!=player&&event.source.hasMainCharacter()&&!event.source.isUnseen(0);
					    return !player.storage.gztijinx;
				},
				content:function(){
	　　　　　　　  player.showCharacter(0);
					var name1=player.name;
					var name2=trigger.source.name;
					player.reinit(name1,name2,false);
					trigger.source.reinit(name2,name1,false);
				},
			},
			gzzilix:{
                audio:"zili",
				unique:true,
				mark:true,
				skillAnimation:true,
				limited:true,
				animationColor:'orange',
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.gzzilix&&event.toShow.contains('gz_sp_gongsunyuan');
				},
				check:function(event,player){
                  return !player.isMajor();
				},
　　				content:function(){
					'step 0'
                   player.awakenSkill('gzzilix');
                   player.storage.gzzilix=true;
					'step 1'
					var list=[];
					for(var i=0;i<_status.characterlist.length;i++){
						var info=lib.character[_status.characterlist[i]];
						if(info[4]&&info[4].contains('jun')) continue;
							list.push(_status.characterlist[i]);
					}
        var players=game.players.concat(game.dead);
        for(var i=0;i<players.length;i++){
            list.remove(players[i].name);
            list.remove(players[i].name1);
            list.remove(players[i].name2);
        }
        var dialog=ui.create.dialog('将另一武将牌替换为一名角色','hidden');
        dialog.add([list.randomGets(3),'character']);
        player.chooseButton(dialog,true).ai=function(button){
            return get.rank(button.link,true)-lib.character[button.link][2];
        };	
					'step 2'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzzilix')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,result.links[0]);
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init(result.links[0],player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
                    player.removeMark('xianqu_mark',1);
					player.removeMark('zhulianbihe_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
                   'step 3'  
                    player.setIdentity('ye');
                    player.identity='ye';
                    'step 4'
                    player.addMark('yinyang_mark'); 
				  },
			},
			gzgoufanx:{
                audio:"qimou",
				unique:true,
				mark:true,
				skillAnimation:true,
				limited:true,
				animationColor:'orange',
	            trigger:{player:'showCharacterAfter'},
				filter:function(event,player){
			      return !player.storage.gzgoufanx&&event.toShow.contains('gz_weiyan');
				},
				check:function(event,player){
                  return !player.isMajor();
				},
　　				content:function(){
					'step 0'
                   player.awakenSkill('gzgoufanx');
                   player.storage.gzgoufanx=true;
					'step 1'
					var list=[];
					for(var i=0;i<_status.characterlist.length;i++){
						var info=lib.character[_status.characterlist[i]];
						if(info[4]&&info[4].contains('jun')) continue;
							list.push(_status.characterlist[i]);
					}
        var players=game.players.concat(game.dead);
        for(var i=0;i<players.length;i++){
            list.remove(players[i].name);
            list.remove(players[i].name1);
            list.remove(players[i].name2);
        }
        var dialog=ui.create.dialog('将另一武将牌替换为一名角色','hidden');
        dialog.add([list.randomGets(3),'character']);
        player.chooseButton(dialog,true).ai=function(button){
            return get.rank(button.link,true)-lib.character[button.link][2];
        };	
					'step 2'
				    var hp=player.hp;
				    var maxhp=player.maxHp;
					if(player.checkMainSkill('gzgoufanx')){
　　　　　　　　       player.showCharacter(1);
　　　　　　　　       player.init(player.name,result.links[0]);
					}
					else{
　　　　　　　　       player.showCharacter(0);
　　　　　　　　       player.init(result.links[0],player.name2);
					}
				    player.hp=hp;
			     	player.maxHp=maxhp;
			        player.removeMark('zhulianbihe_mark',1);
                    player.removeMark('xianqu_mark',1);
					player.removeMark('yinyang_mark',1);
				    player.update();
                   'step 3'  
					player.modifyGroup('ye');
					'step 4'
                    player.addMark('yinyang_mark'); 
				  },
			},
            gzfumian:{
                mark:true,
                locked:true,
                marktext:"绵",
                intro:{
                    content:function(storage,player,skill){
                        if(player.storage.gzfumian==true) return '锁定技，你摸牌阶段多摸一张牌，本回合你使用基本牌可以额外指定一名其他角色为目标';
                        return '锁定技，你摸牌阶段少摸一张牌，本回合你使用锦囊牌可以额外指定任意一名其他角色为目标或减少指定一个目标';
                    },
                },
                trigger:{
                    player:"phaseBegin",
                },
                forced:true,
                audio:"fumian",
                content:function(){
                    if(player.storage.gzfumian==true){
                        player.storage.gzfumian=false;
                        player.addTempSkill('gzfumian_2',{player:'phaseAfter'});
                    }else{
                        player.storage.gzfumian=true;
                        player.addTempSkill('gzfumian_1',{player:'phaseAfter'});
                    };
                },
                subSkill:{
                    "1":{
				trigger:{player:'phaseDrawBegin'},
				frequent:true,
				content:function(){
					trigger.num++;
	player.addTempSkill('gzfumian3',{player:'phaseAfter'});
				},
                    },
                    "2":{
				trigger:{player:'phaseDrawBegin'},
				frequent:true,
				content:function(){
					trigger.num--;
	player.addTempSkill('gzfumian4',{player:'phaseAfter'});
				},
                    },
                },
            },
			gzfumian3:{
				trigger:{player:'useCard2'},
				direct:true,
				filter:function(event,player){
					var type=get.type(event.card);
					return type=='basic';
				},
				content:function(){
					'step 0'
					var goon=false;
					var info=get.info(trigger.card);
					if(trigger.targets&&!info.multitarget){
						var players=game.filterPlayer();
						for(var i=0;i<players.length;i++){
							if(lib.filter.targetEnabled2(trigger.card,player,players[i])&&!trigger.targets.contains(players[i])){
								goon=true;break;
							}
						}
					}
					if(goon){
						player.chooseTarget('福绵：是否额外指定一名'+get.translation(trigger.card)+'的目标？',function(card,player,target){
							var trigger=_status.event;
							if(trigger.targets.contains(target)) return false;
							return lib.filter.targetEnabled2(trigger.card,_status.event.player,target);
						}).set('ai',function(target){
							var trigger=_status.event.getTrigger();
							var player=_status.event.player;
							return get.effect(target,trigger.card,player,player);
						}).set('targets',trigger.targets).set('card',trigger.card);
					}
					else{
						if(!info.multitarget&&trigger.targets&&trigger.targets.length>1){
							event.goto(3);
						}
					}
					'step 1'
					if(result.bool){
						if(!event.isMine()) game.delayx();
						event.target=result.targets[0];
					}
					else{
						event.finish();
					}
					'step 2'
					if(event.target){
						player.logSkill('gzfumian_1',event.target);
						trigger.targets.add(event.target);
					}
					event.finish();
				}
			},
			gzfumian4:{
				trigger:{player:'useCard2'},
				direct:true,
				filter:function(event,player){
					var type=get.type(event.card);
					return type=='trick';
				},
				content:function(){
					'step 0'
					var goon=false;
					var info=get.info(trigger.card);
					if(trigger.targets&&!info.multitarget){
						var players=game.filterPlayer();
						for(var i=0;i<players.length;i++){
							if(lib.filter.targetEnabled2(trigger.card,player,players[i])&&!trigger.targets.contains(players[i])){
								goon=true;break;
							}
						}
					}
					if(goon){
						player.chooseTarget('福绵：是否额外指定一名'+get.translation(trigger.card)+'的目标？',function(card,player,target){
							var trigger=_status.event;
							if(trigger.targets.contains(target)) return false;
							return lib.filter.targetEnabled2(trigger.card,_status.event.player,target);
						}).set('ai',function(target){
							var trigger=_status.event.getTrigger();
							var player=_status.event.player;
							return get.effect(target,trigger.card,player,player);
						}).set('targets',trigger.targets).set('card',trigger.card);
					}
					else{
						if(!info.multitarget&&trigger.targets&&trigger.targets.length>1){
							event.goto(3);
						}
					}
					'step 1'
					if(result.bool){
						if(!event.isMine()) game.delayx();
						event.target=result.targets[0];
					}
					else{
						event.finish();
					}
					'step 2'
					if(event.target){
						player.logSkill('gzfumian_2',event.target);
						trigger.targets.add(event.target);
					}
					event.finish();
					'step 3'
					player.chooseTarget('福绵：是否减少一名'+get.translation(trigger.card)+'的目标？',function(card,player,target){
						return _status.event.targets.contains(target);
					}).set('ai',function(target){
						var trigger=_status.event.getTrigger();
						return -get.effect(target,trigger.card,trigger.player,_status.event.player);
					}).set('targets',trigger.targets);
					'step 4'
					if(result.bool){
						event.targets=result.targets;
						if(event.isMine()){
							player.logSkill('gzfumian_2',event.targets);
							event.finish();
						}
						for(var i=0;i<result.targets.length;i++){
							trigger.targets.remove(result.targets[i]);
						}
						game.delay();
					}
					else{
						event.finish();
					}
				}
			},
			gzdaiyan:{
				enable:'phaseUse',
　　　　　　　　usable:1,
				filter:function(event,player){
					return player.countCards('h',{color:'red'})&&game.hasPlayer(function(current){
						return current!=player&&current.identity!='shu';
					});
				},
				direct:true,
				content:function(){
					'step 0'
					player.chooseCardTarget({
						prompt:get.prompt2('gzdaiyan'),
						position:'h',
                        filterCard:{
　　　　　　　　　　　　　color:"red",
　　　　　　　　　　　　},
　						filterTarget:function(card,player,target){
							return target.identity!='shu'&&target!=player;
						},
						ai1:function(card,player,target){
							if(get.attitude(player,target)>0) return 11-get.value(card);
							return 7-get.value(card);
						},
						ai2:function(card,player,target){
							var att=get.attitude(player,target);
							if(att<0) return -att;
							return 1;
						}
					});
					'step 1'
					if(result.bool){
						event.target=result.targets[0];
						player.logSkill('gzdaiyan',result.targets);
						result.targets[0].gain(result.cards[0],player,'giveAuto');
						player.chooseJunlingFor(result.targets[0]);
					}
					else event.finish();
					'step 2'
					event.junling=result.junling;
					event.targets=result.targets;
					var choiceList=[];
					choiceList.push('执行该军令，然后'+get.translation(player)+'摸一张牌');
					choiceList.push('令'+get.translation(player)+'结束阶段回复1点体力');
					target.chooseJunlingControl(player,result.junling,result.targets).set('prompt','节钺').set('choiceList',choiceList).set('ai',function(){
						if(get.attitude(target,player)>0) return get.junlingEffect(player,result.junling,target,result.targets,target)>1?0:1;
						return get.junlingEffect(player,result.junling,target,result.targets,target)>=-1?0:1;
					});
					'step 3'
					if(result.index==0){
						target.carryOutJunling(player,event.junling,targets);
						player.draw();
					}
					else if(target!=player) {
                    player.recover();
                     }
					else event.finish();
				},
             ai:{
                    order:3,
                    result:{
                        player:function (player,target){
                            if(player.hp<player.maxHp&&player.countCards('h',{color:'red'})>=1){
                                return 7;
                            }
                            return 0;
                        },
                    },
                },
				audio:['daiyan',2],
			},
			gzyanyu:{
				audio:'yanyu',
				enable:'phaseUse',
				filter:function(event,player){
					return player.countCards('h','sha')>0;
				},
				filterCard:{name:'sha'},
				prepare:function(cards,player){
					player.$throw(cards,1000);
					game.log(player,'将',cards,'置入了弃牌堆');
				},
				discard:false,
				loseTo:'discardPile',
				visible:true,
				delay:0.5,
				content:function(){
					player.draw();
				},
				ai:{
					basic:{
						order:1
					},
					result:{
						player:1,
					},
				},
				group:'gzyanyu2'
			},
			gzyanyu2:{
				trigger:{player:'phaseUseEnd'},
				direct:true,
				filter:function(event,player){
					return player.getHistory('lose',function(evt){
						var evt2=evt.getParent();
						return evt2.name=='useSkill'&&evt2.skill=='gzyanyu'&&evt.getParent(3)==event;
					}).length>=2;
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzyanyu'),'令一名男性角色摸两张牌',function(card,player,target){
						return target.sex=='male'&&target!=player;
					}).set('ai',function(target){
						return get.attitude(_status.event.player,target);
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzyanyu',result.targets);
                        target1=result.targets[0];
						target1.draw(2);
					    if(player.sameIdentityAs(target1)){
                          target1.mayChangeVice();
                        }
					}
				}
			},
			gzshenyingx:{
                audio:"ext:国战补充:2",
				trigger:{player:'phaseDiscardEnd'},
				direct:true,
				filter:function(event,player){
					var cards=[];
					player.getHistory('lose',function(evt){
						if(evt.type=='discard'&&evt.getParent('phaseDiscard')==event) cards.addArray(evt.cards2);
					});
					if(cards){
						if(cards.length<2) return false;
						var suits=[];
						for(var i=0;i<cards.length;i++){
							var suit=get.suit(cards[i]);
							if(suits.contains(suit)){
								return false;
							}
							else{
								suits.push(suit);
							}
						}
						return true;
					}
					return false;
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzshenyingx'),'弃置一名其他角色的一张牌',function(card,player,target){
						if(player==target) return false;
						return target.countDiscardableCards(player,'he')>0;
					}).ai=function(target){
						return -get.attitude(player,target);
					};
					'step 1'
					if(result.bool){
						player.logSkill('gzshenyingx',result.targets);
						player.discardPlayerCard(result.targets[0],'he',true);
					}
					else{
						event.finish();
					}
				},
			},
			gzshoudaox:{
				derivation:'gztianyinx',
				enable:'phaseUse',
                audio:"ext:国战补充:1",
				filter:function(event,player){
					return player.checkMainSkill('gzshoudaox',false)||player.checkViceSkill('gzshoudaox',false);
				},
				unique:true,
				forceunique:true,
				filterTarget:true,
				skillAnimation:true,
				animationColor:'orange',
				content:function(){
					'step 0'
					if(player.checkMainSkill('gzshoudaox')){
						player.removeCharacter(0);
					}
					else{
						player.removeCharacter(1);
					}
					'step 1'
					target.addSkill('gztianyinx');
					if(target!=player){
						player.recover();
					}
				},
				ai:{
					order:9,
					result:{
						player:function(player,target){
							var num=0;
							if(player.isDamaged()&&target.isFriendOf(player)){
								num++;
								if(target.hasSkill('chulao')) num+=0.5;
								if(target.hasSkill('gzsuishi')) num+=0.5;
								if(target.hasSkill('chuanxin')) num+=0.5;
								if(target.hasSkill('jianchu')) num+=1.2;
								if(target.hasSkill('wushuang')) num+=1.2;
								if(target.hasSkill('huangjinianbingfu')) num+=1.5;
								if(target!=player) num+=0.5;
							}
							return num;
						}
					}
				}
			},
        gztianyinx:{
          audio:"ext:国战补充:1",
          trigger:{global:"damageEnd"},
          filter:function(event,player){
            if(!event.source||!event.source.isAlive())return false;
            if(get.attitude(player,event.source)<2)return false;
            if(!event.card||event.card.name!="sha")return false;
            return event.notLink();
          },
          forced:true,
		  mark:true,
		  intro:{
			 content:'锁定技，当友方角色使用【杀】对目标角色造成伤害后，其进行判定，若结果为黑桃，友方角色各摸一张牌'
		  },
          content:function(){
            'step 0'
            trigger.source.judge(function(card){
              return get.suit(card)=='spade';
            });
            'step 1'
            if(result.bool){
              event.targets=game.filterPlayer(function(current){
                return current.isFriendOf(player);
              });
              event.targets.sort(lib.sort.seat);
              game.asyncDraw(event.targets);
            }
          },
        },
            gzrushi:{
				audio:'xinfu_songsang',
				skillAnimation:true,
				animationColor:'gray',
				unique:true,
				limited:true,
				mark:true,
				init:function(player,skill){player.storage[skill]=false},
				trigger:{player:'phaseDrawBegin1'},
				filter:function(event,player){
　　　　　　　　   return player.hp==1||player.countCards('h')==0;
				},
				check:function(event,player){
					return !player.isMajor();
				},
				content:function(){
                    'step 0'                
					player.modifyGroup('qun');
					'step 1'
					if(player.checkMainSkill('gzrushi')){
						player.removeCharacter(1);
					}
					else{
						player.removeCharacter(0);
					}
                   "step 2"
                    var cards1=player.getCards('h');
                    trigger.player.gain(cards1,player);
		     'step 3'
              player.addSkill('gzniepanx');
              player.awakenSkill('gzrushi');
              player.storage.gzrushi=true;  
				},
				ai:{
					threaten:0.7,
			   }
         },
　　　　　　gzmanjuan:{
			    audio:'manjuan',
				trigger:{player:'phaseEnd'},
				filter:function(event,player){
					if(!player.storage.gzmanjuan) return false;
					for(var i=0;i<player.storage.gzmanjuan.length;i++){
						if(get.position(player.storage.gzmanjuan[i])=='d') return true;
					}
					return false;
				},
				frequent:true,
				content:function(){
					var list=[];
					for(var i=0;i<player.storage.gzmanjuan.length;i++){
						if(get.position(player.storage.gzmanjuan[i])=='d'){
							list.push(player.storage.gzmanjuan[i]);
							if(list.length>=2) break;
						}
					}
					player.gain(list,'gain2','log');
				},
				ai:{
					threaten:1.8,
				},
				group:['gzmanjuan_count','gzmanjuan_count2'],
				subSkill:{
					count:{
						trigger:{player:'useCard'},
						silent:true,
						filter:function(event,player){
							return _status.currentPhase==player;
						},
						content:function(){
							if(!player.storage.gzmanjuan){
								player.storage.gzmanjuan=[];
							}
							for(var i=0;i<trigger.cards.length;i++){
								if(get.color(trigger.cards[i])=='black'){
									player.storage.gzmanjuan.add(trigger.cards[i]);
								}
							}
						}
					},
					count2:{
						trigger:{player:'phaseAfter'},
						silent:true,
						content:function(){
							delete player.storage.gzmanjuan;
						}
					}
				}
			},
            gzniepanx:{
				audio:'niepan',
                trigger:{
                    player:"dying",
                },
                unique:true,
                skillAnimation:true,
                forceunique:true,
                direct:true,
                content:function (){
					'step 0'
					var list=[];
					for(var i=0;i<_status.characterlist.length;i++){
						var info=lib.character[_status.characterlist[i]];
						if(info[4]&&info[4].contains('jun')) continue;
							list.push(_status.characterlist[i]);
					}
        var players=game.players.concat(game.dead);
        for(var i=0;i<players.length;i++){
            list.remove(players[i].name);
            list.remove(players[i].name1);
            list.remove(players[i].name2);
        }
        var dialog=ui.create.dialog('将武将牌替换为一名角色','hidden');
        dialog.add([list.randomGets(5),'character']);
        player.chooseButton(dialog,true).ai=function(button){
            return get.rank(button.link,true)-lib.character[button.link][2];
        };	
        'step 1'  
        player.awakenSkill('gzniepanx');
        player.storage.gzniepanx=true;
        player.reinit('gz_re_jsp_pangtong',result.links[0]);
        player.recover(player.maxHp-player.hp);        
    },
            },
			'gzjianxiang':{
				audio:'nzry_jianxiang',
				trigger:{
					target:'useCardToTargeted',
				},
				filter:function (event,player){
					return event.player!=player;
				},
				direct:true,
				content:function(){
					"step 0"
					player.chooseTarget(get.prompt('gzjianxiang'),'令场上手牌数最少的一名角色摸一张牌',function(card,player,target){
						return target.isMinHandcard();
					}).ai=function(target){
						return get.attitude(player,target)
					};
					"step 1"
					if(result.bool){
						player.logSkill('gzjianxiang',result.targets);
						result.targets[0].draw();
					}
				},
			},
			"gzshenshi":{
				mark:true,
				audio:'nzry_shenshi',
				locked:false,
				zhuanhuanji:true,
				marktext:'审',
				intro:{
					content:function(storage,player,skill){
						if(player.storage.gzshenshi==true) return '其他角色对你造成伤害后，你可以观看该角色的手牌，然后交给其一张牌，当前角色回合结束时，若该角色未失去此牌，你将手牌摸至四张';
						return '出牌阶段限一次，你可以将一张牌交给一名有手牌且体力值大于1的角色，然后对其造成一点伤害';
					},
				},
				group:["gzshenshi_1","gzshenshi_2"],
				subSkill:{
					'1':{
				        audio:"nzry_shenshi",
						prompt:'出牌阶段限一次，你可以将一张牌交给一名有手牌且体力值大于1的角色，然后对其造成一点伤害',
						enable:'phaseUse',
						usable:1,
						filter:function(event,player){
							return player.countCards('h')>0&&player.storage.gzshenshi!=true;
						},
						discard:false,
						line:true,
						prepare:'give',
						position:'he',
						filterCard:true,
						filterTarget:function(card,player,target){
							return target!=player&&target.countCards('h')>0&&target.hp>1;
						},
						check:function(card){
							return 5-get.value(card);
						},
						content:function(){
							player.storage.gzshenshi=true;
							target.gain(cards,player);
							target.damage('nocard');
						},
						ai:{
							order:1,
							result:{
								target:function(player,target){
									return -1;
								},
							},
						},
					},
					'2':{
				        audio:"nzry_shenshi",
						trigger:{
							player:'damageEnd',
						},
						filter:function (event,player){
							return player.countCards('he')>0&&event.source&&event.source!=player&&player.storage.gzshenshi==true;
						},
						check:function (event,player){
							return event.source&&event.source.countCards('h')<=2&&player.countCards('h')<4;
						},
						content:function(){
							"step 0"
							player.storage.gzshenshi=false;
							player.viewHandcards(trigger.source);
							player.chooseCard('he',true).set('ai',function(card){
								return 5-get.value(card);
							});
							"step 1"
							if(result.bool){
								trigger.source.gain(result.cards,player,'give');
								trigger.source.storage.gzshenshi1=result.cards[0];
								trigger.source.storage.gzshenshi2=player;
								trigger.source.addSkill('gzshenshi1');
							};
						},
					},
				},
			},
			"gzshenshi1":{
				audio:"nzry_shenshi",
				trigger:{
					global:'phaseJieshuBegin',
				},
				forced:true,
				popup:false,
				filter:function (event,player){
					return player.storage.gzshenshi1!=undefined&&player.storage.gzshenshi2!=undefined;
				},
				content:function(){
					var pl=player.storage.gzshenshi2;
					var card=player.storage.gzshenshi1;
					if(player.getCards('hej').contains(card)&&4-pl.countCards('h')>0){
						pl.draw(4-pl.countCards('h'));
						pl.logSkill('gzshenshi');
					};
					player.removeSkill('gzshenshi1');
					delete player.storage.gzshenshi1;
					delete player.storage.gzshenshi2;
				},
			},
            "gzhongde":{
                audio:"hongde",
				trigger:{player:'loseAfter'},
				direct:true,
				filter:function(event,player){
					return event.cards&&event.cards.length>1;
				},
				content:function(){
					'step 0'
					player.chooseTarget(get.prompt('gzhongde'),'令一名其他角色摸一张牌',function(card,player,target){
						return target!=player;
					}).set('ai',function(target){
						return get.attitude(player,target);
					});
					'step 1'
					if(result.bool){
						player.logSkill('gzhongde',result.targets);
						result.targets[0].draw();
					}
				}
            },
			"gzjiyuan":{
				trigger:{
					global:"dying",
					source:"gainAfter",
				},
				//priority:6,
				audio:"gzjiyuan",
				filter:function (event,player){
					if(event.name=='dying') return true;
					return event.player!=target&&event.bySelf!=true;
				},
				check:function (event,player){
					return get.attitude(player,event.player)>0;
				},
				logTarget:"player",
				content:function (){
					trigger.player.draw();
				},
			},
            gzdingpan:{
                audio:"dingpan",
                enable:"phaseUse",
                usable:1,
                filterTarget:function(card,player,target){
        return player!=target&&target.countCards('e')>0;
    },
                content:function(){
　　　　　　　　'step 0'
　　　　　　　　target.draw();
　　　　　　　　player.chooseJunlingFor(target);
　　　　　　　　'step 1'
　　　　　　　　event.junling=result.junling;
　　　　　　　　event.targets=result.targets;
　　　　　　　　var choiceList=['执行该军令'];
　　　　　　　　if(target!=player) choiceList.push('获得装备区所有牌');
　　　　　　　　　else choiceList.push('不执行该军令，令其获得你的一张装备牌');
　　　　　　　　　target.chooseJunlingControl(player,result.junling,result.targets).set('prompt','定叛').set('choiceList',choiceList).set('ai',function(){
                if(get.attitude(target,player)>=0) return get.junlingEffect(player,result.junling,target,result.targets,target)>=0?0:1;
    return get.junlingEffect(player,result.junling,target,result.targets,target)>=-1?0:1;
});
　　　　　　　　'step 2'
　　　　　　　　if(result.index==0){
                  target.carryOutJunling(player,event.junling,targets);
                  target.gain(target.getCards('e'),'gain2');
　　　　　　　　}
　　　　　　　　　else if(target!=player) {
                    player.gainPlayerCard(target,true,'e');
                  }
　　　　　　　　　else if(target=player) {
                    player.gainPlayerCard(player,true,'e');
                 }
                 else event.finish();
                },
                ai:{
                    order:3,
                    result:{
                        player:1,
                    },
                },
            },
             gzchunyinx:{
                audio:"chunlao",
                direct:true,
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                content:function (){
        "step 0"
        player.chooseTarget(get.prompt2("gzchunyinx"),function(card,player,target){
            return player!=target;
        }).set("ai",function(target){
            var player=get.player();
            var att=get.attitude(player,target);
            if(player.countCards("he")==0)return att;
            if(player.countCards("he")<3)return 0;
            return 1.1+att/10;
        });
        "step 1"
        if(result.bool){
            event.target=result.targets[0];
            player.logSkill("gzchunyinx",event.target);
            if(event.target.countCards("he")>0)event.target.chooseToDiscard("醇饮:是否选择弃置一张牌？否则摸一张牌","he");
            else event._result={bool:false};
        }
        else event.finish();
        "step 2"
        if(result.bool){
            player.draw();
            event.finish();
        }
        else{
            event.target.draw();
            if(!player.countCards("he"))event.finish();
        }
        "step 3"
        player.chooseToDiscard("he",true);
        "step 4"
        if(result.bool&&result.cards){
            var list=[];
            if(player.hasUseTarget({name:'sha'}))list.push(['基本','','sha']);
            if(player.hasUseTarget({name:'tao'}))list.push(['基本','','tao']);
            if(player.hasUseTarget({name:'jiu'}))list.push(['基本','','jiu']);
            if(list.length){
                player.chooseButton(true,['请视为使用一张基本牌',[list,'vcard']]).set('ai',function(button){
                    var player=get.player();
                    var card={name:button.link[2],nature:button.link[3]};
                    if(card.name=='tao'){
                        if(player.hp==1||(player.hp==2&&!player.hasShan())||player.needsToDiscard())return 5;
                        return 1;
                    }
                    if(card.name=='sha'){
                        if(player.hasValueTarget({name:'sha'})){
                            if(card.nature=='fire') return 2.95;
                            if(card.nature=='thunder') return 2.92;
                            return 2.9;
                        }
                        return 0;
                    }
                    if(card.name=='jiu')return 0.5;
                    return 0;
                });
            }
            else event.finish();
        }
        else event.finish();
        "step 5"
        if(result&&result.bool&&result.links[0]){
            var card={name:result.links[0][2],nature:result.links[0][3]};
            player.chooseUseTarget(card,true,false);
        }
    },
            },
			gzdangkou:{
                audio:"lihuo",
				trigger:{player:'phaseUseBegin'},
				direct:true,
				filter:function(event,player){
					return game.countPlayer(function(current){
						return !current.isLinked();
					});
				},
				content:function(){
					"step 0"
					var num=game.countPlayer(function(current){
						return !current.isLinked();
					});
					player.chooseTarget(get.prompt('gzdangkou'),'横置至多2名未横置的角色',[1,2],function(card,player,target){
						return !target.isLinked();
					}).set('ai',function(target){
						return -get.attitude(_status.event.player,target);
					});
					"step 1"
					if(result.bool){
						player.logSkill('gzdangkou',result.targets);
						event.targets=result.targets;
						event.num=0;
					}
					else{
						event.finish();
					}
					"step 2"
					if(event.num<event.targets.length){
						event.targets[event.num].link();
						event.num++;
						event.redo();
					}
				},
				ai:{
					expose:0.3
				}
			},
			gzqianju:{
		        audio:'taoxi',
				trigger:{player:'phaseEnd'},
				frequent:true,
				content:function(){
					'step 0'
					player.draw();
					'step 1'
					if(Array.isArray(result)&&result.length){
						var gained=result[0];
						if(lib.filter.cardEnabled(gained,target)){
							var next=player.chooseToUse();
							next.filterCard=function(card){
								return card==gained;
							};
							next.prompt='是否使用'+get.translation(gained)+'？';
						}
						else{
							event.finish();
						}
					}
				},
				ai:{
					threaten:1.6
				}
			},
					gzaoshix:{
                        audio:"ext:国战补充:2",
						trigger:{
							player:'dieBegin'
						},
						direct:true,
						content:function(){
							'step 0'
							player.chooseTarget(get.prompt('gzaoshix'),1,function(card,player,target){
								return target!=player;
							}).ai=function(target){
								if(!target.hasSkill('feiying')) 
　　　　　　　　　　　　　　　return get.attitude(player,target);
							};
							'step 1'
							if(result.bool){
								player.line(result.targets[0]);
								result.targets[0].addSkill('feiying');
								game.log(result.targets[0],'获得技能【飞影】');
							}else{
								event.finish();
							};
						},
					},
					  gzfengpo:{
						audio:"fengpo",
						trigger:{source:'damageBegin1'},
						filter:function (event,player){
							return event.card&&event.card.name=='sha'&&get.distance(player,event.player)<=1;
						},
						content:function (){
						'step 0'
	player.chooseToDiscard(get.prompt('gzfengpo'),1,'h').ai=function(card){
								if(get.attitude(player,trigger.player)<0) return 1;
								return 0;
							};
							'step 1'
							if(result.bool){
								var card=result.cards[0];
								if(get.type(card)=='delay'||get.type(card)=='trick'){
									var num=trigger.player.hp;
									if(num>2) num=2;
									trigger.player.chooseToDiscard(num,'he',true);
								};
								if(get.type(card)=='equip'){
									trigger.num++;
								};
								if(get.type(card)=='basic'){
									player.draw();
								};
							};
						},
					},
            gzmoucheng:{
                audio:"moucheng",
				enable:"phaseUse",
				limited:true,
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzmoucheng;
				},
                filterTarget:true,
                content:function (){
        "step 0"
		player.awakenSkill('gzmoucheng');
        player.storage.gzmoucheng=true;
        if(player.sameIdentityAs(target)){
               target.mayChangeVice();
                 };
        target.draw(3);
        event.players=[];
        for(var i=0;i<game.players.length;i++){
            if(game.players[i]!=target&&get.distance(game.players[i],target,'attack')<=1){
                event.players.push(game.players[i]);
            }
        }
        lib.tempSortSeat=target;
        event.players.sort(lib.sort.seat);
        delete lib.tempSortSeat;
        "step 1"
        if(event.players.length){
            event.current=event.players.shift();
            event.current.animate('target');
            if(target.isAlive()){
                event.current.useCard({name:'sha'},target);
            }
            else{
                event.tempbool=true;
            }
        }
        else{
            event.finish();
        }
        "step 2"
        event.goto(1);
    },
                ai:{
                    order:5,
                    result:{
                        target:function (player,target){
                if(player.hp>2){
                    if(game.phaseNumber<game.players.length*2) return 0;
                }
                var num=0,players=game.filterPlayer();
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i]!=target&&get.distance(game.players[i],target,'attack')<=1){
                        num--;
                    }
                }
                return num;
            },
                    },
                },
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
            },
			gzlianji:{
				audio:'wylianji',
				trigger:{source:'damageAfter'},
				filter:function(event,player){
					return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0])=='d';
				},
				usable:1,
				prompt2:function(event){
					return '进行一次判定，若结果为黑色，你获得'+get.translation(event.cards);
				},
				content:function(){
					'step 0'
					player.judge(function(card){
						return get.color(card)=='black'?1:-1;
					});
					'step 1'
					if(result.color=='black'){
						player.gain(trigger.cards);
						player.$gain2(trigger.cards);
					}
				},
			},
			gzhuxiao:{
				audio:'huxiao',
				enable:'phaseUse',
				viewAs:{name:'sha',nature:'fire'},
				usable:1,
				position:'he',
				viewAsFilter:function(player){
					if(!player.countCards('he',{color:'red'})) return false;
				},
				filterCard:{color:'red'},
				check:function(card){
					if(get.suit(card)=='heart') return 7-get.value(card);
					return 5-get.value(card);
				},
				onuse:function(result){
					if(result.targets){
						for(var i=0;i<result.targets.length;i++){
							result.targets[i].addTempSkill('gzhuxiao3');
						}
					}
				},
				group:'gzhuxiao2',
				ai:{
					order:function(){
						return get.order({name:'sha'})+0.15;
					},
				},
			},
			gzhuxiao2:{
				trigger:{source:'damageEnd'},
				forced:true,
				popup:false,
				filter:function(event){
					return event.parent.skill=='gzhuxiao';
				},
				content:function(){
					player.addTempSkill('gzhuxiao4');
				}
			},
			gzhuxiao3:{
				mod:{
					cardRespondable:function(card,player){
						if(_status.event.parent.skill=='gzhuxiao'&&get.suit(card)!=get.suit(_status.event.parent.cards[0])) return false;
					}
				}
			},
			gzhuxiao4:{
				mod:{
					cardUsable:function(card,player,num){
						if(card.name=='sha') return num+1;
					}
				},
			},
			gzxueji:{
                audio:"xueji",
				mainSkill:true,
				init:function(player){
				if(player.checkMainSkill('gzxueji')){
				   player.removeMaxHp();
						}
					},
				enable:'phaseUse',
				usable:1,
				filter:function(event,player){
					return player.countCards('he',{suit:'heart'})>0;
				},
				filterTarget:function(card,player,target){
					return player!=target&&get.distance(player,target,'attack')<=1;
				},
				selectTarget:function(){
					var player=_status.event.player
					return [1,Math.max(1,player.getDamagedHp())];
				},
				position:'he',
				filterCard:function(card){
					return get.suit(card)=='heart';
				},
				check:function(card){
					return 8-get.useful(card);
				},
				content:function(){
					"step 0"
					target.damage('fire');
					"step 1"
					target.draw();
				},
				ai:{
					order:7,
					result:{
						target:function(player,target){
							return get.damageEffect(target,player);
						}
					},
					threaten:function(player,target){
						if(target.hp==1) return 2;
						if(target.hp==2) return 1.5;
						return 0.5;
					},
					maixie:true,
					effect:{
						target:function(card,player,target){
							if(get.tag(card,'damage')){
								if(target.hp==target.maxHp&&target.hasFriend()) return [0,1];
							}
							if(get.tag(card,'recover')&&player.hp>=player.maxHp-1) return [0,0];
						}
					}
				}
			},
					"gzjinjiu":{
　　　　　　　　　　　　audio:'jinjiu',
						trigger:{
							global:'dyingBegin'
						},
						forced:true,
						filter:function(event,player){
							return _status.currentPhase==player&&event.source==player;
						},
						content:function(){
							trigger.player.storage.gzjinjiu=player;
						},
					},
					"_gzjinjiu":{
						mod:{
							cardSavable:function(card,player){
								if(game.countPlayer(function(current){return current.storage.gzjinjiu!=undefined})>0&&card.name!='tao') return false;
							},
						},
						trigger:{
							player:'useCardEnd'
						},
						forced:true,
						filter:function(event,player){
							if(event.card.name!='tao') return false;
							for(var i=0;i<event.targets.length;i++){
								if(event.targets[i].storage.gzjinjiu!=undefined) return true;
							};
							return false;
						},
						content:function(){
							'step 0'
							player.chooseToDiscard(1,'he',{color:'red'});
							'step 1'
							if(!result.bool){
								var pl;
								for(var i=0;i<trigger.targets.length;i++){
									if(trigger.targets[i].storage.gzjinjiu!=undefined) pl=trigger.targets[i].storage.gzjinjiu;
								};
								player.damage().source=pl;
							};
							delete player.storage.gzjinjiu;
						},
					},
					"_gzjinjiu1":{
						trigger:{
							player:'phaseEnd'
						},
						forced:true,
						filter:function(event,player){
							return game.countPlayer(function(current){return current.storage.gzjinjiu!=undefined})>0;
						},
						content:function(){
							for(var i=0;i<game.players.length;i++){
								if(game.players[i].storage.gzjinjiu!=undefined) delete game.players[i].storage.gzjinjiu;
							};
						},
					},
					"gzluoying":{
                    audio:"luoying",
						trigger:{
							player:'loseEnd'
						},
						filter:function(event,player){
							for(var i=0;i<event.cards.length;i++){
								if(_status.currentPhase!=player&&(event.cards[i].original=='e'||(get.suit(event.cards[i])=='club'&&event.cards[i].original=='h'))) return true;
							};
							return false;
						},
						content:function(){
							'step 0'
							player.judge(function(card){
								if(get.color(card)=='black') return 4;
    							return -1;
							});
							'step 1'
							if(get.color(result.card)=='black'){
								player.chooseTarget('请选择一名角色').ai=function(target){
									return -get.attitude(player,target);
								};
							}else{
							     player.gain(result.card);
							};
							'step 2'
							if(result.bool){
								player.line(result.targets[0]);
								result.targets[0].damage('thunder');
							};
						},
					},
            "gztianming":{
                audio:"tianming",
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return player.canCompare(target);
    },
                content:function (){
        "step 0"
        player.chooseToCompare(target);
        "step 1"
        if(result.tie)event.finish();
        else{
            var list=[];
            if(get.position(result.player)=='d')list.push(result.player);
            if(get.position(result.target)=='d')list.push(result.target);
            var win=result.bool?player:target;
            event.win=win;
            if(list.length){
                event.cards=list;
                var b=false;
                for(var i=0;i<list.length;i++){
                    if(win.hasUseTarget(list[i])){
                        b=true;
                        break;
                    }
                }
                if(b)event.goto(3);
            }
        }
        "step 2"
        event.win.loseHp();
        event.finish();
        "step 3"
        var pro="天命:请选择使用以下一张牌或流失1点体力";
        var ne=event.win.chooseCardButton(pro,event.cards);
        ne.set("filterButton",function(button){
            var player=get.player();
            return player.hasUseTarget(button.link);
        });
        ne.set("ai",function(button){
            return player.getUseValue(button.link);
        });
        "step 4"
        if(result.bool)event.win.chooseUseTarget(result.links[0],true,false);
        else event.goto(2);
    },
                ai:{
                    order:4,
                    result:{
                        target:-1,
                    },
                },
            },
            "gzshangao":{
                skillAnimation:"epic",
                animationColor:"metal",
                unique:true,
                xiandingji:true,
                limited:true,
                mark:true,
                audio:"mizhao",
                init:function (player,skill){
                  player.storage[skill]=false;
                },
                intro:{
                    content:"limited",
                },
                trigger:{
                    player:"dyingBegin",
                },
                direct:true,
                filter:function (event,player){
        return player.storage.gzshangao==false;
    },
                content:function (){
                     "step 0"
       player.chooseTarget(get.prompt2("gzshangao"),function(card,player,target){
            return player!=target;
        }).set("ai",function(target){
            var player=get.player();
            return get.attitude(player,target)>0;
        });
        "step 1"
        if(result.bool){
            event.tg=result.targets[0];
            player.logSkill("gzshangao",event.tg);
            player.storage.gzshangao=true;
            player.awakenSkill("gzshangao");
        }
        else event.finish();
        "step 2"
        var tg=event.tg;
        tg.addSkillLog("gztianming");
        "step 3"
         if(player.checkMainSkill('gzshangao')){
			player.removeCharacter(0);
		    }
		    else{
			   player.removeCharacter(1);
			}
        "step 4"
        player.recover(2);
        player.draw(2);
    },
            },
			gzyizanx:{
                audio:"ext:国战补充:2",
				mod:{
					globalFrom:function(from,to,distance){
						if(!from.getEquip(1)) return distance-1;
					},
					maxHandcard:function(player,num){
						if(!player.getEquip(2)) return num+1;
					}
				}
			 },
             gzlongyuanx:{
                audio:"xinfu_longyuan",
				trigger:{
					global:"shaMiss",
				},
				filter:function(event,player){
					return 			event.target==player&&Math.abs(event.player.countCards('h')-player.countCards('h'))<=2;
				},
                priority:-1,
                check:function(event,player){
                return get.attitude(player,event.player)<0&&player.countCards('h')<event.player.countCards('h');
                },
                content:function(){
                   'step 0'
		           event.nm=player.countCards('h');
		           'step 1'
                   player.swapHandcards(trigger.player);
		           game.delay();
                   'step 2'
                   if(player.countCards('h')<event.nm){
			          player.discardPlayerCard(trigger.player,'he');
			          player.mayChangeVice();
                   }
                 },
		         ai:{
		            expose:0.2,
                 },
            },
            "gzyizan":{
                audio:"ext:国战补充:2",
				usable:2,
                trigger:{
                    player:"chooseToRespondBegin",
                },
                direct:true,
                filter:function (event,player){
        if(event.responded) return false;
        if(!event.filterCard({name:'shan'},player,event)&&!event.filterCard({name:'sha'},player,event)) return false;
        if(player.countCards("h")<Math.max(player.hp,2))return false;
        return true;
    },
                group:"gzyizan_a",
                subSkill:{
                    a:{
                        enable:"chooseToUse",
                        filter:function (event,player){
                if(player.countCards("h")<Math.max(player.hp,2))return false;
                return event.filterCard({name:'sha'},player,event)||event.filterCard({name:'jiu'},player,event)||event.filterCard({name:'tao'},player,event)||event.filterCard({name:'shan'},player,event);
            },
                        chooseButton:{
                            dialog:function (event,player){
                    var list=[];
                    if(event.filterCard({name:'sha'},player,event)){
                        list.push(['基本','','sha']);
                        list.push(['基本','','sha','fire']);
                        list.push(['基本','','sha','thunder']);
                    }
                    if(event.filterCard({name:'tao'},player,event))list.push(['基本','','tao']);
                    if(event.filterCard({name:'jiu'},player,event))list.push(['基本','','jiu']);
                    if(event.filterCard({name:'shan'},player,event))list.push(['基本','','shan']);
                    return ui.create.dialog('奔袭',[list,'vcard'],'hidden');
                },
                            check:function (button){
                    var player=get.player();
                    var card={name:button.link[2],nature:button.link[3]};
                    if(card.name=='jiu') return 0;
                    if(game.hasPlayer(function(current){
                        return player.canUse(card,current)&&get.effect(current,card,player,player)>0;
                    })){
                        if(card.name=='sha'){
                            if(card.nature=='fire') return 2.95;
                            else if(card.nature=='fire') return 2.92;
                            else return 2.9;
                        }
                        else if(card.name=='tao'||card.name=='shan'){
                            return 4;
                        }
                    }
                    return 0;
                },
                            backup:function (links,player){
                    return {
                        selectTarget:function(){
                            if(links[0][2]=="shan")return -1;
                            var player=get.player();
                            return [1,Math.max(player.hp,2)];
                        },
                        filterTarget:function(card,player,target){
                            return lib.filter.targetEnabled2({name:links[0][2]},player,target);
                        },
                        filterCard:true,
                        position:"h",
                        viewAs:{name:links[0][2],nature:links[0][3]},
                        selectCard:function(){
                            var player=get.player();
                            return Math.max(player.hp,2);
                        },
                        popname:true,
                        log:false,
                        onuse:function(result,player){
                        	player.logSkill("gzyizan");
                        },
                    }
                },
                            prompt:function (links,player){
                    var n=Math.max(player.hp,2);
                    var str=links[0][2]=='shan'?'':'对至多'+get.cnNumber(n)+'个目标';
                    return '将'+get.cnNumber(n)+'张手牌当做'+get.translation(links[0][3]||'')+get.translation(links[0][2])+str+'使用';
                },
                        },
                        ai:{
                            order:function (){
                    var player=get.player();
                    var event=_status.event;
                    if(event.type=='dying'){
                        if(event.filterCard({name:'tao'},player,event))return 0.5;
                    }
                    else{
                        if(event.filterCard({name:'tao'},player,event)||event.filterCard({name:'shan'},player,event))return 4;
                        if(event.filterCard({name:'sha'},player,event))return 3.1;
                    }
                    return 0;
                },
                            result:{
                                player:function(player){
                        if(_status.event.type!='dying'){
                            if(player.hp<3)return 2.1-player.hp;
                            return -1;
                        }
                        else return get.attitude(player,_status.event.dying);
                    },
                            },
                            save:true,
                            respondSha:true,
                            respondShan:true,
                            skillTagFilter:function (player,tag,arg){
                    if(player.countCards("h")<Math.max(player.hp,2))return false;
                },
                        },
                        sub:true,
                    },
                },
                content:function (){
        "step 0"
        if(trigger.filterCard({name:'shan'})&&lib.filter.cardRespondable({name:'shan'},player,trigger)) event.name='shan';
        else event.name='sha';
        var n=Math.max(player.hp,2);
        player.chooseCard("h",n,'是否发动【翊赞】，将'+get.cnNumber(n)+'张手牌当做'+get.translation(event.name)+'打出？').set('ai',function(card){
            var player=get.player();
            if(player.hp>2)return 0;
            if(!player.countCards('h','shan'))return 8-get.value(card);
            return 6-get.value(card);
        });
        'step 1'
        if(result.bool){
            player.logSkill('gzyizan');
            event.cards=result.cards;
        }
        else event.finish();
        "step 2"
        trigger.untrigger();
        trigger.responded=true;
        if(trigger.filterCard({name:'shan'}))trigger.result={bool:true,card:{name:'shan'},cards:event.cards};
        else trigger.result={bool:true,card:{name:'sha'},cards:event.cards};
    },
            },
            "gzhuaiju":{
                audio:"nzry_huaiju",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                filter:function (event,player){
                    return player.countCards("he",{color:"red"})>=2;
                },
                direct:true,
                content:function (){
        "step 0"
        player.chooseCardTarget({
            prompt:get.prompt2("gzhuaiju"),
            selectCard:[2,Infinity],
            position:"he",
            filterCard:{
                color:"red",
            },
            selectTarget:1,
            filterTarget:function(card,player,target){
                return player!=target;
            },
            ai1:function(card){
                return 10-get.value(card);
            },
            ai2:function(target){
                var att=get.attitude(_status.event.player,target);
                return att;
            },
        });
        "step 1"
        if(result.bool){
            event.cards=result.cards;
            event.target=result.targets[0];
            player.logSkill("gzhuaiju",event.target);
            player.give(event.cards,event.target);
        }
        else event.finish();
        "step 2"
        player.draw(3);
    },
            },
            "gzzhenglun":{
                audio:"nzry_zhenglun",
                init:function (player){
        player.storage.gzzhenglun=[];
        player.storage.gzzhenglun2=[];
    },
                intro:{
                    content:"cards",
                    mark:function (dialog,content,player){
            if(content&&content.length){
                dialog.addAuto(content);
                var str='';
                for(var i=0;i<player.storage.gzzhenglun2.length;i++){
                    str+="<li>";
                    str+=player.storage.gzzhenglun2[i];
                    if(i<player.storage.gzzhenglun2.length-1){
                        str+='<br>';
                    }
                }
                dialog.add('<div class="text center">'+str+'</div>')
            }
        },
                },
                trigger:{
                    player:"useCard",
                    global:"phaseAfter",
                },
                frequent:true,
                filter:function (event,player){
        if(event.name!="useCard"){
            player.unmarkSkill("gzzhenglun");
            player.storage.gzzhenglun=[];
            player.storage.gzzhenglun2=[];
            return false;
        }
        return ui.cardPile.childNodes.length>=player.getHistory("useCard").length;
    },
                content:function (){
        "step 0"
        var u=player.getHistory("useCard").length;
        event.cards=[ui.cardPile.childNodes[u-1]];
        event.use=get.cnNumber(u,"two");
        var ne=player.chooseCardButton("是否弃置牌堆顶第"+event.use+"张牌？",event.cards,1);
        ne.set("ai",function(button){
            var card=button.link;
            var player=get.player();
            var u=_status.event.u;
            var next=_status.currentPhase.next;
            var js=next.getCards("j");
            var nj=_status.currentPhase!=player&&js&&js.length>=u;
            var att=get.attitude(player,next);
            if(nj&&att!=0){
            	var name=js[u-1].viewAs||js[u-1].name;
            	var info=get.info(name);
            	if(info&&info.judge&&typeof info.judge=="function"){
            		var eff=info.judge(card);
            		if(att>0)return eff<0?1:-1;
            		else return eff<0?-1:1;
            	}
            }
            var v1=get.value(card);
            var b1=get.type(card)=="equip";
            var na=card.name;
            if(na=="shan")return 0;
            if(na=="sha"){
                if(get.color(card)=='black')return 1;
                return 0;
            }
            return v1<6||b1?1:-1;
        });
        ne.set("u",u);
        "step 1"
        var str=event.use;
        if(result.bool){
            game.cardsDiscard(event.cards);
            player.$throw(event.cards);
            game.log(player,"弃置了",event.cards);
            str+="(弃置)";
            game.updateRoundNumber();
        }
        else str+="(观看)";
        player.markSkill("gzzhenglun");
        player.storage.gzzhenglun.addArray(event.cards);
        player.storage.gzzhenglun2.push(str);
        player.syncStorage("gzzhenglun");
    },
            },
            "gzzhuikong":{
                audio:"zhuikong",
                trigger:{
                    target:"useCardToTargeted",
                },
                filter:function(event,player){
        var num=game.gzbc_XRFS?2:1;
        return player.countCards("he")>num-1;
    },
                direct:true,
				frequent:"check",
                check:function(event,player){
  if(player.hp==1&&player.countCards("h",{name:['tao','shan','jiu']})>0) return false;
        var st=get.subtype(event.card);
        if(st&&player.getEquip(st))return true;
        var val=player==game.me?4:8;
        return player.countCards("he",function(card){
        	return val-get.value(card)>0;
        })>0;
    },
                content:function(){
                "step 0"
        player.chooseToDiscard(get.prompt2("gzzhuikong"),"he",[game.gzbc_XRFS?2:1,Infinity]).set("ai",function(card){
            var n=game.gzbc_XRFS?2:1;
            return ui.selected.cards.length==n?0:8-get.value(card);
        }).logSkill="gzzhuikong";
        "step 1"
        if(result.bool) player.storage.gzzhuikong_a.push(trigger.cards);
    },
                ai:{
                    effect:{
                        target:function (card,player,target){
                          var n=game.XRFS?0.2:0.5;
                          return [1,n];
                       },
                    },
                },
                group:"gzzhuikong_a",
                subSkill:{
                    a:{
                        charlotte:true,
                        init:function (player,skill){
                player.storage[skill]=[];
            },
                        trigger:{
                            global:"useCardAfter",
                        },
                        filter:function (event,player){
                return player.storage.gzzhuikong_a.contains(event.cards);
            },
                        silent:true,
                        content:function (){
                "step 0"
                player.storage.gzzhuikong_a.remove(trigger.cards);
                player.chooseBool("惴恐:是否摸1张牌？").ai=lib.filter.all;
                "step 1"
                if(result.bool)player.draw();
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                },
            },
            "gzqiuyuan":{
                audio:"qiuyuan",
                group:["gzqiuyuan_a","gzqiuyuan_b","gzqiuyuan_c","gzqiuyuan_e","gzqiuyuan_g"],
                subSkill:{
                    a:{
                        audio:"qiuyuan",
                        trigger:{
                            player:["chooseToRespondBefore","chooseToUseBefore"],
                        },
                        filter:function (event,player){
                if(event.responded) return false;
                if(player.storage.gzqiuyuanbing) return false;
                if(!event.filterCard({name:'shan'},player,event)) return false;
                if(_status.currentPhase==player)return false;
                if(player.countCards("h"))return false;
                return true;
            },
                        check:function (event,player){
                if(get.damageEffect(player,event.player,player)>=0) return false;
                return true;
            },
                        content:function (){
                "step 0"
                if(event.current==undefined)event.current=player.next;
                if(event.current==player)event.finish();
                else{
                    if((event.current==game.me&&!_status.auto)||(get.attitude(event.current,player)>2)||event.current.isOnline()){
                        player.storage.gzqiuyuanbing=true;
                        var next=event.current.chooseToRespond('是否替'+get.translation(player)+'打出一张闪？',{name:'shan'});
                        next.set('ai',function(){
                            var event=_status.event;
                            return (get.attitude(event.player,event.source)-2);
                        });
                        next.set('skillwarn','替'+get.translation(player)+'打出一张闪');
                        next.autochoose=lib.filter.autoRespondShan;
                        next.set('source',player);
                    }
                }
                "step 1"
                player.storage.gzqiuyuanbing=false;
                if(result.bool){
                    event.finish();
                    trigger.result={bool:true,card:{name:'shan',isCard:true}};
                    trigger.responded=true;
                    trigger.animate=false;
                    if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                        event.current.ai.shown+=0.3;
                        if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
                    }
                }
                else{
                    event.current=event.current.next;
                    event.goto(0);
                }
            },
                        ai:{
                            respondShan:true,
                            skillTagFilter:function (player){
                    if(player.storage.gzqiuyuanbing)return false;
                    if(_status.currentPhase==player)return false;
                    if(player.countCards("h"))return false;
                },
                        },
                        sub:true,
                    },
                    b:{
                        audio:"qiuyuan",
                        trigger:{
                            player:"chooseToRespondBegin",
                        },
                        check:function (event){
                if(event.gzqiuyuana) return false;
                return true;
            },
                        filter:function (event,player){
                if(event.responded) return false;
                if(player.storage.gzqiuyuanaing) return false;
                if(!event.filterCard({name:'sha'},player,event)) return false;
                if(_status.currentPhase==player)return false;
                if(player.countCards("h"))return false;
                return true;
            },
                        content:function (){
                "step 0"
                if(event.current==undefined) event.current=player.next;
                if(event.current==player)event.finish();
                else{
                    player.storage.gzqiuyuanaing=true;
                    var next=event.current.chooseToRespond('是否替'+get.translation(player)+'打出一张杀？',{name:'sha'});
                    next.set('ai',function(){
                        var event=_status.event;
                        return (get.attitude(event.player,event.source)-2);
                    });
                    next.set('source',player);
                    next.set('gzqiuyuana',true);
                    next.set('skillwarn','替'+get.translation(player)+'打出一张杀');
                    next.noOrdering=true;
                    next.autochoose=lib.filter.autoRespondSha;
                }
                "step 1"
                player.storage.gzqiuyuanaing=false;
                if(result.bool){
                    event.finish();
                    trigger.result=result;
                    trigger.responded=true;
                    trigger.animate=false;
                    if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                        event.current.ai.shown+=0.3;
                        if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
                    }
                }
                else{
                    event.current=event.current.next;
                    event.goto(0);
                }
            },
                        sub:true,
                    },
                    c:{
                        audio:"qiuyuan",
                        enable:"chooseToUse",
                        prompt:"选择一名目标角色。若有其他角色打出【杀】响应，则视为你对其使用此【杀】。",
                        filter:function (event,player){
                if(event.filterCard&&!event.filterCard({name:'sha'},player,event)) return false;
                if(player.hasSkill('gzqiuyuan_d')) return false;
                if(!lib.filter.cardUsable({name:'sha'},player)) return false;
                if(_status.currentPhase==player)return false;
                if(player.countCards("h"))return false;
                return true;
            },
                        filterTarget:function (card,player,target){
                if(_status.event._backup&&
                    typeof _status.event._backup.filterTarget=='function'&&
                    !_status.event._backup.filterTarget({name:'sha'},player,target)){
                    return false;
                }
                return player.canUse({name:'sha'},target);
            },
                        content:function (){
                "step 0"
                if(event.current==undefined) event.current=player.next;
                if(event.current==player){
                    player.addSkill('gzqiuyuan_d');
                    event.getParent(2).step=0;
                    event.finish();
                }
                else{
                    var next=event.current.chooseToRespond('是否替'+get.translation(player)+'对'+get.translation(target)+'使用一张杀',
                    function(card,player,event){
                        event=event||_status.event;
                        return card.name=='sha'&&event.source.canUse(card,event.target);
                    });
                    next.set('ai',function(card){
                        var event=_status.event;
                        return get.effect(event.target,card,event.source,event.player);
                    });
                    next.set('source',player);
                    next.set('target',target);
                    next.set('gzqiuyuana',true);
                    next.set('skillwarn','替'+get.translation(player)+'打出一张杀');
                    next.noOrdering=true;
                    next.autochoose=lib.filter.autoRespondSha;
                }
                "step 1"
                if(result.bool){
                    event.finish();
                    if(result.cards&&result.cards.length){
                        player.useCard({name:'sha',isCard:true},result.cards,target).animate=false;
                    }
                    else{
                        player.useCard({name:'sha',isCard:true},target).animate=false;
                    }
                    if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                        event.current.ai.shown+=0.3;
                        if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
                    }
                }
                else{
                    event.current=event.current.next;
                    event.goto(0);
                }
            },
                        ai:{
                            respondSha:true,
                            skillTagFilter:function (player){
                    if(_status.currentPhase==player)return false;
                    if(player.countCards("h"))return false;
                },
                            result:{
                                target:function (player,target){
                        if(player.hasSkill('gzqiuyuan_d')) return 0;
                        return get.effect(target,{name:'sha'},player,target);
                    },
                            },
                            order:2.9,
                        },
                        sub:true,
                    },
                    d:{
                        trigger:{
                            global:["useCardAfter","useSkillAfter","phaseAfter"],
                        },
                        silent:true,
                        filter:function (event){
                return event.skill!='gzqiuyuan_c';
            },
                        content:function (){
                "step 0"
                player.removeSkill('gzqiuyuan_d');
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    e:{
                        audio:"qiuyuan",
                        enable:"chooseToUse",
                        name:"求援(桃)",
                        prompt:"选择一名目标角色。若有其他角色打出【桃】响应，则视为你对其使用此【桃】。",
                        filter:function (event,player){
                if(event.filterCard&&!event.filterCard({name:'tao'},player,event)) return false;
                if(player.hasSkill('gzqiuyuan_f')) return false;
                if(!lib.filter.cardUsable({name:'tao'},player)) return false;
                if(_status.currentPhase==player)return false;
                if(player.countCards("h"))return false;
                return true;
            },
                        selectTarget:-1,
                        filterTarget:function (card,player,target){
                return target==_status.event.dying;
            },
                        content:function (){
                "step 0"
                if(event.current==undefined) event.current=player.next;
                if(event.current==player){
                    player.addSkill('gzqiuyuan_f');
                    event.getParent(2).step=0;
                    event.finish();
                }
                else{
                    var next=event.current.chooseToRespond('是否替'+get.translation(player)+'对'+get.translation(target)+'使用一张桃',
                    function(card,player,event){
                        event=event||_status.event;
                        return card.name=='tao';
                    });
                    next.set('ai',function(card){
                        var event=_status.event;
                        return get.effect(event.target,card,event.source,event.player);
                    });
                    next.set('source',player);
                    next.set('target',target);
                    next.set('gzqiuyuanc',true);
                    next.set('skillwarn','替'+get.translation(player)+'打出一张桃');
                    next.noOrdering=true;
                    var restao=function(){
                        return !this.player.countCards("h","tao");
                    };
                    next.autochoose=restao;
                }
                "step 1"
                if(result.bool){
                    event.finish();
                    if(result.cards&&result.cards.length){
                        player.useCard({name:'tao',isCard:true},result.cards,target).animate=false;
                    }
                    else{
                        player.useCard({name:'tao',isCard:true},target).animate=false;
                    }
                    if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                        event.current.ai.shown+=0.3;
                        if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
                    }
                }
                else{
                    event.current=event.current.next;
                    event.goto(0);
                }
            },
                        ai:{
                            save:true,
                            skillTagFilter:function (player){
                    if(_status.currentPhase==player)return false;
                    if(player.countCards("h"))return false;
                },
                            result:{
                                target:function (player,target){
                        if(player.hasSkill('gzqiuyuan_f')) return 0;
                        return get.effect(target,{name:'tao'},player,target);
                    },
                            },
                            order:1,
                        },
                        sub:true,
                    },
                    f:{
                        trigger:{
                            global:["useCardAfter","useSkillAfter","phaseAfter","dyingAfter"],
                        },
                        silent:true,
                        filter:function (event){
                return event.skill!='gzqiuyuan_e'&&event.skill!='gzqiuyuan_g';
            },
                        content:function (){
                "step 0"
                player.removeSkill('gzqiuyuan_f');
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                    g:{
                        audio:"qiuyuan",
                        enable:"chooseToUse",
                        name:"求援(酒)",
                        prompt:"选择一名目标角色。若有其他角色打出【酒】响应，则视为你对其使用此【酒】。",
                        filter:function (event,player){
                if(event.filterCard&&!event.filterCard({name:'jiu'},player,event)) return false;
                if(player.hasSkill('gzqiuyuan_h')) return false;
                if(!lib.filter.cardUsable({name:'jiu'},player)) return false;
                if(_status.currentPhase==player)return false;
                if(player.countCards("h"))return false;
                return true;
            },
                        selectTarget:-1,
                        filterTarget:function (card,player,target){
                return target==_status.event.dying;
            },
                        content:function (){
                "step 0"
                if(event.current==undefined) event.current=player.next;
                if(event.current==player){
                    player.addSkill('gzqiuyuan_h');
                    event.getParent(2).step=0;
                    event.finish();
                }
                else{
                    var next=event.current.chooseToRespond('是否替'+get.translation(player)+'对'+get.translation(target)+'使用一张酒',
                    function(card,player,event){
                        event=event||_status.event;
                        return card.name=='jiu'&&event.source.canUse(card,event.target);
                    });
                    next.set('ai',function(card){
                        var event=_status.event;
                        return get.effect(event.target,card,event.source,event.player);
                    });
                    next.set('source',player);
                    next.set('target',target);
                    next.set('gzqiuyuand',true);
                    next.set('skillwarn','替'+get.translation(player)+'打出一张酒');
                    next.noOrdering=true;
                    var resjiu=function(){
                        return !this.player.countCards("h","jiu");
                    };
                    next.autochoose=resjiu;
                }
                "step 1"
                if(result.bool){
                    event.finish();
                    if(result.cards&&result.cards.length){
                        player.useCard({name:'jiu',isCard:true},result.cards,target).animate=false;
                    }
                    else{
                        player.useCard({name:'jiu',isCard:true},target).animate=false;
                    }
                    if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
                        event.current.ai.shown+=0.3;
                        if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
                    }
                }
                else{
                    event.current=event.current.next;
                    event.goto(0);
                }
            },
                        ai:{
                            save:true,
                            skillTagFilter:function (player){
                    if(_status.currentPhase==player)return false;
                    if(player.countCards("h"))return false;
                },
                            result:{
                                target:function (player,target){
                        if(player.hasSkill('gzqiuyuan_h')) return 0;
                        return get.effect(target,{name:'jiu'},player,target);
                    },
                            },
                            order:2,
                        },
                        sub:true,
                    },
                    h:{
                        trigger:{
                            global:["useCardAfter","useSkillAfter","phaseAfter","dyingAfter"],
                        },
                        silent:true,
                        filter:function (event){
                return event.skill!='gzqiuyuan_e'&&event.skill!='gzqiuyuan_g';
            },
                        content:function (){
                "step 0"
                player.removeSkill('gzqiuyuan_h');
            },
                        sub:true,
                        forced:true,
                        popup:false,
                    },
                },
            },
            "gzduliang":{
                audio:"duliang",
                trigger:{
                    player:"phaseJieshuBegin",
                },
                filter:function (event,player){
                    if(player.hasJudge("bingliang"))return false;
                    return player.countCards("he",function(card){
                        return get.type(card)=="basic"&&get.color(card)=="black";
                    });
                },
                direct:true,
                content:function (){
                    "step 0"
                    player.chooseCard(get.prompt2("gzduliang"),"he",function(card){
                        return get.type(card)=="basic"&&get.color(card)=="black";
                    }).set("ai",function(card){
                        return 6-get.value(card);
                    });
                    "step 1"
                    if(result.bool){
                        player.logSkill("gzduliang");
                        player.addJudge({name:"bingliang"},result.cards);
    					player.$gain2(result.cards);
        				game.delay();
                        player.draw(2);
                    }
                },
                ai:{
                    effect:{
                        player:function (card,player,target){
                            if(player.countCards("he",function(card){
                                return get.type(card)=="basic"&&get.color(card)=="black";
                            })>1)return;
                            if(card.name=="sha"&&get.color(card)=="black")return [0,-2];
                        },
                    },
                },
            },
            "gzfulin":{
                audio:"fulin",
                trigger:{
                    player:"damageEnd",
                },
                filter:function (event,player){
        if(!event.source)return false;
        return player.countCards("j");
    },
                check:function (event,player){
        var j1=player.countCards("j");
        var j2=event.source.countCards("j");
        if(player.countCards("j","shandian")&&j2==0)return true;
        return get.attitude(player,event.source)<0&&j1>j2;
    },
                content:function (){
        "step 0"
        player.swapJudge(trigger.source);
    },
                ai:{
                    "maixie_defend":true,
                    effect:{
                        target:function (card,player,target){
                            if(!get.tag(card,"damage"))return;
                            if(!target.countCards("j"))return;
                            return [1,0.5,1,-1];
                        },
                    },
                },
            },
		   gzzuifu:{
			  audio:'zuifu',
              trigger:{
                player:"damageEnd",
              },
              filter:function (event,player){
                return event.source&&event.source.isIn()&&event.source!=player;
              },
              check:function (event,player){
                return get.attitude(player,event.source)<=0;
              },
              logTarget:"source",
		      "prompt2":function (event,player){
			     return '是否与'+get.translation(event.source)+'猜拳？若你胜利，你将一张【乐不思蜀】置于其判定区；若你失败，则你摸一张牌，然后可以选择是否变更副将。';
		},
              content:function (){
              "step 0"           
			   player.chooseToPSS(trigger.source);
			  "step 1"
               if(result.tie) event.goto(0);
			   if(result.bool==true){
                 if(!trigger.source.hasJudge('lebu')){
                 var card=game.createCard('lebu');
                 trigger.source.addJudge(card);
                 trigger.source.$draw(card);
                 game.delay();
                 }
                 else event.finish();
			   }
			   else if(result.bool==false) {
				 player.draw();
                 player.mayChangeVice();
			   }
　　　　　　},
　　            ai:{
                 "maixie_defend":true,
　　　　　　　　},
　　		},
            "gzbifa":{
                audio:"bifa",
                direct:true,
                trigger:{
                    player:"phaseZhunbeiBegin",
                },
                filter:function (event,player){
        return player.countCards("h","sha");
    },
                content:function (){
        "step 0"
        player.chooseCardTarget({
            prompt:get.prompt2("gzbifa"),
            position:"h",
            filterCard:function(card){
                return card.name=="sha";
            },
            filterTarget:function(card,player,target){
                return player!=target;
            },
            ai2:function(target){
                var player=get.player();
                if(get.attitude(player,target)>0)return 0;
                return (target.countCards("h")-0.9)/3;
            },
        });
        "step 1"
        if(result.bool){
            event.target=result.targets[0];
            player.logSkill("gzbifa",event.target);
            player.showCards(result.cards,get.translation(player)+"展示的牌");
        }
        else event.finish();
        "step 2"
        if(event.target.countCards("h","shan")){
            var list=["展示一张【闪】","弃置一张手牌"];
            event.target.chooseControlList(list,true).set("ai",function(event,player){
                return 0;
            }).set("prompt","请选择一项执行");
        }
        else event.goto(5);
        "step 3"
        if(result.index==0)event.target.chooseCard("请选择一张闪展示","h",true,function(card){
            return card.name=="shan";
        });
        else event.goto(5);
        "step 4"
        event.target.showCards(result.cards,get.translation(event.target)+"展示的牌");
        event.finish();
        "step 5"
        event.target.chooseToDiscard("h",1,true);
    },
            },
              gzwuyix:{
                audio:"songci",
                frequent:true,
                trigger:{
                    player:"damageEnd",
                },
				content:function(){
					 'step 0'			    		
        event.skills=[]; 
		event.list=[];		
　　　　　　　　　　'step 1'
        for(var i in lib.characterPack['mode_guozhan']){
        for(var j=0;j<lib.character[i][3].length;j++){
           var info=lib.skill[lib.character[i][3][j]];
if(info&&!info.juexingji&&!info.hiddenSkill&&!info.unique&&!info.mainSkill&&!info.viceSkill&&!info.charlotte&&!info.limited){                      
           event.skills.add(lib.character[i][3][j]); 
               }
           } 
        }
		event.list.remove(player.getSkills());
        var list=event.skills.randomGets(3);		
		if(event.isMine()){
		var dialog=ui.create.dialog('forcebutton');
			dialog.add('选择获得一项技能');						
			for(i=0;i<list.length;i++){
				if(lib.translate[list[i]+'_info']){
				var translation=get.translation(list[i]);
				if(translation[0]=='新'&&translation.length==3){
			    	translation=translation.slice(1,3);
				}
				else{
					translation=translation.slice(0,2);
				}
				var item=dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+translation+'】</div><div>'+lib.translate[list[i]+'_info']+'</div></div>');								
					item.firstChild.link=list[i];
				}
			}						
		}						
		player.chooseControl(list).set('prompt','请选择一个你的要获得的技能').set('ai',function(){
            return list.randomGet();
        }).dialog=dialog;
		'step 2'				
		player.popup(result.control,'thunder'); 
		player.addTempSkill(result.control,{player:'damageBegin'});		                 
		game.log(player,'获得了技能','#g【'+get.translation(result.control)+'】');                                                         
     },
			},
			gzkaikang:{	
				audio:'kaikang',
				trigger:{global:'useCardToTargeted'},
				filter:function(event,player){
					return event.card.name=='sha'&&get.distance(player,event.target)<=1&&event.player!=player&&event.target!=player;
				},
				logTarget:'player',
				check:function(event,player){
					return get.attitude(player,event.target)>0;
				},
				content:function(){
					'step 0'
					player.draw();
					trigger.targets.length=0;
					trigger.targets.push(player);
					var next=game.createEvent('gzkaikang_discard',null,trigger.getParent(2));
					next.player=player;
					next.target=trigger.player;
					next.setContent(function(){
						player.line(target,'green');
						player.discardPlayerCard(target,true,'he','visible');
					});
				},
          ai:{
            order:7,
            result:{
               player:function(player,target){
		if(target.hp==1&&player.hp>=2&&get.attitude(player,target)>0) return 7;
		if(target.hp==2&&player.hp>=3&&get.attitude(player,target)>0) return 3;
					return 0;
                  },
　             },
           }, 
	   },
			gzmingzhe:{
				audio:'mingzhe',
				trigger:{player:['useCardAfter','respondAfter','discardAfter']},
				frequent:true,
				filter:function(event,player){
					if(player==_status.currentPhase) return false;
					if(event.cards){
						for(var i=0;i<event.cards.length;i++){
							if(get.type(event.cards[i])=='trick'&&
							event.cards[i].original!='j') return true;
						}
					}
					return false;
				},
				content:function(){
					"step 0"
					event.count=1;
					if(trigger.name=='discard'){
						event.count=0;
						for(var i=0;i<trigger.cards.length;i++){
							if(get.type(trigger.cards[i])=='trick'&&trigger.cards[i].original!='j') event.count++;
						}
					}
					"step 1"
					player.draw();
					event.count--;
					"step 2"
					if(event.count){
						if(lib.config.autoskilllist.contains('gzmingzhe')) player.chooseBool(get.prompt2('gzmingzhe'));
						else event._result={bool:true};
					}
					else event.finish();
					"step 3"
					if(result.bool){
						player.logSkill('gzmingzhe');
						event.goto(1);
					}
				},
				ai:{
					threaten:0.7
				}
			},
			gzfencheng:{
				skillAnimation:'epic',
				animationColor:'gray',
				audio:'fencheng',
				enable:'phaseUse',
				filter:function(event,player){
					return !player.storage.gzfencheng;
				},
				filterTarget:function(card,player,target){
					return player!=target;
				},
				unique:true,
				limited:true,
				selectTarget:-1,
				mark:true,
				line:'fire',
				content:function(){
					"step 0"
					player.storage.gzfencheng=true;
					player.awakenSkill('gzfencheng');
					var res=get.damageEffect(target,player,target,'fire');
					var num=Math.max(1,target.countCards('e'));
					target.chooseToDiscard(num,'h','弃置'+get.cnNumber(num)+'张手牌或受到1点火焰伤害').set('ai',function(card){
						var res=_status.event.res;
						var num=_status.event.num;
						var player=_status.event.player;
						if(res>=0) return -1;
						if(num>2&&player.hp>1) return -1;
						if(num>1&&player.hp>2) return -1;
						return 6-get.value(card);
					}).set('res',res).set('num',num);
					"step 1"
					if(!result.bool){
						target.damage('fire');
					}
				},
				ai:{
					order:1,
					result:{
						player:function(player){
							var num=0,players=game.filterPlayer();
							for(var i=0;i<players.length;i++){
								if(player!=players[i]&&get.damageEffect(players[i],player,players[i],'fire')<0){
									var att=get.attitude(player,players[i]);
									if(att>0){
										num-=Math.max(1,players[i].countCards('e'));
									}
									else if(att<0){
										num+=Math.max(1,players[i].countCards('e'));
									}
								}
							}
							if(players.length<5){
								return num-1;
							}
							else{
								return num-2;
							}
						}
					}
				},
				init:function(player){
					player.storage.gzfencheng=false;
				},
				intro:{
					content:'limited'
				}
			},
					"gzshifei":{
                        audio:"shifei",
	group:["gzshifei_sha","gzshifei_shan","gzshifei_tao"],
						subSkill:{
							"sha":{
								name:'杀',
								enable:['chooseToRespond','chooseToUse'],
								position:'e',
								filterCard:true,
								viewAsFilter:function(player){
									return player.countCards('h')==0;
								},
								viewAs:{name:'sha'},
								prompt:'将一张装备区内的牌当【杀】使用或打出',
								ai:{
									skillTagFilter:function(player){
										if(!player.countCards('e')) return false;
									},
									respondSha:true,
								},
							},
							"shan":{
								name:'闪',
		enable:['chooseToUse','chooseToRespond'],
								position:'e',
								filterCard:true,
								viewAsFilter:function(player){
									return player.countCards('h')==0;
								},
								viewAs:{name:'shan'},
								prompt:'将一张装备区内的牌当【闪】使用或打出',
								ai:{
									respondShan:true,
									skillTagFilter:function(player){
										if(!player.countCards('e')) return false;
									},
									effect:{
										target:function(card,player,target,current){
											if(get.tag(card,'respondShan')&&current<0) return 0.6;
										},
									},
								},
							},
							"tao":{
								name:'桃',
								enable:['phaseUse','chooseToUse','chooseToRespond'],
								position:'e',
								filterCard:true,
								viewAsFilter:function(player){
									return player.countCards('h')==0;
								},
								viewAs:{name:'tao'},
								prompt:'将一张装备区内的牌当【桃】使用或打出',
								ai:{
									skillTagFilter:function(player){
										return player.countCards('e')>0;
									},
									save:true,
									respondTao:true,
								},
							},
							"jiu":{
					name:'酒',								 enable:['phaseUse','chooseToUse','chooseToRespond'],
								position:'e',
								filterCard:true,
								viewAsFilter:function(player){
									return player.countCards('h')==0;
								},
								viewAs:{name:'jiu'},
								prompt:'将一张装备区内的牌当【酒】使用或打出',
								ai:{
									skillTagFilter:function(player){
										return player.countCards('e')>0;
									},
									save:true,
									respondJiu:true,
								},
							},
						},
					},
　　　　　　　　
			gzanxu:{
				enable:'phaseUse',
				usable:1,
				audio:'anxu',
				filterTarget:function(card,player,target){
					return target.countCards('h')>player.countCards('h');
				},
				filter:function(event,player){
					return !player.isMaxHandcard();
				},
				content:function(){
					'step 0'
					target.chooseCard('h',true,'交给'+get.translation(player)+'一张牌');
					'step 1'
					if(result.bool){
						player.gain(result.cards,target);
						target.$giveAuto(result.cards,player);
					}
					else{
						event.finish();
					}
					'step 2'
					var nh=player.countCards('h');
					if(game.hasPlayer(function(current){
						return current.countCards('h')<nh;
					})){
						player.chooseCardTarget({
							forced:true,
							filterTarget:function(card,player,target){
								return target.countCards('h')<nh;
							},
							filterCard:true,
							ai1:function(card){
								return 9-get.value(card);
							},
							ai2:function(target){
								return get.attitude(player,target)/Math.sqrt(target.countCards('h')+1);
							},
							prompt:'交给一名手牌数少于你的角色一张牌'
						});
					}
					else{
						event.finish();
					}
					'step 3'
					if(result.bool&&result.targets&&result.targets.length){
						result.targets[0].gain(result.cards,player);
						player.$giveAuto(result.cards,result.targets[0]);
						player.line(result.targets,'green');
					}
				},
				ai:{
					order:7,
					result:{
						target:-1
					}
				}
			},
			gztuishoux:{
				audio:'zhichi',
				trigger:{player:'drawBegin'},
				frequent:true,
				priority:5,
				content:function(){
					trigger.num++;
					trigger.id=trigger.id||get.id();
					player.storage.gztuishoux2=trigger.id;
					player.addTempSkill('gztuishoux2');
				}
			},
			gztuishoux2:{
				trigger:{player:'drawEnd'},
				filter:function(event,player){
					return player.storage.gztuishoux2==event.id;
				},
				silent:true,
				onremove:true,
				content:function(){
					'step 0'
					player.removeSkill('gztuishoux2');
					if(player.countCards('h')){
						player.chooseCard('h',true,'将一张手牌置于牌堆顶').ai=function(card){
							return -get.value(card);
						};
					}
					else{
						event.finish();
					}
					'step 1'
					if(result&&result.cards){
						event.card=result.cards[0];
						player.lose(result.cards,ui.special);

						var cardx=ui.create.card();
						cardx.classList.add('infohidden');
						cardx.classList.add('infoflip');
						player.$throw(cardx,1000,'nobroadcast');
					}
					'step 2'
					if(event.player==game.me) game.delay(0.5);
					'step 3'
					if(event.card){
						event.card.fix();
						ui.cardPile.insertBefore(event.card,ui.cardPile.firstChild);
					}
				}
			},
			gzporuix:{
                audio:"ext:国战补充:1",
				trigger:{target:'useCardToBefore'},
				popup:false,
				direct:true,
				filter:function(event,player){
					if(event.addedTargets) return false;
					// return event.card&&get.color(event.card)=='red'&&event.player!=player;
					return event.targets.length==1&&event.player!=player&&player.countCards('h')>=2;
				},
				content:function(){
					"step 0"
					var next=player.chooseToDiscard(get.prompt('gzporuix',trigger.player),2);
					next.ai=function(card){
						if(get.effect(player,trigger.card)<0){
							if(card.name=='liuxinghuoyu') return 7-get.value(card);
							return 5-get.value(card);
						}
						return 0;
					};
					next.prompt2='反弹'+get.translation(trigger.player)+'的'+get.translation(trigger.card);
					next.logSkill=['gzporuix',trigger.player];
					"step 1"
					if(result.bool){
						// player.discard(result.cards);
						trigger.target=trigger.player;
						trigger.player=player;
						trigger.untrigger();
						trigger.trigger('useCardToBefore');
					}
					// "step 2"
					// if(result.bool){
					// 	trigger.target=result.targets[0];
					// 	trigger.untrigger;
					// 	trigger.trigger('shaBefore');
					// 	game.delay();
					// }
				},
				ai:{
					threaten:function(player,target){
						if(target.countCards('h')<=2){
							return 2;
						}
						return 2/(target.countCards('h')-1);
					}
				}
			},
					 gzjiejix:{
                        audio:"ext:国战补充:1",
                        viceSkill:true,
				        init:function(player){
					       if(player.checkViceSkill('gzjiejix')){
					          player.removeMaxHp();
					       }
				        },
                       unique:true,
                       gainable:true,
                       priority:10,
                       trigger:{
                          global:"discardAfter",
                       },
                       filter:function (event,player){
                          if(get.distance(player,event.player)>1) return false;
                          if(event.player==player) return false;
                          for(var i=0;i<event.cards.length;i++){
      if(get.subtype(event.cards[i])=='equip1'&&get.position(event.cards[i])=='d'){
                            return true;
                            }
                          }
                          return false;
                       },
                       content:function (){
                          "step 0"
                          if(trigger.delay==false) game.delay();
                          "step 1"
                          var cards=[];
                          for(var i=0;i<trigger.cards.length;i++){
if(get.subtype(trigger.cards[i])=='equip1'&&get.position(trigger.cards[i])=='d'){
                              cards.push(trigger.cards[i]);
                              }
                          }
                         if(cards.length){
                            player.gain(cards);
                            player.$gain2(cards);
                            game.log(player,'发动截击，获得了',cards);
                         }
                  },
            },
			gzaocai:{
				audio:'aocai',
				trigger:{player:'chooseToRespondBegin'},
				frequent:true,
				filter:function(event,player){
					if(event.responded) return false;
					return _status.currentPhase!==player;
				},
				content:function(){
					"step 0"
					var cards=[];
					if(ui.cardPile.childNodes.length<2){
						var discardcards=get.cards(2);
						game.cardsDiscard(discardcards);
					}
					for(var i=0;i<2;i++){
						if(ui.cardPile.childNodes.length>i) cards.push(ui.cardPile.childNodes[i]);
					}
					player.chooseCardButton('傲才：选择一张卡牌打出',cards).set('filterButton',function(button){
						return get.type(button.link)=='basic'&&_status.event.getTrigger().filterCard(button.link);
					});
					"step 1"
					if(result.bool){
						game.log(player,'傲才发动成功');
						trigger.untrigger();
						trigger.responded=true;
						result.links[0].remove();
						trigger.result={bool:true,card:result.links[0]}
					}
				},
				ai:{
					effect:{
						target:function(card,player,target,effect){
							if(get.tag(card,'respondShan')) return 0.7;
							if(get.tag(card,'respondSha')) return 0.7;
						}
					}
				},
				group:'gzaocai2',
			},
			gzaocai2:{
				enable:'chooseToUse',
				filter:function(event,player){
					return _status.currentPhase!==player&&event.type!='wuxie'&&event.type!='trickuse';
				},
				onChooseToUse:function(event){
					if(!game.online){
						var cards=[];
						if(ui.cardPile.childNodes.length<2){
							var discardcards=get.cards(2);
							game.cardsDiscard(discardcards);
						}
						for(var i=0;i<2;i++){
							if(ui.cardPile.childNodes.length>i) cards.push(ui.cardPile.childNodes[i]);
						}
						event.set('gzaocaicards',cards);
					}
				},
				chooseButton:{
					dialog:function(event,player){
						return ui.create.dialog('傲才：选择一张卡牌使用',event.gzaocaicards);
					},
					filter:function(button,player){
						var evt=_status.event.getParent();
						if(evt&&evt.filterCard){
							return get.type(button.link)=='basic'&&evt.filterCard(button.link,player,evt);
						}
						return false;
					},
					check:function(button){
						return 1;
					},
					backup:function(links,player){
						return {
							audio:'gzaocai',
							filterCard:function(){return false},
							selectCard:-1,
							viewAs:links[0],
						}
					},
					prompt:function(links,player){
						return '选择'+get.translation(links)+'的目标';
					}
				},
				ai:{
					order:11,
					respondShan:true,
					respondSha:true,
					save:true,
					result:{
						player:function(player){
							if(_status.event.dying) return get.attitude(player,_status.event.dying);
							return 1;
						}
					}
				}
			},
					 gzkuiyingx:{
				        audio:'xianzhen',
						enable:'phaseUse',
						usable:1,
						filterCard:true,
						selectCard:-1,
						viewAs:{name:'sha',isCard:true},
						viewAsFilter:function(player){
							return player.countCards('h')>0;
						},
                        ai:{
                            damage:true,
                            order:function(){
                                return get.order({name:'sha'})+0.01;
                            },
                            effect:{
                                player:function(card,player,target){
                                    if(_status.event.skill=='gzkuiyingx'){
                                        if(player.countCards('h',{name:'sha'})){
                                            if(player.countCards('h','tao') && game.hasPlayer(function(current){
                                                return current.hp <= 2 && get.attitude(player,current) > 0;
                                            })) return 'zeroplayertarget';
                                            if(player.countCards('h') > 3){
                                                return 'zeroplayertarget';
                                            }
                                            if(player.hasSkillTag('directHit_ai',true,{
                                                target:target,
                                                card:card,
                                            },true)) return;
                                            if(target.countCards('h','shan')==0){
                                                return;
                                            }
                                            return [1,0,1,-0.5];
                                        }
                                        if(player.countCards('h','tao')>=1 && game.hasPlayer(function(current){
                                            return current.hp <= 2 && get.attitude(player,current) > 0;
                                        })) return 'zeroplayertarget';
                                    }
                                }
                            }
                        },
						onuse:function(result,player){
							player.addTempSkill('gzkuiyingx1',{player:'useCardAfter'});
						},
					},
					gzkuiyingx1:{
						trigger:{
							source:'damageEnd'
						},
						forced:true,
						popup:false,
						filter:function(event,player){
							return player.maxHp>0;
						},
						content:function(){
				            player.draw(player.maxHp-player.countCards('h'));
						},
					},
            "gzqirang":{
                trigger:{
                    player:"useCardEnd",
                },
　　　　　　　　audio:"qirang",	
                forced:true,
                filter:function (event,player){
                return _status.currentPhase==player&&get.type(event.card,'equip')=='equip';
    },
                content:function (){
							'step 0'
							event.cards=get.cards(4);
							player.showCards(event.cards);
							'step 1'
							var cards=[];
							for(var i=0;i<event.cards.length;i++){
								if(get.type(event.cards[i])=='trick'||get.type(event.cards[i])=='delay') cards.add(event.cards[i]);
							};
							if(cards.length>0) player.gain(cards,'gain2');
							if(cards.length<3){
								for(var i=0;i<cards.length;i++){
									event.cards.remove(cards[i]);
								};
								for(var i=0;i<event.cards.length;i++){
									ui.cardPile.appendChild(event.cards[i]);
								};
							};        
　　　　　　　　　　　},
				ai:{
					noe:true,
					reverseEquip:true,
					effect:{
						target:function(card,player,target,current){
							if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
						}
					}
				}
            },
					gzhuanshi:{
                        audio:"huanshi",						 trigger:{global:'phaseDiscardEnd'},
						filter:function(event,player){
							return event.player!=player&&player.num('h')>0;
						},
						direct:true,
						content:function(){
							'step 0'
							player.chooseToDiscard('是否发动对'+get.translation(trigger.player)+'【缓释】？').ai=function(card){
								if(ai.get.attitude(player,trigger.player)<0&&trigger.player.num('he')) return 5-ai.get.value(card);
								return 0;
							}
							'step 1'
							if(result.bool&&trigger.player.num('he')){
								player.logSkill('gzhuanshi',trigger.player);
								trigger.player.chooseToDiscard('he',true)._triggered=null;;
							}else{
								event.finish();
							}
							'step 2'
							if(get.type(result.cards[0])=='equip'){
								event.card=result.cards[0];
								player.chooseTarget('选择一名目标获得'+get.translation(event.card),function(card,player,target){
									return trigger.player!=target;
								}).ai=function(target){
									return ai.get.attitude(player,target)>0;
								}
							}
							else{
								event.finish();
							}
							'step 3'
							if(result.bool){
								result.targets[0].gain(event.card);
								result.targets[0].$gain(event.card);
							}
						}
					},
			gzcangshux:{
				derivation:'gzhuijix',
				enable:'phaseUse',
				audio:"ext:国战补充:1",
				filter:function(event,player){
					return player.checkMainSkill('gzcangshux',false)||player.checkViceSkill('gzcangshux',false);
				},
				unique:true,
				forceunique:true,
				filterTarget:true,
				skillAnimation:true,
				animationColor:'orange',
				content:function(){
					'step 0'
					if(player.checkMainSkill('gzcangshux')){
						player.removeCharacter(0);
					}
					else{
						player.removeCharacter(1);
					}
					'step 1'
					target.addSkill('gzhuijix');
					if(target!=player){
						player.draw();
						player.recover();
					}
				},
				ai:{
					order:9,
					result:{
						player:function(player,target){
							var num=0;
							if(player.isDamaged()&&target.isFriendOf(player)){
								num++;
								if(target.hasSkill('rekanpo')) num+=0.5;
								if(target.hasSkill('gzliegongx')) num+=0.5;
								if(target.hasSkill('new_tieji')) num+=0.5;
								if(target.hasSkill('gzrende')) num+=1.2;
								if(target.hasSkill('new_longdan')) num+=1.2;
								if(target.hasSkill('new_paoxiao')) num+=1.2;
								if(target.hasSkill('zhangwu')) num+=1.5;
								if(target!=player) num+=0.5;
							}
							return num;
						}
					}
				}
			},
			gzhuijix:{
				audio:"ext:国战补充:1",
				enable:'phaseUse',
				usable:1,
				delay:0,
				filter:function(event,player){
					return game.hasPlayer(function(current){
						return current.sex=='male';
					});
				},
				mark:true,
				intro:{
					content:'出牌阶段限一次，你可以声明一种牌的类别，并亮出牌库中第一张符合你声明的牌，然后你令一名男性角色获得此牌'
				},
				content:function(){
					"step 0"
					player.chooseControl(['basic','trick','equip','zhenfa']).set('ai',function(){
						var player=_status.event.player;
						if(!player.hasShan()) return 'basic';
						if(player.countCards('e')<=1) return 'equip';
						if(player.countCards('h')>2) return 'trick';
						return 'zhenfa';
					});
					"step 1"
					event.card=get.cardPile(function(card){
						if(get.type(card,'trick')==result.control) return true;
						return false;
					},'cardPile');
					if(!event.card){
						event.finish();
						return;
					}
					player.showCards([event.card]);
					"step 2"
					player.chooseTarget(true,'选择一名男性角色送出'+get.translation(event.card),function(card,player,target){
						return target.sex=='male';
				         }).set('ai',function(target){
						var att=get.attitude(_status.event.player,target);
						if(_status.event.neg) return -att;
						return att;
					}).set('neg',get.value(event.card,player,'raw')<0);
					"step 3"
					player.line(result.targets,'green');
					result.targets[0].gain(event.card,'gain2');
				},
				ai:{
					order:9,
					result:{
						player:function(player){
							if(game.hasPlayer(function(current){
								return current.sex=='male'&&get.attitude(player,current)>0;
							})) return 2;
							return 0;
						},
					},
					threaten:0.7
				  }
		        },
　　　　　　 gzkanwux:{
				audio:"ext:国战补充:1",
			    trigger:{player:'phaseEnd'},
				direct:true,
				filter:function(event,player){
					return player.countCards('h')>0&&!player.hasSkill('huangshu2');
				},
				content:function(){
					"step 0"
					player.chooseCard(get.prompt2('gzkanwux')).ai=function(card){
						return 5-get.value(card);
					};
					"step 1"
					if(result.bool){
						player.$give(result.cards,player);
						player.logSkill('gzkanwux');
						player.storage.gzkanwux2=result.cards[0];
						player.lose(result.cards,ui.special);
						player.addSkill('gzkanwux2');
					}
				},
				ai:{
					threaten:1.4
				},
					},
			gzkanwux2:{
				intro:{
					content:function(storage,player){
						if(player.isUnderControl(true)){
							return '当一名敌方角色使用'+get.translation(get.color(storage))+'锦囊牌时，移去'+get.translation(storage)+'，取消锦囊的效果，并摸一张牌';
						}
						else{
							return '当一名敌方角色使用与“缄默”牌颜色相同的锦囊牌时，移去“缄默”牌，取消锦囊的效果，并摸两张牌';
						}
					},
					onunmark:function(storage,player){
						if(storage){
							storage.discard();
							delete player.storage.gzkanwux2;
						}
					}
				},
				trigger:{global:'useCard'},
				forced:true,
				filter:function(event,player){
					return player.getEnemies().contains(event.player)&&
						get.type(event.card,'trick')=='trick'&&get.color(event.card)==get.color(player.storage.gzkanwux2);
				},
				mark:true,
				content:function(){
					'step 0'
					game.delayx();
					player.addExpose(0.1);
					trigger.player.addExpose(0.1);
					'step 1'
					player.showCards(player.storage.gzkanwux2,get.translation(player)+'发动了【无言】');
					'step 2'
					player.removeSkill('gzkanwux2');
					trigger.cancel();
					player.draw();
				},
				group:'gzkanwux3'
			},
			gzkanwux3:{
				trigger:{player:'phaseBegin'},
				forced:true,
				content:function(){
					player.$throw(player.storage.gzkanwux2);
					game.log(player,'弃置了',player.storage.gzkanwux2);
					player.removeSkill('gzkanwux2');
				}
			},
				   gzliangzhu:{
                     audio:"liangzhu",
				     mainSkill:true,
				 init:function(player){player.checkMainSkill('gzliangzhu')},                     
                     usable:1,
				     trigger:{global:'recoverAfter'},
				     direct:true,
				     filter:function(event,player){
					   return _status.currentPhase==event.player;
				     },
				     content:function(){
					   'step 0'
					   if(player==trigger.player){
						 player.chooseControl('摸一张','摸两张','cancel2',function(){
							return '摸两张';
						}).set('prompt',get.prompt('gzliangzhu'));
						event.single=true;
					}
					else{
						player.chooseTarget(get.prompt('gzliangzhu'),function(card,player,target){
							return target==_status.event.player||target==_status.event.target;
						}).set('target',trigger.player).set('ai',function(target){
							var player=_status.event.player;
							if(player==target) return 1;
							return get.attitude(player,target)-1.5;
						});
					}
					'step 1'
					if(event.single){
						if(result.control!='cancel2'){
							player.logSkill('gzliangzhu',player);
							if(result.control=='摸一张'){
								player.draw();
							}
							else{
								player.draw(2);
								player.storage.gzliangzhu=player;
							}
						}
					}
					else if(result.bool){
						var target=result.targets[0];
						player.logSkill('gzliangzhu',target);
						if(target==player){
							target.draw();
						}
						else{
							target.draw(2);
							if(target.storage.gzliangzhu){
								target.storage.gzliangzhu.add(player);
							}
							else{
								target.storage.gzliangzhu=[player];
							}
						}
					}
				},
				ai:{
					expose:0.1
				}
			},
			gzjuenianx:{
                audio:"fanxiang",
				enable:"phaseUse",
				limited:true,
				notarget:true,
                audio:"ext:国战补充:1",
				init:function(player,skill){player.storage[skill]=false},
				filter:function(event,player){
					return !player.storage.gzjuenianx&&game.players.length<=5;
				},
				content:function (){
					'step 0'
					event.num1=0;
					event.num2=0;
					event.targets=game.filterPlayer().sortBySeat();
					'step 1'
					if(event.num1<targets.length){
						var target=targets[event.num1];
						var cards=target.getCards('hej');
						target.lose(cards)._triggered=null;
						target.$throw(cards);
						event.num1++;
						event.redo();
						game.delay(1.2);
					}
					'step 2'
					if(event.num2<targets.length){
						var target=targets[event.num2];
					    target.mayChangeVice(true);
						event.num2++;
						event.redo();
						game.delay(0.3);
					}
					'step 3'
					player.gainMaxHp(true);
					player.recover();
					player.awakenSkill('gzjuenianx');
                    player.storage.gzjuenianx=true;
				},
				ai:{
					order:0.5,
					result:{
						player:function(player,target){
							if(player.hasUnknown()) return 0;
							if(player.hp==1) return 7;
							return -game.countPlayer(function(current){
								return current.countCards('he')*get.sgn(get.attitude(player,current));
							});
						}
					},
				},
				mark:true,
				intro:{
					content:"limited",
				},
				skillAnimation:true,
			},
				gzliangyuan:{
                    audio:"fanxiang",
					trigger:{
                      target:"useCardToBefore",
					},
					forced:true,
					filter:function(event,player){
						return get.type(event.card)=='trick'&&player.countCards('e')<event.player.countCards('e');
					},
					content:function(){
						trigger.cancel();
					},
					ai:{
						effect:{
							target:function(card,player){
								if(get.type(event.card)=='trick') return 'zerotarget';
							},
						},
					},
				},
					gzgongji:{
                        audio:"xiaoji",
						viceSkill:true,
						init:function(player){player.checkViceSkill('gzgongji')},
				trigger:{player:'loseAfter'},
				frequent:true,
				filter:function(event,player){
					return event.es&&event.es.length>0;
				},
				content:function(){
					player.draw(2);
				},
				ai:{
					noe:true,
					reverseEquip:true,
					effect:{
						target:function(card,player,target,current){
							if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
						}
					}
				}
			},
            gzzhixix:{
                audio:"shouxi",
                trigger:{
                    player:"loseAfter",
                },
				frequent:true,
                filter:function (event,player){
        return (event.hs&&event.hs.length>0)||(event.es&&event.es.length>0);
    },
                content:function (){
        "step 0"
        var cs=trigger.cards.slice(0);
        player.showCards(cs,"掷玺");
        if(player.hasSkill("gzzhixix_a"))player.storage.gzzhixix_a.addArray(trigger.cards);
        else{
            player.storage.gzzhixix_a=[];
            player.storage.gzzhixix_a.addArray(trigger.cards);
            player.addTempSkill("gzzhixix_a");
            player.markSkill("gzzhixix_a");
        }
        player.syncStorage("gzzhixix_a");
    },
                global:"gzzhixix_b",
                subSkill:{
                    a:{
                        marktext:"玺",
                        intro:{
                            content:"cards",
                        },
                        sub:true,
                    },
                    b:{
                        mod:{
                            cardEnabled:function (card,player){
                    if(player.hasSkill('gzzhixix_a'))return;
                    var n=[],players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        if(players[i].hasSkill('gzzhixix_a')){
                            for(var j=0;j<players[i].storage.gzzhixix_a.length;j++){
                                n.add(players[i].storage.gzzhixix_a[j].name);
                            }
                        }
                    }
                    if(n.contains(card.name)) return false;
                },
                            cardUsable:function (card,player){
                    if(player.hasSkill('gzzhixix_a'))return;
                    var n=[],players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        if(players[i].hasSkill('gzzhixix_a')){
                            for(var j=0;j<players[i].storage.gzzhixix_a.length;j++){
                                n.add(players[i].storage.gzzhixix_a[j].name);
                            }
                        }
                    }
                    if(n.contains(card.name)) return false;
                },
                            cardSavable:function (card,player){
                    if(player.hasSkill('gzzhixix_a'))return;
                    var n=[],players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        if(players[i].hasSkill('gzzhixix_a')){
                            for(var j=0;j<players[i].storage.gzzhixix_a.length;j++){
                                n.add(players[i].storage.gzzhixix_a[j].name);
                            }
                        }
                    }
                    if(n.contains(card.name)) return false;
                },
                        },
                        sub:true,
                    },
                },
            },
            gzmozuo:{
                audio:"huimin",
                unique:true,
                forceunique:true,
                enable:"phaseUse",
                filterCard:{
                    type:"equip",
                    color:"black",
                },
                position:"he",
                check:function(card){
                   return 6-get.value(card);
                },
                filter:function(event,player){
                   for(var i=0;i<ui.discardPile.childElementCount;i++){
                   if(ui.discardPile.childNodes[i].name=='yuxi') return true;
                   }
                   return game.hasPlayer(function(current){
                     return current!=player&&current.countCards('ej','yuxi');
                   });
                },
                content:function(){
                  var list=[];
                  for(var i=0;i<ui.discardPile.childElementCount;i++){
                    if(ui.discardPile.childNodes[i].name=='yuxi'){
                       list.add(ui.discardPile.childNodes[i]);
                    }
                  }
                  game.countPlayer(function(current){
                     if(current!=player){
                        var ej=current.getCards('ej','yuxi');
                        if(ej.length){
                          list.addArray(ej);
                        }
                     }
                  });
                  if(list.length){
                     var card=list.randomGet();
                     var owner=get.owner(card);
                     if(owner){
                        player.gain(card,owner);
                        owner.$give(card,player);
                        player.line(owner,'green');
                     }
                     else{
                       player.gain(card,'log');
                       player.$draw(card);
                       }
                   }
                },
                ai:{
                    order:8.5,
                },
				group:'gzmozuo_cancel',
				subSkill:{
					cancel:{
                       trigger:{
                          target:"useCardToBefore",
                       },
                       forced:true,
                       priority:15,
                       check:function(event,player){
                         return get.effect(event.target,event.card,event.player,player)<0;
                       },
                      filter:function(event,player){
                         return player.countCards('e',function(card){
                            return card.name=='yuxi';
               })&&(event.card.name=='shunshou'||event.card.name=='guohe');
　　　　　　　　　    },
                      content:function(){
                        trigger.cancel();
                      },
					}
				},
            },
        },
        translate:{
			gzyinghuny:'英魂',
			gzyinghuny_info:'准备阶段开始时，若你已受伤或装备数为全场最少，你可令一名其他角色执行一项：摸X张牌，然后弃置一张牌；或摸一张牌，然后弃置X张牌（X为你已损失的体力值且至少为1）。',
			gzwushengy:'武圣',
			gzwushengy_info:'你可以将一张红色牌当做【杀】使用或打出；出牌阶段，你可以将你的任意一张♠手牌当作【水淹七军】使用。',
            gzbaiyoux:"败诱",
            gzbaiyoux2:"败诱",
            gzbaiyoux3:"败诱",
            gzbaiyoux_info:"结束阶段，你可以展示所有手牌，若其中没有【杀】，你摸两张牌或回复一点体力，直到你下回合开始，你在所有角色攻击范围内。",
            gzfandix:"反镝",
            gzfandix_info:"限定技，出牌阶段，你可以令所有有手牌的其他角色展示一张手牌，然后你可以指定一种颜色，令展示牌为此颜色的角色摸两张牌，为另一种颜色的角色弃置两张牌。",
			gzhaowux:'豪骛',
			gzhaowux2:'豪骛',
			gzhaowux3:'豪骛',
			gzhaowux_info:'出牌阶段开始时，你可以摸三张牌。若如此做，①此阶段结束时你失去X点体力（X为你获得的牌中仍在手牌区的牌的数量）；②若你本回合未弃置过牌，你可以令一名与你势力相同的角色变更副将。',
            gznijianx:"逆间",
			gznijianx_info:'当你成为其他角色使用【杀】或普通锦囊牌的目标后，你可以令此牌对你无效，然后与该角色各随机废除一项装备栏。',
            gzluanjianx:"乱箭",
            gzluanjianx_buff:"乱箭",
            gzluanjianx_info:"锁定技，每回合限一次，当你手牌数不因摸牌阶段从不大于体力值变成大于体力值时，你选择一项：1.将手牌数调整至与体力值相同，然后视为你使用了一张【万箭齐发】；2.失去1点体力，然后本回合你使用牌无次数限制。",
            gzluanjianx_buff_info:"本回合你使用牌无次数限制。",
			gzshouyex:'守邺',
			gzshouyex_info:'准备阶段/结束阶段/受到伤害后，若你装备区内没有牌，你可以观看牌堆顶的3张牌，并将这些牌以任意顺序置于牌堆顶，然后摸一张牌。',
			gzshishix:'恃势',
			gzshishix_info:'锁定技，摸牌阶段，你改为摸X+1张牌（X为与你势力相同的角色数）。若你以此法仅摸了两张牌，你失去1点体力并摸三张牌，然后本回合你可以多使用一张【杀】。',
			gzzhengrongx:'征荣',
			gzzhengrongx_info:'当你对其他角色造成伤害后，若该角色的手牌多于你，则你可弃置其一张牌，否则你摸一张牌。',
			gzqingcex:'清侧',
			gzqingcex_info:'副将技，你计算体力上限时减少1个单独的阴阳鱼。当其他角色于你出牌阶段内首次弃置牌后，你可以令该角色选择废除一个装备栏。',
			gzxiansix:'先死',
			gzxiansix_info:'当一名其他角色进入濒死状态时，你可以令该角色回复至与你相等。若如此做，你流失体力直至进入濒死状态。',
			gzyitongx:'义同',
			gzyitongx2:'义同',
			gzyitongx2_info:'锁定技，你造成和受到的伤害始终+1。',
			gzyitongx_dying:'义同',
			gzyitongx_info:'锁定技，你死亡时，你可以将所有手牌交给一名其他角色。若如此做，直到游戏结束，该角色造成/受到伤害时，伤害+1；当你进入濒死阶段时，你可以将手牌摸至体力上限。',
			gzchongaix:'宠爱',
			gzchongaix_info:'锁定技，你的手牌上限+2。出牌阶段限一次，你可以将一张手牌背面朝下放置，并展示一名其他角色的一张手牌。若这两张牌：颜色相同，你对其造成1点伤害并弃置其展示的牌；颜色不同，你获得该角色区域内一张牌。',
			gzchuilianx:'垂怜',
			gzchuilianx_info:'阵法技，结束阶段，若你处在队列状态或围攻关系中，你可以与一名相邻角色交换位置。',
            gzlingyinx:"灵音",
            gzlingyinx2:"灵音",
            gzlingyinx_info:"出牌阶段限一次，你可以展示其他角色的一张手牌，若如此做，直到回合结束，你可以将一张牌当作其展示的牌使用。",
			gzyixiaox:'依晓',
			gzyixiaox_info:'阵法技，出牌阶段限一次，你可以弃置一张非基本牌，若你处于队列中，与你同一队列的所有角色摸一张牌，否则将与你逆时针距离最近的同势力角色移至你下家。',
			gzchongxix:'冲袭',
			gzchongxix_info:'你可以将一张♣牌当做【过河拆桥】使用。你使用的【过河拆桥】可以多指定一个目标。',
			gzxuanliex:'烜烈',
			gzxuanliex_info:'摸牌阶段结束时，你可以展示你于此阶段内因摸牌而获得的牌。若这些牌的花色均不同，则你摸一张牌。',
			gztucunx:'图存',
			gztucunx_info:'出牌阶段开始时，你可以选择一项：选择一名未确定势力的角色，获得其一张牌；或选择一名已确定势力的角色，与其交换两张牌。',
            gzcunxux:"存恤",
            gzcunxux_info:"锁定技，一名角色使用【杀】时，你每满足以下一项便弃置一张牌：1.手牌为全场唯一最大；2.体力值为全场唯一最大；3.唯一的大势力角色。若你以此法弃置了至少两张牌，你可以选择一名角色，令其摸三张牌。",
			gzjinxiux:'锦绣',
			gzjinxiux_info:'回合结束时，若你的手牌数不等于你的体力值，则你摸一张牌。',
			gzmanxianx:'幔纤',
			gzmanxianx_info:'出牌阶段限一次，你可以展示一张手牌并将之置于牌堆顶，然后令有牌的一名其他角色选择一项：对你指定的另一名角色使用一张【杀】，然后摸一张牌；或者由你获得其一张牌。',
			gzfengtangx:'凤棠',
			gzfengtangx_info:'当你受到伤害时，你可以将其他角色装备区内的一张牌移动到一个合理的位置，并执行如下效果：武器牌，你对距离1以内的一名角色造成1点火焰伤害；防具牌，你回复一点体力；坐骑牌，你摸两张牌；宝物牌，你可以变更副将。',
			gzmutux:'牧途',
			gzmutux_info:'阵法技，出牌阶段限一次，你可以弃置一张装备牌，令我方所有角色进入队列状态。',
			gzsijiy:"伺机",
			gzsijiy_info:"弃牌阶段结束时，若你于此阶段弃置的所有牌花色均不相同且至少有一张【杀】，则你可以摸两张牌。",
			gzciqiux:'刺酋',
			gzciqiux2:'刺酋',
			gzciqiux3:'刺酋',
			gzciqiux_info:'锁定技，每当你使用【杀】对目标角色造成伤害时，若该角色未受伤，你令此伤害+1；若其因此进入濒死状态，你令其执行一项军令。',
			gzweinanx:"卫南",
			gzweinanx_info:"主将技，你计算体力上限时减少1个单独的阴阳鱼。限定技，回合开始阶段，你可以将牌堆中【寒冰剑】和【赤兔】置于你的装备区内，并变更副将。",
			gzfumanx:'抚蛮',
			gzfumanx_info:'与你势力相同的其他角色的出牌阶段限一次，其可以交给你两张牌并视为使用【杀】。（有距离限制且计入出牌阶段次数）。',
			gzkangruix:'亢锐',
			gzkangruix_info:'一名角色使用或打出的【闪】结算后，你可令其将手牌数调整至与你相同（若为摸牌则至多摸至5）。然后若其以此法摸/弃置的牌不小于两张，其须弃置一张牌/回复1点体力。',
			gzfengtianx:"丰田",
			gzfengtianx_info:"出牌阶段限一次，你可以将你的手牌数弃置至等同于你的体力值。若如此做，你令你攻击范围内X名角色各摸一张牌（X为你弃置的牌数且至多为3）",
			gzgongqinx:"躬清",
			gzgongqinx_info:"锁定技，装备区内牌数大于你的角色对你使用的黑色【杀】无效",
			gzyanghuix:'养晦',
			gzyanghuix_info:'当你受到1点伤害后，若你的体力上限小于5，你可以加1点体力上限。',
			gzzhulix:'诛戾',
			gzzhulix_info:'一名角色的回合结束后，你可以减1点体力上限，摸一张牌，获得一个额外的出牌阶段，若你以此法减少了体力，你额外摸一张牌。',
			gzzhenjuey:'阵决',
			gzzhenjuey_info:'限定技，出牌阶段，你可以选择一名其他角色：若其有未发动过的觉醒技，则你令其发动这些觉醒技时无视原有条件；否则其可以获得“珠联璧合”标记，变更副将。',
			gzshunshiy:'顺世',
			gzshunshiy_info:'当一名角色死亡时，若伤害来源与你势力相同，你选择一个已发动的限定技，此回合结束后视为该限定技未发动过。',
            gzzhenlvey:"缜略",
            gzzhenlvey_info:"限定技，当一名非友方角色死亡时，你可以令所有与你势力相同的角色执行一项军令。",
			gzjimouy:'极谋',
			gzjimouy_info:'限定技，出牌阶段，你可以指定一名角色，其他所有大势力角色选择一项：对你指定的角色使用一张【杀】；或令你获得其一张牌。',
			gzheizheny:"黑子飞镇",
			gzheizheny1:"黑子飞镇",
			gzheizheny2:"黑子飞镇",
			gzheizheny_info:"回合开始时，你指定一名其他角色，获得“黑棋”标记，若你回合结束阶段，场上“黑棋”数量大于等于X时（X为你的体力值，且至少为1），你对一名拥有“黑棋”的角色造成一点伤害，然后弃置所有“黑棋”标记。",
			gzheizheny_mark:"黑棋",
			gzheizheny_mark_info:"",
			gzbairuy_mark:"白棋",
			gzbairuy_mark_info:"",
			gzbairuy:"白子不入",
			gzbairuy1:"白子不入",
			gzbairuy2:"白子不入",
			gzbairuy3:"白子不入",
			gzbairuy3_info:"本回合，少摸一张牌，手牌上限-1。",
			gzbairuy4:"",
			gzbairuy_info:"出牌阶段限一次，你可以令一名其他角色获得“白棋”标记。拥有“白棋”的角色下个回合开始时，若其手牌数不小于你，其少摸一张牌，手牌上限-1，于其回合结束阶段弃置“白棋”标记。",
			gzshenshouy:"神之一手",
			gzshenshouy_info:"限定技，出牌阶段，若场上同时存在“白棋”和“黑棋”标记，你可以指定三名座位相邻的角色，重置所有“白棋”和“黑棋”标记，令其跳过下回合摸牌阶段且不能使用或打出【杀】直到其回合结束。",
			gzshenshouy_debuff:"封印",
			gzshenshouy_debuff_info:"你跳过你的摸牌阶段，且你不能使用或打出【杀】。",
			gzpaiyiy:'排异',
			gzpaiyiy_backup:'排异',
			gzpaiyiy_info:'出牌阶段，你可以将移去一张“权”，然后选择一名角色并令其摸X张牌（X为“权”的数量），若其手牌数不小于你，则你对其造成1点伤害且本技能于此回合内失效。',
            gzganhuaiy:"感怀",
            gzganhuaiy_info:"每回合限一次，与你势力相同的角色于出牌阶段不因此技能摸牌时，你可以与之各摸一张牌(若为自己只摸一张)。",
            gzyirany:"依染",
            gzyirany_info:"限定技，出牌阶段你可以清除该武将牌上的所有技能，增加一个完整的阴阳鱼，获得〖展骥〗。",
            gzlingquany:"灵泉",
            gzlingquany_info:"每轮限一次，当你回复体力后，你可以令至多X名角色回复1点体力（X为你的体力上限）。",
			gzxunjiy:"寻计",
			gzxunjiy_info:"锁定技，当你不因此技能效果弃置/获得牌时，你弃置/摸1张牌。",
			gzdaorany:'道法自然',
			gzdaorany_spade:'♠',
			gzdaorany_heart:'♥',
			gzdaorany_club:'♣',
			gzdaorany_diamond:'♦',
　　　　　　gzdaorany_info:'你每累计使用2张♠/♥/♣/♦牌，分别可以视为使用一张【过河拆桥】/【桃】/【铁索连环】/【火攻】。',
			gzchashiy:'察势',
　　　　　　gzchashiy_info:'转势技，锁定技，当一名角色死亡时，若场上无大势力，你将身份更改为“野心家”，并可以令一名其他角色执行一项“军令”，否则你根据场上大势力的阵营获得相应锦囊：魏—【号令天下】；蜀—【克复中原】；吴—【固国安邦】；群—【文和乱武】；晋—【火烧连营】，然后投掷一枚骰子，根据点数随机变更势力。',
			gzshuzhiy:'疏智',
　　　　　　gzshuzhiy_info:'锁定技，你的【桃】均视为【酒】；明置武将后，你拥有的技能随势力或身份的变化而变化：魏—〖放逐〗；蜀—〖集智〗；吴—〖枭姬〗；群—〖悲歌〗；晋—〖三陈〗；野—〖狼顾〗。',
			gzsancaix:'三才',
　　　　　　gzsancaix_info:'弃牌阶段，你可以改为弃置三张牌。若你弃置的牌类别均不同，你获得一个额外回合，直到下一轮开始，你视为拥有技能〖观星〗，且每使用一种类别的牌，便可以亮出牌堆的3张牌，获得与之类型相同的牌（各类型限一次）。',
			gzlunduany:'论断',
			gzlunduany_info:'锁定技，当你受到伤害时，你随机获得一个卖血技能直到下回合开始。',
			gzlunduanz:'论断',
			gzlunduanz_info:'锁定技，每回合限一次，当你进入濒死状态，你可令所有角色依次选择「得道」和「失道」。若「得道」数量不小于「失道」，你回复1点体力，否则你获得X个“阴阳鱼”标记（X为你的体力上限）。',
			gzzhenliangx:"贞良",
			gzzhenliangx1:"贞良",
			gzzhenliangx2:"贞良",
			gzzhenliangx_info:"每当你受到伤害后，若伤害来源与你势力不同，则你可以摸一张牌，然后令伤害来源弃置一张手牌。每当你造成伤害后，若目标角色与你势力相同，则你可以弃置一张牌，防止此伤害并令该角色摸一张牌。",
			gzmingrenx:"明任",
			gzmingrenx_info:"当有其他角色进入濒死状态时，你可以选择一项：①观看该角色所有暗置的武将牌并摸一张牌。②观看该角色的手牌，并获得其中一张牌。",
			gzsilix:"肆立",
			gzsilix_info:"出牌阶段限一次，你可以展示一张手牌并将之置于牌堆顶，然后令有牌的一名其他角色选择一项：对你指定的另一名角色使用一张【杀】，然后摸一张牌；或者由你获得其一张牌。",
			gzxintux:"辛土",
			gzxintux_info:"出牌阶段限一次，你可以将一张牌交给一名装备区内有牌的角色。若如此做，你可以将该角色装备区内的一张牌移动到另一名角色的装备区中。",
			gzlieshoux:'烈守',
			gzlieshoux_info:'当其他角色死亡后，你可以选择一项：摸一张牌，或失去1点体力并获得下列技能中的任意一个：〖无双〗、 〖英姿〗和〖马术〗。',
            gzchaochenx:"朝臣",
            gzchaochenx2:"朝臣",
            gzchaochenx_info:"出牌阶段限一次，你可以将至少一张手牌交给一名其他角色。若如此做，该角色的下个准备阶段开始时，若其手牌数大于其体力值，你对其造成1点伤害。",
            gzquanzhengx:"权政",
			gzquanzhengx_info:'当你成为其他角色使用的【杀】或非延时锦囊牌的目标后，若其手牌或装备区的牌数大于你对应的区域，你可以摸一张牌。',
            gzhuweiy:"虎威",
			gzhuweiy_info:'每回合限一次，当你使用的【杀】被目标角色使用的【闪】抵消时，你可以对其使用一张【杀】（无距离限制）。',
			gzliegongx:'烈弓',
			gzliegongx_info:'锁定技，攻击范围不含你的角色无法闪避你的【杀】；当你于一个回合内首次使用【杀】指定目标后，若你的攻击范围为全场唯一最大，你可以摸一张牌。',
			gzjimux:'极目',
			gzjimux_info:'限定技，若你体力值为全场最低，你可以跳过摸牌阶段，然后将三张【杀】置入手牌。若如此做，本回合你视为拥有〖咆哮〗。',
            gzzhongzhangx:"忠掌",
            gzzhongzhangx2:"忠掌",
            gzzhongzhangx3:"忠掌",
            gzzhongzhangx_info:"其他角色的出牌阶段开始时，你可以展示一张【杀】，本阶段，该角色可以将该牌如手牌打出。",
            gzlvemingx:"掠命",
            gzlvemingx2:"掠命",
            gzlvemingx_info:"当你使用的黑色牌结算后，你可以获得之。若如此做，你只能使用点数小于此牌的牌直到回合结束。",
            gzqingliux:"轻柳",
            gzqingliux_info:"摸牌阶段，你可以少摸一张牌，将场上一名其他角色的装备区的牌交给另一名角色。",
            gzanqingx:"安卿",
            gzanqingx_info:"结束阶段开始时，你可以展示一名角色一张手牌。若此牌为装备牌，你可以与该角色各摸一张牌，或令你指定的另一名角色回复1点体力。",
			gzdikaix:'敌忾',
			gzdikaix_info:'出牌阶段，你可以将至少两张手牌当【杀】使用（无距离限制），你以此法使用的【杀】被目标角色的【闪】响应时，你可以摸等量牌。',
			gzzhengsix:'争嗣',
			gzzhengsix_info:'锁定技，结束阶段开始时，若你有手牌，你须将手牌数调整至2。',
			gzxinfux:'馨馥',
			gzxinfux_info:'锁定技，【南蛮入侵】对你无效。其他角色使用的【南蛮入侵】结算后，你回复1点体力。',
			gzjianbix:'坚壁',
			gzjianbix_info:'主将技，你计算体力上限时减少1个单独的阴阳鱼。当你成为锦囊牌的目标时，若此牌的目标包括其他角色，你可以令此牌对1个目标无效',
			gzliangcex:'粮策',
　　　　　　gzliangcex_info:'与你距离为1以内的角色的回合开始时，你可以将一张“田”置入弃牌堆，然后视为该角色使用了一张【五谷丰登】。',
			gzxiangyux_viewas:'蛮嗣',
			gzxiangyux_draw:'蛮嗣',
			gzxiangyux:'蛮嗣',
			gzxiangyux_info:'每轮限一次，你可以将所有手牌（至少两张）当做【南蛮入侵】使用；当有角色受到【南蛮入侵】的伤害后，你在结束阶段摸X张牌（X为本阶段内受到【南蛮入侵】伤害的角色数，且至多不超过你的体力上限）。',
			gzxinfux:'馨馥',
			gzxinfux1:'馨馥',
			gzxinfux2:'馨馥',
			gzxinfux_info:'锁定技，【南蛮入侵】对你无效。其他角色使用的【南蛮入侵】结算后，你回复1点体力。',
			gzmashux:'马术',
			gzmashux_info:'锁定技，你计算与其他角色的距离时-X（X为你已损失的体力值且至少为1）。',
			mashu_shen:'马术',
			mashu_shen_info:'锁定技，你计算与其他角色的距离时-1。',
            gzjieyex:"诘谒",
            gzjieyex2:"诘谒",
            gzjieyex_info:"若你的武将牌上没有牌，你可以将一张牌置于你的武将牌上，视为你使用或打出了一张【闪】；若你的武将牌上有牌，你可以弃置这张牌，视为你使用了一张【杀】。",
			gzgushoux:'固守',
			gzgushoux_wuxie:'固守',
			gzgushoux_shan:'固守',
			gzgushoux_info:'你的【闪】可当作【无懈可击】使用，你的【无懈可击】可当作【闪】使用或打出。',
			gzyanfax:'严法',
			gzyanfax_info:'出牌阶段限一次，你可以弃置至少一张手牌并选择一名其他角色，该角色需弃置一张与你弃置的牌类别均不同的手牌，否则其执行一项军令。',
			gzyangjingx:"扬旌",
			gzyangjingx_draw:"扬旌",
			gzyangjingx_recover:"扬旌",
			gzyangjingx_info:"你的手牌数或体力值因增加而等于体力上限时，你可以摸一张牌或回复一点体力；若因此令另一项也等于体力上限，你可以令一名其他角色执行同样的操作。",
			gzfabianx:"伐辩",
			gzfabianx_info:"一名其他角色的结束阶段开始时，你可以与其拼点。若你赢，你与其各摸一张牌，视为其对由你指定的另一名角色使用一张【杀】。若你没赢，你弃置其一张牌，若此牌为装备牌，你获得之。",
			gzliweix:"厉威",
			gzliweix_info:"当你受到伤害时，你可以摸一张牌，然后伤害来源可以摸一张牌并令伤害-1。",
			gzyongmoux:"勇谋",
			gzyongmoux1:"勇谋",
			gzyongmoux2:"勇谋",
			gzyongmoux_info:"每回合各限一次，当你使用基本牌时，可以弃置一张与之不同类别的牌，并摸两张牌；当你使用基本或锦囊牌对其他角色造成伤害时，可以弃置一张与之相同类别的牌，并将此伤害值＋1。",
			gztushex:"图射",
			gztushex_info:"出牌阶段限一次，当你使用牌指定目标后，若你没有基本牌，你可以展示手牌并摸X张牌（X为目标数且至多为与你势力相同的角色数）。",
			gzlimux:"立牧",
			gzlimux_info:"主将技，你计算体力上限时减少1个单独的阴阳鱼。出牌阶段，你可以将一张牌当做【乐不思蜀】对与你势力相同的一名角色使用，然后其回复一点体力。若你的判定区里有牌，你对攻击范围内的角色使用牌无距离与次数限制。",
			gzzongshiy:"宗室",
			gzzongshiy_info:"副将技，锁定技，全场每有一个势力，你的手牌上限便+1。",
			gzjiezhix:'节制',
			gzjiezhix2:'节制',
			gzjiezhix_info:'一名其他角色的出牌阶段开始时，你可以交给其一张牌，若如此做，该角色此阶段内使用的牌至多为2张。',
			gzzhengjianx:'诤谏',
			gzzhengjianx_info:'一名角色的体力值变为1时，你可以令其重铸其装备区内所有牌（至少一张），然后回复一点体力。',
			gzzhaoyix:'昭义',
			gzzhaoyix_info:'出牌阶段，你可以横置一名已受伤角色的武将牌，令其回复一点体力',
			gzlianbiaox:'连表',
			gzlianbiaox_info:'结束阶段，你可令所有处于“连环”的角色选择弃置一张牌。',
			gzhuomox:'活墨',
			gzhuomox_use:'活墨',
			//gzhuomox_use_backup:'活墨',
			gzhuomox_info:'你可以与回合外将一张黑色非基本牌置于牌堆顶，视为使用一张本回合内未使用过的基本牌。',
			gzhuomox_use_info:'你可以与回合外将一张黑色非基本牌置于牌堆顶，视为使用一张本回合内未使用过的基本牌。',
			gzjiuyanx:'酒宴',
			gzjiuyanx_info:'锁定技，当你明置此武将牌时，所有角色选择一项：视为使用一张【酒】并失去1点体力；或令你增加1点体力上限。',
			gzlanxingx:'滥刑',
			gzlanxingx_info:'锁定技，每回合限一次，当你造成伤害后，须选择一项：对与受伤害角色距离为1的角色造成一点伤害并扣减1点体力上限；或令所有体力上限不小于你的角色弃一张牌。',
            gzcefengx:"策风",
            gzcefengx1:"策风",
            gzcefengx2:"策风",
            gzcefengx_info:"准备阶段，你可以展示牌堆顶的一张牌。若此牌的颜色为：红色，直到你的下个回合当你使用或成为【杀】的目标时，你摸一张牌；黑色，你可以选择X名其他角色，弃置这些角色各一张牌（X为你已损失体力值且至少为1）。",
            gzaiwux:"哀舞",
            gzaiwux_info:"其他角色受到伤害后，你可以弃置三张牌，然后你与其各回复一点体力。",
			gzjuebiex:'诀别',
			gzjuebiex_info:'当其他角色死亡后，你可以选择一项：摸三张牌，或获得其所有牌。',
            gzqingyix:"轻仪",
            gzqingyix_info:"摸牌阶段，你可以多摸两张/少摸一张牌，然后本回合你的手牌上限-1/+2。",
            gzgongbianx:"宫变",
            gzgongbianx_info:"锁定技，你防止于回合内受到的伤害；当你于回合外失去牌后，你弃置一张牌。",
            gzleilix:"雷厉",
            gzleilix_info:"出牌阶段限一次，你可以横置你与目标角色的武将牌，视为你对其使用一张【雷】杀。",
            gzfengxingx:"风行",
            gzfengxingx_info:"当你武将牌横置时，你可以移动场上一张牌；当你失去一次装备区里的牌时，你可以重置武将牌，或摸一张牌。",
            gzdujunx:"督军",
            gzdujunx_info:"锁定技，你的一个阶段开始前，若你的手牌数不大于1，你将此阶段改为摸牌阶段。",
            gzxiaojunx:"晓军",
            gzxiaojunx_info:" 每回合限一次，一名角色于回合外获得牌时，你可以令其选择摸或重铸一张牌，然后你执行另一项。",
            gzdanggux:"党锢",
            gzdanggux_info:"锁定技，当一个势力的角色受到伤害后，该势力的其他角色依次受到来源的一点伤害，然后本轮此技能无效。",
            gzyujuex:"鬻爵",
            gzyujuex2:"鬻爵",
            gzyujuex_info:"其他角色的出牌阶段，其可以将任意张点数之和为13的手牌交给你，然后亮出牌堆顶的3张牌，获得其中任意数量点数之和不大于13的牌。",
            gzpingxix:"平西",
            gzpingxix_info:"出牌阶段开始时，你可以重铸或使用一张【杀】，然后指定一名其他角色，令其执行相同的操作，否则视为你执行另一项。",
            gzwangzhix:"望志",
            gzwangzhix2:"望志",
            gzwangzhix3:"望志",
            gzwangzhix_info:"当你获得牌后，你可以将其中一张♠牌置于你的武将牌上；你可以将所有的“望志”牌当一张【杀】或【闪】使用或打出，然后你摸一张牌。",
			gzyanjunx:'掩军',
			gzyanjunx_info:'出牌阶段限一次，你可以重铸你与一名其他角色的各一张手牌：若类型不同，你视为对其使用一张【杀】或令一名其他角色回复1点体力。',
            gztunshoux:"屯守",
            gztunshoux2:"屯守",
            gztunshoux_info:"摸牌阶段开始时，你可以摸两张牌，若如此做，本回合你使用牌仅指定一个目标时，改为将其一张牌置于你的武将牌上；结束阶段，你获得武将牌上的X张牌，然后将其余的牌置于弃牌堆（X为你已损失体力值且至少为1）。",
			gzdujuanx:'妒娟',
			gzdujuanx_info:'出牌阶段，你可令你不为0的手牌上限于本回合内-1，选择一名角色将其装备区内的牌收回手牌，然后其执行一个额外的弃牌阶段。',
			gzyuanchouy:'圆愁',
			gzyuanchouy_info:'锁定技，若你的体力与手牌均不为全场最多，攻击范围内含有你的其他角色回复1点体力时，你回复1点体力。',
			gzxuyuy:"虚誉",
			gzxuyuy_info:"锁定技，当你成为【杀】的目标时，若使用者体力值小于你，取消之。",
			gzyueqiangx:"越墙",
			gzyueqiangx2:"越墙",
			gzyueqiangx3:"越墙",
			gzyueqiangx_info:"一名与你势力不同的角色回合开始时，你可以交给其一张牌，则直到回合结束，其每使用一次牌，你摸一张牌。",
		    gzanliux:"暗流",
			gzanliux_info:"结束阶段，你可与一名其他角色交换一张手牌展示之。若颜色相同：红色，你回复1点体力；黑色：其摸两张牌",
            gzdiedangx:"跌宕",
            gzdiedangx_info:"出牌阶段限一次，你可以摸三张牌，然后弃置一张牌。若如此做，你将描述中“摸”与“弃置”交换。",
			gzxiaomoux:'效谋',
			gzxiaomoux_info:'你使用牌指定唯一目标后，你可获得其区域内一张牌，然后你交给其一张手牌。',
			gzchengzhaox:'承诏',
			gzchengzhaox_info:'其他角色结束阶段，若其手牌数为零，你可以令你与其均横置，然后你可以使用一张手牌。',
			gzzongzuox:'宗祚',
			gzzongzuox_info:'锁定技，所有其他己方角色出牌阶段结束时可以摸一张牌，其手牌上限+X（X为其已损失的体力值）。',
			gztuxix:'突袭',
			gztuxix_info:'摸牌阶段摸牌时，你可以少摸任意张牌，然后选择等量的手牌数大于或等于你的其他角色，获得这些角色的各一张手牌。若如此做，你可以重铸X张手牌（X为你已损失的体力值且至少为1）。',
			gzlieyix:'烈医',
			gzlieyix_info:'出牌阶段限一次，你可以弃置一张手牌，然后令一名角色失去一点体力。',
			gzgudux:'蛊毒',
			gzgudux_info:'锁定技，杀死你的角色回复一点体力并获得技能〖忌医〗。',
			gzjiyix:'忌医',
			gzjiyix_info:'锁定技，当你即将回复体力时，若你的体力值大于0，防止之。',
            gznongweix:"弄威",
            gznongweix_info:"其他角色回合结束时，若其于本回合出牌阶段内未使用牌指定过其他角色为目标且你为大势力角色，你可以弃置一张牌获得一个额外的回合。",
            gzluanzhengx:"乱政",
            gzluanzhengx_info:"出牌阶段，若你不为大势力角色，你可以变更此武将牌，然后所有不为大势力的角色摸一张牌。",
            gzcuoruix:"挫锐",
            gzcuoruix_info:"你可以跳过判定阶段和摸牌阶段视为对一名角色使用一张【杀】，若未以此法造成伤害，你选择一项：1.重置武将牌；2.摸一张牌。",
			gzjincex:"谨策",
			gzjincex_info:"与你势力相同的角色受到伤害后，你可以令其摸一张牌，然后展示所有手牌。若颜色均相同，伤害来源须弃置一张手牌。",
			gzduanfax:"断发",
			gzduanfax_info:"出牌阶段，你可以弃置任意张非基本牌，然后摸等量的牌。（每回合内限X张，X为你的体力上限）",
			gzzhaofux:"招附",
			gzzhaofux_info:"纵横技，当你一次至少失去两张牌后，若场上没有“孙鲁班”，你可令一名其他角色选择是否用“孙鲁班”代替其武将。",
			gzzhenshanx:'振赡',
			gzzhenshanx_use:'振赡',
			gzzhenshanx_use_backup:'振赡',
			gzzhenshanx_info:'每名角色的回合限一次，每当你需要使用或打出一张基本牌时，你可以与一名手牌数少于你的角色交换手牌视为你使用或打出了此牌。若如此做，你可以变更副将。',
            gzhaoliex:"豪烈",
            gzhaoliex_info:"准备阶段，你可以选择一名其他角色，令你与其各受到1点无来源的伤害，若如此做，回合结束时，你与其各回复1点体力。",
		    gzyaowangx:"妖妄",
			gzyaowangx_info:"结束阶段，你可以将场上判定区内一张牌移至自己判定区。若如此做，你可以摸两张牌或回复一点体力。",
			gzbizhuanx:'辟撰',
			gzbizhuanx2:'辟撰',
			gzbizhuanx_info:'锁定技，明置此武将牌时，你将牌堆顶的5张牌扣置于你的武将牌上，称为「书」。一名角色的回合开始时，若你有「书」且其至你的距离不大于1，则你将牌堆顶的5张牌扣置为「书」，然后将等量的「书」置于牌堆顶。',
			gztongbox:'通博',
			gztongbox_info:'一名角色的判定牌生效前，你可打出一张「书」代替之。当你以此法移去最后一张「书」后，你获得一个完整的阴阳鱼，然后获得技能〖临墨〗。',
			gzlinmox:'临墨',
			gzlinmox_info:'当你于回合外首次失去牌时，你可以摸一张牌。',
			gzqingxianx:'清弦',
			gzqingxianx_info:'当你受到伤害或回复体力后，你可令一名其他角色回复1点体力。',
			gzhexianx:'和弦',
			gzhexianx2:'和弦',
			gzhexianx3:'和弦',
			gzhexianx_info:'其他角色的出牌阶段内可以对你使用【桃】。若如此做，其摸一张牌且本局游戏内的手牌上限+1。',
			gzgushouy:"孤守",
			gzgushouy_info:"当你使用的基本牌结算后，你可展示所有手牌，若其中没有与此牌相同名称的牌，你摸一张牌。",
			gzyidianx:'佚典',
			gzyidianx_info:'限定技，出牌阶段你可以选择一名已明置主将的其他角色，获得其一项技能，然后用一名强度高一级的随机武将牌替换其主将。',
			gzbizhengx:'弼政',
			gzbizhengx_info:'每轮限一次，当你成为其他角色使用非特殊卡牌的唯一目标时，你可以将一张同名卡牌置入自己的手牌。',
            gzfuhuax:"浮华",
            gzfuhuax_info:"锁定技，准备阶段，你须弃置两张手牌，然后摸两张牌。",
            gzchongdaox:"崇道",
            gzchongdaox_info:"当你受到伤害后，你可以令一名角色于当前回合结束后执行一个额外的判定/摸牌/出牌阶段。",
			gzchizhongx:'持重',
			gzchizhongx2:'持重',
			gzchizhongx_info:'当你成为【杀】的目标后，你可以选择一项：摸一张牌，或弃置其一张牌。',
            gzyihuix2:"疑慧",
            gzyihuix:"疑慧",
            gzyihuix_info:"每轮各限一次，你可以将一张奇数牌当基本牌使用或将一张偶数牌当【无懈可击】使用。",
            gzdoukoux:"豆蔻",
            gzdoukoux_info:"摸牌阶段，你可以放弃摸牌，然后展示牌堆顶的3张牌，你可以选择：获得其中的所有奇数牌/偶数牌，然后将其余的牌交给一名其他角色。",
			gzzhiyix:'执义',
			gzzhiyix_info:'锁定技，一名角色的结束阶段开始时，若你本回合内使用或打出过基本牌，则你选择一项：1.获得技能〖墨守〗直到下个回合开始。2.视为使用一张本回合内使用或打出过的基本牌。',
		    gzchenghuox:"承祸",
		    gzchenghuox_info:"锁定技，当你的上家/你成为一张黑色基本牌或普通锦囊牌的唯一目标时，你/你的下家成为此牌的额外目标。",
		    gzqingnanx:"情难",
　　　　　　gzqingnanx_info:"其他角色指定你的一张牌的结算后，若此牌的目标数大于1，你可以重铸一张牌令此牌额外结算一次。",
			gzyanyix:'宴异',
			gzyanyix_info:'你可以放弃出牌阶段，改为指定一名其他角色并选择任意张手牌，依次对该角色使用。若如此做，此阶段内该角色每受到一点伤害，你在结算后摸一张牌，且本回合手牌上限为你的体力上限。',
			gzsijix:'死冀',
			gzsijix_info:'锁定技，你回复体力的效果改为摸两张牌；当你进入濒死状态时，你回复一点体力并失去此技能',
            gzyanjiaox:"严教",
            gzyanjiaox_info:" 出牌阶段限一次，你可以将一张【杀】或普通锦囊牌交给一名其他角色，然后该角色选择一项：对除你以外的角色使用此牌，或受到一点火焰伤害。",
			gzxingshenx:"省身",
			gzxingshenx_info:"转换技，①一名角色于摸牌阶段外获得牌时，你可以令其弃置一张牌；②一名角色于弃牌阶段外弃置牌时，你可以令其摸一张牌。",
			gzzhixingx:"制行",
			gzzhixingx_info:"武将牌横置状态与你不同的角色的弃牌阶段开始时，你可以重铸一张牌或令其本回合手牌上限+1或-1；锁定技，准备阶段，你横置自己的武将牌",
			gzdengfengx:"登凤",
            gzdengfengx_info:"若一名其他魏角色与你均为横置状态，其于其出牌阶段可以交给你一张不为基本牌的手牌，然后变更副将。",
			gzdengfengx2:"登凤",
            gzdengfengx2_info:"",
            gzxiwux:"习武",
            gzxiwux_info:"锁定技，你使用点数不小于9的【杀】无距离限制；当你使用的【杀】与武器牌颜色一样时，此【杀】不可闪避。",
            gzhongzhuangx:"红妆",
            gzhongzhuangx_info:"出牌阶段限一次，你可与一名装备区有牌的其他角色拼点。若你赢，你获得该角色装备区的一张牌；若没赢，该角色获得两张拼点牌，你可以变更副将",
			gzbolvex:"博略",
			gzbolvex_info:"纵横技，锁定技，当场上所有角色不因死亡而确定势力时，你须观看3名未登场的角色，用其中一张武将牌替换另一武将。",
            gzyanshax:"掩杀",
            gzyanshax_info:"转换技，锁定技，出牌阶段，你使用牌后须摸/弃一张牌。",
			gzlongyux:'拢羽',
			gzlongyux_info:'主将技，你计算体力上限时减少1个单独的阴阳鱼。限定技，出牌阶段，若游戏轮数不小于3,你可以随机移除一名敌方角色的一个随机技能，你获得此技能，被移除技能的角色获得一个完整的阴阳鱼。',
			gzhusix:'虎嗣',
			gzhusix_info:'你可以将一张红色牌当作【杀】使用，若此【杀】未造成伤害，你在结束阶段收回此牌',
			gzxianzhenx:'先阵',
			gzxianzhenx2:'先阵',
			gzxianzhenx_info:'每回合限一次，当你使用【杀】指定一名角色为目标后，你可以猜测此【杀】是否造成伤害，若你猜对，你可摸一张牌。',
			gzhanzhanx:'酣战',
			gzhanzhanx_info:'锁定技，出牌阶段结束时，若你此阶段未造成过伤害，你跳过弃牌阶段。',
			gzpojunx:'破军',
			gzpojunx_info:'其他同势力角色使用【杀】时，你可以将一张牌交给该角色。',
			gzzhouyanx:'舟焰',
			gzzhouyanx_info:'每当你的【杀】被闪避时，你可以对其使用一张【火攻】（不可被【无懈可击】响应）',
			gzzhenxiangx:"镇乡",
			gzzhenxiangx_info:"当你成为【杀】的目标时，你可以重铸任意张手牌。",
            gzchengxiangx:"称象",
            gzchengxiangx_info:"出牌阶段限一次，你可以摸或弃置一张牌，然后可以与手牌数相等的一名其他角色交换所有手牌。",
            gzyouzhenx:"诱阵",
            gzyouzhenx_info:"出牌阶段限一次，你可以令一名其他角色弃置至少一张牌，然后你可以弃置任意数量的牌。若你以此法弃置的牌数量大于该角色，视为你对其使用了一张【杀】，反之，视为其对你使用了一张【杀】（此【杀】不计入出牌阶段使用次数）。",
            gzhaogongx:"豪攻",
            gzhaogongx_info:"锁定技，你使用的【杀】需要打出一张【杀】抵消。",
			gzzhilvex:'知略',
			gzzhilvex_info:'锁定技，准备阶段，你选择一项：1.移动场上装备区的一张牌并失去1点体力。2.移动场上判定区的一张牌并令本回合手牌上限-1。3.本回合摸牌阶段多摸一张牌。',
            gzjixianx:"机先",
            gzjixianx_info:"结束阶段，你可以获得一名其他角色一张手牌。若如此做，直至你的回合开始，你不能使用、打出、弃置或重铸之。",
			gzjuyux:'莒御',
			gzjuyux_info:'限定技，结束阶段，你可以交换两名其他角色的主将牌。',
			gzxiandengx:'先登',
			gzxiandengx_info:'当你的【杀】被闪避时，你可以选择一个“军令”，令其选择一项：执行该军令，并摸一张牌；或弃置装备区内的所有牌。',
			gzlvfengx:'履锋',
			gzlvfengx_info:'锁定技，出牌阶段结束时，若你的装备区内没有牌，你随机使用一张装备牌',
			gzdanmux:'啖目',
			gzdanmux_info:'出牌阶段，你可以令自己受到一点无来源伤害，然后令一名角色选择一项：弃置两张牌或受到一点伤害。',
			gztaonix:'讨逆',
			gztaonix_info:'出牌阶段限一次，你可以用任意张牌替换等量的“逆”。',
			gzpingkoux:'平寇',
			gzpingkoux_info:'出牌阶段，你可以弃置一张装备区内的牌（每种类型的装备牌限一次），然后视为对攻击范围内的一名其他角色使用了一张【杀】。',
			gzzhenlue:'缜略',
			gzzhenlue_info:'锁定技，你使用的普通锦囊牌不能被【无懈可击】响应；当你成为延时锦囊牌的目标时，取消之。',
			gzzengdaox:'赠刀',
			gzzengdaox2:'赠刀',
			gzzengdaox_info:'主将技，你计算体力上限时减少1个单独的阴阳鱼。出牌阶段限一次，你可以将一张武器牌置于一名角色的武将牌上，令该角色造成的下一次伤害-1，然后获得此牌',
			gzjicix:'激词',
　　　　　　gzjicix_info:'限定技，出牌阶段你可以获得技能〖经纶〗，并令所有角色将手牌中的基本牌替换为【杀】，且与你势力相同的其他角色可以变更副将。',
	        gzjinglunx:"经纶",
	        gzjinglunx_info:"出牌阶段限一次，你可以弃置一张【杀】，然后视为使用1张未以此法使用过的没有伤害标签的普通锦囊牌。",
			gzgushex:'鼓舌',
			gzgushex_info:'出牌阶段，你可以弃置一张手牌，并令一名有手牌的角色选择一项：1)弃置一张与之花色相同的手牌，本回合内〖鼓舌〗不能再次指定其为目标，2)令你获得其一张牌，〖鼓舌〗失效直到回合结束',
			gzxijuex:'袭爵',
			gzxijuex_gain:'袭爵',
			gzxijuex_info:'锁定技，当你明置此武将牌时，你获得4枚“爵”。回合结束时，你获得X枚“爵”（X为你本回合内造成的伤害数）。你可弃置一枚“爵”并在合适的时机发动〖突袭〗和〖骁果〗。',
			gzxijuex_tuxi:'突袭',
			gzxijuex_xiaoguo:'骁果',
			gzzhaotaox:'诏讨',
			gzzhaotaox2:'诏讨',
			gzzhaotaox_info:'主将技，你计算体力上限时减少1个单独的阴阳鱼。出牌阶段，你可以弃置一张手牌，并展示一名其他角色的一张手牌，若两张牌颜色相同，你对其造成一点伤害，否则你本阶段内不能再发动〖诏讨〗。',
            gzdinglanx:"择助",
            gzdinglanx_info:"转势技，当你明置此武将牌后，你可以将势力调整为：魏/ 蜀/吴/群/晋。",
			gzhoufax:'厚发',
			gzhoufax_info:'限定技，准备阶段，若场上无暗置武将牌，你可以获得下列技能中的任意一个：〖集智〗、 〖遗计〗、 〖激昂〗、 〖帷幕〗和〖慧识〗。',
			gzhuanyin:'幻影',
			// gzhuanyin_info:'',
			gzhuannu:'幻怒',
			gzhuannu_info:'准备阶段，你可以发现一张牌堆中的牌，若你手牌中有同名牌，你可以改为对一名角色造成一点火属性伤害。准备阶段开始时，你随机切换至一种形态',
			gzhuanhuo:'幻火',
			gzhuanhuo_info:'出牌阶段限一次，你可以弃置所有手牌并摸一半牌（向上取整），若敌方角色手牌中有与你弃置的牌同名的牌，则随机弃置其中一张。准备阶段开始时，你随机切换至一种形态',
			gzhuanwu:'幻舞',
			gzhuanwu_info:'结束阶段，你可以摸X张牌，然后可以使用一张牌（X为手牌中同名牌数最多的牌的数量）。准备阶段开始时，你随机切换至一种形态',
			gzyuanzix:'援资',
			gzyuanziy:'援资',
			gzyuanzix_info:'出牌阶段每名与你势力相同角色限一次，选择一名势力与你相同的其他角色，你获得其一张牌。然后若其手牌数等于体力值，你与其各摸一张牌，否则其摸一张牌。',
			gzzhenshix:'振势',
			gzzhenshix_info:'每当一名与你势力相同的角色出牌阶段首次使用带有伤害标签牌指定目标时，你可以令其摸一张牌',
			gzjimengx:'急盟',
			gzjimengx_info:'合势技，当一名角色出牌阶段开始时，若场上存在“Key”势力，你将势力调整为“Key”，并获得一个“珠联璧合”标记。',
			gzqixix:'奇袭',
			gzqixix_info:'你可以将一张黑色牌当做【过河拆桥】使用；当你累积使用【过河拆桥】次数大于场上人数时，出牌阶段结束时你变更副将。',
			gzfenweix:'奋威',
			gzfenweix_info:'限定技，出牌阶段，你可以令任意名其他角色各弃置一张手牌，然后你可以从弃置的牌中选择一张加入手牌',
　　　　　　gzjiandex:'俭德',
			gzjiandex_info:'阵法技，回合开始时，若你在一个围攻关系中是被围攻角色，本回合你拥有技能〖奇袭〗',
　　　　　　gzanguox:'安国',
			gzanguox_info:'出牌阶段限一次，你可以令装备或手牌最少的一名其他角色选择一项，然后你选择另一项：1.摸一张牌；2.弃置一张牌并回复1点体力。',
　　　　　　gzpozhenx:'破阵',
			gzpozhenx_info:'阵法技，回合开始时，若你在一个围攻关系中是被围攻角色，本回合你使用【杀】指定目标后，你令目标角色防具无效。',
			gzpozhenx2_info:'锁定技，本回合你使用【杀】指定目标后，你令目标角色防具无效。',
			gzfaenx:'法恩',
			gzfaenx_info:'当有角色的武将牌状态改变后（明置武将除外），你可以令其摸一张牌。',
			gzdahex:'大喝',
			gzdahex_info:'锁定技，攻击范围内有你的角色视为在你的攻击范围内。',
			gzfuningx:"抚宁",
			gzfuningx_info:" 锁定技，与你距离为1的角色于其阶段内使用的第一张牌不能指定你为目标。",
		    gzguicaix:'鬼才',
　　　　　　gzguicaix_info:'在任意角色的判定牌生效前，你可以选择一项：1、打出一张手牌代替之。2、亮出牌堆顶的一张牌代替之。',
            gzfankuix:"反馈",
            gzfankuix_info:"当你受到1点伤害后，你可以获得或弃置伤害来源一张牌。若为弃置，你可以摸一张牌。",
			gzjizhix:"集智",
			gzjizhix_disable:"封印",
			gzjizhix_info:"当你使用非转化的普通锦囊牌时，你可以摸一张牌；当你使用普通锦囊牌指定一个目标后，你可令其已明置武将牌上的随机一个技能于本回合内失效。",
			gzhunshangx:"魂殇",
			gzhunshangx_info:"副将技，你计算体力上限时减少1个单独的阴阳鱼。准备阶段，若你的体力值不大于1，则你选择获得〖英姿〗或〖英魂〗。",
			gzwuqinx:'五禽',
			gzwuqinx_info:'结束阶段，你可以获得一名其他角色的一张手牌，然后该角色摸一张牌',
			gzjishix:'济世',
			gzjishix_info:'出牌阶段限一次，你可以弃置一张红色牌，然后令一名角色先弃置所有手牌再摸等量的牌并展示，若其中有锦囊牌，你令其回复X点体力（X为展示的锦囊牌数目）。',
			gzmeihunx:'魅魂',
			gzmeihunx_info:'出牌阶段限一次，你可以弃置一张装备牌并选择一名其他男性角色。若如此做，你将武将牌翻面并获得其所有手牌。出牌阶段结束时，你交给其X张牌。（X为该角色的体力值）',
			gzhuoxinx:'惑心',
			gzhuoxinx_info:'当你受到男性角色的伤害时，若你的武将牌背面朝上，则你可在此伤害结算后将武将牌翻回正面；当你的武将牌从背面翻至正面时，你可以移动场上的一张牌。',
			gzwusix:'无嗣',
			gzwusix_bg:'嗣',
			gzwusix_info:'限定技，结束阶段，你可以选择一名其他角色并依次选择：1. 弃置一张红色牌；2. 失去一点体力；3. 将武将牌翻至背面；你每选择一项，视为对目标使用一张【杀】。',
            gzshuzhengx:"疏政",
            gzshuzhengx_info:"出牌阶段，当你对一名其他角色连续使用牌时，你可以摸一张牌，然后可以将一张牌交给该角色",
            gzshuzhengx2:"疏政",
            gzshuzhengx2_info:"",
            gzshuzhengx3:"疏政",
            gzshuzhengx3_info:"",
            gzsanliangx:"散粮",
            gzsanliangx_info:"出牌阶段，若你的手牌上限不小于你当前体力值，你可获得弃牌堆顶的牌，本阶段每发动一次手牌上限便-1",
            gzsanliangx2:"散粮",
            gzsanliangx2_info:"",
			gzxishax:'袭煞',
			gzxishax_info:'你可以将一张非基本牌当做【杀】使用或打出（无距离限制）。你以此法使用的红色【杀】不可被响应，黑色【杀】不计入使用次数限制。',
            gzyongxianx:"勇陷",
            gzyongxianx_info:"当你使用【杀】指定目标后，你与目标角色各可以令你摸一张牌。若以此法获得两张牌，你流失1点体力。若以此法获得一张牌，此【杀】不可被响应。",
			gzfengzix:'丰姿',
			gzfengzix_info:'结束阶段，你可以展示你的手牌。若颜色均相同，你回复一点体力。',
			gzmengrix:'梦日',
			gzmengrix_info:'当你即将恢复体力时，若你的体力值大于0，你可以防止之并摸两张牌，然后你可以令一名其他角色回复一点体力。',
            gzlihuox:"疠火",
            gzlihuox_info:"结束阶段，若你的攻击范围为全场最高，你可以视为对一名角色使用一张火属性【杀】。",
            gzshanghuanx:"觞欢",
            gzshanghuanx2:"觞欢",
            gzshanghuanx_info:"你可将你的任意一张装备牌当【酒】使用，然后你可令一名装备区有牌的其他角色亦如此做。",
            gzjiyiy:"极意",
            gzjiyiy_info:"出牌阶段限一次，你可以展示牌堆顶的两张牌，若这两张牌颜色相同，你可以令一名其他角色选择其中一张并可以立即使用，然后将剩余的牌置入弃牌堆",
            gzhujiux:"护柩",
            gzhujiux_info:"锁定技，一名角色结束阶段，若你的手牌数为全场唯一最少/多，你摸/弃一张牌。",
            gzyaomengy:"邀盟",
            gzyaomengy_info:"出牌阶段开始时，你可以与一名其他势力角色拼点，赢的角色视为对没赢的角色使用【远交近攻】",
            gzqingjiux:"请柩",
            gzqingjiux_info:"当一名其他角色处于濒死状态时，你可以令其摸两张牌，此濒死状态结算结束后，若该角色依然存活，则你需弃置一张牌。",
            gzqingjiux2:"请柩",
            gzqingjiux3:"请柩",
            gzduanlix:"端礼",
            gzduanlix_info:"出牌阶段限一次，若你的手牌中有不同颜色的牌，你可以进行一次判定，然后弃置与判定结果颜色不同的牌，并摸等量的牌。若摸牌后你的手牌均为同一张颜色，则你额外摸一张牌。",
            gzjianchix:"坚池",
            gzjianchix_info:"锁定技，每当一名其他角色于其出牌阶段内使用的第一张牌指定你为目标后，你摸一张牌",
            gzxuezhux:"血逐",
            gzxuezhux_info:"当你使用一张牌后，若此牌为你于本阶段使用的第X张牌（X等于你的体力值），你可以选择获得这张牌或摸一张牌",
            gzkuimangx:"溃蟒",
            gzkuimangx_info:"出牌阶段限一次，你使用牌指定目标时，若本阶段你使用的牌点数之和大于你当前体力值的4倍，你可以弃置目标角色一张牌",
            gzkuimangx2:"溃蟒",
            gzkuimangx2_info:"",
            gzkuimangx3:"溃蟒",
            gzkuimangx3_info:"",
            gzqianzhix:"遣质",
            gzqianzhiy:"遣质",
            gzqianzhix_info:"出牌阶段每名角色限一次，你可以选择一名角色交给其一张牌，然后弃置其一张手牌，若弃置的牌的名称与交给其的牌相同，你对其造成一点火焰伤害。",
            gzdaiyuanx:"待援",
            gzdaiyuanx_info:"摸牌阶段，你可以少摸一张牌，然后跳过你的弃牌阶段",
            gzdaiyuanx2:"待援",
            gzdaiyuanx2_info:"",
			gzjiaozhux:'剿诛',
			gzjiaozhux_info:'锁定技，每当一名角色死亡，若伤害来源与你势力不同，则你摸一张牌，并视为对其使用一张【决斗】',
            gzmengzhix:"艨志",
            gzmengzhix_info:" 出牌阶段限一次，你可以令与你距离为1的所有角色各展示一张手牌，你从这些牌中获得数量最多的某类牌，其余牌令这些角色收回。若你以此法获得的牌不少于2张，你失去一点体力。",	
			gzyuanhangx:'远航',
			gzyuanhangx_info:'锁定技，若你已受伤，你计算与其他角色的距离时-X（X为你已损失的体力值）。',
			gzguolix:"国礼",
			gzguolix_info:"出牌阶段限一次，你可以将一张装备牌当【无中生有】使用。",
			gzlongdex:"隆德",
			gzlongdex_info:"当你于回合外失去装备区的牌后，你可以令一名角色回复1点体力",
			gzgulianx:"固联",
			gzgulianx_info:"出牌阶段限一次，你可以弃置一张【杀】，然后与一名手牌数不等于你的其他角色各摸一张牌并分别展示一张牌",
			gzzuoanx:"佐安",
			gzzuoanx_info:"其他角色的【杀】置入弃牌堆时，若此牌为回合内置入弃牌堆的第二张【杀】，你可将之交给一名角色",
            gzjiezhuix:"截追",
            gzjiezhuix_info:"一名角色的结束阶段开始时，若你于此回合内失去了两张或更多的牌，你可以视为对一名角色使用了一张【杀】，然后你进行一次判定，若判定结果为黑色，你获得该角色一张牌。",
			gzyihuax:"翊化",
			gzyihuax_info:"出牌阶段限一次，你可以展示其他角色的一张手牌，若其展示的牌为：基本牌，你可以用一张牌交换之；装备牌，你对其造成1点伤害；锦囊牌，弃置此牌，然后你弃置一张牌。",
	        gzkongyix:"空弋",
	        gzkongyix_info:"当你失去最后一张手牌时，然后视为使用1张未以此法使用过的没有伤害标签的基本牌或普通锦囊牌。",	
	        gznanwangx:"南望",
	        gznanwangx_info:"结束阶段，你可以和一名其他角色拼点。若你赢，你可以视为使用1张未以此法使用过的带有伤害标签的基本牌或普通锦囊牌；否则，其摸一张牌。",
		    gzzhongluex:"重略",
		    gzzhongluex_info:"出牌阶段限一次，若你已受伤，你可以令一名其他角色摸两张牌，若如此做，回合结束时，你对手牌数最多的角色造成一点伤害",
            gzfuhux:"缚虎",
            "gzfuhux2":"缚虎",
            "gzfuhux_info":"出牌阶段限一次，你可以弃置一张手牌并指定攻击范围内的一名其他角色，令其交给你一张【杀】或装备牌，否则将其所有手牌移出游戏直到回合结束。",
			gzpytianjiang:'天匠',
			gzpytianjiang_info:'出牌阶段，你可以将装备区内的牌移动到其他角色的装备区（可替换原装备）。',
			gzpyzhuren:'铸刃',
			gzpyzhuren_info:'出牌阶段限一次，你可以弃置一张手牌。根据此牌的花色点数，你有一定概率打造成功并随机装备一张装备牌（若打造失败或武器已有则改为摸一张【杀】，点数决定成功率）。',
            gzjinjiux:"锦就",
            gzjinjiux_info:"每回合限一次，当你对一名角色造成伤害后，你可以与其交换一个区域，当区域内牌数因此增加/减少，你弃/摸一张牌。若为摸，你可以变更副将。",
			gzliuhuanx:'瑠还',
			gzliuhuanx_info:'摸牌阶段，你可以少摸一张牌，结束阶段，你可以获得至多X名其他角色的1张手牌（X为你已损失的体力值且至少为1）。',
		    gzzhenmux:"镇穆",
		    gzzhenmux_info:"当你成为【杀】的目标时，你可以令一名其他角色选择一项：令你摸一张牌；或横置自己的武将牌。",
		    gzguhuanx:"固桓",
		    gzguhuanx_info:"锁定技，你的武将牌不能被横置；当你使用牌仅指定一名角色为目标时，你可以令一名已横置的其他角色也成为此牌的目标。",
			gzbaobianx:'豹变',
			gzbaobianx_info:'出牌阶段限一次，你可以将一张【杀】置于一名其他角色的武将牌上，其回合结束阶段，其成为此【杀】的目标。',
			gzbeilix:"背离",
			gzbeilix_info:"判定阶段开始时，你可跳过之，然后失去1点体力或交给一名其他角色一张非基本牌",
			gzsuishengx:'随圣',
			gzsuishengx_info:'每当你用【闪】抵消了一次【杀】的效果时，若使用者在你的攻击范围内，你可以立刻对其使用一张【杀】',
			gztuojianx:'拓歼',
			gztuojianx_info:'每当你杀死一名角色，你可以和一名存活的玩家与其交换位置。',
			gzshuaiyanx:'率言',
			gzshuaiyanx_info:'每回合限一次，每当其他角色于你的回合外回复体力后，你可以令该角色选择一项：1.令你摸一张牌；2.令你弃置其一张牌。',
			gzmoshou:'墨守',
			gzmoshou_info:'锁定技，当你成为【兵粮寸断】或【乐不思蜀】的目标时，取消之。',
			gzmoshoux:'天覆',
			gzmoshoux_info:'主将技，一名角色进行判定前，你可以观看牌堆顶的两张牌，并调换其顺序',
			gzshanquanx:'擅权',
			gzshanquanx_info:'准备阶段，你可以弃置一张牌，然后将牌堆顶6张牌中的基本牌移至弃牌堆；若移入弃牌堆的牌超过3张，你摸一张牌',
			gzxiongyix:'凶溢',
			gzxiongyix_info:'锁定技，你造成过伤害的回合内，跳过你的弃牌阶段；每当你每杀死一名角色，你的手牌上限便-1。',
			gzqiyuex:'骑钺',
			gzqiyuex_info:'当你明置此武将牌时，若你不为大势力角色，你可以变更副将；你可以选择一名玩家与其交换位置',
			gzyingzunx:'盈尊',
			gzyingzunx_info:'出牌阶段限一次，你可以摸<span class=yellowtext><1></span>张牌，然后令<>中数值+1。若此时你的手牌数大于你的体力上限，你失去一点体力上限，本回合获得技能〖咆哮〗，并将<>中数值修改为1。',
			gzmoyingx:'墨影',
			gzmoyingx_info:'每当你于回合内使用第一张牌时，你可以从牌堆中随机获得一张与之类型相同的牌',
			gzjuanhuix:'绢绘',
			gzjuanhuix_info:'每当你于回合外首次失去牌，你可以弃置一张非基本牌并摸两张牌',
			gzlongyuex:'龙岳',
			gzlongyuex_info:'当一名角色使用锦囊牌时，若此牌是其本回合内使用的第一张牌，则你可令其摸一张牌。',
			gzzhenyinx:'阵引',
			gzzhenyinx_info:'每回合限一次。一名角色的判定牌生效前，你可令当前回合角色打出一张手牌代替之。',
			gzshajuex:'杀绝',
			gzshajuex_info:'每当你使用【杀】造成伤害，你可以令受伤害角色与你各流失一点体力，然后你摸两张牌',
			gzxionghuox:'凶镬',
			gzxionghuox_info:'当你使用【杀】指定目标后，若目标未受伤，此【杀】不可闪避',
			author_copy:'化用',
			author_copy_info:'锁定技，每回合限一次，当你以自己为目标使用一张非转化的锦囊牌，你发现一个国战将池的技能并获得之',
			poison_in:'客串',
			poison_in_info:'限定技，在你明置此武将牌时，你将X张毒洗入牌堆（X为当前非野心家人数）。',
			poison_make:'制毒',
			poison_make_info:'锁定技，当你造成或受到伤害后，你将Y张毒洗入牌堆（Y为你已损失的体力值，且至少为1）。',
			poison_quenching:'淬毒',
			poison_quenching_info:'锁定技，你失去【毒】时不流失体力；你使用【毒】时效果变更为发现一张牌；结束阶段，你可以选择一名有手牌的其他角色将其一张随机的非毒手牌转化为【毒】，然后令其获得一点护甲',
			dalao_compare:'天辩',
			dalao_compare_info:'你可以使用牌堆底的一张牌进行拼点。当你拼点的牌亮出后，若此牌不为基本牌，则此牌的点数视为K。',
			dalao_turnover:'灵枢',
			dalao_turnover_info:'结束阶段，你可以选择一名角色与你同时翻面,获得其一张牌。若如此做，直至你的回合开始，你不能使用、打出、弃置或重铸之；当你的武将牌从背面翻至正面时，你可以（多次）变更副将。',
			dalao_dying:"耀世",
			dalao_dying_info:"濒死阶段，你可以与伤害来源拼点。若你赢，你复制其体力值与一项技能，其失去一点体力。",
			gzwyqinggeng:'晴耕',
			gzwyqinggeng_info:'与你势力相同的角色于其出牌阶段结束时，可以将一张牌置于你的武将牌上，称为“亩”，然后摸一张牌。',
			gzwyyudu:'雨读',
			gzwyyudu_info:'出牌阶段限一次，你使用牌仅指定一名角色为目标时，你可以额外指定X名角色为目标（无距离限制，X为你武将牌上的「亩」数），然后你移去一张「亩」。',
			gzwyjutian:'居田',
			gzwyjutian_info:'锁定技，当你没有“亩”时，你不能对其他角色使用【杀】；当你武将牌上有“亩”时，你的手牌上限+X/2（X为你武将牌上的「亩」数，向下取整）。',
			yuri_qixingx:"起行",
			yuri_qixingx_info:'锁定技，出牌阶段开始时，你获得一张【杀】或普通锦囊牌。',
			yuri_xingdongx:"行动",
			yuri_xingdongx_info:"出牌阶段限一次，你可以指定一名大势力的其他角色，然后选择一个“军令”，令该角色选是否执行该军令；若其执行，其弃置一张手牌；否则你获得其一张牌。",
			supo_zhengzhuang:'整装',
			supo_zhengzhuang_info:"锁定技，当此武将牌明置时，你从游戏外获得一整套装饰品，并将另一武将替换为“仲村由理”。（装饰牌进入弃牌堆时，将其移出游戏）",
			spsz_distroy:'整装',
			supo_chengzhi:'承志',
			supo_chengzhi_info:'准备阶段/结束阶段，你可以观看牌堆顶的X张牌并可以按任意顺序置于牌堆顶或牌堆底。（X为你装备区内的牌数，且至少为1）',
			supo_sizhi:'思智',
			supo_sizhi_info:'锁定技，若你装备区的花色数：不小于1，你视为拥有〖精策〗；不小于2，你视为拥有〖集智〗；不小于3，你视为拥有〖制衡〗；不小于4，你将〖精策〗和〖制衡〗改为界限突破版本。',
			supo_jingce:'精策',
			supo_zhiheng:'制衡',
			supo_jizhi:'集智',
			aurora_kazhan:'卡战',
			aurora_kazhan_info:'出牌阶段限一次，你可以将手牌中的一张装备牌置于一名其他角色装备区里（不得替换原装备），然后移除其一张武将牌，令其回复一点体力。',
			aurora_suyin:'夙隐',
			aurora_suyin_info:'锁定技，你的判定会朝向对你有利的方向倾斜。',
			aurora_jizhi:'集智',
			aurora_jizhi_info:'锁定技，己方其他角色计算与其他角色的距离-1且摸牌阶段的额定摸牌数+1。',
			author_in:'登场',
			author_in_info:'限定技，在你明置此武将牌后，你随机获得〖反馈〗、〖观星〗、〖制衡〗、〖完杀〗中的一个技能',
			author_out:'谢幕',
			author_out_info:'锁定技，当你死亡时，所有角色随机移除一个已明置武将牌上的技能。',
			gzzhenjun:"镇军",
			gzzhenjun_info:"准备阶段，你可以弃置一名角色X张牌（X为其手牌数减体力值且至少为1），然后选择一项：1.你弃置等于其中非装备牌数量的牌；2.该角色摸等于其中非装备牌数量的牌。",
			gzxinhuox:'衅祸',
			gzxinhuoy:'衅祸',
			gzxinhuox_info:'出牌阶段限一次，你可以指定一名区域内有牌的其他角色，视为该角色对你使用了一张【决斗】;当你因【决斗】受到伤害后，你获得伤害来源手牌、装备区和判定区里的各一张牌。',
			gzjiliy:'寄篱',
			gzjiliy_info:'锁定技，距离你为1的角色受到伤害时，若你当前体力值为1，你回复一点体力，否则获得一个“阴阳鱼”标记。',
			gzxiangle:'享乐',
			gzxiangle_info:'锁定技，当你于出牌阶段内使用的【杀】被目标角色使用的【闪】抵消时，你获得这张【闪】，视为其对你使用一张【决斗】。',
			gzsishu:'思蜀',
			gzsishu_info:'本局游戏内你的【乐不思蜀】判定效果反转。',
			gzruoyu:'若愚',
			gzruoyu_info:'限定技，准备阶段开始时，若你的体力值为全场唯一最少，你可以回复1点体力，然后令一名角色摸三张牌。',
			gzduoshix_wei:'雄略',
			gzduoshix_wei_info:'夺势技，你可以选择一名势力不同，且身份不为“野心家”的角色，其势力变更为“魏”，然后你移除主将，其移除副将；若你不是大势力角色，你回复一点体力（若你未受伤，则改为加一点体力上限）。',
			gzduoshix_qun:'义起',
			gzduoshix_qun_info:'夺势技，你可以选择一名势力不同，且身份不为“野心家”的角色，其势力变更为“群”，然后你移除主将，其移除副将；若你不是大势力角色，你可以对所有大势力角色造成一点雷电伤害。',
			gzduoshix_wu:'纳贤',
　　　　　　gzduoshix_wu_info:'夺势技，你可以选择一名势力不同，且身份不为“野心家”的角色，其势力变更为“吴”，然后你移除主将，其移除副将；若你不是大势力角色，直到回合结束，你视为拥有“制衡”。',
			gzduoshix_shu:'诏安',
			gzduoshix_shu_info:'夺势技，你可以选择一名势力不同，且身份不为“野心家”的角色，其势力变更为“蜀”，然后你移除主将，其移除副将; 若你不是大势力角色，你摸两张牌。',
			gzlingfengx:'灵锋',
			gzlingfengx_info:'摸牌阶段，你可以改为亮出牌堆顶的两张牌，然后获得之，若这些牌的颜色不同，你令一名与你势力不同的角色失去1点体力',
            gzquanhengx:"权衡",
		    gzquanhengx_info:"转换技，①出牌阶段开始时，你可以获得一名手牌数不少于你的角色一张牌；②出牌阶段结束时，你可以交给一名手牌数不多于你的角色一张牌。",
			gzjianxiongy:'奸雄',
			gzjianxiongy_info:'每回合限一次，当你成为一名角色牌的目标后你可以对该角色使用一张牌，若此牌对其造成伤害，则该角色的牌失效。若失效的为黑色牌，则你摸一张牌',
			gzcaiyix:'猜疑',
			gzcaiyix_info:'每回合限一次，其他角色摸牌后，你可以观看其摸到的牌，若其中有【杀】，则视为你对其使用一张【杀】；若其中没有【杀】，则视为其对你使用一张【杀】（计入出杀次数）。',
			gzjidianx:'亟电',
			gzjidianx_info:'每回合限一次，当你造成伤害后，你可以指定距离受伤害角色1以内的一名其他角色进行判定。若结果为黑色，该角色受到一点雷电伤害，否则你摸一张牌。',
			gzyongxian:'勇陷',
			gzyongxian_info:'结束阶段，若你本回合造成过伤害，则你可以摸一张牌，额外执行一个出牌阶段。',
			gzluyix:'戮异',
			gzluyix_info:'每两轮限一次，回合结束后，你可以选择至多2名其他角色，将其他角色移出游戏，然后你与所选的角色依次进行一个回合（在额外回合内，当你受到伤害时，防止此伤害。）',
			gzlanggux:'狼顾',
			gzlanggux_info:'出牌阶段，你可以主动失去1点体力，视为使用1张【酒】。',
			gzzhaoxinx:'昭心',
			gzzhaoxinx_info:'摸牌阶段结束时，你展示所有手牌,若花色均相同，你可以视为使用一张【杀】；当你受到伤害后，你可以展示所有手牌，然后摸X张牌（X为缺少的花色数）。',
			gzzhabingx:"诈病",
			gzzhabingx_info:"纵横技，当你明置此武将牌时，你可以将身份变更为“野心家”，将“反馈”替换为“连破”，将另一武将牌替换为“司马昭”。",
			gzquanjix:'权计',
			gzquanjix_info:'当你受到伤害或回复体力后，你可以摸一张牌，若如此做，你将一张牌置于武将牌上，称为“权”。锁定技，你的手牌上限+X（X为你“权”的数量）。',
　　　　　　gzmouzuo:'谋佐',
		    gzmouzuo_info:'出牌阶段限一次，你可以将一张“权”置入弃牌堆并选择一名其他角色，若如此做，你摸一张牌，然后弃置其区域内的一张牌。',
			gzmouzuo_backup:'谋佐',
			gzyizhix:"异志",
			gzyizhix_info:"纵横技，当你明置此武将牌时，你可以将身份变更为“野心家”，将另一武将牌替换为“钟会”，并将〖天覆〗修改为“主将技，一名角色进行判定前，你可以观看牌堆顶的两张牌，并调换其顺序”。",
			gzliuwangx:"流亡",
			gzliuwangx_info:"纵横技，当你明置此武将牌时，你可以将身份变更为“野心家”，将另一武将牌替换为“严白虎”，并将〖业仇〗描述中的〖崩坏〗修改为〖缠怨〗。",
　　　　　　gzjuyix:"举义",
　　　　　　gzjuyix_info:"纵横技，当你明置此武将牌时，你可以将身份变更为“野心家”，将另一武将牌替换为“文钦”，获得技能〖弑援〗（效果同董卓主将技〖暴凌〗）。",
			gzshiyuanx:'弑援',
			gzshiyuanx_info:'出牌阶段结束时，你可以选择移除另一武将牌，然后获得3个完整的阴阳鱼，失去技能〖弑援〗并获得〖崩坏〗',
			gzhuanshoux:"宦首",
			gzhuanshoux_info:"纵横技，当你明置此武将牌时，你可以成为“野心家”，将〖窃宠〗修改为〖戮异〗。",
			gzbaolingy:'暴凌',
			gzbaolingy_info:'当其他角色在你回合内失去最后一张手牌时，你可以对其造成一点伤害。',
			gzhengzhengy:'横征',
			gzhengzhengy_info:'摸牌阶段开始或出牌阶段结束时，若你没有手牌，则你可以（放弃摸牌）获得每名其他角色区域内的一张牌。',

			gzhuoyingx:"祸引",
			gzhuoyingx_info:"纵横技，当你明置此武将牌时，你可以将身份变更为“野心家”，获得技能〖延祸〗，并将另一武将牌替换为“董卓”。",
			gzyanhuox:"延祸",
			gzyanhuox_info:"当你受到一次伤害后，你可以弃置任意张手牌并选择等量其他角色，令其随机弃置一张牌。",
			gzwanglie:'往烈',
			gzwanglie_info:'你可以令一名其他角色执行你的摸牌阶段，然后视为该角色对你指定的另一名其他角色使用一张【杀】',
			gzsijian:'死谏',
			gzsijian_info:'当你失去最后的手牌时，你可以弃置一名其他角色的X张牌。（X为你已损失的体力，且至少为1）',
            gzxiongzix:"雄姿",
            gzxiongzix1:"雄姿",
            gzxiongzix_info:"其他吴势力角色出牌阶段限一次，其可以交给你一张手牌。",
            gzlietux:"烈图",
            gzlietux1:"烈图",
            gzlietux2:"烈图",
            gzlietux_info:"每当你于一轮第三次使用手牌时，你可以对一名其他角色造成一点火焰伤害；每当你累计第三次获得牌时，你可以令一名其他角色摸一张牌。",
			gzyingzix:'英姿',
			gzyingzix_info:'锁定技，摸牌阶段摸牌时，你额外摸一张牌；你的手牌上限为你的体力上限；当与你势力相同的一名角色受到伤害后，你可以重铸一张牌。',
			gzlieren:'烈刃',
			gzlieren_info:'当你使用【杀】造成伤害时，可与受到该伤害的角色进行拼点；若你赢，你获得对方的一张牌。',
			gzshushenx:"淑慎",
			gzmuyix:"淑慎",
			gzshushenx_info:"当你回复1点体力后，你可令一名其他角色摸一张牌；当你的牌因弃置置入弃牌堆后，你可以选择一张牌交给其他角色。",
			gzyuanhux:'援护',
			gzyuanhux_info:'出牌阶段限一次，若你的装备区内有牌，则你可以令一名其他角色交给你一张手牌，然后获得你装备区内的一张牌。若其体力值不大于你，则你可以令其回复1点体力。',
			gzzhengjunx:'整军',
			gzzhengjunx_info:"主将技，你计算体力上限时减少1个单独的阴阳鱼。结束阶段，你可以选择至多X名其他角色各摸1张牌（X为你本回合内跳过的阶段数）。",
			yumianxiaoyao_skill:'逍遥',
			yumianxiaoyao_skill_info:"准备阶段，你可以重铸一张手牌，令你本回合计算与其他角色的距离时-X/3（X为该牌点数，向下取整）",
			gzshuangxiong:'双雄',
			gzshuangxiong2:'双雄',
			gzshuangxiong3:'双雄',
			gzshuangxiong3_info:"",
			gzshuangxiong_info:'摸牌阶段，你可以改为进行一次判定：你获得此判定牌，且于此回合的出牌阶段，你可以将任意一张与此判定牌不同颜色的手牌当做【决斗】使用；当你受到【决斗】造成的伤害时，你可以获得对方于此决斗中打出的所有【杀】',
			gzcuiku:"摧枯",
　　　　　　gzcuiku_info:"限定技，结束阶段，若你于此回合内造成过3点或更多伤害，你可以回复一点体力，选择是否变更副将，并随机装备一件武器牌。",
			gzqingchengy:"倾城",
			gzqingchengy_info:"出牌阶段，你可以弃置一张黑色牌并选择一名武将牌均明置的其他角色，然后你暗置其一张武将牌。若你以此法弃置的牌为非基本牌，则你可以暗置另一名武将牌均明置的角色的一张武将牌。",
			gzmingshix:'名士',
			gzmingshix_info:'锁定技，当你受到伤害时，若伤害来源有暗置的武将牌，此伤害-1；出牌阶段结束时，若场上所有武将牌均已明置且你不为大势力角色，你将〖名士〗修改为“当你受到伤害时，若伤害来源的体力值大于你，你可以弃置一张黑色手牌，令伤害值-1。”',
			gzmingshiy:'名士',
			gzmingshiy_info:'当你受到伤害时，若伤害来源的体力值大于你，你可以弃置一张黑色手牌，令伤害值-1。',
			gzzhanshen:'战神',
			gzzhanshen_info:'觉醒技，准备阶段，若场上有已死亡的其他己方角色且你已受伤，则你弃置装备区的武器牌，减1点体力上限，获得技能〖神戟〗',
			gzshenji:'神戟',
			gzshenji_info:'锁定技，若你的装备区里没有武器牌，你使用【杀】指定的目标数上限+2，次数上限+1',
			gzshenlix:"神力",
　　　　　　gzshenlix_info:"每回合限一次，当你使用【杀】指定目标后，你可以选择失去一点体力取消之，然后其受到来自于你的一点雷属性伤害",
			gzyinqiangx:"银枪",
　　　　　　gzyinqiangx_info:"每当你使用或打出一张【闪】时，可令你攻击范围内的一名其他角色弃置一张装备牌。若其区域内没有装备牌，则你摸一张牌，并对该角色造成1点伤害。",
	        gzfengpox:"凤魄",
	        gzfengpox_info:"出牌阶段限一次，当你的【杀】被闪避后，你可以重置本回合【酒】和【杀】的使用次数。",
			gzyangweix:"扬威",
　　　　　　gzyangweix_info:"锁定技，杀死你的角色获得技能〖耀武〗。",
			gzshiyongx:"恃勇",
　　　　　　gzshiyongx_info:"锁定技，当你使用的【杀】被【闪】抵消时，视为对其使用一张【决斗】（不可被【无懈可击】响应）。",
			gzliehunx:'烈魂',
			gzliehunx_info:'当你死亡时，你可令一名其他角色执行一项：摸X张牌，然后弃置一张牌；或摸一张牌，然后弃置X张牌（X为你已损失的体力值）',
			gzzhanshenx:'战神',
			gzzhanshenx_info:'当你明置此武将牌时，你可以视为使用一张无距离限制的【杀】（此【杀】不计入使用次数）。',
			gzxiechan:"挟缠",
			gzxiechan_info:"限定技，出牌阶段，你可以与对手拼点。若你赢，视为你对其使用一张【决斗】；若你没赢，视为其对你使用一张【决斗】。",
			gzdangkou:"荡寇",
			gzdangkou_info:"出牌阶段开始时，你可以横置至多3名角色的武将牌",
            gzchunyinx:"醇饮",
            gzchunyinx_info:"准备阶段，你可以令一名其他角色选择一项，然后你选择另一项：1.摸一张牌；2.弃置一张牌。若以此法令你弃置牌，视为你使用一张基本牌。",
			gzqianju:'千驹',
			gzqianju_info:'结束阶段，你可以摸一张牌并可以使用之',
			gzqingxi:'倾袭',
			gzqingxi_info:'主将技，你计算体力上限时减少1个单独的阴阳鱼。限定技，出牌阶段，若你的手牌数小于你当前的体力值，你可以移除副将，展示并弃置所有手牌，每弃置一张牌便对所有敌方角色视为使用一张雷属性的【杀】 ',
			gzaoshix:"傲狮",
			gzaoshix_info:"你死亡时，可以指定一名其他角色获得技能〖飞影〗直到游戏结束",
			gzfengpo:"凤魄",
			gzfengpo_info:"当你对距离为1的角色使用【杀】造成了伤害后，你可以弃置一张手牌执行以下效果：基本牌：你摸一张牌；装备牌：令该伤害+1；锦囊牌：你可令目标角色弃置至多X张牌（X为目标角色当前的体力值且至多为2）",
			gzlianji:'连计',
			gzlianji_info:'每回合限一次，当你使用卡牌造成一次伤害后，你可以进行一次判定，若结果为黑色，你收回此牌',
			gzmoucheng:'谋逞', 
            gzmoucheng_info:"限定技，出牌阶段，你可以选择一名角色（含自己），令其摸3张牌，随后攻击范围内含有该角色的所有角色视为对其使用1张【杀】。若该角色与你势力相同，其可以变更副将",
			gzhuxiao:'虎啸',
			gzhuxiao_info:'出牌阶段限一次，你可以将一张红色牌当作火【杀】使用，此【杀】只能用与之花色相同的【闪】响应；若此【杀】造成了伤害，你本回合可以额外使用一张【杀】',
			gzxueji:"血祭",
			gzxueji_info:'主将技，你计算体力上限时减少1个单独的阴阳鱼。出牌阶段限一次，你可以弃置一张红桃牌并选择你攻击范围内的至多X名角色（X为你已损失的体力值且至少为1），然后你对这些角色各造成1点火焰伤害，这些角色各摸一张牌',
			gzjinjiu:"禁酒",
			gzjinjiu_info:"锁定技，濒死阶段限一次，在你的回合内进入濒死状态的角色，只能被【桃】救回，然后使用【桃】的角色须弃置一张红色牌，否则受到你造成的一点伤害。",
            gzshangao:"禅诰",
            gzshangao_info:"限定技，当你处于濒死状态时，你可以移除此武将牌，令一名其他角色获得“天命”若如此做，你回复2点体力并摸2张牌",
            gztianming:"天命",
            gztianming_info:"出牌阶段限一次，你可以与一名其他角色拼点。以此法赢的角色选择一项：1.使用一张拼点牌；2.流失1点体力",
            gzluoying:"落英",
            gzluoying_info:"你的回合外，当你的梅花手牌进入弃牌堆或你的装备区失去牌时，你可以进行一次判定：若为黑色，你可以对一名角色造成一点雷电属性伤害；若为红色，你可以获得判定牌",
            gzzuifu:"醉赋",
            gzzuifu_info:"当你受到伤害后，你可以与伤害来源猜拳，若你赢，你可以将一张【乐不思蜀】置入其判定区；若你输，你可以摸一张牌，然后选择是否变更副将（平局则重来）。",
            gzbifa:"笔伐",
            gzbifa_info:"准备阶段，你可以展示一张【杀】，然后令一名其他角色选择一项：1.展示一张【闪】；2.弃置1张手牌",
            gzwuyix:"无遗",
            gzwuyix_info:"当你受到伤害后，你随机发现一项技能，直到你再次受到伤害（替换以此法获得的前一个技能）。",
            gzduliang:"督粮",
            gzduliang_info:"结束阶段，你可以将一张黑色基本牌当【兵粮寸断】置于你判定区里，然后摸2张牌",
            gzfulin:"腹鳞",
            gzfulin_info:"当你受到伤害后，若你判定区里有牌，你可以与伤害来源交换判定区的所有牌",
            gzzhuikong:"惴恐",
            gzzhuikong_info:"当你成为牌的目标后，你可以弃置至少1张牌。当此牌结算后，你可以摸1张牌",
            gzqiuyuan:"求援",
            gzqiuyuan_info:"回合外，若你没有手牌，其他角色可以替你使用或打出一张基本牌",
            gzhuaiju:"怀橘",
            gzhuaiju_info:"结束阶段，你可以交给一名其他角色至少2张红色牌，然后摸3张牌",
            gzzhenglun:"整论",
            gzzhenglun_info:"当你每回合第X次使用牌时，你可以观看牌堆顶的第X张牌，然后可以弃置之",
            gzkannanx:"勘难",
            gzkannanx_info:"当你一次失去至少两张牌后，你可以对一名体力值大于你的其他角色造成1点伤害。",
            gzchuhuaix:"褚怀",
            gzchuhuaix_info:"你受到致命伤害时，你可以移除你与伤害来源的副将牌，防止之。",
			gzzhigex:'止戈',
			gzzhigex_info:'每轮限一次，当你成为一名其他角色的卡牌唯一目标时，你可以发现一张牌代替此牌（回合结束时，若场上人数不大于4，则〖止戈〗修改为“每三轮限一次”）。',
			gzzhigey:'止戈',
			gzzhigey_info:'每三轮限一次，当你成为一名其他角色的卡牌唯一目标时，你可以发现一张牌代替此牌。',
			gzchishenx:'止戈',
            gzhongde:"弘德",
            gzhongde_info:"当你一次失去至少两张牌后，你可以令一名其他角色摸一张牌",
            gzdingpan:"定判",
            gzdingpan_info:"出牌阶段限一次，你可以让一名装备区里有牌的其他角色摸一张牌并选择一项:1.执行军令并获得自己装备区所有牌；2.令你获得一张其装备区的牌",
            gzyizan:"翊赞",
            gzyizan_info:"你可以将X张手牌当基本牌使用或打出。若为使用，你可以指定至多X名角色为目标（X为你当前体力值，且至少为2，每回合限2次）",
			gzyizanx:'翊赞',
			gzyizanx_info:'锁定技，若你的装备区没有防具牌，则你的手牌上限+1；若你的装备区无武器牌，你的进攻距离+1',
	        gzlongyuanx:"龙渊",
	        gzlongyuanx_info:"当你闪避一张【杀】后，若你与其手牌差不大于2，你可与目标交换手牌；若你的手牌数因此减少，你可以弃置其1张牌并变更副将。",
		    gzkaikang:'慷忾',
			gzkaikang_info:'当一名其他角色成为【杀】的目标后，若你至该角色的距离为1，你可以将此【杀】的目标改为你若如此做，你可以摸一张牌，此【杀】结算完成后，你观看并弃置该角色的一张牌',
		    gzmingzhe:'明哲',
　　　　　　gzmingzhe_info:'你的回合外，每当你因使用、打出或弃置而失去一张锦囊牌时，你可以摸一张牌',
			gzshifei:"饰非",
			 gzshifei_info:"当你没有手牌时，你可以将装备区里的一张牌当作【杀】、【闪】、【桃】或【酒】使用或打出",
			gzfencheng:'焚城',
			gzfencheng_info:'限定技。出牌阶段，你可令所有其他角色依次选择一项：弃置X张手牌；或受到1点火焰伤害。(X为该角色装备区里牌的数量且至少为1)',
			gzanxu:'安恤',
			gzanxu_info:'出牌阶段限一次，你可以令一名手牌数多于你的角色交给你一张牌，然后你交给一名手牌数少于你的角色一张牌。',
			gzjiejix:"截击",
			gzjiejix_info:"副将技，你计算体力上限时减少1个单独的阴阳鱼。当一名和你距离为1的角色的武器牌因弃置进入弃牌堆时,你获得该牌。",
			gztuishoux:'退守',
			gztuishoux_info:'每当你摸牌时，你可以额外摸一张牌，然后摸牌结束时将一张手牌置于牌堆顶',
			gzporuix:'破锐',
			gzporuix_info:'每当你成为其他角色的某张卡牌的惟一目标时，你可以弃置两张手牌，将使用者与目标对调',
            gzqirang:"祈禳",
            gzqirang_info:"每当你使用了一张装备牌，你可以亮出牌堆顶4张牌并获得其中的锦囊牌，然后将余下的牌置于牌堆底",
		    gzaocai:'傲才',
			gzaocai2:'傲才',
			gzaocai2_backup:'傲才',
			gzaocai3:'傲才',
			gzaocai_info:'当你于回合外需要使用或打出一张基本牌时，你可以观看牌堆顶的两张牌。若你观看的牌中有此牌，你可以使用打出之。',
			gzkuiyingx:"溃营",
			gzkuiyingx1:"溃营",
			gzkuiyingx_info:"出牌阶段限一次，你可以将所有手牌（至少一张）当做【杀】使用，若此【杀】造成伤害，你将手牌补至体力上限",
			gzhuanshi:'缓释',
			gzhuanshi_info:'其他角色的弃牌阶段结束时，你可以弃置一张手牌，令其弃置一张牌，若该角色弃置的牌为装备牌，你将之交给除该角色外的一名角色',
			gzcangshux:'藏书',
			gzcangshux_info:'出牌阶段，你可以移除此武将牌并选择一名角色，然后其获得技能〖汇籍〗，若你选择的目标角色不是自己，则你摸一张牌并回复一点体力',
			gzhuijix:'汇籍',
			gzhuijix_info:'出牌阶段限一次，你可以声明一种牌的类别，并亮出牌库中第一张符合你声明的牌，然后你令一名男性角色获得此牌',
			gzkanwux:'勘误',
			gzkanwux2:'勘误',
　　　　　  gzkanwux3:'勘误',
			gzkanwux_info:'结束阶段，你可以将一张手牌背面朝上置于你的武将牌上；当一名敌方角色使用一张与之颜色相同的锦囊牌时，你展示并移去此牌，取消锦囊的效果，然后摸一张牌；准备阶段，你移去武将牌上的“缄默”牌',
             gzjuenianx:"绝念",
             gzjuenianx_info:"限定技，若场上存活人数不大于5，你可以选择将所有角色区域内的所有牌置入弃牌堆（不触发技能），然后每个角色均可选择是否变更副将，你获得一个完整的阴阳鱼。",
			 gzliangzhu:'良助',
			 gzliangzhu_info:'主将技，每回合限一次，当一名角色于其出牌阶段内回复体力时，你可以选择一项：1、摸一张牌；2、令该角色摸两张牌',
　　　　　　 gzgongji:'弓姬',
			 gzgongji_info:'副将技，每当你失去一张装备牌，可以摸两张牌',
			 gzliangyuan:'良缘',
			 gzliangyuan_info:'锁定技，装备区内牌数大于你的角色非延时锦囊对你无效',
             gzzhixix:"掷玺",
             gzzhixix_info:" 当你失去牌后，你可以展示之。若如此做，其他角色不能使用与之相同名称的牌，直至回合结束。",
             gzmozuo:"末祚",
             gzmozuo_info:"出牌阶段限一次，你可以弃置一张黑色装备牌，获得弃牌堆里或场上的一张【玉玺】；当你成为【顺手牵羊】或【过河拆桥】的目标时，若你装备区有【玉玺】，则取消之",
			 gzjianxiang:"荐降",
			 gzjianxiang_info:"当你成为其他角色使用牌的目标时，你可令手牌数最少的一名角色摸一张牌",
			 gzshenshi1:"审时",
			 gzshenshi:"审时",
			 gzshenshi_info:"转换技，①出牌阶段限一次，你可以将一张牌交给一名有手牌且体力值大于1的角色，然后对其造成一点伤害②其他角色对你造成伤害后，你可以观看该角色的手牌，然后交给其一张牌，当前角色回合结束时，若该角色未失去此牌，你将手牌摸至四张",
　　　　　　 gzrushi:"入世",
             gzrushi_info:"转势技，在回合开始时，若你的体力值为1或你没有手牌，则你可以将势力变更为群，获得技能〖涅槃〗（新）",
             gzmanjuan:"漫卷",
             gzmanjuan_info:"结束阶段，你可以从弃牌堆中获得本回合使用的前两张黑色牌",
             gzniepanx:"涅槃",
             gzniepanx_info:"限定技，当你濒死时，可以观看5名未登场的角色，将武将牌替换为其中一名角色，然后将体力回复至上限",
			 gzshenyingx:'神影',
			 gzshenyingx_info:'弃牌阶段结束时，若你于此阶段弃置的所有牌花色均不相同，则你可以弃置一名其他角色的一张牌。',
			  gzshoudaox:'授道',
			  gzshoudaox_info:'出牌阶段，你可以移除此武将牌并选择一名角色，然后其获得技能〖天音〗，若你选择的目标角色不是自己，则你回复一点体力',
		      gztianyinx:'天音',
              gztianyinx_info:"锁定技，当友方角色使用【杀】对目标角色造成伤害后，其进行判定，若结果为黑桃，友方角色各摸一张牌",
			  gzyanyu:'燕语',
			  gzyanyu2:'燕语',
			  gzyanyu_info:'出牌阶段，你可以重铸【杀】；出牌阶段结束时，若你于此阶段以此法重铸了至少两张【杀】，你令一名男性角色摸两张牌,其可以变更副将',
			  gzdaiyan:'怠宴',
			  gzdaiyan_info:'出牌阶段限一次，你可以将一张红色手牌交给一名非蜀势力角色，然后选择一个“军令”，然后令其选择一项：执行该军令，然后你摸一张牌；或令你回复一点体力',
              gzfumian:"福绵",
              gzfumian_info:"转换技，①锁定技，你摸牌阶段多摸一张牌，本回合你使用基本牌可以额外指定一名其他角色为目标②锁定技，你摸牌阶段少摸一张牌，本回合你使用锦囊牌可以额外指定任意一名其他角色为目标或减少指定一个目标",
			  gzgoufanx:"构反",
			  gzgoufanx_info:"纵横技，当你明置此武将牌时，你可以成为“野心家”，然后观看3名未登场的角色，用其中一张武将牌替换另一武将。",
			  gzzilix:"自立",
			  gzzilix_info:"纵横技，当你明置此武将牌时，你可以将势力变更为“野心家”，然后观看3名未登场的角色，用其中一张武将牌替换另一武将。",
			  gzjuedi:'绝地',
			  gzjuedi_info:'副将技，每回合限三次，当你失去最后一张手牌，你可以视为使用一张无视距离的【杀】，若此【杀】造成伤害，你摸一张牌',
			  gztijinx:'替巾',
			  gztijinx_info:'主将技，锁定技，当你受到【杀】造成的伤害时，你与伤害来源交换主将牌',
			  gzyongdi:'拥嫡',
			  gzyongdi_info:'限定技，在回合开始时，你可令一名其他男性角色获得一个完整的阴阳鱼。若该角色与你势力相同，其可以变更副将，然后你与其各摸一张牌。',
              gzhuace:"话策",
              gzhuace_info:"转势技，当一名角色阵亡后，你可以移除另一张武将牌并将势力变更为吴，获得技能〖平夷〗，并将体力回复至上限",
              gzgongqing:"公清",
              gzgongqing_info:"出牌阶段各限一次，你可以将一张普通锦囊牌当做任意一张普通锦囊牌使用，或将一张延时锦囊牌当做任意一张延时锦囊牌使用。",
             gzgongqing1:"公清_锦囊",
             gzgongqing1_info:"",
             gzgongqing2:"公清_延时",
             gzgongqing2_info:"",
             gzfengliang:"逢亮",
             gzfengliang_info:"转势技，一名蜀势力的其他角色出牌阶段开始时，你可以将所有手牌交给该角色，若如此做，你移除另一张武将，将势力变更为蜀，获得技能〖承志〗，并将体力回复至上限",
             gztiaoxin:"挑衅",
             gztiaoxin_info:"副将技，你可以指定一名攻击范围内包含你的角色，该角色需对你使用一张【杀】，否则你弃置其一张牌（出牌阶段限一次）",
			gzchengzhi:'承志',
			gzchengzhi_info:'限定技，出牌阶段，你可以视为使用一张【万箭齐发】并摸2张牌获得技能〖龙胆〗、〖咆哮〗，若如此做，你在此阶段结束时死亡',
            gzzezhu:"择主",
            gzzezhu_info:"转势技，在回合开始时，若你不是大势力，你可以移除另一武将牌将势力变更为魏，替换〖夜袭〗为〖恃才〗，并将体力回复至上限",
　　　   　 gzchenggong:"逞功",
            gzchenggong_info:'一名角色使用牌指定目标后，若目标数不小于2，你可以令其摸一张牌',
			gzfuzhu:'伏诛',
			gzfuzhu_info:'限定技，你可以弃置任意张颜色不同的牌，令另一名其他角色弃置等量的牌，若其弃置的牌中有颜色相同的牌，你对其造成一点火焰伤害，并摸两张牌',
			gzwengua:'问卦',
			gzwengua_info:'出牌阶段限一次，你可以摸一张牌并弃置两张牌，若弃置的牌花色相同，你获得一张随机装备牌并展示；若弃置的牌点数相同，你获得一张随机锦囊牌并展示',
            gzjishoux:"祭首",
            gzjishoux_info:"锁定技，当一名吴势力角色阵亡后，你重置技能〖伏诛〗",
			gzkundun:'困顿',
			gzkundun_info:'结束阶段，你可以失去1点体力，然后摸两张牌',
			gzkunfen:'困奋',
			gzkunfen_info:'结束阶段，你可以失去1点体力，然后摸两张牌；每当你失去体力时，你可以令一名角色摸1张牌并对其造成一点伤害',
			gzpingyi:'平夷',
			gzpingyi2:'平夷',
			gzpingyi_info:'结束阶段，你可以弃置一张红桃牌，若如此做，你可以在下个准备阶段令一名距离1以内的角色回复一点体力或摸两张牌',
			gzjueqingx:'绝情',
			gzjueqingx_info:'锁定技，你造成或受到的伤害均视为无来源伤害。',
			gzshangshix:'伤逝',
			gzshangshix_info:'当你距离1以内的角色受到伤害后，你可以摸X张牌（X为此伤害的点数）。',
			gztiansuo:'天锁',
			gztiansuo_info:'出牌阶段限一次，你可以弃置一张牌，选择一项：横置一名未横置角色，该角色摸一张牌；或重置一名已横置角色，该角色弃置一张手牌；锁定技，若你的武将牌横置，则其他角色计算至你的距离+1。',
		    gzchuji:'初绩',
			gzchuji_info:'副将技，限定技，出牌阶段，你可以选择一个“军令”，然后与你势力相同的其他角色可以执行该军令（未确定势力角色可以在此时明置一张武将牌），你与所有执行该军令的角色获得“帷幄”，并回复一点体力',
		    gzweiwox:'帷幄',
			gzweiwox_info:'摸牌阶段，你可以多摸一张牌',
		    gzchenglve:'成略',
			gzchenglve_info:'副将技，限定技，出牌阶段，你可以选择一个“军令”，然后与你势力相同的其他角色可以执行该军令（未确定势力角色可以在此时明置一张武将牌），你与所有执行该军令的角色获得【狂言】，并回复一点体力',
			gzkuangyan:'狂言',
			gzkuangyan_info:'结束阶段，你可以摸一张牌',
			gzlianzhu:"连诛",
			"gzlianzhu_info":'出牌阶段限一次，你可以将一张手牌交给一名其他玩家，若此牌是黑色你令其选择一项，弃置两张手牌或者令你摸两张牌。若该角色与你势力相同，其可以变更副将',
			gzquji:'去疾',
			gzquji_info:'结束阶段，你可以令一名其他角色复原武将牌并移除判定区内的牌；若其体力值是全场最少的之一，其回复一点体力',
			gzjunbing:'郡兵',
			gzjunbing_info:'一名与你同势力的角色的结束阶段开始时，若其手牌数不大于1，该角色可以摸一张牌若如此做，该角色将所有手牌交给你，然后你交给其等量的牌',
			gzshibei:'矢北',
			gzshibei_info:'当你受到伤害后，你可以亮出牌堆顶X+2张牌，获得其中的非基本牌，然后将余下的置入弃牌堆（X为群势力角色数的一半，向上取整）',
			gzshanjiax:'缮甲',
			gzshanjiax_info:'一名其他角色的结束阶段开始时，若该角色本回合造成过伤害，你可以令其弃置你的一张手牌。若此牌为【杀】，则你摸一张牌；若此牌不为【杀】，视为你对其使用了一张【杀】。 ',
			gzgongjix:"弓骑",
			gzgongjix_info:"每回合限一次，你可以将一张装备牌当做【杀】使用或打出,你以此法使用的【杀】无距离限制。",
			gzjiefan:"解烦",
			gzjiefan_info:"主将技，你计算体力上限时减少1个单独的阴阳鱼。每回合限一次，当你使用的牌造成伤害时，你可以将此牌交给一名其他角色，然后摸一张牌",
			gzzhanjue:"战绝",
			gzzhanjue2:"战绝",
			gzzhanjue_info:"出牌阶段限一次，你可以将任意两张相同类型的手牌当作【决斗】使用；当你因【决斗】受到或造成伤害后，伤害来源摸一张牌",
			gzlixianx:'礼贤',
			gzlixianx_info:'结束阶段，你可以展示所有手牌，若你的所有手牌颜色均相同，你弃置场上的所有判定牌。',
			gzkuangbi:'匡弼',
			gzkuangbi_info:'出牌阶段限一次，你可观看1名其他吴势力角色的手牌并重铸其中至多2张牌。若重铸的2张手牌类型相同，其可以变更副将。',
            gzgetingx:"隔听",
            gzgetingx_info:"出牌阶段限一次，你可以观看一名其他角色所有手牌（至少一张），然后选择一项：1.展示其一张手牌并摸一张牌；2.将其一张手牌置于牌堆顶。",
            gzhuiyux:"毁誉",
            gzhuiyux_info:"结束阶段，你可以展示牌堆顶的一张牌，然后可以弃置场上与之相同花色的一张牌。",
			gzxianzhou:'献州',
			gzxianzhou2:'献州',
			gzxianzhou3:'献州',
			gzxianzhou_info:'限定技，你可以与场上一名男性角色形成“联盟”状态，若该角色与你势力相同，其可以变更副将。（联盟：你与该男性角色于摸牌阶段摸牌数+1你或者男性角色阵亡时，“联盟”状态消失）',
			gzzhenlie:'贞烈',
			gzzhenlie_info:'当你成为其他角色使用牌的目标后，你可以受到一点无来源伤害并令此牌对你无效，然后弃置对方一张牌',
			gzxiehui:'黠慧',
			gzxiehui2:'黠慧',
			gzxiehui_info:'锁定技，你的黑色牌不计入手牌上限；其他角色获得你的黑色牌后，不能使用、打出或弃置此手牌，直到其下个回合开始。',
			gzbaier:"白耳",
　　　　　　gzbaier_info:"每当你闪避【杀】后，你可以摸一张牌",
			gzmouzhu:'谋诛',
　　　　　　gzmouzhu_info:'出牌阶段限一次，你可以令一名有牌的其他角色交给你一张牌。若其手牌数不小于你，且你的身份不为“野心家”，则你可以变更副将，否则其选择视为对你使用一张【杀】或【决斗】',
			gzqinwang:'勤王',
			gzqinwang_info:'限定技，当一名角色进入濒死状态时，你可以弃置所有手牌并令其回复体力至1点，然后你获得一个“珠联璧合”标记。',
			gzmingjian:'明鉴',
			gzmingjian2:'明鉴',
			gzmingjian2_info:'',
			gzmingjian_info:'出牌阶段开始时，你可以将所有手牌交给一名其他角色然后你结束此阶段，其执行一个出牌阶段',
			gzhuituox:'恢拓',
　　　　　　gzhuituox_info:'每当你于回合外受到伤害后，你可以摸一张牌，并可以使用一张牌',
			gzyingjian:'影箭',
			gzyingjian_info:'准备阶段开始时，你可以视为对一名角色使用一张无距离限制的【杀】。若此【杀】造成伤害，你弃置一张牌。',
			gzqinguox:"勤国",
			gzqinguox_info:"锁定技，每当你受到一次伤害，你须观看牌堆顶的三张牌，然后指定一名有手牌角色，用这些牌交换其手牌。",
			gzshenmoux:"深谋",
			gzshenmoux_info:"当你使用【杀】指定一名角色为目标后，你可以与其交换一张手牌。",
			gzfujian:'伏间',
			gzfujian_info:'结束阶段，若你本回合造成的伤害不小于你当前体力值，你选择一项：1. 观看一名角色的手牌并可以弃置其中的一张；2.变更一次副将。',
            gzguoshangx:"国殇",
            gzguoshangx_info:"回合阶段开始时，你可以选择拥有“倾国”或“行殇”直到你的下个回合开始",
			gzlingren:"凌人",
			gzlingren_info:"每回合限一次当你于出牌阶段使用带有「伤害」这一标签的基本牌或普通锦囊牌指定目标后，你可以猜测其中的一个目标的手牌中是否有基本牌，锦囊牌或装备牌。每猜对一项，你便摸一张牌，若全部猜对，你本回合出【杀】次数+1。",
			gzdanxinx:'殚心',
			gzdanxinx_info:'主将技，当你受到伤害后，你可以将一张手牌交给一名其他角色。若如此做，视为对你选择的一名角色使用一张无视距离的【杀】。',
			gzjiaozhao:'矫诏',
			gzjiaozhao_info:'限定技，出牌阶段，你可以复制一名其他角色的一项技能（限定技、君主专属技能等除外）。',
			gzsheliex:'涉猎',
			gzsheliex_backup:'涉猎',
			gzsheliex_info:'出牌阶段限一次，你可以多次观看牌堆顶的X张牌，直至你选择一张使用之（X为现存势力数，且至少为1）',
			gzjingce:'精策',
			gzjingce_info:'结束阶段，若你本回合使用的牌数量大于或等于你的当前体力值，你可以摸两张牌并变更副将',
			gzjingcex:'精策',
			gzjingcex_info:'出牌阶段结束时，你可以摸X张牌（X为你本阶段内使用过的牌的类型数）。若你本回合使用的牌数量大于或等于你的当前体力值的2倍，你可以变更副将',
			gzbangjun:'谤君',
			gzbangjun_info:'副将技，当你受到伤害后，可弃置1张手牌以移动场上1张牌，若有角色因此失去了区域内最后1张牌，你可对其造成1点伤害。',
            gzshenxian:"甚贤",
            gzshenxian_info:"结束阶段，若你于此回合内造成过X点或更多伤害，你可以将手牌补至体力上限（X为你当前体力值），并选择是否变更副将",
            gzsijunx:"肆军",
            gzsijunx_info:"限定技，当你累计受到4点伤害后，回合开始时，你可以令两名其他角色交换主将牌。",
			gzzishoux:'自守',
			gzzishoux2:'自守',
			gzzishoux_info:'同势力角色的出牌阶段开始时，你可令其交给你一张手牌，若此牌不为基本牌，其可以变更副将，你直到下个回合开始视为拥有〖飞影〗',
			gzzongshix:'宗室',
			gzzongshix1:'宗室',
			gzzongshix_info:'出牌阶段结束时，若你于本回合未造成过伤害，则你可以投掷一枚六面骰子，展示牌堆顶的X张牌并获得其中一张（X为骰子的点数），且本回合手牌上限+2。',
			gzkangyin:'亢音',
			gzkangyin_info:'你可以跳过出牌阶段，改为摸三张牌并展示之，将摸到的装备牌置于装备区，然后可以使用手牌中的【杀】',
			gzcanmengx:'残梦',
			gzcanmengx_info:'出牌阶段限一次，你可以弃置两张花色相同的牌，视为使用一张本局未使用过的普通锦囊牌。',
			gzhunwux:'魂舞',
			gzhunwux_info:'限定技，回合结束时，你可令一名其他角色获得一个完整的阴阳鱼。若该角色性别为男，其获得技能〖助祭〗。',
			gzfuji:'助祭',
			gzfuji_info:'当一名角色造成属性伤害时，你可以令其进行判定，若结果为黑色，此伤害+1；若结果为红色，该角色获得判定牌。',
			gzlongyin:'龙吟',
			gzlongyin_info:'每回合限一次，当一名角色于其出牌阶段使用【杀】时，你可弃置一张牌令此【杀】不计入出牌阶段使用次数，若此【杀】为红色，你摸一张牌',
			gzjianying:'渐营',
			gzjianying_info:'转换技，锁定技，①当你于出牌阶段内使用与此阶段你使用的上一张牌点数相同的牌时，你可以摸一张牌；②当你于出牌阶段内使用与此阶段你使用的上一张牌花色相同的牌时，你可以摸一张牌。',
			gztuifeng:'推锋',
			gztuifeng2:'推锋',
			gztuifeng_info:'1.当你受到1点伤害后，你可以将一张牌置于武将牌上，称为“锋”2.准备阶段开始时，若你的武将牌上有“锋”，你移去所有“锋”，摸X+1张牌，然后你于此回合的出牌阶段内使用【杀】的次数上限+X（X为你此次移去的“锋”数）',
			gzliangyin:'良姻',
			gzliangyin_info:'锁定技，每当你使用一张非装备牌，你随机重铸一张与其花色相同的手牌；若没有花色相同的手牌，改为随机重铸一张与其颜色相同的手牌',
            gzkongsheng:"箜声",
            gzkongsheng_info:"每当你的一张装备区的红色牌进入弃牌堆时，你可以选择一名角色，对其造成一点火焰伤害（替换装备、将装备牌视作其他牌打出等无法触发此效果）",
            gzchoulvex:"筹略",
            gzchoulvex_info:"当你受到伤害后，你可以摸一张牌，观看一名其他角色的手牌且可仅对其使用一张伤害牌。",
            gzpolux:"破橹",
            gzpolux_info:"锁定技，当其他角色受到你【杀】的伤害后，其选择一项：1.弃置装备区里的武器牌和进攻坐骑牌；2.弃置装备区里的防具和防御坐骑牌。",
            gzshenshix:"审势",
            gzshenshix_info:"阶段技，你可以令一名手牌数小于你的其他角色摸一张牌，并令其选择一项：1.令你弃置其一张牌；2.重置“知人”。",
			gzzhongjian:'忠鉴',
			gzzhongjian_info:'出牌阶段限一次，你可以展示自己的一张手牌，然后展示一名其他角色的一张手牌，展示的牌中：若花色相同，你到下回合开始时拥有技能〖节命〗、 〖佐定〗；若点数相同，你到下回合开始时拥有技能〖狼顾〗、〖权计〗（旧）；若均不同，其摸一张牌，然后弃一张牌',
			gzzhongjianx:'忠鉴',
			gzzhongjianx_info:'出牌阶段限一次，若你的手牌数不大于你的体力上限，则你可以展示你的手牌，观看牌堆顶相同数量的牌并以任意方式交换之',
            gzcaishi:"才识",
            gzcaishi_info:"出牌阶段限一次，你可以观看一名其他角色的手牌，然后可以用一张手牌替换其中的一张",
			gzqizhou:'绮胄',
			gzqizhou_info:'副将技，你计算体力上限时减少1个单独的阴阳鱼。每当你失去最后一张装备牌，你可以获得一名其他角色的一张牌。',
			gzshanxi:'闪袭',
			gzshanxi_info:'每回合限一次，当一名其他角色使用一张装备牌时，你可以弃置一张手牌视为对其使用一张【杀】。若此【杀】造成了伤害，你可以弃置其一张牌，若此牌为装备牌，你可以立即使用之。',
            gzxiashu:"下书",
            gzxiashu_info:"出牌阶段限一次，你可以将一张牌交给一名角色，然后该角色可以使用该牌并令你摸一张牌",
			gzkuanshi:"宽释",
			gzkuanshi_info:"当你对体力值小于你的角色使用【杀】时，你可以摸一张牌；手牌数大于你的角色对你使用【杀】时，你可以摸一张牌",
            gzniluan:"逆乱",
            gzniluan_info:"一名角色结束阶段开始时，若其体力值不小于你的体力值，你可以对其使用一张【杀】",
            gzxiaoxi:"骁袭",
            gzxiaoxi_info:"当一名角色死亡时，你可以选择一名攻击范围内的角色，将一张黑色牌当做【杀】对其使用。",
			gzjiqiao:'机巧',
			gzjiqiao_info:'出牌阶段开始时，你可以弃置X张装备牌，然后亮出牌堆顶（X+Y）张牌并获得其中的锦囊牌（Y为当前存活势力数）',
			gzguijix:'归骑',
			gzguijix_info:'纵横技，锁定技，其他魏势力角色进入濒死状态时，若你为伤害来源，则你弃置所有牌，将势力变更为“蜀”，将另一武将替换为“关平”，获得技能〖义绝〗和“珠联璧合”标记。',
			gzdanjix:'单骑',
			gzdanjix_info:'锁定技，当你失去手牌后，若手牌数少于2，你将手牌数补至2。',
			gzhuweiz:'虎威',
			gzhuweiz_info:'出牌阶段限一次，你可以弃置所有红色手牌，视为使用一张【万箭齐发】。',
			gznuzhanx:'怒斩',
			gznuzhanx_info:'锁定技，当你在回合内使用第二张牌时，你本回合获得【虎啸】；当你在回合内使用第三张牌时，你本回合获得【单骑】；当你在回合内使用第四张牌时，你本回合获得【虎威】。',
			gzjilei:'鸡肋',
			gzjilei_info:'当你受到伤害后，你可弃置一张牌，若该牌与对你造成伤害的牌花色相同，你回复1点体力；当你受到大于1点的伤害时，你改为流失一点体力',
			gzzongshi:'纵适',
			gzzongshi_info:'当你成为单体非延时锦囊的目标时，你摸一张牌',
			gzfenxin:'焚心',
			gzfenxin_info:'限定技，出牌阶段，若游戏轮数不小于2,你可以移除一名角色的主将，令其体力上限调整为3，并获得“国战三件套”（珠联璧合、先驱、阴阳鱼三个标记）',
            gzhunjix:"魂继",
            gzhunjix_info:"回合阶段开始时，你可以选择本回合拥有“神戟”或“离间”",
			gzqingguox:'倾国',
			gzqingguox_info:'你可以将一张黑色手牌当做【闪】使用或打出。',
			gzxingshangx:'行殇',
			gzxingshangx_info:'当有角色死亡后，你可以获得该角色的所有牌。',
			gzshenjix:'神戟',
			gzshenjix_info:'锁定技，你使用【杀】指定的目标数上限+1，次数上限+1',
			gzlijianx:'离间',
			gzlijianx_info:'出牌阶段限一次，你可以弃置一张牌，视为一名男性角色对另一名男性角色使用一张【决斗】（不可被【无懈可击】响应）',
			gzqiaomeng:'趫猛',
			gzqiaomeng_info:'当你使用【杀】对目标角色造成伤害时，你可以弃置一张坐骑牌，令此伤害+1。',
            gzyishuai:"义率",
            gzyishuai_info:"限定技，当你累计造成4点伤害后，回合开始时，你获得技能〖趫猛〗。",
			gzdanshou:'胆守',
			gzdanshou_info:'出牌阶段各限一次，你可以选择一名攻击范围内的其他角色，若你与其手牌数：①均小于2，你可以观看牌堆顶的两张牌，你获得一张并交给其另一张；②均大于2，你可以弃置一张手牌，然后观看并弃置其一张手牌；③均为2，你可以与其交换手牌',
			gztianbian:'天辩',
			gztianbian_info:'当两名角色进行拼点时拼点牌亮出之前，你可以交换拼点牌。',
			gzjianzheng:'谏征',
			gzjianzheng_info:'出牌阶段限一次，你可以猜测手牌中黑色牌最多的角色是谁，若猜对，你可以观看所有其他角色的手牌并获得任意一张',
			gzmumux:'穆穆',
			gzmumux2:'穆穆',
			gzmumux_info:'结束阶段，若你于本回合内未使用过锦囊牌，你可以令一名其他角色直到其回合结束无法使用锦囊牌',
            gzsheyan:"舍宴",
            gzsheyan_info:"当一名其他角色在其阶段内使用第X张牌时（X为你已损失的体力值），若该牌不是装备牌，你可以弃置一张手牌令该牌无效，如果你弃置了一张非基本牌，你摸一张牌。",
			gzrangyi:'攘夷',
			gzrangyi_info:'出牌阶段限一次，你可以将所有手牌交给一名其他角色，然后令其选择一项：1.使用其中的一张牌，然后将其余的牌交还给你。2.受到来自你的1点伤害。',
			gzbenxi:'奔袭',
			gzbenxi_info:'锁定技，每当你使用黑色牌指定一名其他角色为目标后，目标随机弃置一张牌；每当你以此法累计弃置4张牌后，你摸一张牌',
			gzdangxian:'当先',
			gzdangxian_info:'锁定技，准备阶段，你执行一个额外的出牌阶段。此阶段开始时，你可以失去1点体力并从牌堆/弃牌堆中获得一张【杀】。',
			gzranshangx:"燃殇",
			gzranshangx_info:"锁定技，当你成为【火攻】、【火烧连营】的目标时，该牌结算后，你弃置一张牌；【南蛮入侵】、【万箭齐发】对你无效",
			gzhanliex:"悍烈",
			gzhanliex_info:"弃牌阶段开始时，你可使用一张牌，若如此做，你摸一张牌",
			gzxianfux:'先辅',
			gzxianfux2:'追思',
			gzxianfux2_info:'锁定技，你的手牌上限不会因体力值的减少而减少。',
			gzxianfux_info:'你死亡时，可以将所有牌交给一名其他角色，令其获得技能〖追思〗',
			gzchoucex:'筹策',
			gzchoucex2:'筹策',
			gzchoucex_info:'每当你的体力值发生改变，你摸等量的牌；每当你杀死一名角色，你回复一点体力，可以变更副将（副将变更效果可多次发动）',
			gzzaoshang:'早殇',
			gzzaoshang_info:'限定技，你可以令所有体力值为全场最少的角色随机弃置一张手牌；若没有手牌，改为受到1点伤害',
			gzmeibux:'魅步',
			gzmeibux_info:'其他角色的摸牌阶段开始时，你可以与其拼点，若你赢，你摸两张牌，然后将两张牌置于牌堆顶',
			gzzishux:'自书',
			gzzishux2:'自书',
			gzzishux3:'自书',
			gzzishux_info:'出牌阶段，你可以将一张红色装备牌置于一名其他角色的武将牌上，该角色在下一次造成伤害时受到来自你的一点火属性伤害并随机弃置一张牌，然后移去此牌。',
			gzwurongx:'怃戎',
			gzwurongx_info:'出牌阶段开始时，你摸X张牌并弃置X张牌，若你弃置了【杀】，可以视为使用一张【决斗】（X为你已损失的体力值且至少为1）',
            gzqianchongx:"谦冲",
		    gzqianchongx_info:"转换技，①出牌阶段限一次，你可以交给一名其他角色一张牌，然后你可观看其手牌；②出牌阶段限一次，你可以获得一名其他角色一张牌，然后其可以观看你的手牌。",
		    gzshangjianx:"尚俭",
		    gzshangjianx_info:"每当一名其他魏势力角色使用黑桃牌后，你可以与其各摸一张牌，每名角色回合限一次。",
			gzfanghunx:'芳魂',
			gzfanghunx_info:'当你受到一次伤害后，你可以获得与伤害值等量的“芳魂”标记，并摸一张牌，弃一张牌；锁定技，你的手牌上限+X（X为你“芳”的数量的一半，向上取整）。',
			gzfuhanx:'扶汉',
			gzfuhanx_info:'限定技，回合开始时，你可以获得场上已死亡角色武将牌上的至多两个技能，然后移去另一武将牌及所有“芳魂”标记,摸X张牌（X为芳魂标记的一半，向下取整）。',
            gzxiyingx:"袭营",
            gzxiyingx_info:"出牌阶段开始时，你可以弃置一张牌令攻击范围内的所有其他角色选择一项：1.弃置一张牌；2.本回合内不能使用或打出牌。",
			gzzhongyongx:'忠勇',
			gzzhongyongx_info:'当你使用的【杀】结算完毕后，你可以将此【杀】或目标角色使用的【闪】交给一名该角色以外的其他角色。',
			gzyanjux:"艳锯",
			gzyanjux_info:"每轮限一次，当一名角色于其回合内使用【杀】造成伤害后，你可令其摸一张牌，然后你摸一张牌，结算完毕后其结束出牌阶段。",
			gzqiangzhi:"强识",
			gzqiangzhi_info:"出牌阶段限一次，你可以令一名其他角色摸一张牌再交给你一张手牌",
            gzchoujuex:"仇诀",
            gzchoujuex_info:" 一名角色的回合结束时，若你于此回合内造成或受到过伤害，你可以将牌堆顶的一张牌置于你的武将牌，称为“仇”；出牌阶段，你可以移去两张“仇”移动到任意一名角色的前一位，视为对其使用了一张不计入次数的【杀】。",
            gzchoujuex2:"仇诀",
            gzchoujuex2_info:"",
            gzlvlix:"膂力",
            gzlvlix_info:"锁定技，准备/结束阶段，你开启/关闭鏖战模式。",
            gzfenglvex:"锋略",
            gzfenglvex_info:"出牌阶段限一次，你可以与一名其他角色拼点。拼点赢的一名角色可以获得一张拼点牌，然后你获得另一张拼点牌。",
            gzyanyoux:"言游",
            gzyanyoux_info:"结束阶段，你可以与其他角色交换至少一张手牌。",
			gzfenglve:'锋略',
			gzfenglve_info:'出牌阶段开始时，你可以与一名角色拼点，若你赢，该角色将其区域内的各一张牌交给你；若你没赢，你交给其一张牌。',
			gzfuweix:"扶魏",
			gzfuweix_info:"当你受到伤害后，你可以视为对伤害来源使用了一张【杀】，若此【杀】造成了伤害，你摸一张牌",
			gzweizhongx:"威重",
			gzweizhongx_info:"回合开始阶段，你可以亮出牌堆顶至多X张牌并以任意数量的牌替换之，然后将余下的牌以任意顺序置于牌堆顶或牌堆底（X为你已损失的体力值）。",
			gzweizhong:'威重',
			gzweizhong_info:'限定技，你可以令一名角色的非锁定技失效直到回合结束',
			gzziyuan:'资援',
			gzziyuan_info:'限定技，出牌阶段你可以随机观看3张武将牌，选择一名角色，用其中一张替代其主将。',
			gzjugu:'巨贾',
			gzjugu_info:'限定技，出牌阶段你可以摸X+1张牌并弃置X张牌（X为存活角色数）',
			gzshangdao:'商道',
			gzshangdao_info:'全场每有一名与你势力相同的角色存活，你的手牌上限便+1',
			gzhanliex:'悍烈',
			gzhanliex_info:'限定技，你可以弃置一张手牌，移动到任意一名角色的前一位',
			gzzhidao:'雉盗',
			gzzhidao_info:'每两轮限一次，出牌阶段，你可以观看一名其他角色的手牌并获得其中一张，然后令目标获得一张【杀】。',
			gzfengchux:'凤雏',
			gzfengchux_info:'阵法技，回合开始时，若你与一名角色处于同一队列，本回合你拥有技能〖连环〗',
			gzwolongx:'卧龙',
			gzwolongx_info:'阵法技，回合开始时，若你在一个围攻关系中是围攻角色，本回合你拥有技能〖火计〗',
			gzshuijing:'水镜',
			gzshuijing_info:'阵法技，回合开始时，若你在一个围攻关系中是被围攻角色，本回合你拥有技能〖巧械〗',
			gzshuijingx:'巧械',
			gzshuijingx_info:'每回合限一次，当你使用一张牌指定惟一目标时，你可以复制对方装备区内的一张你没有的牌，并置入你的装备区',
			gzyuanzhi:'元直',
			gzyuanzhi_info:'纵横技，当一名其他角色进入濒死状态时，你可以失去一点体力使其体力值回复至1，然后你将该武将牌上的技能替换为〖评才〗，并将另一武将牌变更为“徐庶”。',
			gzwuniangx:'武娘',
			gzwuniangx_info:'当你使用或打出【杀】时，你可以获得一名其他角色的一张牌。若如此做，其摸一张牌。（若你已发动许身，则关索也摸一张牌）',
			gzxushenx:"许身",
			gzxushenx2:'许身',
			gzxushenx_info:"纵横技，限定技，当你进入濒死状态后，你可以将体力回复至1，若场上没有“关索”，你可令一名其他角色选择是否用“关索”代替其武将。",
			gzxiefangx:"撷芳",
			gzxiefangx_info:"出牌阶段限一次，你可以弃置X张手牌（X为场上女性角色的数量），然后你可以获得至多X名角色的各一张牌。若你以此法获得的牌不少于两张，则你失去1点体力，可以选择变更副将。",
			gzhuawu:'花武',
			gzhuawu_info:'限定技，当场上其他角色死亡时，你可以选择与其交换主将牌。',
			gzcuikex:'摧克',
			gzcuikex_info:'限定技，出牌阶段对非吴势力角色（含暗置武将）中体力值最高的一名随机角色造成一点火焰伤害，然后对场上体力值最高的所有角色各造成一点火焰伤害。',
            gzjunlvex:"军略",
            gzjunlvex_info:"锁定技，当你不因〖摧克〗击杀一名角色后，你重置技能〖摧克〗",
			gzzhanhuox:'绽火',
			gzzhanhuox_info:'每当有角色受到属性伤害后，你可以弃置一张红色牌，指定与受伤角色距离1以内的另一名角色，其受到等量火焰伤害',
			gzyeyan:'业炎',
			gzyeyan_bg:'炎',
			gzyeyan_info:'限定技，当你即将造成火焰伤害时，你可以令此伤害+1，并对目标距离1以内的所有其他角色各造成一点火焰伤害',
            gzchoulue:"筹略",
            gzchoulue_info:"出牌阶段限一次，你可以与一名其他角色交换一张手牌并展示之。若为不同颜色，你对其造成1点火焰伤害；否则你发现一张牌",
            gzdingzhong:"定中",
            gzdingzhong_info:"出牌阶段开始时，你可以指定一名与你势力不同的其他角色，并选择一项：1.弃置X张牌，对其造成1点伤害；2.受到其造成的1点伤害，然后摸X张牌。（X为与该角色相同势力的角色数，且不大于你的体力上限）",
			gzshenduan:'慎断',
			gzshenduan_info:'每当你受到一次伤害，你可以将一张【兵粮寸断】置入伤害来源的判定区。',
			gzyonglvex:'勇略',
			gzyonglvex_info:'当你使用【杀】造成伤害后，直到回合结束，你视为拥有〖挑衅〗。',
			gzyexi:'夜袭',
			gzyexi2:'夜袭',
			gzyexi_info:'每回合限一次，当你于回合外使用或打出一张牌，你可以视为对当前回合角色使用【火攻】',
			gzqiangqix:'羌骑',
			gzqiangqix_info:'限定技，出牌阶段，你可以指定一名体力值大于1的其他角色，你结束出牌阶段，并在回合结束后将所有其他角色移出游戏，然后该角色与你轮流进行回合，直到有一方死亡或一共进行六个回合为止',
			gzduanxie:'断绁',
			gzduanxie_info:'出牌阶段限一次，你可以令一名其他角色横置，若如此做，你横置；锁定技，回合结束时，若你处在横置状态，则你摸一张牌',
			gzwanwei:'挽危',
			gzwanwei_info:'当你因被其他角色获得或弃置而失去牌时，你可以改为自己选择失去的牌；若此牌为装备牌，你可以变更副将。',
			gzyuejianx:'约俭',
			gzyuejianx_info:'锁定技，与你势力相同角色的弃牌阶段开始时，若其本回合未使用牌指定过其他势力的角色为目标，则该角色摸一张牌且本回合手牌上限+X（X为其已损失的体力值）。',
			gzyicheng:'疑城',
			gzyicheng_info:'当与你势力相同的一名角色成为【杀】的目标后，你可以令该角色摸一张牌，然后弃置一张牌；若弃置的是装备牌，该角色可以使用之。',
			gzsidi:'司敌',
			gzsidi2:'司敌',
			gzsidi_info:'当你的武器牌被替换时，你可以将其置于你的武将牌上，并获得此装备的武器效果',
			gzrangyinx:"让印",
			gzrangyinx_info:"你死亡时，可以指定一名其他角色，令其获得你的一个技能（主公技，限定技，主副将技等特殊技能除外）",
			gzkeshou:'恪守',
			gzkeshou_info:'当你受到伤害时，你可以弃置两张牌。若如此做，此伤害-1。然后若你不是大势力角色，则你进行判定，若结果为红色，你摸一张牌。',
			gzzhuwei:'筑围',
			gzzhuwei_info:'当你的判定牌生效后，若此牌为【杀】或【决斗】，你可以获得之。然后，你可令当前回合角色本回合内使用【杀】的次数上限和手牌上限+1。',
			gzluofengx:'落凤',
			gzluofengx_info:'当你对没有副将的角色使用【杀】或者【决斗】造成伤害时，此伤害+1。',
			gzxuefux:'血斧',
			gzxuefux_info:'当你造成伤害时，你可以选择一项：弃置其装备区内的一张牌，或将其装备区内的一张牌移动到你的装备区内。',
			gzshangyix:'尚义',
			gzshangyix_info:'出牌阶段限一次/当你受到伤害后，你可以令一名其他角色/伤害来源观看你的手牌。若如此做，你选择一项：1.观看其手牌并可以弃置其中的一张黑色牌；2.观看其所有暗置的武将牌。',
			gzjianxiong:'奸雄',
			gzjianxiong_info:'每当你受到伤害后，你可以获得对你造成伤害的牌或摸一张牌。',
			gzxuanlve:'旋略',
			gzxuanlve_info:'当你失去装备区里的牌时或于弃牌阶段内弃置了两张或更多手牌后，你可以弃置一名其他角色的一张牌。',
			gzzhoufux:'咒符',
			gzzhoufux2:'咒',
			gzzhoufux_info:'每当你对其他角色造成一次伤害，你可以令目标获得三枚咒标记；拥有咒标记的角色每回合最多使用X张牌（X为咒标记数），每个结束阶段失去一枚咒标记',
			gzyingbinx:'影兵',
			gzyingbinx_info:'结束阶段开始时，你可以选择一名其他角色。你摸一张牌并与其猜拳（平局则重来）。若你赢，你对其造成1点伤害；若你没赢，其可以变更副将。',
			gzduodao:'夺刀',
			gzduodao_info:'当你受到【杀】造成的伤害后，你可以弃置一张牌，然后获得伤害来源装备区里的武器牌',
			gzanjian:'暗箭',
			gzanjian_info:'锁定技，当你使用【杀】对目标角色造成伤害时，若你不在其攻击范围内，则此【杀】伤害+1。',
			gzqixingx:'七星',
			gzqixingx_bg:'星',
			gzqixingx2:'七星',
			gzqixingx3:'七星',
			gzqixingx_info:'准备阶段，你将牌堆顶的X+5张牌置于你的武将牌上，称之为“星”。准备阶段/回合结束，你可用任意数量的手牌等量交换这些“星”。（X为蜀势力角色数的一半，向下取整）',
			gzdawux:'大雾',
			gzdawux2:'雾',
			gzdawux_info:'限定技，出牌阶段，你可以弃置一张红色手牌并指定一名其他角色，该角色自其下一回合开始每隔8回合回复一点体力，直到你死亡为止。',
			gzbaiyinx:'拜印',
			gzbaiyinx2:'拜印',
			gzbaiyinx_info:'限定技，结束阶段，你可以选择至多两名角色，当你或目标中的任意一名角色成为杀的目标时，其余角色也将被追加为目标。',
			gzrenjiex:'忍戒',
			gzrenjiex_info:'锁定技，每当你成为其他角色的卡牌的目标时，你进行一次判定，若为黑桃则取消之，若为红桃你摸一张牌',
			gzhuanxianx:'幻仙',
			gzhuanxianx2:'幻仙',
			gzhuanxianx3:'幻仙',
			gzhuanxianx3_bg:'幻',
			gzhuanxianx_info:'锁定技，每当一名其他角色死亡，你获得一个与该角色同名且体力上限为1、初始手牌为2的随从；出牌阶段，你可以调遣以此法获得的随从（直到随从死亡不可再次切换）',
			gzxiuzhenx:'修真',
			gzxiuzhenx_info:'锁定技，当你脱离濒死状态后，你可以（多次）变更副将。',
			gztianlunx:'天论',
			gztianlunx_info:'准备和结束阶段，你可以指定一名角色，从一张该角色手牌与另外两张随机牌中猜测哪张为该角色手牌，若猜中，你获得一张该牌的复制（同一回合不能指定相同角色）',
			gztianwenx:'天问',
			gztianwenx_info:'你的回合内，当你使用牌时，若此牌与你于此回合内使用的上一张牌的类型不同，则你可以与一名角色拼点。若你赢，获得对方的拼点牌；若你没赢，其获得你的拼点牌。',
			gzyuanchoux:'远筹',
			gzyuanchoux_info:'每当你即将造成伤害时，你可以防止此伤害，改为令目标回复等量的体力',
			gzduoduanx:'度断',
			gzduoduanx_info:'每回合限一次，每当你造成一次伤害后，你可以选择一名体力值不小于受伤害角色的其他角色，对其造成一点伤害。',
			gzliufengx:'流风',
			gzliufengx_info:'结束阶段，你可以进行判定，若为红色则可以继续判定（最多可判定5次），判定结束后将判定成功的牌收入手牌',
			gzshenfux:'神赋',
			gzshenfux_info:'出牌阶段限一次，你可以弃置一张手牌，并弃置一名其他角色的一张手牌，若两张牌颜色相同，你摸一张牌，否则对方摸一张牌',
			gzshenfenx:'神愤',
			gzshenfenx_info:'锁定技，当你进入濒死状态时，你对所有其他角色造成一点伤害',
			gzjiwux:'戟舞',
			gzjiwux_info:'你的【杀】可以额外指定任意个目标，若如此做，此【杀】有一定机率失效（指定的目标越多失效的概率越大）',
			gzqixianx:'七弦',
			gzqixianx_info:'锁定技，摸牌阶段，若牌堆中有红色牌，你摸到的首张牌必为红色',
			gzkuangbaox:'狂暴',
			gzkuangbaox_info:'限定技，在你明置此武将牌后，你增加一点体力上限，并获得一个“珠联璧合”标记。',
			gzsuohunx:'索魂',
			gzsuohunx_info:'限定技，在你明置此武将牌后，你增加一点体力上限，并获得一个“珠联璧合”标记。',
			gzzhuiliex:'追猎',
			gzzhuiliex_info:'锁定技，每回合限一次，当你造成一次伤害后，你从牌堆里获得一张【杀】；若此时为你的回合，你使用【杀】的次数+1。',
			gzwuhunx:'武魂',
			gzwuhunx_info:'当你使用【杀】命中目标时，你可以将其移至你前一位。',
			gzjiexunx:'诫训',
			gzjiexunx_info:'回合结束阶段，你可以选择一名和你手牌数差值不大于1的角色，与之交换手牌',
			gzfangtongx:"方统",
			gzfangtongx_info:"当任意角色进入濒死状态时，你可以弃置一张【桃】或【酒】令其直接死亡。",
			gzfangtongy:"方统",
			gzfangtongy_info:"当其他角色进行判定时，你可以对结果进行猜测，若为同一颜色/花色，你摸一/两张牌。",
			gzgudaox:"蛊纛",
			gzgudaox_info:"当你受到伤害后，你可以令伤害来源非锁定技失效直到回合结束，并将其装备区内的牌收回手牌执行一个额外的弃牌阶段。",
		    gzjijunx:'集军',
　　　　　　gzjijunx_info:'当你使用和打出一张黑桃牌时，你可以选择一名角色进行判定：若为红桃，其受到一点火焰伤害；若为梅花，其受到一点雷电伤害；否则，你与其随机弃置一张牌。',
			gzchongdianx:"重典",
			gzchongdianx_info:"锁定技，当你明置武将牌后，你选择一名其他角色。当其受到来自你的伤害后或回复体力后，你摸一张牌。",
			gzchongdianx2:"重典",
			gzchongdianx2_info:"",
			gzmozhix:'默识',
			gzmozhix_info:'每回合限一次，出牌阶段，你可以发现一张本局未使用过的锦囊牌并使用之',
			gzchenqingx:'陈情',
			gzchenqingx_info:'每轮限一次，当一名角色处于濒死状态时，你可以令另一名其他角色摸三张牌，然后其弃置三张牌。若其以此法弃置的三张牌类型各不相同，则视为该角色对濒死的角色使用一张【桃】。',
			gzbaolingx:'暴凌',
			gzbaolingx_info:'主将技，出牌阶段结束时，你可以选择移除副将，然后获得3个完整的阴阳鱼，失去技能〖暴凌〗并获得〖崩坏〗',
			gzroulinx:'肉林',
			gzroulinx_info:'副将技，锁定技，当你使用【杀】指定一名异性的目标角色后，你观看其手牌并横置之。',
			gzqiluanx:'戚乱',
			gzqiluanx2:'戚乱',
			gzqiluanx3:'戚乱',
			gzqiluanx_info:'一名角色的回合结束时，若你于回合内杀死过角色，则你可以摸三张牌。',
			gzguixinx:'归心',
			gzguixinx_info:'当你明置此武将时，你移除另一张武将，获得数量等于非魏角色数的“心”标记；准备阶段开始时，你可以移去一枚“心”标记并变为一名其他存活角色的复制，此回合结束后你变回原角色',
			gzduoruiy:'夺锐',
			gzduoruiy_info:'当你明置此武将时，你获得数量等于非魏角色数的“锐”标记；锁定技，出牌阶段开始时，你移去一个“锐”标记，随机观看2个可以在出牌阶段使用的技能，并获得其中一个技能直到此阶段结束（技能范围全扩）',
			gzchongzhenx:'冲阵',
			gzchongzhenx_info:'锁定技，结束阶段开始时，你对一名其他角色造成一点伤害，然后你失去一点体力。',
			gzchixin:'赤心',
			gzchixin1:'赤心',
			gzchixin2:'赤心',
			gzchixin_info:'你可以将♦牌当作【杀】或【闪】使用或打出。',
			gzjuejing:'绝境',
			gzjuejing1:'绝境',
			gzjuejing2:'绝境',
			gzjuejing3:'绝境',
			gzjuejing_info:'锁定技，你没有摸牌和弃牌阶段，你的手牌数始终为3。',
			gzlonghunx:'龙魂',
			gzlonghunx2:'龙魂',
			gzlonghunx_info:'纵横技，濒死阶段，你可以复原武将牌，弃置所有牌并摸三张牌，然后将体力回复至1；若如此做，你将“冲阵”替换为“赤心”、“绝境”，另一武将替换为“刘禅”。',
			"gzguanchaox":"观潮",
			"gzguanchaox_info":"转换技，锁定技，①本回合当你使用牌时，若你此阶段使用过的所有牌的点数为递增，你摸一张牌；②本回合当你使用牌时，若你此阶段使用过的所有牌的点数为递减，你摸一张牌。",
			gztaoluanx:'滔乱',
			gztaoluanx_info:'每当你使用一张基本牌或普通锦囊牌，你可以弃置任意张牌令其增加或减少等量的目标',
			gzqiechong:'窃宠',
			gzqiechong_info:'出牌阶段限一次，你可以指定1~2名角色各摸一张牌，然后各弃置区域内的一张牌',
		    gzshefux:'设伏',
　　　　　　gzshefux_info:'每轮限一次，当一名其他角色使用一张非转化的普通锦囊牌时，你可以弃置一张与之花色相同的牌取消之，然后你视为使用该锦囊牌。',
			gzbenyux:'贲育',
			gzbenyux_info:'当你受到伤害后，你可以与伤害来源拼点。若你赢，你获得其所有牌，然后交给其等量的牌。',
　　　　　　gzzuilunx:"罪论",
　　　　　　gzzuilunx_info:"出牌阶段限一次，你可以指定一名与你势力相同的其他角色，然后选择一个“军令”，令该角色选是否执行该军令；若其执行，其摸两张牌或回复1点体力。",
             gzfuyinx:"父荫",
             gzfuyinx_info:"出牌阶段内，你可以摸一张牌，再将一张牌置于牌堆顶（若装备有留龙玉令/白银狮子，则改为将一张手牌置于牌堆顶），否则你本回合不能再发动此技能",
			 gzluanzhanx:'乱战',
			 gzluanzhanx_info:'出牌阶段限一次，你可以将所有手牌（至少两张）当【杀】或【南蛮入侵】使用。若以此法未造成伤害，你摸等量张牌。',
             gzxiaojiex :"骁桀",
             gzxiaojiex_info :"当你使用基本牌时，你可以弃置下家一张牌，然后将描述中“下家”前面增加“下家的”。若以此法令你弃置牌，你摸两张牌，然后重置〖骁桀〗。",
			 gzyechoux:"业仇",
             gzyechoux_info:"当你进入濒死状态时，你可以选择一名已损失过体力的角色。该角色获得技能〖崩坏〗。",
			 gzyechouy:"业仇",
             gzyechouy_info:"当你进入濒死状态时，你可以选择一名已损失过体力的角色。该角色获得技能〖缠怨〗。",
			 gzbiaozhaox:"表召",
			 gzbiaozhaox_info:"结束阶段，你可以将一张牌置于武将牌上，称为「表」。当有一张与「表」点数相同的牌进入弃牌堆时，你将「表」置入弃牌堆并摸1张牌。准备阶段，若你的武将牌上有「表」，则你移去「表」并选择一名角色，该角色回复1点体力或将手牌补至体力上限。",
			 gzbiaozhaox2:"表召",
			 gzbiaozhaox2_info:"",
			 gzbiaozhaox3:"表召",
			 gzbiaozhaox3_info:"",
			 gzbiaozhaoy:"表召",
			 gzbiaozhaoy_info:"结束阶段，你可以将一张牌置于武将牌上，称为「表」。当有一张与「表」点数相同的牌进入弃牌堆时，你将「表」置入弃牌堆并弃置一张牌。准备阶段，若你的武将牌上有「表」，则你移去「表」并选择一名角色，该角色回复1点体力或将手牌补至体力上限。",
			 gzbiaozhaoy2:"表召",
			 gzbiaozhaoy2_info:"",
			 gzbiaozhaoy3:"表召",
			 gzbiaozhaoy3_info:"",
			 gzzhengux:"镇骨",
			 gzzhengux_info:"结束阶段，你可以令一名角色将手牌摸至其体力值，然后其展示一张手牌，若该牌为装备牌，其将手牌摸至体力上限，并变更副将。",
			 gzlieweix:"裂围",
			 gzlieweix_info:"主将技，锁定技，当你使用【杀】造成伤害后，你与其交换主将牌。",
			 gzfuhunx:'父魂',
			 gzfuhunx2:'父魂',
			 gzfuhunx_info:'你可以将两张手牌当做【杀】使用或打出；出牌阶段限一次，若你以此法使用的【杀】造成了伤害，你获得技能〖武圣〗或〖咆哮〗直到回合结束。',
			 gzhuweix:'虎威',
			 gzhuweix_info:'出牌阶段开始时，你可以选择一名其他角色，与其猜拳（平局则重来）。胜者观看并弃置败者的一张手牌。',
			gzmansix:'蛮嗣',
			gzmansix_info:'锁定技，【南蛮入侵】对你无效；一名角色使用的【南蛮入侵】结算完成后，你可以摸X张牌（X为蜀势力角色数的一半，向上取整）。',
			gzsouyingx:'薮影',
			gzsouyingx_info:'你可以跳过本回合的弃牌阶段，视为使用一张【南蛮入侵】；若如此做，直到洗牌前，你不能再发动此技能。',
			gzxilix:'系力',
			gzxilix_info:'每回合限一次，你的回合外，当与你势力相同的其他男性角色使用【杀】对其他角色造成伤害时，你可以弃置一张牌，令此伤害+1。',
			gzyichix:"逸驰",
			gzyichix_info:"阵法技，出牌阶段限一次，你可以弃置一张牌令所有非你阵营的队列的角色依次打出一张【闪】，或者受到一点伤害。",
			gzlianpianx:"联翩",
			gzlianpianx_info:"每回合当你第一次使用【杀】前，你可选择一项：令该【杀】变为1.【决斗】；2.【过河拆桥】；3.【水淹七军】，且以此法转化的牌不计入【杀】的使用次数且无法被【无懈可击】响应。",
			gzlianhuax:'炼化',
			gzlianhuax_info:'每当你即将装备一张牌，若你的装备区内对应位置已有牌，你可以永久改变此牌的装备类型使其装备在装备区内的空余位置。',
			gzzhafux:'札符',
　　　　　　gzzhafux_info:'出牌阶段限一次，你可以弃置一张锦囊牌并随机装备一件装备。',
			gztunjunx:"屯军",
			gztunjunx_info:"限定技，出牌阶段，你可以选择一名其他角色，令其随机使用牌堆中的X张装备牌(X为你已损失的体力值)。若该角色与你势力相同，其可以变更副将。",
			gzjiyex:'继业',
			gzjiyex_info:'君主技，只要此武将处于明置状态，你便拥有“九五至尊诏”。',
			gzjiyex1:'九五至尊诏',
			gzjiyex2:'九五至尊诏',
			gzjiyex3:'九五至尊诏',
			jiuwuzhizunzhao:'九五至尊诏',
			jiuwuzhizunzhao_ab:'诏书',
			jiuwuzhizunzhao_bg:'诏',
　　　　　　jiuwuzhizunzhao_info:'◆准备阶段，你可以将一名角色区域内的一张牌移动到另一名角色的相应区域内；<br>◆当你需要弃置1张牌时，可以选择1名其他魏势力角色，其可以代替你弃置1张牌。',
			gztianweix:'天威',
			 gztianweix_info:'当你回复一点体力后，你可以选择一名角色，令其选择一项：1.执行一项军令，然后摸两张牌或回复一点体力；2.不执行军令，将武将牌叠置，然后你弃置X张牌（X为你已损失的体力值且至少为1）。',
              gzhuazaox:"华藻",
              gzhuazaox_info:"出牌阶段限一次，你可以弃置一张不为【无华剑】的红色牌，然后获得弃牌堆或场上的一张【无华剑】。",

			gzhunji:'魂激',
			gzhunji_info:'君主技，只要此武将处于明置状态，你便拥有“拓业虎将魄”；当你明置此武将时，你令没有“珠联璧合”标记的吴势力武将获得“珠联璧合”标记。',
			gzhunji1:'拓业虎将魄',
			gzhunji2:'拓业虎将魄',
			gzhunji3:'拓业虎将魄',
			tuoyehujiangpo:'拓业虎将魄',
			tuoyehujiangpo_ab:'将魄',
			tuoyehujiangpo_bg:'魄',
　　　　　　tuoyehujiangpo_info:'◆当一名吴势力角色的牌因弃置进入弃牌堆后，你可以使用其中的装备牌；<br>◆当一名吴势力角色死亡后，你在回合结束后执行一个额外的回合。',
			gzangwu:'昂武',
			gzangwu:'昂武',
			gzangwu_info:'锁定技，你的黑【杀】无视距离，红【杀】不可闪避',
            gzzhiba:"制霸",
            gzzhiba_info:"当你明置此武将牌时，你将牌堆中的【猛虎擒龙】置入你的装备区内。",

			gzyanxi:'延熙',
			gzyanxi_info:'君主技，只要此武将处于明置状态，你便拥有“承恩血泣书”。',
            gzguixiang:"归降",
            gzguixiang_info:"限定技，当你进入濒死状态时，你可以将势力调整为：魏/吴/群/晋，然后将体力回复至2点，失去〖延熙〗、〖景耀〗，获得〖享乐〗。若如此做，所有之前与你势力相同的角色选择回复1点体力或摸3张牌，选择是否变更副将，然后将身份变为“野心家”。 ",
			gzjingyao:'景耀',
			gzjingyao_info:'锁定技。当【留龙玉令】进入弃牌堆或其他角色的装备区时，你获得之。当你失去【留龙玉令】时，展示之，然后将此牌置于牌堆底，除你以外的所有蜀势力角色摸一张牌',
			chengenxueqishu:'承恩血泣书',
			gzyanxi1:'承恩血泣书',
			gzyanxi2:'承恩血泣书',
			gzyanxi22:'承恩血泣书',
			gzyanxi3:'承恩血泣书',
			chengenxueqishu_ab:'泣书',
			chengenxueqishu_bg:'书',
　　　　　　chengenxueqishu_info:'◆当你受到伤害后，其他一名蜀势力角色可以对伤害来源使用一张杀；<br>◆当同势力角色杀死一名角色前，你摸X张牌并可以将这些牌交给任意1~2名角色（X为死亡角色的体力上限）。',

			qunxionggongtaoxie:'群雄共讨榭',
			qunxionggongtaoxie_ab:'讨榭',
			qunxionggongtaoxie_bg:'榭',
			qunxionggongtaoxie_info:'◆当其他群势力角色在出牌阶段额外获得牌时，其可以令你重铸一张牌；<br>◆其他群势力角色可以在其结束阶段弃置1~2张手牌并令你摸等量的牌，若如此做，直到其下一回合结束，每当你使用卡牌指定其为目标时，其摸一张牌',
			gzjiewang:'皆望',
			gzjiewang3:'群雄共讨榭',
			gzjiewang1:'群雄共讨榭',
			gzjiewang2:'群雄共讨榭',
			gzjiewang23:'群雄共讨榭',
			gzjiewang24:'群雄共讨榭',
　　　　　　gzjiewang_info:'君主技，只要此武将处于明置状态，你便拥有“群雄共讨榭”。',
			gzjuebi:'决愎',
			gzjuebi_info:'结束阶段开始时，你可以获得装备区里有【将军令】角色的一张牌；当【将军令】进入其他角色的装备区后，你可以用你装备区内的宝物牌与之交换位置。',
            gzquanshi:"全势",
            gzquanshi_info:"当你造成/受到伤害时，你须进行判定，若结果为黑色/红色，此伤害+1/-1。",

			duopoxiuluofan:'夺魄修罗幡',
			duopoxiuluofan_ab:'罗幡',
			duopoxiuluofan_bg:'幡',
			duopoxiuluofan_info:'◆乐不思蜀判定时，你的方块判定牌视为红桃；兵粮寸断判定时，你的黑桃判定牌视为草花；<br>◆当你明置此武将时，你移除副将，其他角色依次明置武将成为“野心家”，获得技能〖噬魂〗；<br>◆出牌阶段限两次，你可以弃置一张牌，然后获得一项：〖强袭〗、〖铁骑〗、〖旋略〗、〖禁酒〗，直到回合结束；<br>◆锁定技，当你死亡时，杀死你的角色弃置其所有的牌',
            gzlianyux:"夺魂修罗幡",
            gzlianyux_info:"当你明置此武将时，你移除副将，其他角色依次明置武将成为“野心家”，获得技能〖噬魂〗。",
            gzshihunx:"噬魂",
            gzshihunx_info:"当你杀死一名角色后，你获得其武将牌上的一个技能（限定技、主将技、副将技等技能除外）。",
            gzshihuny:"幸存",
            gzshihuny_info:"游戏开始时或当其他角色死亡后，你发现一个国战将池技能并获得之",

			gzjiwu:'夺魄修罗幡',
			gzjiwu_info:'出牌阶段限两次，你可以弃置一张牌，然后获得一项：“强袭”、“铁骑”、“旋略”、“禁酒”，直到回合结束',
			gzmodang:"魔荡",
			gzmodang_info:"锁定技，若你装备区内有：武器牌，你可以多使用一张【杀】；防具牌，防止你受到的超过1点的伤害；坐骑牌，摸牌阶段多摸一张牌；宝物牌，跳过你的判定阶段。",
			gzeweix:"恶威",
			gzeweix_info:"君主技，只要此武将处于明置状态，你便拥有“夺魄修罗幡”",
            gzmoxing:"魔行",
            gzmoxing_info:" 准备阶段开始时，如果其他角色的装备区内有【幻梦】，你可以获得之",
			gzshenwei:'夺魄修罗幡',
			gzshenwei1:'夺魄修罗幡',
			gzshenwei2:'夺魄修罗幡',
			gzshenwei_info:'乐不思蜀判定时，你的方块判定牌视为红桃；兵粮寸断判定时，你的黑桃判定牌视为草花',

			"gzhantongx":"汉统",
			"gzhantongx_info":"君主技，只要此武将处于明置状态，你便拥有“汉天子敕令”",
			gzmeihuny:'魅魂',
			gzmeihuny2:'魅魂',
			gzmeihuny_info:'回合结束后，你可以翻面并指定一名的非群势力角色，由你控制其进行一个额外的回合（在此回合中，你的本体不参与游戏）。',
            gzchengyunx:'承运',
			gzchengyunx_info:'每当有其他角色弃置卡牌时，若其中有非基本牌且你的手牌数不超过体力上限，你可以摸一张牌',
			"gztianshoux":"天绶",
			"gztianshoux_info":"锁定技，当你受到伤害后，若你的宝物区没有牌，你随机装备一张宝物牌。",
			"gzhantongx1":"汉天子敕令",
			"gzhantongx2":"汉天子敕令",
			 gzhantongx22:'汉天子敕令',
			"gzhantongx3":"汉天子敕令",
			hantianzichiling:"汉天子敕令",
			hantianzichiling_ab:"敕令",
			hantianzichiling_bg:"令",
			hantianzichiling_info:"◆其他群势力角色的弃牌阶段结束时，其可以选择一项:1.令你重铸一张牌；2.额外弃置一张牌，令你获得本回合进入弃牌堆的一张牌；<br>◆每当一名其他群雄角色成为【杀】的唯一目标时，若此【杀】的使用者不是你，你可以弃置一张【闪】取消之。",

			gzyingshix:'鹰视',
			gzyingshix_info:'君主技，只要此武将处于明置状态，你便拥有“冢虎伏狼印”。',
			g_gzyingshix:'鹰视',
			zhonghufulangyin:'冢虎伏狼印',
			zhonghufulangyin_ab:'狼印',
			zhonghufulangyin_bg:'印',
			zhonghufulangyin_info:'晋势力角色的准备阶段开始时，其可以弃置一张牌。若如此做，直到回合结束，其随机获得下列技能中的一项（其他角色已有的技能无法选择）：〖国色〗，〖集智〗，〖离间〗，〖断粮〗，〖识度〗。',
			gzlingbianx:'陵变',
			gzlingbianx_info:'合势技，当你明置此武将时，你将牌堆中的【虚妄之冕】置入装备区，令所有角色明置其武将牌，并将“野心家”身份/“Key”势力变更为“晋”势力。',
			gzniyongx:"睨庸",
			gzniyongx2:'睨庸',
			gzniyongx_info:'结束阶段，你可以失去一点体力，若这样做，直到回合开始前你不受任何伤害。',	
			"gzyinbianx":"仇策",
			"gzyinbianx_info":"限定技,出牌阶段，你可令场上所有已阵亡的角色变为晋势力傀儡重新加入游戏",

　　　　　　liulongyuling_bg:'令',
　　　　　　liulongyuling:'留龙玉令',
　　　　　　liulongyuling_skill:'留龙玉令',
            liulongyuling_skill_info:'◆锁定技，你防止锦囊牌造成的伤害；<br>◆锁定技，当你失去装备区的【留龙玉令】时你摸X张牌（X为与你势力相同的已死亡角色数且至少为1；当你为“野心家时”，X的值为2）',
            liulongyuling_info:'◆锁定技，你防止锦囊牌造成的伤害；<br>◆锁定技，当你失去装备区的【留龙玉令】时你摸X张牌（X为与你势力相同的已死亡角色数且至少为1；当你为“野心家”时，X的值为2）',
			gztuwei:"突围",
			gztuwei_info:"阵法技，若你处于一个围攻关系中且你是被围攻角色，则你对围攻角色使用牌没有次数限制。",
			menghuqinlong:'猛虎擒龙',
			menghuqinlong_skill:'猛虎擒龙',
			menghuqinlong_info:'每当你使用（指定目标后）一张【决斗】或红色的【杀】时，你可以摸一张牌。',
			menghuqinlong_skill_info:'每当你使用（指定目标后）一张【决斗】或红色的【杀】时，你可以摸一张牌。',
			xuwangzhimian:'虚妄之冕',
			xuwangzhimian_disable:'虚妄',
			xuwangzhimian_info:'锁定技，你的手牌上限+2；其它角色于其回合内第二次使用锦囊牌指定你为目标时，取消之',

			wuhuajian:'无华剑',
			wuhuajian_skill:'无华剑',
			wuhuajian_info:'当你杀死一名角色时，你可以选择回复一点体力或者获得其所有的牌',
　　　　　　wuhuajian_skill_info:'当你杀死一名角色时，你可以选择回复一点体力或者获得其所有的牌',
			supo_equip4:'绝尘金戈',
			supo_equip4_info:'没什么实际作用，据说以前是神曹操的坐骑',
			supo_equip3:'七彩神鹿',
			supo_equip3_info:'没什么实际作用，据说以前是神陆逊的坐骑。',
			supo_equip1:'和光塵尾',
			supo_equip1_info:'没什么实际作用，据说以前是贾诩的武器。',
			supo_equip2:'七星法袍',
			supo_equip2_info:'没什么实际作用，据说以前是神诸葛的防具。',
			supo_equip5:'幻梦之书',
			supo_equip5_info:'没什么实际作用，据说以前是来自西方的宝物。',
			yuanyang1:'鸳鸯剑',
			yuanyang2:'鸳鸯剑',
			yuanyang_info:'◆每回合限3次，当你使用的锦囊牌造成伤害时，你可以摸一张牌；<br>◆你使用【杀】杀死一名角色后，若你所属的势力是全场最少的（或之一），你可令该角色的使用者选择是否从未使用的武将牌中选择一张与你势力相同的武将牌重新加入游戏',
　　　　　　jiangjunling:'将军令',
　　　　　　jiangjunling_skill:'将军令',
            jiangjunling_skill_info:'出牌阶段限一次，你可以失去一点体力（当体力值为1时，可无损拼点），令两名其他角色拼点：拼点赢的角色视为对没赢的另一名角色使用一张【杀】。',
			yangjingxurui:'养精蓄锐',
			yangjingxurui_skip:'蓄锐',
			yangjingxurui_put:'',
			yangjingxurui_info:'出牌阶段，对一名其他角色使用。若判定结果不为方片，则跳过弃牌阶段，否则结束阶段一张新的【养精蓄锐】将置于其判定区内。',
			dongchaxianji:'洞察先机',
			dongchaxianji_info:'出牌阶段对自己使用，选择一种卡牌类别，发现一张该类别的卡牌',
			anyingzhazhai:'安营扎寨',
			anyingzhazhai_info:'出牌阶段对自己使用，将所有手牌（含此张）替换为基本牌',
			jueshengqianli:'决胜千里',
			jueshengqianli_skill:'决胜',
			jueshengqianli_info:'出牌阶段，对一名其他角色使用，本回合内对其使用卡牌无视距离，结算后摸一张牌',
			xuezhongsongtan:'雪中送炭',
			xuezhongsongtan_info:'出牌阶段对一名手牌数不大于体力值的角色使用，目标获得两张【闪】',
			gujichongshix:'故技重施',
　　　　　　gujichongshix_info:'出牌阶段内限用一次，当你使用一张基本牌或普通锦囊牌后使用，令此牌再结算一次。',
			zemuerqi:'择木而栖',
			zemuerqi_skill:'择木而栖',
			zemuerqi_skill_info:'每局游戏限一次，出牌阶段，对你使用，你将势力更改为你选择的另一个势力，然后你摸X张牌（X为该势力的其他角色数），若如此做，当该势力成为唯一的大势力时，你成为野心家。',
			zemuerqi_info:'每局游戏限一次，出牌阶段，对你使用，你将势力更改为你选择的另一个势力，然后你摸X张牌（X为该势力的其他角色数），若如此做，当该势力成为唯一的大势力时，你成为野心家。',
			liang_skill:'粮',
　　　　　　liang_skill_info:'出牌阶段限一次，对自己使用，摸一张牌，本回合手牌上限+2。',
　　　　　　nanmanzhanxiang_skill:'南蛮战象',
			nanmanzhanxiang_skill_info:'锁定技，你的进攻距离+1，【南蛮入侵】对你无效。',
			huanmeng:'幻梦',
			huanmeng_skill:'幻梦',
			huanmeng_skill2:'幻梦',
　　　　　　huanmeng_info:'出牌阶段结束时，你可选择：1.摸一张牌。2.将一张牌置于武将牌上，并于回合结束后获得此牌。',
			huanmeng_skill_info:'出牌阶段结束时，你可选择：1.摸一张牌。2.将一张牌置于武将牌上，并于回合结束后获得此牌。',
			yumianxiaoyao:'玉面逍遥',
　　　　　　yumianxiaoyao_info:'准备阶段，你可以重铸一张手牌，令你本回合计算与其他角色的距离时-X/3（X为该牌点数，向下取整）',
        },
    },
　　intro:"●注意事项：<br>★<span style=\"color:#1688F2\">扩展自带装备仅在国战的势备/应变模式下生效，</span>若身份局中出现的卡牌可在“卡牌——国战补充”中关闭<br>★<span style=\"color:#1688F2\">删去或关闭本扩展前请将人数调回8人，否则会导致游戏重置</span><br>★由于国战武将的特殊性，因此图片素材将会通过从Gitee自动在线下载的方式进行。若无法正常下载，请将后缀名为jpg的图片素材放置于该文件夹内：<span style=\"color:#1688F2\"><br>移动端：Android/data/<br>yuri.nakamura.noname/<br>image/character<br>PC端：noname/resources/<br>app/image/character</span><br>★十人局请在“选项——外观——界面缩放”手动调整比例为80%或90%<br><br>●扩展规则补充说明：<br>★夺势技发动不会触发野心家机制（如十人局已有5魏，此时曹操发动夺势技，其势力变更为“魏”，而非“野心家”）；<br>★转势技发动后，胜利条件也随之变更（如jsp庞统发动转势技之后，其胜利条件变更为场上仅剩“吴”势力角色）；<br>★①纵横技发动后会移除原有的“珠联璧合”、“先驱”等标记，然后获得一个“阴阳鱼”标记；②在进入鏖战模式后发动纵横技，【桃】将不会被强制转化为【杀】/【闪】；③纵横技替换的主将若为君主，游戏界面会出现显示异常；④野心家变更与“有君无野”的情况不冲突（如姜维先变野，蜀国君主后明置，则姜维仍变回蜀国；若蜀国君主先明置，姜维后明置，身份变更为野心家无影响）<br>★双君主在场时，若一个君主死亡，该势力所有武将（含另一君主）身份均变为“野心家”， 另一君主身份也变为“野心家”，但游戏界面会出现显示异常，另一君主不显示“野”。<br><br>●参考扩展：<br>[1]伏皇后、刘协、陆绩、李严、曹冲〖称象〗、荀谌、蔡夫人、孙亮〖跌宕〗——《新耀世》<br>[2] 秦宓〖天辩〗——《玄武江湖》<br>[3]群雄共讨榭（效果1）、承恩血泣书（效果2）、孙登〖匡弼〗——《血色衣冠》<br>[4]多人局、承恩血泣书（效果3）——《扩展ol》<br>[5]何晏〖崇道〗、柏夫人〖灵音〗、董贵人、成公英、孙翊、陈泰——《阵面对决》<br>[6]曹昂〖突围〗、冯方女〖宠爱〗、关索〖撷芳〗、嵇康、卢植、赵夫人——《键杀》<li>更新日期：8.24",
　　author:"我叫竹小二",
    diskURL:"",
    forumURL:"",
    version:"Finished"
},files:{"character":[],"card":[],"skill":[]}}})

